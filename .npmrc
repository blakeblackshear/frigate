# pnpm configuration optimized for Frigate project
# ================================================

# Peer dependency handling
# ------------------------
# Allow installations even with unmet peer dependencies (we have apexcharts version conflict)
strict-peer-dependencies=false
# Auto-install missing peer dependencies to reduce manual intervention
auto-install-peers=true
# Deduplicate packages with peer dependencies after resolution
dedupe-peer-dependents=true

# Workspace configuration
# ----------------------
# Use workspace protocol for internal dependencies (when we add them)
save-workspace-protocol=rolling
# Don't auto-link workspace packages unless explicitly using workspace: protocol
link-workspace-packages=false

# Dependency management
# --------------------
# Use exact versions for better reproducibility (important for security camera system)
save-prefix=""
# Use highest resolution mode for better compatibility with React ecosystem
resolution-mode=highest
# Use exact versions for security patches
save-exact=true

# Storage and performance
# ----------------------
# Use hard links to save disk space
symlink=false
# Store packages in global store for better deduplication
store-dir=~/.pnpm-store
# Enable side-effects cache for faster builds
side-effects-cache=true
# Use hoisting for better compatibility with React/TypeScript tooling
hoist=true
# Hoist all dependencies to root (compatible with current setup)
hoist-pattern[]=*

# Security and reliability
# -----------------------
# Enable strict SSL for security
strict-ssl=true
# Use exact versions for security patches
save-exact=true

# Development workflow
# -------------------
# Enable progress reporting for better UX
progress=true
# Use color output for better readability
color=true
# Enable detailed logging for debugging
loglevel=info

# Build optimization
# -----------------
# Enable frozen lockfile in CI environments
frozen-lockfile=false
# Use package manager field for consistency
package-manager-strict=true

# Registry configuration
# ---------------------
# Use npm registry (can be overridden for private packages)
registry=https://registry.npmjs.org/
