{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorContribution.ts","vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorContribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAKhG,OAAO,EAAE,aAAa,EAAqD,qBAAqB,EAAE,0BAA0B,EAAE,MAAM,sCAAsC,CAAC;AAC3K,OAAO,EAAE,qBAAqB,EAAE,MAAM,mCAAmC,CAAC;AAC1E,OAAO,EAAE,2BAA2B,EAAE,MAAM,uBAAuB,CAAC;AACpE,OAAO,EAAE,wBAAwB,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,MAAM,+BAA+B,CAAC;AAExH,0BAA0B,CAAC,wBAAwB,CAAC,EAAE,EAAE,wBAAwB,iEAAyD,CAAC;AAC1I,qBAAqB,CAAC,2BAA2B,CAAC,CAAC;AAEnD,qBAAqB,CAAC,IAAI,KAAM,SAAQ,aAAa;IACpD;QACC,KAAK,CAAC;YACL,EAAE,EAAE,uBAAuB;YAC3B,YAAY,EAAE,oBAAoB;YAClC,MAAM,EAAE;gBACP,MAAM,0CAAgC;gBACtC,OAAO,EAAE,mDAA+B;aACxC;SACD,CAAC,CAAC;IACJ,CAAC;IAEe,gBAAgB,CAAC,SAA2B,EAAE,MAAmB,EAAE,KAAU;QAC5F,wBAAwB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,cAAc,EAAE,CAAC;IACxD,CAAC;CACD,CAAC,CAAC;AAEH,qBAAqB,CAAC,IAAI,KAAM,SAAQ,aAAa;IACpD;QACC,KAAK,CAAC;YACL,EAAE,EAAE,uBAAuB;YAC3B,YAAY,EAAE,oBAAoB;YAClC,MAAM,EAAE;gBACP,MAAM,0CAAgC;gBACtC,OAAO,wBAAgB;aACvB;SACD,CAAC,CAAC;IACJ,CAAC;IAEe,gBAAgB,CAAC,SAA2B,EAAE,MAAmB,EAAE,KAAU;QAC5F,wBAAwB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,YAAY,EAAE,CAAC;IACtD,CAAC;CACD,CAAC,CAAC","file":"dropIntoEditorContribution.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorCommand, EditorContributionInstantiation, ServicesAccessor, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { DefaultDropProvidersFeature } from './defaultProviders.js';\nimport { DropIntoEditorController, changeDropTypeCommandId, dropWidgetVisibleCtx } from './dropIntoEditorController.js';\n\nregisterEditorContribution(DropIntoEditorController.ID, DropIntoEditorController, EditorContributionInstantiation.BeforeFirstInteraction);\nregisterEditorFeature(DefaultDropProvidersFeature);\n\nregisterEditorCommand(new class extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: changeDropTypeCommandId,\n\t\t\tprecondition: dropWidgetVisibleCtx,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor, _args: any) {\n\t\tDropIntoEditorController.get(editor)?.changeDropType();\n\t}\n});\n\nregisterEditorCommand(new class extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.hideDropWidget',\n\t\t\tprecondition: dropWidgetVisibleCtx,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor, _args: any) {\n\t\tDropIntoEditorController.get(editor)?.clearWidgets();\n\t}\n});\n\nexport type PreferredDropConfiguration = string;\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorCommand, EditorContributionInstantiation, ServicesAccessor, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { DefaultDropProvidersFeature } from './defaultProviders.js';\nimport { DropIntoEditorController, changeDropTypeCommandId, dropWidgetVisibleCtx } from './dropIntoEditorController.js';\n\nregisterEditorContribution(DropIntoEditorController.ID, DropIntoEditorController, EditorContributionInstantiation.BeforeFirstInteraction);\nregisterEditorFeature(DefaultDropProvidersFeature);\n\nregisterEditorCommand(new class extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: changeDropTypeCommandId,\n\t\t\tprecondition: dropWidgetVisibleCtx,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor, _args: any) {\n\t\tDropIntoEditorController.get(editor)?.changeDropType();\n\t}\n});\n\nregisterEditorCommand(new class extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.hideDropWidget',\n\t\t\tprecondition: dropWidgetVisibleCtx,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor, _args: any) {\n\t\tDropIntoEditorController.get(editor)?.clearWidgets();\n\t}\n});\n\nexport type PreferredDropConfiguration = string;\n\n"]}