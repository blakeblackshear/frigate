{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/hover/browser/contentHoverWidget.ts","vs/editor/contrib/hover/browser/contentHoverWidget.ts"],"names":[],"mappings":"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","file":"contentHoverWidget.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidgetPosition } from '../../../browser/editorBrowser.js';\nimport { ConfigurationChangedEvent, EditorOption } from '../../../common/config/editorOptions.js';\nimport { HoverStartSource } from './hoverOperation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ResizableContentWidget } from './resizableContentWidget.js';\nimport { IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { getHoverAccessibleViewHint, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { PositionAffinity } from '../../../common/model.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { RenderedContentHover } from './contentHoverRendered.js';\nimport { ScrollEvent } from '../../../../base/common/scrollable.js';\n\nconst HORIZONTAL_SCROLLING_BY = 30;\n\nexport class ContentHoverWidget extends ResizableContentWidget {\n\n\tpublic static ID = 'editor.contrib.resizableContentHoverWidget';\n\tprivate static _lastDimensions: dom.Dimension = new dom.Dimension(0, 0);\n\n\tprivate _renderedHover: RenderedContentHover | undefined;\n\tprivate _positionPreference: ContentWidgetPositionPreference | undefined;\n\tprivate _minimumSize: dom.Dimension;\n\tprivate _contentWidth: number | undefined;\n\n\tprivate readonly _hover: HoverWidget = this._register(new HoverWidget(true));\n\tprivate readonly _hoverVisibleKey: IContextKey<boolean>;\n\tprivate readonly _hoverFocusedKey: IContextKey<boolean>;\n\n\tprivate readonly _onDidResize = this._register(new Emitter<void>());\n\tpublic readonly onDidResize = this._onDidResize.event;\n\n\tprivate readonly _onDidScroll = this._register(new Emitter<ScrollEvent>());\n\tpublic readonly onDidScroll = this._onDidScroll.event;\n\n\tprivate readonly _onContentsChanged = this._register(new Emitter<void>());\n\tpublic readonly onContentsChanged = this._onContentsChanged.event;\n\n\tpublic get isVisibleFromKeyboard(): boolean {\n\t\treturn (this._renderedHover?.source === HoverStartSource.Keyboard);\n\t}\n\n\tpublic get isVisible(): boolean {\n\t\treturn this._hoverVisibleKey.get() ?? false;\n\t}\n\n\tpublic get isFocused(): boolean {\n\t\treturn this._hoverFocusedKey.get() ?? false;\n\t}\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService\n\t) {\n\t\tconst minimumHeight = editor.getOption(EditorOption.lineHeight) + 8;\n\t\tconst minimumWidth = 150;\n\t\tconst minimumSize = new dom.Dimension(minimumWidth, minimumHeight);\n\t\tsuper(editor, minimumSize);\n\n\t\tthis._minimumSize = minimumSize;\n\t\tthis._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(contextKeyService);\n\t\tthis._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(contextKeyService);\n\n\t\tdom.append(this._resizableNode.domNode, this._hover.containerDomNode);\n\t\tthis._resizableNode.domNode.style.zIndex = '50';\n\t\tthis._resizableNode.domNode.className = 'monaco-resizable-hover';\n\n\t\tthis._register(this._editor.onDidLayoutChange(() => {\n\t\t\tif (this.isVisible) {\n\t\t\t\tthis._updateMaxDimensions();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._editor.onDidChangeConfiguration((e: ConfigurationChangedEvent) => {\n\t\t\tif (e.hasChanged(EditorOption.fontInfo)) {\n\t\t\t\tthis._updateFont();\n\t\t\t}\n\t\t}));\n\t\tconst focusTracker = this._register(dom.trackFocus(this._resizableNode.domNode));\n\t\tthis._register(focusTracker.onDidFocus(() => {\n\t\t\tthis._hoverFocusedKey.set(true);\n\t\t}));\n\t\tthis._register(focusTracker.onDidBlur(() => {\n\t\t\tthis._hoverFocusedKey.set(false);\n\t\t}));\n\t\tthis._register(this._hover.scrollbar.onScroll((e) => {\n\t\t\tthis._onDidScroll.fire(e);\n\t\t}));\n\t\tthis._setRenderedHover(undefined);\n\t\tthis._editor.addContentWidget(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._renderedHover?.dispose();\n\t\tthis._editor.removeContentWidget(this);\n\t}\n\n\tpublic getId(): string {\n\t\treturn ContentHoverWidget.ID;\n\t}\n\n\tprivate static _applyDimensions(container: HTMLElement, width: number | string, height: number | string): void {\n\t\tconst transformedWidth = typeof width === 'number' ? `${width}px` : width;\n\t\tconst transformedHeight = typeof height === 'number' ? `${height}px` : height;\n\t\tcontainer.style.width = transformedWidth;\n\t\tcontainer.style.height = transformedHeight;\n\t}\n\n\tprivate _setContentsDomNodeDimensions(width: number | string, height: number | string): void {\n\t\tconst contentsDomNode = this._hover.contentsDomNode;\n\t\treturn ContentHoverWidget._applyDimensions(contentsDomNode, width, height);\n\t}\n\n\tprivate _setContainerDomNodeDimensions(width: number | string, height: number | string): void {\n\t\tconst containerDomNode = this._hover.containerDomNode;\n\t\treturn ContentHoverWidget._applyDimensions(containerDomNode, width, height);\n\t}\n\n\tprivate _setScrollableElementDimensions(width: number | string, height: number | string): void {\n\t\tconst scrollbarDomElement = this._hover.scrollbar.getDomNode();\n\t\treturn ContentHoverWidget._applyDimensions(scrollbarDomElement, width, height);\n\t}\n\n\tprivate _setHoverWidgetDimensions(width: number | string, height: number | string): void {\n\t\tthis._setContainerDomNodeDimensions(width, height);\n\t\tthis._setScrollableElementDimensions(width, height);\n\t\tthis._setContentsDomNodeDimensions(width, height);\n\t\tthis._layoutContentWidget();\n\t}\n\n\tprivate static _applyMaxDimensions(container: HTMLElement, width: number | string, height: number | string) {\n\t\tconst transformedWidth = typeof width === 'number' ? `${width}px` : width;\n\t\tconst transformedHeight = typeof height === 'number' ? `${height}px` : height;\n\t\tcontainer.style.maxWidth = transformedWidth;\n\t\tcontainer.style.maxHeight = transformedHeight;\n\t}\n\n\tprivate _setHoverWidgetMaxDimensions(width: number | string, height: number | string): void {\n\t\tContentHoverWidget._applyMaxDimensions(this._hover.contentsDomNode, width, height);\n\t\tContentHoverWidget._applyMaxDimensions(this._hover.scrollbar.getDomNode(), width, height);\n\t\tContentHoverWidget._applyMaxDimensions(this._hover.containerDomNode, width, height);\n\t\tthis._hover.containerDomNode.style.setProperty('--vscode-hover-maxWidth', typeof width === 'number' ? `${width}px` : width);\n\t\tthis._layoutContentWidget();\n\t}\n\n\tprivate _setAdjustedHoverWidgetDimensions(size: dom.Dimension): void {\n\t\tthis._setHoverWidgetMaxDimensions('none', 'none');\n\t\tthis._setHoverWidgetDimensions(size.width, size.height);\n\t}\n\n\tprivate _updateResizableNodeMaxDimensions(): void {\n\t\tconst maxRenderingWidth = this._findMaximumRenderingWidth() ?? Infinity;\n\t\tconst maxRenderingHeight = this._findMaximumRenderingHeight() ?? Infinity;\n\t\tthis._resizableNode.maxSize = new dom.Dimension(maxRenderingWidth, maxRenderingHeight);\n\t\tthis._setHoverWidgetMaxDimensions(maxRenderingWidth, maxRenderingHeight);\n\t}\n\n\tprotected override _resize(size: dom.Dimension): void {\n\t\tContentHoverWidget._lastDimensions = new dom.Dimension(size.width, size.height);\n\t\tthis._setAdjustedHoverWidgetDimensions(size);\n\t\tthis._resizableNode.layout(size.height, size.width);\n\t\tthis._updateResizableNodeMaxDimensions();\n\t\tthis._hover.scrollbar.scanDomNode();\n\t\tthis._editor.layoutContentWidget(this);\n\t\tthis._onDidResize.fire();\n\t}\n\n\tprivate _findAvailableSpaceVertically(): number | undefined {\n\t\tconst position = this._renderedHover?.showAtPosition;\n\t\tif (!position) {\n\t\t\treturn;\n\t\t}\n\t\treturn this._positionPreference === ContentWidgetPositionPreference.ABOVE ?\n\t\t\tthis._availableVerticalSpaceAbove(position)\n\t\t\t: this._availableVerticalSpaceBelow(position);\n\t}\n\n\tprivate _findMaximumRenderingHeight(): number | undefined {\n\t\tconst availableSpace = this._findAvailableSpaceVertically();\n\t\tif (!availableSpace) {\n\t\t\treturn;\n\t\t}\n\t\tconst children = this._hover.contentsDomNode.children;\n\t\tlet maximumHeight = children.length - 1;\n\t\tArray.from(this._hover.contentsDomNode.children).forEach((hoverPart) => {\n\t\t\tmaximumHeight += hoverPart.clientHeight;\n\t\t});\n\t\treturn Math.min(availableSpace, maximumHeight);\n\t}\n\n\tprivate _isHoverTextOverflowing(): boolean {\n\t\t// To find out if the text is overflowing, we will disable wrapping, check the widths, and then re-enable wrapping\n\t\tthis._hover.containerDomNode.style.setProperty('--vscode-hover-whiteSpace', 'nowrap');\n\t\tthis._hover.containerDomNode.style.setProperty('--vscode-hover-sourceWhiteSpace', 'nowrap');\n\n\t\tconst overflowing = Array.from(this._hover.contentsDomNode.children).some((hoverElement) => {\n\t\t\treturn hoverElement.scrollWidth > hoverElement.clientWidth;\n\t\t});\n\n\t\tthis._hover.containerDomNode.style.removeProperty('--vscode-hover-whiteSpace');\n\t\tthis._hover.containerDomNode.style.removeProperty('--vscode-hover-sourceWhiteSpace');\n\n\t\treturn overflowing;\n\t}\n\n\tprivate _findMaximumRenderingWidth(): number | undefined {\n\t\tif (!this._editor || !this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst overflowing = this._isHoverTextOverflowing();\n\t\tconst initialWidth = (\n\t\t\ttypeof this._contentWidth === 'undefined'\n\t\t\t\t? 0\n\t\t\t\t: this._contentWidth\n\t\t);\n\n\t\tif (overflowing || this._hover.containerDomNode.clientWidth < initialWidth) {\n\t\t\tconst bodyBoxWidth = dom.getClientArea(this._hover.containerDomNode.ownerDocument.body).width;\n\t\t\tconst horizontalPadding = 14;\n\t\t\treturn bodyBoxWidth - horizontalPadding;\n\t\t} else {\n\t\t\treturn this._hover.containerDomNode.clientWidth;\n\t\t}\n\t}\n\n\tpublic isMouseGettingCloser(posx: number, posy: number): boolean {\n\n\t\tif (!this._renderedHover) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._renderedHover.initialMousePosX === undefined || this._renderedHover.initialMousePosY === undefined) {\n\t\t\tthis._renderedHover.initialMousePosX = posx;\n\t\t\tthis._renderedHover.initialMousePosY = posy;\n\t\t\treturn false;\n\t\t}\n\n\t\tconst widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n\t\tif (this._renderedHover.closestMouseDistance === undefined) {\n\t\t\tthis._renderedHover.closestMouseDistance = computeDistanceFromPointToRectangle(\n\t\t\t\tthis._renderedHover.initialMousePosX,\n\t\t\t\tthis._renderedHover.initialMousePosY,\n\t\t\t\twidgetRect.left,\n\t\t\t\twidgetRect.top,\n\t\t\t\twidgetRect.width,\n\t\t\t\twidgetRect.height\n\t\t\t);\n\t\t}\n\n\t\tconst distance = computeDistanceFromPointToRectangle(\n\t\t\tposx,\n\t\t\tposy,\n\t\t\twidgetRect.left,\n\t\t\twidgetRect.top,\n\t\t\twidgetRect.width,\n\t\t\twidgetRect.height\n\t\t);\n\t\tif (distance > this._renderedHover.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n\t\t\t// The mouse is getting farther away\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._renderedHover.closestMouseDistance = Math.min(this._renderedHover.closestMouseDistance, distance);\n\t\treturn true;\n\t}\n\n\tprivate _setRenderedHover(renderedHover: RenderedContentHover | undefined): void {\n\t\tthis._renderedHover?.dispose();\n\t\tthis._renderedHover = renderedHover;\n\t\tthis._hoverVisibleKey.set(!!renderedHover);\n\t\tthis._hover.containerDomNode.classList.toggle('hidden', !renderedHover);\n\t}\n\n\tprivate _updateFont(): void {\n\t\tconst { fontSize, lineHeight } = this._editor.getOption(EditorOption.fontInfo);\n\t\tconst contentsDomNode = this._hover.contentsDomNode;\n\t\tcontentsDomNode.style.fontSize = `${fontSize}px`;\n\t\tcontentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n\t\tconst codeClasses: HTMLElement[] = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n\t\tcodeClasses.forEach(node => this._editor.applyFontInfo(node));\n\t}\n\n\tprivate _updateContent(node: DocumentFragment): void {\n\t\tconst contentsDomNode = this._hover.contentsDomNode;\n\t\tcontentsDomNode.style.paddingBottom = '';\n\t\tcontentsDomNode.textContent = '';\n\t\tcontentsDomNode.appendChild(node);\n\t}\n\n\tprivate _layoutContentWidget(): void {\n\t\tthis._editor.layoutContentWidget(this);\n\t\tthis._hover.onContentsChanged();\n\t}\n\n\tprivate _updateMaxDimensions() {\n\t\tconst height = Math.max(this._editor.getLayoutInfo().height / 4, 250, ContentHoverWidget._lastDimensions.height);\n\t\tconst width = Math.max(this._editor.getLayoutInfo().width * 0.66, 750, ContentHoverWidget._lastDimensions.width);\n\t\tthis._resizableNode.maxSize = new dom.Dimension(width, height);\n\t\tthis._setHoverWidgetMaxDimensions(width, height);\n\t}\n\n\tprivate _render(renderedHover: RenderedContentHover) {\n\t\tthis._setRenderedHover(renderedHover);\n\t\tthis._updateFont();\n\t\tthis._updateContent(renderedHover.domNode);\n\t\tthis.handleContentsChanged();\n\t\t// Simply force a synchronous render on the editor\n\t\t// such that the widget does not really render with left = '0px'\n\t\tthis._editor.render();\n\t}\n\n\toverride getPosition(): IContentWidgetPosition | null {\n\t\tif (!this._renderedHover) {\n\t\t\treturn null;\n\t\t}\n\t\treturn {\n\t\t\tposition: this._renderedHover.showAtPosition,\n\t\t\tsecondaryPosition: this._renderedHover.showAtSecondaryPosition,\n\t\t\tpositionAffinity: this._renderedHover.shouldAppearBeforeContent ? PositionAffinity.LeftOfInjectedText : undefined,\n\t\t\tpreference: [this._positionPreference ?? ContentWidgetPositionPreference.ABOVE]\n\t\t};\n\t}\n\n\tpublic show(renderedHover: RenderedContentHover): void {\n\t\tif (!this._editor || !this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tthis._render(renderedHover);\n\t\tconst widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n\t\tconst widgetPosition = renderedHover.showAtPosition;\n\t\tthis._positionPreference = this._findPositionPreference(widgetHeight, widgetPosition) ?? ContentWidgetPositionPreference.ABOVE;\n\n\t\t// See https://github.com/microsoft/vscode/issues/140339\n\t\t// TODO: Doing a second layout of the hover after force rendering the editor\n\t\tthis.handleContentsChanged();\n\t\tif (renderedHover.shouldFocus) {\n\t\t\tthis._hover.containerDomNode.focus();\n\t\t}\n\t\tthis._onDidResize.fire();\n\t\t// The aria label overrides the label, so if we add to it, add the contents of the hover\n\t\tconst hoverFocused = this._hover.containerDomNode.ownerDocument.activeElement === this._hover.containerDomNode;\n\t\tconst accessibleViewHint = hoverFocused && getHoverAccessibleViewHint(\n\t\t\tthis._configurationService.getValue('accessibility.verbosity.hover') === true && this._accessibilityService.isScreenReaderOptimized(),\n\t\t\tthis._keybindingService.lookupKeybinding('editor.action.accessibleView')?.getAriaLabel() ?? ''\n\t\t);\n\n\t\tif (accessibleViewHint) {\n\t\t\tthis._hover.contentsDomNode.ariaLabel = this._hover.contentsDomNode.textContent + ', ' + accessibleViewHint;\n\t\t}\n\t}\n\n\tpublic hide(): void {\n\t\tif (!this._renderedHover) {\n\t\t\treturn;\n\t\t}\n\t\tconst hoverStoleFocus = this._renderedHover.shouldFocus || this._hoverFocusedKey.get();\n\t\tthis._setRenderedHover(undefined);\n\t\tthis._resizableNode.maxSize = new dom.Dimension(Infinity, Infinity);\n\t\tthis._resizableNode.clearSashHoverState();\n\t\tthis._hoverFocusedKey.set(false);\n\t\tthis._editor.layoutContentWidget(this);\n\t\tif (hoverStoleFocus) {\n\t\t\tthis._editor.focus();\n\t\t}\n\t}\n\n\tprivate _removeConstraintsRenderNormally(): void {\n\t\t// Added because otherwise the initial size of the hover content is smaller than should be\n\t\tconst layoutInfo = this._editor.getLayoutInfo();\n\t\tthis._resizableNode.layout(layoutInfo.height, layoutInfo.width);\n\t\tthis._setHoverWidgetDimensions('auto', 'auto');\n\t\tthis._updateMaxDimensions();\n\t}\n\n\tpublic setMinimumDimensions(dimensions: dom.Dimension): void {\n\t\t// We combine the new minimum dimensions with the previous ones\n\t\tthis._minimumSize = new dom.Dimension(\n\t\t\tMath.max(this._minimumSize.width, dimensions.width),\n\t\t\tMath.max(this._minimumSize.height, dimensions.height)\n\t\t);\n\t\tthis._updateMinimumWidth();\n\t}\n\n\tprivate _updateMinimumWidth(): void {\n\t\tconst width = (\n\t\t\ttypeof this._contentWidth === 'undefined'\n\t\t\t\t? this._minimumSize.width\n\t\t\t\t: Math.min(this._contentWidth, this._minimumSize.width)\n\t\t);\n\t\t// We want to avoid that the hover is artificially large, so we use the content width as minimum width\n\t\tthis._resizableNode.minSize = new dom.Dimension(width, this._minimumSize.height);\n\t}\n\n\tpublic handleContentsChanged(): void {\n\t\tthis._removeConstraintsRenderNormally();\n\t\tconst contentsDomNode = this._hover.contentsDomNode;\n\n\t\tlet height = dom.getTotalHeight(contentsDomNode);\n\t\tlet width = dom.getTotalWidth(contentsDomNode) + 2;\n\t\tthis._resizableNode.layout(height, width);\n\n\t\tthis._setHoverWidgetDimensions(width, height);\n\n\t\theight = dom.getTotalHeight(contentsDomNode);\n\t\twidth = dom.getTotalWidth(contentsDomNode);\n\t\tthis._contentWidth = width;\n\t\tthis._updateMinimumWidth();\n\t\tthis._resizableNode.layout(height, width);\n\n\t\tif (this._renderedHover?.showAtPosition) {\n\t\t\tconst widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n\t\t\tthis._positionPreference = this._findPositionPreference(widgetHeight, this._renderedHover.showAtPosition);\n\t\t}\n\t\tthis._layoutContentWidget();\n\t\tthis._onContentsChanged.fire();\n\t}\n\n\tpublic focus(): void {\n\t\tthis._hover.containerDomNode.focus();\n\t}\n\n\tpublic scrollUp(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst fontInfo = this._editor.getOption(EditorOption.fontInfo);\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - fontInfo.lineHeight });\n\t}\n\n\tpublic scrollDown(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst fontInfo = this._editor.getOption(EditorOption.fontInfo);\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + fontInfo.lineHeight });\n\t}\n\n\tpublic scrollLeft(): void {\n\t\tconst scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft - HORIZONTAL_SCROLLING_BY });\n\t}\n\n\tpublic scrollRight(): void {\n\t\tconst scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft + HORIZONTAL_SCROLLING_BY });\n\t}\n\n\tpublic pageUp(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - scrollHeight });\n\t}\n\n\tpublic pageDown(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + scrollHeight });\n\t}\n\n\tpublic goToTop(): void {\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: 0 });\n\t}\n\n\tpublic goToBottom(): void {\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight });\n\t}\n}\n\nfunction computeDistanceFromPointToRectangle(pointX: number, pointY: number, left: number, top: number, width: number, height: number): number {\n\tconst x = (left + width / 2); // x center of rectangle\n\tconst y = (top + height / 2); // y center of rectangle\n\tconst dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n\tconst dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n\treturn Math.sqrt(dx * dx + dy * dy);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidgetPosition } from '../../../browser/editorBrowser.js';\nimport { ConfigurationChangedEvent, EditorOption } from '../../../common/config/editorOptions.js';\nimport { HoverStartSource } from './hoverOperation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ResizableContentWidget } from './resizableContentWidget.js';\nimport { IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { getHoverAccessibleViewHint, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { PositionAffinity } from '../../../common/model.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { RenderedContentHover } from './contentHoverRendered.js';\nimport { ScrollEvent } from '../../../../base/common/scrollable.js';\n\nconst HORIZONTAL_SCROLLING_BY = 30;\n\nexport class ContentHoverWidget extends ResizableContentWidget {\n\n\tpublic static ID = 'editor.contrib.resizableContentHoverWidget';\n\tprivate static _lastDimensions: dom.Dimension = new dom.Dimension(0, 0);\n\n\tprivate _renderedHover: RenderedContentHover | undefined;\n\tprivate _positionPreference: ContentWidgetPositionPreference | undefined;\n\tprivate _minimumSize: dom.Dimension;\n\tprivate _contentWidth: number | undefined;\n\n\tprivate readonly _hover: HoverWidget = this._register(new HoverWidget(true));\n\tprivate readonly _hoverVisibleKey: IContextKey<boolean>;\n\tprivate readonly _hoverFocusedKey: IContextKey<boolean>;\n\n\tprivate readonly _onDidResize = this._register(new Emitter<void>());\n\tpublic readonly onDidResize = this._onDidResize.event;\n\n\tprivate readonly _onDidScroll = this._register(new Emitter<ScrollEvent>());\n\tpublic readonly onDidScroll = this._onDidScroll.event;\n\n\tprivate readonly _onContentsChanged = this._register(new Emitter<void>());\n\tpublic readonly onContentsChanged = this._onContentsChanged.event;\n\n\tpublic get isVisibleFromKeyboard(): boolean {\n\t\treturn (this._renderedHover?.source === HoverStartSource.Keyboard);\n\t}\n\n\tpublic get isVisible(): boolean {\n\t\treturn this._hoverVisibleKey.get() ?? false;\n\t}\n\n\tpublic get isFocused(): boolean {\n\t\treturn this._hoverFocusedKey.get() ?? false;\n\t}\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService\n\t) {\n\t\tconst minimumHeight = editor.getOption(EditorOption.lineHeight) + 8;\n\t\tconst minimumWidth = 150;\n\t\tconst minimumSize = new dom.Dimension(minimumWidth, minimumHeight);\n\t\tsuper(editor, minimumSize);\n\n\t\tthis._minimumSize = minimumSize;\n\t\tthis._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(contextKeyService);\n\t\tthis._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(contextKeyService);\n\n\t\tdom.append(this._resizableNode.domNode, this._hover.containerDomNode);\n\t\tthis._resizableNode.domNode.style.zIndex = '50';\n\t\tthis._resizableNode.domNode.className = 'monaco-resizable-hover';\n\n\t\tthis._register(this._editor.onDidLayoutChange(() => {\n\t\t\tif (this.isVisible) {\n\t\t\t\tthis._updateMaxDimensions();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._editor.onDidChangeConfiguration((e: ConfigurationChangedEvent) => {\n\t\t\tif (e.hasChanged(EditorOption.fontInfo)) {\n\t\t\t\tthis._updateFont();\n\t\t\t}\n\t\t}));\n\t\tconst focusTracker = this._register(dom.trackFocus(this._resizableNode.domNode));\n\t\tthis._register(focusTracker.onDidFocus(() => {\n\t\t\tthis._hoverFocusedKey.set(true);\n\t\t}));\n\t\tthis._register(focusTracker.onDidBlur(() => {\n\t\t\tthis._hoverFocusedKey.set(false);\n\t\t}));\n\t\tthis._register(this._hover.scrollbar.onScroll((e) => {\n\t\t\tthis._onDidScroll.fire(e);\n\t\t}));\n\t\tthis._setRenderedHover(undefined);\n\t\tthis._editor.addContentWidget(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._renderedHover?.dispose();\n\t\tthis._editor.removeContentWidget(this);\n\t}\n\n\tpublic getId(): string {\n\t\treturn ContentHoverWidget.ID;\n\t}\n\n\tprivate static _applyDimensions(container: HTMLElement, width: number | string, height: number | string): void {\n\t\tconst transformedWidth = typeof width === 'number' ? `${width}px` : width;\n\t\tconst transformedHeight = typeof height === 'number' ? `${height}px` : height;\n\t\tcontainer.style.width = transformedWidth;\n\t\tcontainer.style.height = transformedHeight;\n\t}\n\n\tprivate _setContentsDomNodeDimensions(width: number | string, height: number | string): void {\n\t\tconst contentsDomNode = this._hover.contentsDomNode;\n\t\treturn ContentHoverWidget._applyDimensions(contentsDomNode, width, height);\n\t}\n\n\tprivate _setContainerDomNodeDimensions(width: number | string, height: number | string): void {\n\t\tconst containerDomNode = this._hover.containerDomNode;\n\t\treturn ContentHoverWidget._applyDimensions(containerDomNode, width, height);\n\t}\n\n\tprivate _setScrollableElementDimensions(width: number | string, height: number | string): void {\n\t\tconst scrollbarDomElement = this._hover.scrollbar.getDomNode();\n\t\treturn ContentHoverWidget._applyDimensions(scrollbarDomElement, width, height);\n\t}\n\n\tprivate _setHoverWidgetDimensions(width: number | string, height: number | string): void {\n\t\tthis._setContainerDomNodeDimensions(width, height);\n\t\tthis._setScrollableElementDimensions(width, height);\n\t\tthis._setContentsDomNodeDimensions(width, height);\n\t\tthis._layoutContentWidget();\n\t}\n\n\tprivate static _applyMaxDimensions(container: HTMLElement, width: number | string, height: number | string) {\n\t\tconst transformedWidth = typeof width === 'number' ? `${width}px` : width;\n\t\tconst transformedHeight = typeof height === 'number' ? `${height}px` : height;\n\t\tcontainer.style.maxWidth = transformedWidth;\n\t\tcontainer.style.maxHeight = transformedHeight;\n\t}\n\n\tprivate _setHoverWidgetMaxDimensions(width: number | string, height: number | string): void {\n\t\tContentHoverWidget._applyMaxDimensions(this._hover.contentsDomNode, width, height);\n\t\tContentHoverWidget._applyMaxDimensions(this._hover.scrollbar.getDomNode(), width, height);\n\t\tContentHoverWidget._applyMaxDimensions(this._hover.containerDomNode, width, height);\n\t\tthis._hover.containerDomNode.style.setProperty('--vscode-hover-maxWidth', typeof width === 'number' ? `${width}px` : width);\n\t\tthis._layoutContentWidget();\n\t}\n\n\tprivate _setAdjustedHoverWidgetDimensions(size: dom.Dimension): void {\n\t\tthis._setHoverWidgetMaxDimensions('none', 'none');\n\t\tthis._setHoverWidgetDimensions(size.width, size.height);\n\t}\n\n\tprivate _updateResizableNodeMaxDimensions(): void {\n\t\tconst maxRenderingWidth = this._findMaximumRenderingWidth() ?? Infinity;\n\t\tconst maxRenderingHeight = this._findMaximumRenderingHeight() ?? Infinity;\n\t\tthis._resizableNode.maxSize = new dom.Dimension(maxRenderingWidth, maxRenderingHeight);\n\t\tthis._setHoverWidgetMaxDimensions(maxRenderingWidth, maxRenderingHeight);\n\t}\n\n\tprotected override _resize(size: dom.Dimension): void {\n\t\tContentHoverWidget._lastDimensions = new dom.Dimension(size.width, size.height);\n\t\tthis._setAdjustedHoverWidgetDimensions(size);\n\t\tthis._resizableNode.layout(size.height, size.width);\n\t\tthis._updateResizableNodeMaxDimensions();\n\t\tthis._hover.scrollbar.scanDomNode();\n\t\tthis._editor.layoutContentWidget(this);\n\t\tthis._onDidResize.fire();\n\t}\n\n\tprivate _findAvailableSpaceVertically(): number | undefined {\n\t\tconst position = this._renderedHover?.showAtPosition;\n\t\tif (!position) {\n\t\t\treturn;\n\t\t}\n\t\treturn this._positionPreference === ContentWidgetPositionPreference.ABOVE ?\n\t\t\tthis._availableVerticalSpaceAbove(position)\n\t\t\t: this._availableVerticalSpaceBelow(position);\n\t}\n\n\tprivate _findMaximumRenderingHeight(): number | undefined {\n\t\tconst availableSpace = this._findAvailableSpaceVertically();\n\t\tif (!availableSpace) {\n\t\t\treturn;\n\t\t}\n\t\tconst children = this._hover.contentsDomNode.children;\n\t\tlet maximumHeight = children.length - 1;\n\t\tArray.from(this._hover.contentsDomNode.children).forEach((hoverPart) => {\n\t\t\tmaximumHeight += hoverPart.clientHeight;\n\t\t});\n\t\treturn Math.min(availableSpace, maximumHeight);\n\t}\n\n\tprivate _isHoverTextOverflowing(): boolean {\n\t\t// To find out if the text is overflowing, we will disable wrapping, check the widths, and then re-enable wrapping\n\t\tthis._hover.containerDomNode.style.setProperty('--vscode-hover-whiteSpace', 'nowrap');\n\t\tthis._hover.containerDomNode.style.setProperty('--vscode-hover-sourceWhiteSpace', 'nowrap');\n\n\t\tconst overflowing = Array.from(this._hover.contentsDomNode.children).some((hoverElement) => {\n\t\t\treturn hoverElement.scrollWidth > hoverElement.clientWidth;\n\t\t});\n\n\t\tthis._hover.containerDomNode.style.removeProperty('--vscode-hover-whiteSpace');\n\t\tthis._hover.containerDomNode.style.removeProperty('--vscode-hover-sourceWhiteSpace');\n\n\t\treturn overflowing;\n\t}\n\n\tprivate _findMaximumRenderingWidth(): number | undefined {\n\t\tif (!this._editor || !this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst overflowing = this._isHoverTextOverflowing();\n\t\tconst initialWidth = (\n\t\t\ttypeof this._contentWidth === 'undefined'\n\t\t\t\t? 0\n\t\t\t\t: this._contentWidth\n\t\t);\n\n\t\tif (overflowing || this._hover.containerDomNode.clientWidth < initialWidth) {\n\t\t\tconst bodyBoxWidth = dom.getClientArea(this._hover.containerDomNode.ownerDocument.body).width;\n\t\t\tconst horizontalPadding = 14;\n\t\t\treturn bodyBoxWidth - horizontalPadding;\n\t\t} else {\n\t\t\treturn this._hover.containerDomNode.clientWidth;\n\t\t}\n\t}\n\n\tpublic isMouseGettingCloser(posx: number, posy: number): boolean {\n\n\t\tif (!this._renderedHover) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._renderedHover.initialMousePosX === undefined || this._renderedHover.initialMousePosY === undefined) {\n\t\t\tthis._renderedHover.initialMousePosX = posx;\n\t\t\tthis._renderedHover.initialMousePosY = posy;\n\t\t\treturn false;\n\t\t}\n\n\t\tconst widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n\t\tif (this._renderedHover.closestMouseDistance === undefined) {\n\t\t\tthis._renderedHover.closestMouseDistance = computeDistanceFromPointToRectangle(\n\t\t\t\tthis._renderedHover.initialMousePosX,\n\t\t\t\tthis._renderedHover.initialMousePosY,\n\t\t\t\twidgetRect.left,\n\t\t\t\twidgetRect.top,\n\t\t\t\twidgetRect.width,\n\t\t\t\twidgetRect.height\n\t\t\t);\n\t\t}\n\n\t\tconst distance = computeDistanceFromPointToRectangle(\n\t\t\tposx,\n\t\t\tposy,\n\t\t\twidgetRect.left,\n\t\t\twidgetRect.top,\n\t\t\twidgetRect.width,\n\t\t\twidgetRect.height\n\t\t);\n\t\tif (distance > this._renderedHover.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n\t\t\t// The mouse is getting farther away\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._renderedHover.closestMouseDistance = Math.min(this._renderedHover.closestMouseDistance, distance);\n\t\treturn true;\n\t}\n\n\tprivate _setRenderedHover(renderedHover: RenderedContentHover | undefined): void {\n\t\tthis._renderedHover?.dispose();\n\t\tthis._renderedHover = renderedHover;\n\t\tthis._hoverVisibleKey.set(!!renderedHover);\n\t\tthis._hover.containerDomNode.classList.toggle('hidden', !renderedHover);\n\t}\n\n\tprivate _updateFont(): void {\n\t\tconst { fontSize, lineHeight } = this._editor.getOption(EditorOption.fontInfo);\n\t\tconst contentsDomNode = this._hover.contentsDomNode;\n\t\tcontentsDomNode.style.fontSize = `${fontSize}px`;\n\t\tcontentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n\t\tconst codeClasses: HTMLElement[] = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n\t\tcodeClasses.forEach(node => this._editor.applyFontInfo(node));\n\t}\n\n\tprivate _updateContent(node: DocumentFragment): void {\n\t\tconst contentsDomNode = this._hover.contentsDomNode;\n\t\tcontentsDomNode.style.paddingBottom = '';\n\t\tcontentsDomNode.textContent = '';\n\t\tcontentsDomNode.appendChild(node);\n\t}\n\n\tprivate _layoutContentWidget(): void {\n\t\tthis._editor.layoutContentWidget(this);\n\t\tthis._hover.onContentsChanged();\n\t}\n\n\tprivate _updateMaxDimensions() {\n\t\tconst height = Math.max(this._editor.getLayoutInfo().height / 4, 250, ContentHoverWidget._lastDimensions.height);\n\t\tconst width = Math.max(this._editor.getLayoutInfo().width * 0.66, 750, ContentHoverWidget._lastDimensions.width);\n\t\tthis._resizableNode.maxSize = new dom.Dimension(width, height);\n\t\tthis._setHoverWidgetMaxDimensions(width, height);\n\t}\n\n\tprivate _render(renderedHover: RenderedContentHover) {\n\t\tthis._setRenderedHover(renderedHover);\n\t\tthis._updateFont();\n\t\tthis._updateContent(renderedHover.domNode);\n\t\tthis.handleContentsChanged();\n\t\t// Simply force a synchronous render on the editor\n\t\t// such that the widget does not really render with left = '0px'\n\t\tthis._editor.render();\n\t}\n\n\toverride getPosition(): IContentWidgetPosition | null {\n\t\tif (!this._renderedHover) {\n\t\t\treturn null;\n\t\t}\n\t\treturn {\n\t\t\tposition: this._renderedHover.showAtPosition,\n\t\t\tsecondaryPosition: this._renderedHover.showAtSecondaryPosition,\n\t\t\tpositionAffinity: this._renderedHover.shouldAppearBeforeContent ? PositionAffinity.LeftOfInjectedText : undefined,\n\t\t\tpreference: [this._positionPreference ?? ContentWidgetPositionPreference.ABOVE]\n\t\t};\n\t}\n\n\tpublic show(renderedHover: RenderedContentHover): void {\n\t\tif (!this._editor || !this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tthis._render(renderedHover);\n\t\tconst widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n\t\tconst widgetPosition = renderedHover.showAtPosition;\n\t\tthis._positionPreference = this._findPositionPreference(widgetHeight, widgetPosition) ?? ContentWidgetPositionPreference.ABOVE;\n\n\t\t// See https://github.com/microsoft/vscode/issues/140339\n\t\t// TODO: Doing a second layout of the hover after force rendering the editor\n\t\tthis.handleContentsChanged();\n\t\tif (renderedHover.shouldFocus) {\n\t\t\tthis._hover.containerDomNode.focus();\n\t\t}\n\t\tthis._onDidResize.fire();\n\t\t// The aria label overrides the label, so if we add to it, add the contents of the hover\n\t\tconst hoverFocused = this._hover.containerDomNode.ownerDocument.activeElement === this._hover.containerDomNode;\n\t\tconst accessibleViewHint = hoverFocused && getHoverAccessibleViewHint(\n\t\t\tthis._configurationService.getValue('accessibility.verbosity.hover') === true && this._accessibilityService.isScreenReaderOptimized(),\n\t\t\tthis._keybindingService.lookupKeybinding('editor.action.accessibleView')?.getAriaLabel() ?? ''\n\t\t);\n\n\t\tif (accessibleViewHint) {\n\t\t\tthis._hover.contentsDomNode.ariaLabel = this._hover.contentsDomNode.textContent + ', ' + accessibleViewHint;\n\t\t}\n\t}\n\n\tpublic hide(): void {\n\t\tif (!this._renderedHover) {\n\t\t\treturn;\n\t\t}\n\t\tconst hoverStoleFocus = this._renderedHover.shouldFocus || this._hoverFocusedKey.get();\n\t\tthis._setRenderedHover(undefined);\n\t\tthis._resizableNode.maxSize = new dom.Dimension(Infinity, Infinity);\n\t\tthis._resizableNode.clearSashHoverState();\n\t\tthis._hoverFocusedKey.set(false);\n\t\tthis._editor.layoutContentWidget(this);\n\t\tif (hoverStoleFocus) {\n\t\t\tthis._editor.focus();\n\t\t}\n\t}\n\n\tprivate _removeConstraintsRenderNormally(): void {\n\t\t// Added because otherwise the initial size of the hover content is smaller than should be\n\t\tconst layoutInfo = this._editor.getLayoutInfo();\n\t\tthis._resizableNode.layout(layoutInfo.height, layoutInfo.width);\n\t\tthis._setHoverWidgetDimensions('auto', 'auto');\n\t\tthis._updateMaxDimensions();\n\t}\n\n\tpublic setMinimumDimensions(dimensions: dom.Dimension): void {\n\t\t// We combine the new minimum dimensions with the previous ones\n\t\tthis._minimumSize = new dom.Dimension(\n\t\t\tMath.max(this._minimumSize.width, dimensions.width),\n\t\t\tMath.max(this._minimumSize.height, dimensions.height)\n\t\t);\n\t\tthis._updateMinimumWidth();\n\t}\n\n\tprivate _updateMinimumWidth(): void {\n\t\tconst width = (\n\t\t\ttypeof this._contentWidth === 'undefined'\n\t\t\t\t? this._minimumSize.width\n\t\t\t\t: Math.min(this._contentWidth, this._minimumSize.width)\n\t\t);\n\t\t// We want to avoid that the hover is artificially large, so we use the content width as minimum width\n\t\tthis._resizableNode.minSize = new dom.Dimension(width, this._minimumSize.height);\n\t}\n\n\tpublic handleContentsChanged(): void {\n\t\tthis._removeConstraintsRenderNormally();\n\t\tconst contentsDomNode = this._hover.contentsDomNode;\n\n\t\tlet height = dom.getTotalHeight(contentsDomNode);\n\t\tlet width = dom.getTotalWidth(contentsDomNode) + 2;\n\t\tthis._resizableNode.layout(height, width);\n\n\t\tthis._setHoverWidgetDimensions(width, height);\n\n\t\theight = dom.getTotalHeight(contentsDomNode);\n\t\twidth = dom.getTotalWidth(contentsDomNode);\n\t\tthis._contentWidth = width;\n\t\tthis._updateMinimumWidth();\n\t\tthis._resizableNode.layout(height, width);\n\n\t\tif (this._renderedHover?.showAtPosition) {\n\t\t\tconst widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n\t\t\tthis._positionPreference = this._findPositionPreference(widgetHeight, this._renderedHover.showAtPosition);\n\t\t}\n\t\tthis._layoutContentWidget();\n\t\tthis._onContentsChanged.fire();\n\t}\n\n\tpublic focus(): void {\n\t\tthis._hover.containerDomNode.focus();\n\t}\n\n\tpublic scrollUp(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst fontInfo = this._editor.getOption(EditorOption.fontInfo);\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - fontInfo.lineHeight });\n\t}\n\n\tpublic scrollDown(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst fontInfo = this._editor.getOption(EditorOption.fontInfo);\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + fontInfo.lineHeight });\n\t}\n\n\tpublic scrollLeft(): void {\n\t\tconst scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft - HORIZONTAL_SCROLLING_BY });\n\t}\n\n\tpublic scrollRight(): void {\n\t\tconst scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft + HORIZONTAL_SCROLLING_BY });\n\t}\n\n\tpublic pageUp(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - scrollHeight });\n\t}\n\n\tpublic pageDown(): void {\n\t\tconst scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n\t\tconst scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + scrollHeight });\n\t}\n\n\tpublic goToTop(): void {\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: 0 });\n\t}\n\n\tpublic goToBottom(): void {\n\t\tthis._hover.scrollbar.setScrollPosition({ scrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight });\n\t}\n}\n\nfunction computeDistanceFromPointToRectangle(pointX: number, pointY: number, left: number, top: number, width: number, height: number): number {\n\tconst x = (left + width / 2); // x center of rectangle\n\tconst y = (top + height / 2); // y center of rectangle\n\tconst dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n\tconst dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n\treturn Math.sqrt(dx * dx + dy * dy);\n}\n"]}