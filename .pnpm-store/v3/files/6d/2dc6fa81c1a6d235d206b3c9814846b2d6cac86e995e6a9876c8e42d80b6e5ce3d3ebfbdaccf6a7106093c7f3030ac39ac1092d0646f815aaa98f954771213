{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/colorPicker/browser/standaloneColorPicker/standaloneColorPickerParticipant.ts","vs/editor/contrib/colorPicker/browser/standaloneColorPicker/standaloneColorPickerParticipant.ts"],"names":[],"mappings":"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","file":"standaloneColorPickerParticipant.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { IActiveCodeEditor, ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { LanguageFeatureRegistry } from '../../../../common/languageFeatureRegistry.js';\nimport { DocumentColorProvider, IColorInformation } from '../../../../common/languages.js';\nimport { IEditorHoverRenderContext } from '../../../hover/browser/hoverTypes.js';\nimport { getColors } from '../color.js';\nimport { ColorDetector } from '../colorDetector.js';\nimport { ColorPickerModel } from '../colorPickerModel.js';\nimport { BaseColor, ColorPickerWidgetType, createColorHover, updateColorPresentations, updateEditorModel } from '../colorPickerParticipantUtils.js';\nimport { ColorPickerWidget } from '../colorPickerWidget.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Dimension } from '../../../../../base/browser/dom.js';\n\nexport class StandaloneColorPickerHover implements BaseColor {\n\tconstructor(\n\t\tpublic readonly owner: StandaloneColorPickerParticipant,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly model: ColorPickerModel,\n\t\tpublic readonly provider: DocumentColorProvider\n\t) { }\n\n\tpublic static fromBaseColor(owner: StandaloneColorPickerParticipant, color: BaseColor) {\n\t\treturn new StandaloneColorPickerHover(owner, color.range, color.model, color.provider);\n\t}\n}\n\nexport class StandaloneColorPickerRenderedParts extends Disposable {\n\n\tpublic color: Color;\n\n\tpublic colorPicker: ColorPickerWidget;\n\n\tconstructor(editor: IActiveCodeEditor, context: IEditorHoverRenderContext, colorHover: StandaloneColorPickerHover, themeService: IThemeService) {\n\t\tsuper();\n\t\tconst editorModel = editor.getModel();\n\t\tconst colorPickerModel = colorHover.model;\n\n\t\tthis.color = colorHover.model.color;\n\t\tthis.colorPicker = this._register(new ColorPickerWidget(\n\t\t\tcontext.fragment,\n\t\t\tcolorPickerModel,\n\t\t\teditor.getOption(EditorOption.pixelRatio),\n\t\t\tthemeService,\n\t\t\tColorPickerWidgetType.Standalone\n\t\t));\n\n\t\tthis._register(colorPickerModel.onColorFlushed((color: Color) => {\n\t\t\tthis.color = color;\n\t\t}));\n\t\tthis._register(colorPickerModel.onDidChangeColor((color: Color) => {\n\t\t\tupdateColorPresentations(editorModel, colorPickerModel, color, colorHover.range, colorHover);\n\t\t}));\n\t\tlet editorUpdatedByColorPicker = false;\n\t\tthis._register(editor.onDidChangeModelContent((e) => {\n\t\t\tif (editorUpdatedByColorPicker) {\n\t\t\t\teditorUpdatedByColorPicker = false;\n\t\t\t} else {\n\t\t\t\tcontext.hide();\n\t\t\t\teditor.focus();\n\t\t\t}\n\t\t}));\n\t\tupdateColorPresentations(editorModel, colorPickerModel, this.color, colorHover.range, colorHover);\n\t}\n}\n\nexport class StandaloneColorPickerParticipant {\n\tprivate _renderedParts: StandaloneColorPickerRenderedParts | undefined;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) { }\n\n\tpublic async createColorHover(defaultColorInfo: IColorInformation, defaultColorProvider: DocumentColorProvider, colorProviderRegistry: LanguageFeatureRegistry<DocumentColorProvider>): Promise<{ colorHover: StandaloneColorPickerHover; foundInEditor: boolean } | null> {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\t\tconst colorDetector = ColorDetector.get(this._editor);\n\t\tif (!colorDetector) {\n\t\t\treturn null;\n\t\t}\n\t\tconst colors = await getColors(colorProviderRegistry, this._editor.getModel(), CancellationToken.None);\n\t\tlet foundColorInfo: IColorInformation | null = null;\n\t\tlet foundColorProvider: DocumentColorProvider | null = null;\n\t\tfor (const colorData of colors) {\n\t\t\tconst colorInfo = colorData.colorInfo;\n\t\t\tif (Range.containsRange(colorInfo.range, defaultColorInfo.range)) {\n\t\t\t\tfoundColorInfo = colorInfo;\n\t\t\t\tfoundColorProvider = colorData.provider;\n\t\t\t}\n\t\t}\n\t\tconst colorInfo = foundColorInfo ?? defaultColorInfo;\n\t\tconst colorProvider = foundColorProvider ?? defaultColorProvider;\n\t\tconst foundInEditor = !!foundColorInfo;\n\t\tconst colorHover = StandaloneColorPickerHover.fromBaseColor(this, await createColorHover(this._editor.getModel(), colorInfo, colorProvider));\n\t\treturn { colorHover, foundInEditor };\n\t}\n\n\tpublic async updateEditorModel(colorHoverData: StandaloneColorPickerHover): Promise<void> {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst colorPickerModel = colorHoverData.model;\n\t\tlet range = new Range(colorHoverData.range.startLineNumber, colorHoverData.range.startColumn, colorHoverData.range.endLineNumber, colorHoverData.range.endColumn);\n\t\tif (this._color) {\n\t\t\tawait updateColorPresentations(this._editor.getModel(), colorPickerModel, this._color, range, colorHoverData);\n\t\t\trange = updateEditorModel(this._editor, range, colorPickerModel);\n\t\t}\n\t}\n\n\tpublic renderHoverParts(context: IEditorHoverRenderContext, hoverParts: StandaloneColorPickerHover[]): StandaloneColorPickerRenderedParts | undefined {\n\t\tif (hoverParts.length === 0 || !this._editor.hasModel()) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._setMinimumDimensions(context);\n\t\tthis._renderedParts = new StandaloneColorPickerRenderedParts(this._editor, context, hoverParts[0], this._themeService);\n\t\treturn this._renderedParts;\n\t}\n\n\tprivate _setMinimumDimensions(context: IEditorHoverRenderContext): void {\n\t\tconst minimumHeight = this._editor.getOption(EditorOption.lineHeight) + 8;\n\t\tcontext.setMinimumDimensions(new Dimension(302, minimumHeight));\n\t}\n\n\tprivate get _color(): Color | undefined {\n\t\treturn this._renderedParts?.color;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { IActiveCodeEditor, ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { LanguageFeatureRegistry } from '../../../../common/languageFeatureRegistry.js';\nimport { DocumentColorProvider, IColorInformation } from '../../../../common/languages.js';\nimport { IEditorHoverRenderContext } from '../../../hover/browser/hoverTypes.js';\nimport { getColors } from '../color.js';\nimport { ColorDetector } from '../colorDetector.js';\nimport { ColorPickerModel } from '../colorPickerModel.js';\nimport { BaseColor, ColorPickerWidgetType, createColorHover, updateColorPresentations, updateEditorModel } from '../colorPickerParticipantUtils.js';\nimport { ColorPickerWidget } from '../colorPickerWidget.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Dimension } from '../../../../../base/browser/dom.js';\n\nexport class StandaloneColorPickerHover implements BaseColor {\n\tconstructor(\n\t\tpublic readonly owner: StandaloneColorPickerParticipant,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly model: ColorPickerModel,\n\t\tpublic readonly provider: DocumentColorProvider\n\t) { }\n\n\tpublic static fromBaseColor(owner: StandaloneColorPickerParticipant, color: BaseColor) {\n\t\treturn new StandaloneColorPickerHover(owner, color.range, color.model, color.provider);\n\t}\n}\n\nexport class StandaloneColorPickerRenderedParts extends Disposable {\n\n\tpublic color: Color;\n\n\tpublic colorPicker: ColorPickerWidget;\n\n\tconstructor(editor: IActiveCodeEditor, context: IEditorHoverRenderContext, colorHover: StandaloneColorPickerHover, themeService: IThemeService) {\n\t\tsuper();\n\t\tconst editorModel = editor.getModel();\n\t\tconst colorPickerModel = colorHover.model;\n\n\t\tthis.color = colorHover.model.color;\n\t\tthis.colorPicker = this._register(new ColorPickerWidget(\n\t\t\tcontext.fragment,\n\t\t\tcolorPickerModel,\n\t\t\teditor.getOption(EditorOption.pixelRatio),\n\t\t\tthemeService,\n\t\t\tColorPickerWidgetType.Standalone\n\t\t));\n\n\t\tthis._register(colorPickerModel.onColorFlushed((color: Color) => {\n\t\t\tthis.color = color;\n\t\t}));\n\t\tthis._register(colorPickerModel.onDidChangeColor((color: Color) => {\n\t\t\tupdateColorPresentations(editorModel, colorPickerModel, color, colorHover.range, colorHover);\n\t\t}));\n\t\tlet editorUpdatedByColorPicker = false;\n\t\tthis._register(editor.onDidChangeModelContent((e) => {\n\t\t\tif (editorUpdatedByColorPicker) {\n\t\t\t\teditorUpdatedByColorPicker = false;\n\t\t\t} else {\n\t\t\t\tcontext.hide();\n\t\t\t\teditor.focus();\n\t\t\t}\n\t\t}));\n\t\tupdateColorPresentations(editorModel, colorPickerModel, this.color, colorHover.range, colorHover);\n\t}\n}\n\nexport class StandaloneColorPickerParticipant {\n\tprivate _renderedParts: StandaloneColorPickerRenderedParts | undefined;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) { }\n\n\tpublic async createColorHover(defaultColorInfo: IColorInformation, defaultColorProvider: DocumentColorProvider, colorProviderRegistry: LanguageFeatureRegistry<DocumentColorProvider>): Promise<{ colorHover: StandaloneColorPickerHover; foundInEditor: boolean } | null> {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\t\tconst colorDetector = ColorDetector.get(this._editor);\n\t\tif (!colorDetector) {\n\t\t\treturn null;\n\t\t}\n\t\tconst colors = await getColors(colorProviderRegistry, this._editor.getModel(), CancellationToken.None);\n\t\tlet foundColorInfo: IColorInformation | null = null;\n\t\tlet foundColorProvider: DocumentColorProvider | null = null;\n\t\tfor (const colorData of colors) {\n\t\t\tconst colorInfo = colorData.colorInfo;\n\t\t\tif (Range.containsRange(colorInfo.range, defaultColorInfo.range)) {\n\t\t\t\tfoundColorInfo = colorInfo;\n\t\t\t\tfoundColorProvider = colorData.provider;\n\t\t\t}\n\t\t}\n\t\tconst colorInfo = foundColorInfo ?? defaultColorInfo;\n\t\tconst colorProvider = foundColorProvider ?? defaultColorProvider;\n\t\tconst foundInEditor = !!foundColorInfo;\n\t\tconst colorHover = StandaloneColorPickerHover.fromBaseColor(this, await createColorHover(this._editor.getModel(), colorInfo, colorProvider));\n\t\treturn { colorHover, foundInEditor };\n\t}\n\n\tpublic async updateEditorModel(colorHoverData: StandaloneColorPickerHover): Promise<void> {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst colorPickerModel = colorHoverData.model;\n\t\tlet range = new Range(colorHoverData.range.startLineNumber, colorHoverData.range.startColumn, colorHoverData.range.endLineNumber, colorHoverData.range.endColumn);\n\t\tif (this._color) {\n\t\t\tawait updateColorPresentations(this._editor.getModel(), colorPickerModel, this._color, range, colorHoverData);\n\t\t\trange = updateEditorModel(this._editor, range, colorPickerModel);\n\t\t}\n\t}\n\n\tpublic renderHoverParts(context: IEditorHoverRenderContext, hoverParts: StandaloneColorPickerHover[]): StandaloneColorPickerRenderedParts | undefined {\n\t\tif (hoverParts.length === 0 || !this._editor.hasModel()) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._setMinimumDimensions(context);\n\t\tthis._renderedParts = new StandaloneColorPickerRenderedParts(this._editor, context, hoverParts[0], this._themeService);\n\t\treturn this._renderedParts;\n\t}\n\n\tprivate _setMinimumDimensions(context: IEditorHoverRenderContext): void {\n\t\tconst minimumHeight = this._editor.getOption(EditorOption.lineHeight) + 8;\n\t\tcontext.setMinimumDimensions(new Dimension(302, minimumHeight));\n\t}\n\n\tprivate get _color(): Color | undefined {\n\t\treturn this._renderedParts?.color;\n\t}\n}\n"]}