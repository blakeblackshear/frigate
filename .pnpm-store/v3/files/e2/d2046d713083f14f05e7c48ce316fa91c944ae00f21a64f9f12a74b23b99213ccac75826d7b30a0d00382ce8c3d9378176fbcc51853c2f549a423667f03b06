{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/hover/browser/contentHoverStatusBar.ts","vs/editor/contrib/hover/browser/contentHoverStatusBar.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;;gGAGgG;AAChG,OAAO,KAAK,GAAG,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,WAAW,EAAE,MAAM,kDAAkD,CAAC;AAC/E,OAAO,EAAE,UAAU,EAAE,MAAM,sCAAsC,CAAC;AAElE,OAAO,EAAE,kBAAkB,EAAE,MAAM,sDAAsD,CAAC;AAC1F,OAAO,EAAE,aAAa,EAAE,MAAM,6CAA6C,CAAC;AAC5E,OAAO,EAAE,uBAAuB,EAAE,MAAM,2DAA2D,CAAC;AAEpG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAET,IAAM,oBAAoB,GAA1B,MAAM,oBAAqB,SAAQ,UAAU;IAQnD,IAAW,UAAU;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAED,YACqB,kBAAuD,EAC5D,aAA6C;QAE5D,KAAK,EAAE,CAAC;QAH6B,uBAAkB,GAAlB,kBAAkB,CAAoB;QAC3C,kBAAa,GAAb,aAAa,CAAe;QAX7C,YAAO,GAAkB,EAAE,CAAC;QAGpC,gBAAW,GAAY,KAAK,CAAC;QAWpC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,0BAA0B,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACvE,CAAC;IAEM,SAAS,CACf,aAIC;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACrF,MAAM,eAAe,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAClE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,aAAa,EAAE,eAAe,CAAC,CAAC,CAAC;QACvG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC7I,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1B,OAAO,MAAM,CAAC;IACf,CAAC;IAEM,MAAM,CAAC,OAAoB;QACjC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,OAAO,MAAM,CAAC;IACf,CAAC;CACD,CAAA;AA3CY,oBAAoB;IAa9B,WAAA,kBAAkB,CAAA;IAClB,WAAA,aAAa,CAAA;GAdH,oBAAoB,CA2ChC","file":"contentHoverStatusBar.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IEditorHoverAction, IEditorHoverStatusBar } from './hoverTypes.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\n\nconst $ = dom.$;\n\nexport class EditorHoverStatusBar extends Disposable implements IEditorHoverStatusBar {\n\n\tpublic readonly hoverElement: HTMLElement;\n\tpublic readonly actions: HoverAction[] = [];\n\n\tprivate readonly actionsElement: HTMLElement;\n\tprivate _hasContent: boolean = false;\n\n\tpublic get hasContent() {\n\t\treturn this._hasContent;\n\t}\n\n\tconstructor(\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IHoverService private readonly _hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\t\tthis.hoverElement = $('div.hover-row.status-bar');\n\t\tthis.hoverElement.tabIndex = 0;\n\t\tthis.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n\t}\n\n\tpublic addAction(\n\t\tactionOptions: {\n\t\t\tlabel: string;\n\t\t\ticonClass?: string; run: (target: HTMLElement) => void;\n\t\t\tcommandId: string;\n\t\t}): IEditorHoverAction {\n\n\t\tconst keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n\t\tconst keybindingLabel = keybinding ? keybinding.getLabel() : null;\n\t\tthis._hasContent = true;\n\t\tconst action = this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n\t\tthis._register(this._hoverService.setupManagedHover(getDefaultHoverDelegate('element'), action.actionContainer, action.actionRenderedLabel));\n\t\tthis.actions.push(action);\n\t\treturn action;\n\t}\n\n\tpublic append(element: HTMLElement): HTMLElement {\n\t\tconst result = dom.append(this.actionsElement, element);\n\t\tthis._hasContent = true;\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IEditorHoverAction, IEditorHoverStatusBar } from './hoverTypes.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\n\nconst $ = dom.$;\n\nexport class EditorHoverStatusBar extends Disposable implements IEditorHoverStatusBar {\n\n\tpublic readonly hoverElement: HTMLElement;\n\tpublic readonly actions: HoverAction[] = [];\n\n\tprivate readonly actionsElement: HTMLElement;\n\tprivate _hasContent: boolean = false;\n\n\tpublic get hasContent() {\n\t\treturn this._hasContent;\n\t}\n\n\tconstructor(\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IHoverService private readonly _hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\t\tthis.hoverElement = $('div.hover-row.status-bar');\n\t\tthis.hoverElement.tabIndex = 0;\n\t\tthis.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n\t}\n\n\tpublic addAction(\n\t\tactionOptions: {\n\t\t\tlabel: string;\n\t\t\ticonClass?: string; run: (target: HTMLElement) => void;\n\t\t\tcommandId: string;\n\t\t}): IEditorHoverAction {\n\n\t\tconst keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n\t\tconst keybindingLabel = keybinding ? keybinding.getLabel() : null;\n\t\tthis._hasContent = true;\n\t\tconst action = this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n\t\tthis._register(this._hoverService.setupManagedHover(getDefaultHoverDelegate('element'), action.actionContainer, action.actionRenderedLabel));\n\t\tthis.actions.push(action);\n\t\treturn action;\n\t}\n\n\tpublic append(element: HTMLElement): HTMLElement {\n\t\tconst result = dom.append(this.actionsElement, element);\n\t\tthis._hasContent = true;\n\t\treturn result;\n\t}\n}\n"]}