{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/indentGuides/indentGuides.ts","vs/editor/browser/viewParts/indentGuides/indentGuides.ts"],"names":[],"mappings":"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","file":"indentGuides.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuide1, editorIndentGuide2, editorIndentGuide3, editorIndentGuide4, editorIndentGuide5, editorIndentGuide6, editorActiveIndentGuide1, editorActiveIndentGuide2, editorActiveIndentGuide3, editorActiveIndentGuide4, editorActiveIndentGuide5, editorActiveIndentGuide6 } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption, InternalGuidesOptions } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\n\n/**\n * Indent guides are vertical lines that help identify the indentation level of\n * the code.\n */\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _primaryPosition: Position | null;\n\tprivate _spaceWidth: number;\n\tprivate _renderResult: string[] | null;\n\tprivate _maxIndentLeft: number;\n\tprivate _bracketPairGuideOptions: InternalGuidesOptions;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._primaryPosition = null;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\tthis._renderResult = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst selection = e.selections[0];\n\t\tconst newPosition = selection.getPosition();\n\t\tif (!this._primaryPosition?.equals(newPosition)) {\n\t\t\tthis._primaryPosition = newPosition;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;// || e.scrollWidthChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLanguageConfigurationChanged(e: viewEvents.ViewLanguageConfigurationEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst scrollWidth = ctx.scrollWidth;\n\n\t\tconst activeCursorPosition = this._primaryPosition;\n\n\t\tconst indents = this.getGuidesByLine(\n\t\t\tvisibleStartLineNumber,\n\t\t\tMath.min(visibleEndLineNumber + 1, this._context.viewModel.getLineCount()),\n\t\t\tactiveCursorPosition\n\t\t);\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst indent = indents[lineIndex];\n\t\t\tlet result = '';\n\t\t\tconst leftOffset = ctx.visibleRangeForPosition(new Position(lineNumber, 1))?.left ?? 0;\n\t\t\tfor (const guide of indent) {\n\t\t\t\tconst left =\n\t\t\t\t\tguide.column === -1\n\t\t\t\t\t\t? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth\n\t\t\t\t\t\t: ctx.visibleRangeForPosition(\n\t\t\t\t\t\t\tnew Position(lineNumber, guide.column)\n\t\t\t\t\t\t)!.left;\n\n\t\t\t\tif (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n\n\t\t\t\tconst width = guide.horizontalLine\n\t\t\t\t\t? (ctx.visibleRangeForPosition(\n\t\t\t\t\t\tnew Position(lineNumber, guide.horizontalLine.endColumn)\n\t\t\t\t\t)?.left ?? (left + this._spaceWidth)) - left\n\t\t\t\t\t: this._spaceWidth;\n\n\t\t\t\tresult += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;width:${width}px\"></div>`;\n\t\t\t}\n\t\t\toutput[lineIndex] = result;\n\t\t}\n\t\tthis._renderResult = output;\n\t}\n\n\tprivate getGuidesByLine(\n\t\tvisibleStartLineNumber: number,\n\t\tvisibleEndLineNumber: number,\n\t\tactiveCursorPosition: Position | null\n\t): IndentGuide[][] {\n\t\tconst bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n\t\t\t? this._context.viewModel.getBracketGuidesInRangeByLine(\n\t\t\t\tvisibleStartLineNumber,\n\t\t\t\tvisibleEndLineNumber,\n\t\t\t\tactiveCursorPosition,\n\t\t\t\t{\n\t\t\t\t\thighlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n\t\t\t\t\thorizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n\t\t\t\t\t\t? HorizontalGuidesState.Enabled\n\t\t\t\t\t\t: this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n\t\t\t\t\t\t\t? HorizontalGuidesState.EnabledForActive\n\t\t\t\t\t\t\t: HorizontalGuidesState.Disabled,\n\t\t\t\t\tincludeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n\t\t\t\t}\n\t\t\t)\n\t\t\t: null;\n\n\t\tconst indentGuides = this._bracketPairGuideOptions.indentation\n\t\t\t? this._context.viewModel.getLinesIndentGuides(\n\t\t\t\tvisibleStartLineNumber,\n\t\t\t\tvisibleEndLineNumber\n\t\t\t)\n\t\t\t: null;\n\n\t\tlet activeIndentStartLineNumber = 0;\n\t\tlet activeIndentEndLineNumber = 0;\n\t\tlet activeIndentLevel = 0;\n\n\t\tif (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n\t\t\tconst activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n\t\t\tactiveIndentStartLineNumber = activeIndentInfo.startLineNumber;\n\t\t\tactiveIndentEndLineNumber = activeIndentInfo.endLineNumber;\n\t\t\tactiveIndentLevel = activeIndentInfo.indent;\n\t\t}\n\n\t\tconst { indentSize } = this._context.viewModel.model.getOptions();\n\n\t\tconst result: IndentGuide[][] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineGuides = new Array<IndentGuide>();\n\t\t\tresult.push(lineGuides);\n\n\t\t\tconst bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n\t\t\tconst bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n\n\t\t\tconst indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : 0;\n\n\t\t\tfor (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n\t\t\t\tconst indentGuide = (indentLvl - 1) * indentSize + 1;\n\t\t\t\tconst isActive =\n\t\t\t\t\t// Disable active indent guide if there are bracket guides.\n\t\t\t\t\t(this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) &&\n\t\t\t\t\tactiveIndentStartLineNumber <= lineNumber &&\n\t\t\t\t\tlineNumber <= activeIndentEndLineNumber &&\n\t\t\t\t\tindentLvl === activeIndentLevel;\n\t\t\t\tlineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n\t\t\t\tconst peeked = bracketGuidesInLineQueue.peek();\n\t\t\t\tif (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n\t\t\t\t\tlineGuides.push(\n\t\t\t\t\t\tnew IndentGuide(\n\t\t\t\t\t\t\tindentGuide,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t`core-guide-indent lvl-${(indentLvl - 1) % 30}` + (isActive ? ' indent-active' : ''),\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nfunction transparentToUndefined(color: Color | undefined): Color | undefined {\n\tif (color && color.isTransparent()) {\n\t\treturn undefined;\n\t}\n\treturn color;\n}\n\nregisterThemingParticipant((theme, collector) => {\n\n\tconst colors = [\n\t\t{ bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n\t\t{ bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n\t\t{ bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n\t\t{ bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n\t\t{ bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n\t\t{ bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n\t];\n\tconst colorProvider = new BracketPairGuidesClassNames();\n\n\tconst indentColors = [\n\t\t{ indentColor: editorIndentGuide1, indentColorActive: editorActiveIndentGuide1 },\n\t\t{ indentColor: editorIndentGuide2, indentColorActive: editorActiveIndentGuide2 },\n\t\t{ indentColor: editorIndentGuide3, indentColorActive: editorActiveIndentGuide3 },\n\t\t{ indentColor: editorIndentGuide4, indentColorActive: editorActiveIndentGuide4 },\n\t\t{ indentColor: editorIndentGuide5, indentColorActive: editorActiveIndentGuide5 },\n\t\t{ indentColor: editorIndentGuide6, indentColorActive: editorActiveIndentGuide6 },\n\t];\n\n\tconst colorValues = colors\n\t\t.map(c => {\n\t\t\tconst bracketColor = theme.getColor(c.bracketColor);\n\t\t\tconst guideColor = theme.getColor(c.guideColor);\n\t\t\tconst guideColorActive = theme.getColor(c.guideColorActive);\n\n\t\t\tconst effectiveGuideColor = transparentToUndefined(transparentToUndefined(guideColor) ?? bracketColor?.transparent(0.3));\n\t\t\tconst effectiveGuideColorActive = transparentToUndefined(transparentToUndefined(guideColorActive) ?? bracketColor);\n\n\t\t\tif (!effectiveGuideColor || !effectiveGuideColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tguideColor: effectiveGuideColor,\n\t\t\t\tguideColorActive: effectiveGuideColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tconst indentColorValues = indentColors\n\t\t.map(c => {\n\t\t\tconst indentColor = theme.getColor(c.indentColor);\n\t\t\tconst indentColorActive = theme.getColor(c.indentColorActive);\n\n\t\t\tconst effectiveIndentColor = transparentToUndefined(indentColor);\n\t\t\tconst effectiveIndentColorActive = transparentToUndefined(indentColorActive);\n\n\t\t\tif (!effectiveIndentColor || !effectiveIndentColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tindentColor: effectiveIndentColor,\n\t\t\t\tindentColorActive: effectiveIndentColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tif (colorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = colorValues[level % colorValues.length];\n\t\t\tcollector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n\t\t}\n\n\t\tcollector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n\n\t\tcollector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n\t}\n\n\tif (indentColorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = indentColorValues[level % indentColorValues.length];\n\t\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent.lvl-${level} { --indent-color: ${colors.indentColor}; --indent-color-active: ${colors.indentColorActive}; }`);\n\t\t}\n\n\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 var(--indent-color) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent.indent-active { box-shadow: 1px 0 0 0 var(--indent-color-active) inset; }`);\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuide1, editorIndentGuide2, editorIndentGuide3, editorIndentGuide4, editorIndentGuide5, editorIndentGuide6, editorActiveIndentGuide1, editorActiveIndentGuide2, editorActiveIndentGuide3, editorActiveIndentGuide4, editorActiveIndentGuide5, editorActiveIndentGuide6 } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption, InternalGuidesOptions } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\n\n/**\n * Indent guides are vertical lines that help identify the indentation level of\n * the code.\n */\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _primaryPosition: Position | null;\n\tprivate _spaceWidth: number;\n\tprivate _renderResult: string[] | null;\n\tprivate _maxIndentLeft: number;\n\tprivate _bracketPairGuideOptions: InternalGuidesOptions;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._primaryPosition = null;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\tthis._renderResult = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst selection = e.selections[0];\n\t\tconst newPosition = selection.getPosition();\n\t\tif (!this._primaryPosition?.equals(newPosition)) {\n\t\t\tthis._primaryPosition = newPosition;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;// || e.scrollWidthChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLanguageConfigurationChanged(e: viewEvents.ViewLanguageConfigurationEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst scrollWidth = ctx.scrollWidth;\n\n\t\tconst activeCursorPosition = this._primaryPosition;\n\n\t\tconst indents = this.getGuidesByLine(\n\t\t\tvisibleStartLineNumber,\n\t\t\tMath.min(visibleEndLineNumber + 1, this._context.viewModel.getLineCount()),\n\t\t\tactiveCursorPosition\n\t\t);\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst indent = indents[lineIndex];\n\t\t\tlet result = '';\n\t\t\tconst leftOffset = ctx.visibleRangeForPosition(new Position(lineNumber, 1))?.left ?? 0;\n\t\t\tfor (const guide of indent) {\n\t\t\t\tconst left =\n\t\t\t\t\tguide.column === -1\n\t\t\t\t\t\t? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth\n\t\t\t\t\t\t: ctx.visibleRangeForPosition(\n\t\t\t\t\t\t\tnew Position(lineNumber, guide.column)\n\t\t\t\t\t\t)!.left;\n\n\t\t\t\tif (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n\n\t\t\t\tconst width = guide.horizontalLine\n\t\t\t\t\t? (ctx.visibleRangeForPosition(\n\t\t\t\t\t\tnew Position(lineNumber, guide.horizontalLine.endColumn)\n\t\t\t\t\t)?.left ?? (left + this._spaceWidth)) - left\n\t\t\t\t\t: this._spaceWidth;\n\n\t\t\t\tresult += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;width:${width}px\"></div>`;\n\t\t\t}\n\t\t\toutput[lineIndex] = result;\n\t\t}\n\t\tthis._renderResult = output;\n\t}\n\n\tprivate getGuidesByLine(\n\t\tvisibleStartLineNumber: number,\n\t\tvisibleEndLineNumber: number,\n\t\tactiveCursorPosition: Position | null\n\t): IndentGuide[][] {\n\t\tconst bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n\t\t\t? this._context.viewModel.getBracketGuidesInRangeByLine(\n\t\t\t\tvisibleStartLineNumber,\n\t\t\t\tvisibleEndLineNumber,\n\t\t\t\tactiveCursorPosition,\n\t\t\t\t{\n\t\t\t\t\thighlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n\t\t\t\t\thorizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n\t\t\t\t\t\t? HorizontalGuidesState.Enabled\n\t\t\t\t\t\t: this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n\t\t\t\t\t\t\t? HorizontalGuidesState.EnabledForActive\n\t\t\t\t\t\t\t: HorizontalGuidesState.Disabled,\n\t\t\t\t\tincludeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n\t\t\t\t}\n\t\t\t)\n\t\t\t: null;\n\n\t\tconst indentGuides = this._bracketPairGuideOptions.indentation\n\t\t\t? this._context.viewModel.getLinesIndentGuides(\n\t\t\t\tvisibleStartLineNumber,\n\t\t\t\tvisibleEndLineNumber\n\t\t\t)\n\t\t\t: null;\n\n\t\tlet activeIndentStartLineNumber = 0;\n\t\tlet activeIndentEndLineNumber = 0;\n\t\tlet activeIndentLevel = 0;\n\n\t\tif (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n\t\t\tconst activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n\t\t\tactiveIndentStartLineNumber = activeIndentInfo.startLineNumber;\n\t\t\tactiveIndentEndLineNumber = activeIndentInfo.endLineNumber;\n\t\t\tactiveIndentLevel = activeIndentInfo.indent;\n\t\t}\n\n\t\tconst { indentSize } = this._context.viewModel.model.getOptions();\n\n\t\tconst result: IndentGuide[][] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineGuides = new Array<IndentGuide>();\n\t\t\tresult.push(lineGuides);\n\n\t\t\tconst bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n\t\t\tconst bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n\n\t\t\tconst indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : 0;\n\n\t\t\tfor (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n\t\t\t\tconst indentGuide = (indentLvl - 1) * indentSize + 1;\n\t\t\t\tconst isActive =\n\t\t\t\t\t// Disable active indent guide if there are bracket guides.\n\t\t\t\t\t(this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) &&\n\t\t\t\t\tactiveIndentStartLineNumber <= lineNumber &&\n\t\t\t\t\tlineNumber <= activeIndentEndLineNumber &&\n\t\t\t\t\tindentLvl === activeIndentLevel;\n\t\t\t\tlineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n\t\t\t\tconst peeked = bracketGuidesInLineQueue.peek();\n\t\t\t\tif (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n\t\t\t\t\tlineGuides.push(\n\t\t\t\t\t\tnew IndentGuide(\n\t\t\t\t\t\t\tindentGuide,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t`core-guide-indent lvl-${(indentLvl - 1) % 30}` + (isActive ? ' indent-active' : ''),\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nfunction transparentToUndefined(color: Color | undefined): Color | undefined {\n\tif (color && color.isTransparent()) {\n\t\treturn undefined;\n\t}\n\treturn color;\n}\n\nregisterThemingParticipant((theme, collector) => {\n\n\tconst colors = [\n\t\t{ bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n\t\t{ bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n\t\t{ bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n\t\t{ bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n\t\t{ bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n\t\t{ bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n\t];\n\tconst colorProvider = new BracketPairGuidesClassNames();\n\n\tconst indentColors = [\n\t\t{ indentColor: editorIndentGuide1, indentColorActive: editorActiveIndentGuide1 },\n\t\t{ indentColor: editorIndentGuide2, indentColorActive: editorActiveIndentGuide2 },\n\t\t{ indentColor: editorIndentGuide3, indentColorActive: editorActiveIndentGuide3 },\n\t\t{ indentColor: editorIndentGuide4, indentColorActive: editorActiveIndentGuide4 },\n\t\t{ indentColor: editorIndentGuide5, indentColorActive: editorActiveIndentGuide5 },\n\t\t{ indentColor: editorIndentGuide6, indentColorActive: editorActiveIndentGuide6 },\n\t];\n\n\tconst colorValues = colors\n\t\t.map(c => {\n\t\t\tconst bracketColor = theme.getColor(c.bracketColor);\n\t\t\tconst guideColor = theme.getColor(c.guideColor);\n\t\t\tconst guideColorActive = theme.getColor(c.guideColorActive);\n\n\t\t\tconst effectiveGuideColor = transparentToUndefined(transparentToUndefined(guideColor) ?? bracketColor?.transparent(0.3));\n\t\t\tconst effectiveGuideColorActive = transparentToUndefined(transparentToUndefined(guideColorActive) ?? bracketColor);\n\n\t\t\tif (!effectiveGuideColor || !effectiveGuideColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tguideColor: effectiveGuideColor,\n\t\t\t\tguideColorActive: effectiveGuideColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tconst indentColorValues = indentColors\n\t\t.map(c => {\n\t\t\tconst indentColor = theme.getColor(c.indentColor);\n\t\t\tconst indentColorActive = theme.getColor(c.indentColorActive);\n\n\t\t\tconst effectiveIndentColor = transparentToUndefined(indentColor);\n\t\t\tconst effectiveIndentColorActive = transparentToUndefined(indentColorActive);\n\n\t\t\tif (!effectiveIndentColor || !effectiveIndentColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tindentColor: effectiveIndentColor,\n\t\t\t\tindentColorActive: effectiveIndentColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tif (colorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = colorValues[level % colorValues.length];\n\t\t\tcollector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n\t\t}\n\n\t\tcollector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n\n\t\tcollector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n\t}\n\n\tif (indentColorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = indentColorValues[level % indentColorValues.length];\n\t\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent.lvl-${level} { --indent-color: ${colors.indentColor}; --indent-color-active: ${colors.indentColorActive}; }`);\n\t\t}\n\n\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 var(--indent-color) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent.indent-active { box-shadow: 1px 0 0 0 var(--indent-color-active) inset; }`);\n\t}\n});\n"]}