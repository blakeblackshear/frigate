{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/treeSitter/treeSitterThemeService.ts","vs/editor/common/services/treeSitter/treeSitterThemeService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,OAAO,EAAE,eAAe,EAAE,MAAM,4DAA4D,CAAC;AAG7F,MAAM,CAAC,MAAM,uBAAuB,GAAG,eAAe,CAA0B,wBAAwB,CAAC,CAAC","file":"treeSitterThemeService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IObservable, IReader } from '../../../../base/common/observable.js';\n\nexport const ITreeSitterThemeService = createDecorator<ITreeSitterThemeService>('treeSitterThemeService');\n\nexport interface ITreeSitterThemeService {\n\treadonly _serviceBrand: undefined;\n\treadonly onChange: IObservable<void>;\n\n\tfindMetadata(captureNames: string[], languageId: number, bracket: boolean, reader: IReader | undefined): number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IObservable, IReader } from '../../../../base/common/observable.js';\n\nexport const ITreeSitterThemeService = createDecorator<ITreeSitterThemeService>('treeSitterThemeService');\n\nexport interface ITreeSitterThemeService {\n\treadonly _serviceBrand: undefined;\n\treadonly onChange: IObservable<void>;\n\n\tfindMetadata(captureNames: string[], languageId: number, bracket: boolean, reader: IReader | undefined): number;\n}\n"]}