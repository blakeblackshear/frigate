{"version":3,"sources":["vs/platform/theme/common/colors/baseColors.ts"],"names":[],"mappings":"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","file":"baseColors.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\n\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n\n\nexport const foreground = registerColor('foreground',\n\t{ dark: '#CCCCCC', light: '#616161', hcDark: '#FFFFFF', hcLight: '#292929' },\n\tnls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\n\nexport const disabledForeground = registerColor('disabledForeground',\n\t{ dark: '#CCCCCC80', light: '#61616180', hcDark: '#A5A5A5', hcLight: '#7F7F7F' },\n\tnls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\n\nexport const errorForeground = registerColor('errorForeground',\n\t{ dark: '#F48771', light: '#A1260D', hcDark: '#F48771', hcLight: '#B5200D' },\n\tnls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\n\nexport const descriptionForeground = registerColor('descriptionForeground',\n\t{ light: '#717171', dark: transparent(foreground, 0.7), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) },\n\tnls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\n\nexport const iconForeground = registerColor('icon.foreground',\n\t{ dark: '#C5C5C5', light: '#424242', hcDark: '#FFFFFF', hcLight: '#292929' },\n\tnls.localize('iconForeground', \"The default color for icons in the workbench.\"));\n\nexport const focusBorder = registerColor('focusBorder',\n\t{ dark: '#007FD4', light: '#0090F1', hcDark: '#F38518', hcLight: '#006BBD' },\n\tnls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\n\nexport const contrastBorder = registerColor('contrastBorder',\n\t{ light: null, dark: null, hcDark: '#6FC3DF', hcLight: '#0F4A85' },\n\tnls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\n\nexport const activeContrastBorder = registerColor('contrastActiveBorder',\n\t{ light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder },\n\tnls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\n\nexport const selectionBackground = registerColor('selection.background',\n\tnull,\n\tnls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n\n\n// ------ text link\n\nexport const textLinkForeground = registerColor('textLink.foreground',\n\t{ light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' },\n\tnls.localize('textLinkForeground', \"Foreground color for links in text.\"));\n\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground',\n\t{ light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' },\n\tnls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\n\nexport const textSeparatorForeground = registerColor('textSeparator.foreground',\n\t{ light: '#0000002e', dark: '#ffffff2e', hcDark: Color.black, hcLight: '#292929' },\n\tnls.localize('textSeparatorForeground', \"Color for text separators.\"));\n\n\n// ------ text preformat\n\nexport const textPreformatForeground = registerColor('textPreformat.foreground',\n\t{ light: '#A31515', dark: '#D7BA7D', hcDark: '#000000', hcLight: '#FFFFFF' },\n\tnls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\n\nexport const textPreformatBackground = registerColor('textPreformat.background',\n\t{ light: '#0000001A', dark: '#FFFFFF1A', hcDark: '#FFFFFF', hcLight: '#09345f' },\n\tnls.localize('textPreformatBackground', \"Background color for preformatted text segments.\"));\n\n\n// ------ text block quote\n\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background',\n\t{ light: '#f2f2f2', dark: '#222222', hcDark: null, hcLight: '#F2F2F2' },\n\tnls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\n\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border',\n\t{ light: '#007acc80', dark: '#007acc80', hcDark: Color.white, hcLight: '#292929' },\n\tnls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\n\n\n// ------ text code block\n\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background',\n\t{ light: '#dcdcdc66', dark: '#0a0a0a66', hcDark: Color.black, hcLight: '#F2F2F2' },\n\tnls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n"]}