{"version":3,"sources":["vs/editor/contrib/suggest/browser/suggest.ts"],"names":[],"mappings":"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","file":"suggest.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { CancellationError, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { FuzzyScore } from '../../../../base/common/filters.js';\nimport { DisposableStore, IDisposable, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { IPosition, Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\nimport { ITextModel } from '../../../common/model.js';\nimport * as languages from '../../../common/languages.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { historyNavigationVisible } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { InternalQuickSuggestionsOptions, QuickSuggestionsValue } from '../../../common/config/editorOptions.js';\nimport { ExtensionIdentifier } from '../../../../platform/extensions/common/extensions.js';\nimport { StandardTokenType } from '../../../common/encodedTokenAttributes.js';\n\nexport const Context = {\n\tVisible: historyNavigationVisible,\n\tHasFocusedSuggestion: new RawContextKey<boolean>('suggestWidgetHasFocusedSuggestion', false, localize('suggestWidgetHasSelection', \"Whether any suggestion is focused\")),\n\tDetailsVisible: new RawContextKey<boolean>('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\n\tMultipleSuggestions: new RawContextKey<boolean>('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\n\tMakesTextEdit: new RawContextKey<boolean>('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\n\tAcceptSuggestionsOnEnter: new RawContextKey<boolean>('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\n\tHasInsertAndReplaceRange: new RawContextKey<boolean>('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\n\tInsertMode: new RawContextKey<'insert' | 'replace'>('suggestionInsertMode', undefined, { type: 'string', description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\") }),\n\tCanResolve: new RawContextKey<boolean>('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\")),\n};\n\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\n\nexport class CompletionItem {\n\n\t//\n\treadonly editStart: IPosition;\n\treadonly editInsertEnd: IPosition;\n\treadonly editReplaceEnd: IPosition;\n\n\t//\n\treadonly textLabel: string;\n\n\t// perf\n\treadonly labelLow: string;\n\treadonly sortTextLow?: string;\n\treadonly filterTextLow?: string;\n\n\t// validation\n\treadonly isInvalid: boolean = false;\n\n\t// sorting, filtering\n\tscore: FuzzyScore = FuzzyScore.Default;\n\tdistance: number = 0;\n\tidx?: number;\n\tword?: string;\n\n\t// instrumentation\n\treadonly extensionId?: ExtensionIdentifier;\n\n\t// resolving\n\tprivate _resolveDuration?: number;\n\tprivate _resolveCache?: Promise<void>;\n\n\tconstructor(\n\t\treadonly position: IPosition,\n\t\treadonly completion: languages.CompletionItem,\n\t\treadonly container: languages.CompletionList,\n\t\treadonly provider: languages.CompletionItemProvider,\n\t) {\n\t\tthis.textLabel = typeof completion.label === 'string'\n\t\t\t? completion.label\n\t\t\t: completion.label?.label;\n\n\t\t// ensure lower-variants (perf)\n\t\tthis.labelLow = this.textLabel.toLowerCase();\n\n\t\t// validate label\n\t\tthis.isInvalid = !this.textLabel;\n\n\t\tthis.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\n\t\tthis.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\n\n\t\tthis.extensionId = completion.extensionId;\n\n\t\t// normalize ranges\n\t\tif (Range.isIRange(completion.range)) {\n\t\t\tthis.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\n\t\t\tthis.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n\t\t\tthis.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n\n\t\t\t// validate range\n\t\t\tthis.isInvalid = this.isInvalid\n\t\t\t\t|| Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\n\n\t\t} else {\n\t\t\tthis.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\n\t\t\tthis.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\n\t\t\tthis.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\n\n\t\t\t// validate ranges\n\t\t\tthis.isInvalid = this.isInvalid\n\t\t\t\t|| Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace)\n\t\t\t\t|| completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber\n\t\t\t\t|| completion.range.insert.startColumn !== completion.range.replace.startColumn;\n\t\t}\n\n\t\t// create the suggestion resolver\n\t\tif (typeof provider.resolveCompletionItem !== 'function') {\n\t\t\tthis._resolveCache = Promise.resolve();\n\t\t\tthis._resolveDuration = 0;\n\t\t}\n\t}\n\n\t// ---- resolving\n\n\tget isResolved(): boolean {\n\t\treturn this._resolveDuration !== undefined;\n\t}\n\n\tget resolveDuration(): number {\n\t\treturn this._resolveDuration !== undefined ? this._resolveDuration : -1;\n\t}\n\n\tasync resolve(token: CancellationToken) {\n\t\tif (!this._resolveCache) {\n\t\t\tconst sub = token.onCancellationRequested(() => {\n\t\t\t\tthis._resolveCache = undefined;\n\t\t\t\tthis._resolveDuration = undefined;\n\t\t\t});\n\t\t\tconst sw = new StopWatch(true);\n\t\t\tthis._resolveCache = Promise.resolve(this.provider.resolveCompletionItem!(this.completion, token)).then(value => {\n\t\t\t\tObject.assign(this.completion, value);\n\t\t\t\tthis._resolveDuration = sw.elapsed();\n\t\t\t}, err => {\n\t\t\t\tif (isCancellationError(err)) {\n\t\t\t\t\t// the IPC queue will reject the request with the\n\t\t\t\t\t// cancellation error -> reset cached\n\t\t\t\t\tthis._resolveCache = undefined;\n\t\t\t\t\tthis._resolveDuration = undefined;\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\tsub.dispose();\n\t\t\t});\n\t\t}\n\t\treturn this._resolveCache;\n\t}\n}\n\nexport const enum SnippetSortOrder {\n\tTop, Inline, Bottom\n}\n\nexport class CompletionOptions {\n\n\tstatic readonly default = new CompletionOptions();\n\n\tconstructor(\n\t\treadonly snippetSortOrder = SnippetSortOrder.Bottom,\n\t\treadonly kindFilter = new Set<languages.CompletionItemKind>(),\n\t\treadonly providerFilter = new Set<languages.CompletionItemProvider>(),\n\t\treadonly providerItemsToReuse: ReadonlyMap<languages.CompletionItemProvider, CompletionItem[]> = new Map<languages.CompletionItemProvider, CompletionItem[]>(),\n\t\treadonly showDeprecated = true\n\t) { }\n}\n\nlet _snippetSuggestSupport: languages.CompletionItemProvider | undefined;\n\nexport function getSnippetSuggestSupport(): languages.CompletionItemProvider | undefined {\n\treturn _snippetSuggestSupport;\n}\n\nexport interface CompletionDurationEntry {\n\treadonly providerName: string;\n\treadonly elapsedProvider: number;\n\treadonly elapsedOverall: number;\n}\n\nexport interface CompletionDurations {\n\treadonly entries: readonly CompletionDurationEntry[];\n\treadonly elapsed: number;\n}\n\nexport class CompletionItemModel {\n\tconstructor(\n\t\treadonly items: CompletionItem[],\n\t\treadonly needsClipboard: boolean,\n\t\treadonly durations: CompletionDurations,\n\t\treadonly disposable: IDisposable,\n\t) { }\n}\n\nexport async function provideSuggestionItems(\n\tregistry: LanguageFeatureRegistry<languages.CompletionItemProvider>,\n\tmodel: ITextModel,\n\tposition: Position,\n\toptions: CompletionOptions = CompletionOptions.default,\n\tcontext: languages.CompletionContext = { triggerKind: languages.CompletionTriggerKind.Invoke },\n\ttoken: CancellationToken = CancellationToken.None\n): Promise<CompletionItemModel> {\n\n\tconst sw = new StopWatch();\n\tposition = position.clone();\n\n\tconst word = model.getWordAtPosition(position);\n\tconst defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\n\tconst defaultRange = { replace: defaultReplaceRange, insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column) };\n\n\tconst result: CompletionItem[] = [];\n\tconst disposables = new DisposableStore();\n\tconst durations: CompletionDurationEntry[] = [];\n\tlet needsClipboard = false;\n\n\tconst onCompletionList = (provider: languages.CompletionItemProvider, container: languages.CompletionList | null | undefined, sw: StopWatch): boolean => {\n\t\tlet didAddResult = false;\n\t\tif (!container) {\n\t\t\treturn didAddResult;\n\t\t}\n\t\tfor (const suggestion of container.suggestions) {\n\t\t\tif (!options.kindFilter.has(suggestion.kind)) {\n\t\t\t\t// skip if not showing deprecated suggestions\n\t\t\t\tif (!options.showDeprecated && suggestion?.tags?.includes(languages.CompletionItemTag.Deprecated)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default range when missing\n\t\t\t\tif (!suggestion.range) {\n\t\t\t\t\tsuggestion.range = defaultRange;\n\t\t\t\t}\n\t\t\t\t// fill in default sortText when missing\n\t\t\t\tif (!suggestion.sortText) {\n\t\t\t\t\tsuggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\n\t\t\t\t}\n\t\t\t\tif (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & languages.CompletionItemInsertTextRule.InsertAsSnippet) {\n\t\t\t\t\tneedsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\n\t\t\t\t}\n\t\t\t\tresult.push(new CompletionItem(position, suggestion, container, provider));\n\t\t\t\tdidAddResult = true;\n\t\t\t}\n\t\t}\n\t\tif (isDisposable(container)) {\n\t\t\tdisposables.add(container);\n\t\t}\n\t\tdurations.push({\n\t\t\tproviderName: provider._debugDisplayName ?? 'unknown_provider', elapsedProvider: container.duration ?? -1, elapsedOverall: sw.elapsed()\n\t\t});\n\t\treturn didAddResult;\n\t};\n\n\t// ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\n\t// do so - no snippet filter, no special-providers-only request\n\tconst snippetCompletions = (async () => {\n\t\tif (!_snippetSuggestSupport || options.kindFilter.has(languages.CompletionItemKind.Snippet)) {\n\t\t\treturn;\n\t\t}\n\t\t// we have items from a previous session that we can reuse\n\t\tconst reuseItems = options.providerItemsToReuse.get(_snippetSuggestSupport);\n\t\tif (reuseItems) {\n\t\t\treuseItems.forEach(item => result.push(item));\n\t\t\treturn;\n\t\t}\n\t\tif (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\n\t\t\treturn;\n\t\t}\n\t\tconst sw = new StopWatch();\n\t\tconst list = await _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\n\t\tonCompletionList(_snippetSuggestSupport, list, sw);\n\t})();\n\n\t// add suggestions from contributed providers - providers are ordered in groups of\n\t// equal score and once a group produces a result the process stops\n\t// get provider groups, always add snippet suggestion provider\n\tfor (const providerGroup of registry.orderedGroups(model)) {\n\n\t\t// for each support in the group ask for suggestions\n\t\tlet didAddResult = false;\n\t\tawait Promise.all(providerGroup.map(async provider => {\n\t\t\t// we have items from a previous session that we can reuse\n\t\t\tif (options.providerItemsToReuse.has(provider)) {\n\t\t\t\tconst items = options.providerItemsToReuse.get(provider)!;\n\t\t\t\titems.forEach(item => result.push(item));\n\t\t\t\tdidAddResult = didAddResult || items.length > 0;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check if this provider is filtered out\n\t\t\tif (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst sw = new StopWatch();\n\t\t\t\tconst list = await provider.provideCompletionItems(model, position, context, token);\n\t\t\t\tdidAddResult = onCompletionList(provider, list, sw) || didAddResult;\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedExternalError(err);\n\t\t\t}\n\t\t}));\n\n\t\tif (didAddResult || token.isCancellationRequested) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tawait snippetCompletions;\n\n\tif (token.isCancellationRequested) {\n\t\tdisposables.dispose();\n\t\treturn Promise.reject<any>(new CancellationError());\n\t}\n\n\treturn new CompletionItemModel(\n\t\tresult.sort(getSuggestionComparator(options.snippetSortOrder)),\n\t\tneedsClipboard,\n\t\t{ entries: durations, elapsed: sw.elapsed() },\n\t\tdisposables,\n\t);\n}\n\n\nfunction defaultComparator(a: CompletionItem, b: CompletionItem): number {\n\t// check with 'sortText'\n\tif (a.sortTextLow && b.sortTextLow) {\n\t\tif (a.sortTextLow < b.sortTextLow) {\n\t\t\treturn -1;\n\t\t} else if (a.sortTextLow > b.sortTextLow) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\t// check with 'label'\n\tif (a.textLabel < b.textLabel) {\n\t\treturn -1;\n\t} else if (a.textLabel > b.textLabel) {\n\t\treturn 1;\n\t}\n\t// check with 'type'\n\treturn a.completion.kind - b.completion.kind;\n}\n\nfunction snippetUpComparator(a: CompletionItem, b: CompletionItem): number {\n\tif (a.completion.kind !== b.completion.kind) {\n\t\tif (a.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn -1;\n\t\t} else if (b.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn defaultComparator(a, b);\n}\n\nfunction snippetDownComparator(a: CompletionItem, b: CompletionItem): number {\n\tif (a.completion.kind !== b.completion.kind) {\n\t\tif (a.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn 1;\n\t\t} else if (b.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn defaultComparator(a, b);\n}\n\ninterface Comparator<T> { (a: T, b: T): number }\nconst _snippetComparators = new Map<SnippetSortOrder, Comparator<CompletionItem>>();\n_snippetComparators.set(SnippetSortOrder.Top, snippetUpComparator);\n_snippetComparators.set(SnippetSortOrder.Bottom, snippetDownComparator);\n_snippetComparators.set(SnippetSortOrder.Inline, defaultComparator);\n\nexport function getSuggestionComparator(snippetConfig: SnippetSortOrder): (a: CompletionItem, b: CompletionItem) => number {\n\treturn _snippetComparators.get(snippetConfig)!;\n}\n\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', async (accessor, ...args: [URI, IPosition, string?, number?]) => {\n\tconst [uri, position, triggerCharacter, maxItemsToResolve] = args;\n\tassertType(URI.isUri(uri));\n\tassertType(Position.isIPosition(position));\n\tassertType(typeof triggerCharacter === 'string' || !triggerCharacter);\n\tassertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\n\n\tconst { completionProvider } = accessor.get(ILanguageFeaturesService);\n\tconst ref = await accessor.get(ITextModelService).createModelReference(uri);\n\ttry {\n\n\t\tconst result: languages.CompletionList = {\n\t\t\tincomplete: false,\n\t\t\tsuggestions: []\n\t\t};\n\n\t\tconst resolving: Promise<any>[] = [];\n\t\tconst actualPosition = ref.object.textEditorModel.validatePosition(position);\n\t\tconst completions = await provideSuggestionItems(completionProvider, ref.object.textEditorModel, actualPosition, undefined, { triggerCharacter: triggerCharacter ?? undefined, triggerKind: triggerCharacter ? languages.CompletionTriggerKind.TriggerCharacter : languages.CompletionTriggerKind.Invoke });\n\t\tfor (const item of completions.items) {\n\t\t\tif (resolving.length < (maxItemsToResolve ?? 0)) {\n\t\t\t\tresolving.push(item.resolve(CancellationToken.None));\n\t\t\t}\n\t\t\tresult.incomplete = result.incomplete || item.container.incomplete;\n\t\t\tresult.suggestions.push(item.completion);\n\t\t}\n\n\t\ttry {\n\t\t\tawait Promise.all(resolving);\n\t\t\treturn result;\n\t\t} finally {\n\t\t\tsetTimeout(() => completions.disposable.dispose(), 100);\n\t\t}\n\n\t} finally {\n\t\tref.dispose();\n\t}\n\n});\n\ninterface SuggestController extends IEditorContribution {\n\ttriggerSuggest(onlyFrom?: Set<languages.CompletionItemProvider>, auto?: boolean, noFilter?: boolean): void;\n}\n\nexport function showSimpleSuggestions(editor: ICodeEditor, provider: languages.CompletionItemProvider) {\n\teditor.getContribution<SuggestController>('editor.contrib.suggestController')?.triggerSuggest(\n\t\tnew Set<languages.CompletionItemProvider>().add(provider), undefined, true\n\t);\n}\n\nexport interface ISuggestItemPreselector {\n\t/**\n\t * The preselector with highest priority is asked first.\n\t*/\n\treadonly priority: number;\n\n\t/**\n\t * Is called to preselect a suggest item.\n\t * When -1 is returned, item preselectors with lower priority are asked.\n\t*/\n\tselect(model: ITextModel, pos: IPosition, items: CompletionItem[]): number | -1;\n}\n\n\nexport abstract class QuickSuggestionsOptions {\n\n\tstatic isAllOff(config: InternalQuickSuggestionsOptions): boolean {\n\t\treturn config.other === 'off' && config.comments === 'off' && config.strings === 'off';\n\t}\n\n\tstatic isAllOn(config: InternalQuickSuggestionsOptions): boolean {\n\t\treturn config.other === 'on' && config.comments === 'on' && config.strings === 'on';\n\t}\n\n\tstatic valueFor(config: InternalQuickSuggestionsOptions, tokenType: StandardTokenType): QuickSuggestionsValue {\n\t\tswitch (tokenType) {\n\t\t\tcase StandardTokenType.Comment: return config.comments;\n\t\t\tcase StandardTokenType.String: return config.strings;\n\t\t\tdefault: return config.other;\n\t\t}\n\t}\n}\n"]}