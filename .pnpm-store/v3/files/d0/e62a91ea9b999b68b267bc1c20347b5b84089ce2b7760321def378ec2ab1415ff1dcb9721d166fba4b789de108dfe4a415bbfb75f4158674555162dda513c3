{"version":3,"sources":["vs/platform/theme/common/colors/minimapColors.ts"],"names":[],"mappings":"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","file":"minimapColors.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\n\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n\n// Import the colors we need\nimport { editorInfoForeground, editorWarningForeground, editorWarningBorder, editorInfoBorder } from './editorColors.js';\nimport { scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground } from './miscColors.js';\n\n\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight',\n\t{ light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' },\n\tnls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\n\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight',\n\t{ light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' },\n\tnls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\n\nexport const minimapSelection = registerColor('minimap.selectionHighlight',\n\t{ light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' },\n\tnls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\n\nexport const minimapInfo = registerColor('minimap.infoHighlight',\n\t{ dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder },\n\tnls.localize('minimapInfo', 'Minimap marker color for infos.'));\n\nexport const minimapWarning = registerColor('minimap.warningHighlight',\n\t{ dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder },\n\tnls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\n\nexport const minimapError = registerColor('minimap.errorHighlight',\n\t{ dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' },\n\tnls.localize('minimapError', 'Minimap marker color for errors.'));\n\nexport const minimapBackground = registerColor('minimap.background',\n\tnull,\n\tnls.localize('minimapBackground', \"Minimap background color.\"));\n\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity',\n\tColor.fromHex('#000f'),\n\tnls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\n\nexport const minimapSliderBackground = registerColor('minimapSlider.background',\n\ttransparent(scrollbarSliderBackground, 0.5),\n\tnls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\n\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground',\n\ttransparent(scrollbarSliderHoverBackground, 0.5),\n\tnls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\n\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground',\n\ttransparent(scrollbarSliderActiveBackground, 0.5),\n\tnls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\n"]}