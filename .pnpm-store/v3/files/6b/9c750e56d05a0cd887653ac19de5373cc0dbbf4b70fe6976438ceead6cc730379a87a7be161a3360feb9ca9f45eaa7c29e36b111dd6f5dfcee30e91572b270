{"version":3,"sources":["vs/editor/contrib/codeAction/browser/codeActionContributions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,OAAO,EAAmC,oBAAoB,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,MAAM,sCAAsC,CAAC;AAChK,OAAO,EAAE,2BAA2B,EAAE,MAAM,qDAAqD,CAAC;AAClG,OAAO,EAAE,aAAa,EAAE,iBAAiB,EAAE,YAAY,EAAE,qBAAqB,EAAE,cAAc,EAAE,cAAc,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAC9J,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AACjE,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AACvD,OAAO,KAAK,GAAG,MAAM,oBAAoB,CAAC;AAC1C,OAAO,EAAsB,UAAU,EAA0B,MAAM,oEAAoE,CAAC;AAC5I,OAAO,EAAE,QAAQ,EAAE,MAAM,kDAAkD,CAAC;AAE5E,0BAA0B,CAAC,oBAAoB,CAAC,EAAE,EAAE,oBAAoB,qDAA6C,CAAC;AACtH,0BAA0B,CAAC,eAAe,CAAC,EAAE,EAAE,eAAe,+CAAuC,CAAC;AACtG,oBAAoB,CAAC,cAAc,CAAC,CAAC;AACrC,oBAAoB,CAAC,cAAc,CAAC,CAAC;AACrC,oBAAoB,CAAC,YAAY,CAAC,CAAC;AACnC,oBAAoB,CAAC,qBAAqB,CAAC,CAAC;AAC5C,oBAAoB,CAAC,aAAa,CAAC,CAAC;AACpC,oBAAoB,CAAC,YAAY,CAAC,CAAC;AACnC,qBAAqB,CAAC,IAAI,iBAAiB,EAAE,CAAC,CAAC;AAE/C,QAAQ,CAAC,EAAE,CAAyB,UAAU,CAAC,aAAa,CAAC,CAAC,qBAAqB,CAAC;IACnF,GAAG,2BAA2B;IAC9B,UAAU,EAAE;QACX,qCAAqC,EAAE;YACtC,IAAI,EAAE,SAAS;YACf,KAAK,iDAAyC;YAC9C,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAuB,EAAE,+DAA+D,CAAC;YACnH,OAAO,EAAE,IAAI;SACb;KACD;CACD,CAAC,CAAC;AAEH,QAAQ,CAAC,EAAE,CAAyB,UAAU,CAAC,aAAa,CAAC,CAAC,qBAAqB,CAAC;IACnF,GAAG,2BAA2B;IAC9B,UAAU,EAAE;QACX,iDAAiD,EAAE;YAClD,IAAI,EAAE,SAAS;YACf,KAAK,iDAAyC;YAC9C,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAyB,EAAE,4FAA4F,CAAC;YAClJ,OAAO,EAAE,IAAI;SACb;KACD;CACD,CAAC,CAAC;AAEH,QAAQ,CAAC,EAAE,CAAyB,UAAU,CAAC,aAAa,CAAC,CAAC,qBAAqB,CAAC;IACnF,GAAG,2BAA2B;IAC9B,UAAU,EAAE;QACX,yCAAyC,EAAE;YAC1C,IAAI,EAAE,SAAS;YACf,KAAK,iDAAyC;YAC9C,mBAAmB,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAsB,EAAE,6HAA6H,EAAE,8BAA8B,EAAE,oBAAoB,EAAE,cAAc,EAAE,UAAU,CAAC;YAC1Q,OAAO,EAAE,KAAK;SACd;KACD;CACD,CAAC,CAAC","file":"codeActionContributions.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorContributionInstantiation, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { editorConfigurationBaseNode } from '../../../common/config/editorConfigurationSchema.js';\nimport { AutoFixAction, CodeActionCommand, FixAllAction, OrganizeImportsAction, QuickFixAction, RefactorAction, SourceAction } from './codeActionCommands.js';\nimport { CodeActionController } from './codeActionController.js';\nimport { LightBulbWidget } from './lightBulbWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { ConfigurationScope, Extensions, IConfigurationRegistry } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\n\nregisterEditorContribution(CodeActionController.ID, CodeActionController, EditorContributionInstantiation.Eventually);\nregisterEditorContribution(LightBulbWidget.ID, LightBulbWidget, EditorContributionInstantiation.Lazy);\nregisterEditorAction(QuickFixAction);\nregisterEditorAction(RefactorAction);\nregisterEditorAction(SourceAction);\nregisterEditorAction(OrganizeImportsAction);\nregisterEditorAction(AutoFixAction);\nregisterEditorAction(FixAllAction);\nregisterEditorCommand(new CodeActionCommand());\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t...editorConfigurationBaseNode,\n\tproperties: {\n\t\t'editor.codeActionWidget.showHeaders': {\n\t\t\ttype: 'boolean',\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tdescription: nls.localize('showCodeActionHeaders', \"Enable/disable showing group headers in the Code Action menu.\"),\n\t\t\tdefault: true,\n\t\t},\n\t}\n});\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t...editorConfigurationBaseNode,\n\tproperties: {\n\t\t'editor.codeActionWidget.includeNearbyQuickFixes': {\n\t\t\ttype: 'boolean',\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tdescription: nls.localize('includeNearbyQuickFixes', \"Enable/disable showing nearest Quick Fix within a line when not currently on a diagnostic.\"),\n\t\t\tdefault: true,\n\t\t},\n\t}\n});\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t...editorConfigurationBaseNode,\n\tproperties: {\n\t\t'editor.codeActions.triggerOnFocusChange': {\n\t\t\ttype: 'boolean',\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: nls.localize('triggerOnFocusChange', 'Enable triggering {0} when {1} is set to {2}. Code Actions must be set to {3} to be triggered for window and focus changes.', '`#editor.codeActionsOnSave#`', '`#files.autoSave#`', '`afterDelay`', '`always`'),\n\t\t\tdefault: false,\n\t\t},\n\t}\n});\n"]}