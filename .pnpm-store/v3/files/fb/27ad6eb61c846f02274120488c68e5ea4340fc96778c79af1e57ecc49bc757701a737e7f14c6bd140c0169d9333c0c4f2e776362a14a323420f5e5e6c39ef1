{"version":3,"sources":["vs/editor/contrib/colorPicker/browser/colorPickerParts/colorPickerHeader.ts"],"names":[],"mappings":"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","file":"colorPickerHeader.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport '../colorPicker.css';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ColorPickerModel } from '../colorPickerModel.js';\nimport { localize } from '../../../../../nls.js';\nimport { editorHoverBackground } from '../../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { CloseButton } from './colorPickerCloseButton.js';\nimport { ColorPickerWidgetType } from '../colorPickerParticipantUtils.js';\n\nconst $ = dom.$;\n\nexport class ColorPickerHeader extends Disposable {\n\n\tprivate readonly _domNode: HTMLElement;\n\tprivate readonly _pickedColorNode: HTMLElement;\n\tprivate readonly _pickedColorPresentation: HTMLElement;\n\tprivate readonly _originalColorNode: HTMLElement;\n\tprivate readonly _closeButton: CloseButton | null = null;\n\tprivate backgroundColor: Color;\n\n\tconstructor(container: HTMLElement, private readonly model: ColorPickerModel, themeService: IThemeService, private type: ColorPickerWidgetType) {\n\t\tsuper();\n\n\t\tthis._domNode = $('.colorpicker-header');\n\t\tdom.append(container, this._domNode);\n\n\t\tthis._pickedColorNode = dom.append(this._domNode, $('.picked-color'));\n\t\tdom.append(this._pickedColorNode, $('span.codicon.codicon-color-mode'));\n\t\tthis._pickedColorPresentation = dom.append(this._pickedColorNode, document.createElement('span'));\n\t\tthis._pickedColorPresentation.classList.add('picked-color-presentation');\n\n\t\tconst tooltip = localize('clickToToggleColorOptions', \"Click to toggle color options (rgb/hsl/hex)\");\n\t\tthis._pickedColorNode.setAttribute('title', tooltip);\n\n\t\tthis._originalColorNode = dom.append(this._domNode, $('.original-color'));\n\t\tthis._originalColorNode.style.backgroundColor = Color.Format.CSS.format(this.model.originalColor) || '';\n\n\t\tthis.backgroundColor = themeService.getColorTheme().getColor(editorHoverBackground) || Color.white;\n\t\tthis._register(themeService.onDidColorThemeChange(theme => {\n\t\t\tthis.backgroundColor = theme.getColor(editorHoverBackground) || Color.white;\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(this._pickedColorNode, dom.EventType.CLICK, () => this.model.selectNextColorPresentation()));\n\t\tthis._register(dom.addDisposableListener(this._originalColorNode, dom.EventType.CLICK, () => {\n\t\t\tthis.model.color = this.model.originalColor;\n\t\t\tthis.model.flushColor();\n\t\t}));\n\t\tthis._register(model.onDidChangeColor(this.onDidChangeColor, this));\n\t\tthis._register(model.onDidChangePresentation(this.onDidChangePresentation, this));\n\t\tthis._pickedColorNode.style.backgroundColor = Color.Format.CSS.format(model.color) || '';\n\t\tthis._pickedColorNode.classList.toggle('light', model.color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : model.color.isLighter());\n\n\t\tthis.onDidChangeColor(this.model.color);\n\n\t\t// When the color picker widget is a standalone color picker widget, then add a close button\n\t\tif (this.type === ColorPickerWidgetType.Standalone) {\n\t\t\tthis._domNode.classList.add('standalone-colorpicker');\n\t\t\tthis._closeButton = this._register(new CloseButton(this._domNode));\n\t\t}\n\t}\n\n\tpublic get closeButton(): CloseButton | null {\n\t\treturn this._closeButton;\n\t}\n\n\tpublic get pickedColorNode(): HTMLElement {\n\t\treturn this._pickedColorNode;\n\t}\n\n\tpublic get originalColorNode(): HTMLElement {\n\t\treturn this._originalColorNode;\n\t}\n\n\tprivate onDidChangeColor(color: Color): void {\n\t\tthis._pickedColorNode.style.backgroundColor = Color.Format.CSS.format(color) || '';\n\t\tthis._pickedColorNode.classList.toggle('light', color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : color.isLighter());\n\t\tthis.onDidChangePresentation();\n\t}\n\n\tprivate onDidChangePresentation(): void {\n\t\tthis._pickedColorPresentation.textContent = this.model.presentation ? this.model.presentation.label : '';\n\t}\n}\n"]}