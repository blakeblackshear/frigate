{"version":3,"sources":["vs/editor/contrib/snippet/browser/snippetController2.ts"],"names":[],"mappings":"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","file":"snippetController2.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorCommand, EditorContributionInstantiation, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CompletionItem, CompletionItemKind, CompletionItemProvider } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Choice } from './snippetParser.js';\nimport { showSimpleSuggestions } from '../../suggest/browser/suggest.js';\nimport { OvertypingCapturer } from '../../suggest/browser/suggestOvertypingCapturer.js';\nimport { localize } from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKey, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { ISnippetEdit, SnippetSession } from './snippetSession.js';\nimport { TextModelEditSource } from '../../../common/textModelEditSource.js';\n\nexport interface ISnippetInsertOptions {\n\toverwriteBefore: number;\n\toverwriteAfter: number;\n\tadjustWhitespace: boolean;\n\tundoStopBefore: boolean;\n\tundoStopAfter: boolean;\n\tclipboardText: string | undefined;\n\tovertypingCapturer: OvertypingCapturer | undefined;\n\treason?: TextModelEditSource;\n}\n\nconst _defaultOptions: ISnippetInsertOptions = {\n\toverwriteBefore: 0,\n\toverwriteAfter: 0,\n\tundoStopBefore: true,\n\tundoStopAfter: true,\n\tadjustWhitespace: true,\n\tclipboardText: undefined,\n\tovertypingCapturer: undefined\n};\n\nexport class SnippetController2 implements IEditorContribution {\n\n\tpublic static readonly ID = 'snippetController2';\n\n\tstatic get(editor: ICodeEditor): SnippetController2 | null {\n\t\treturn editor.getContribution<SnippetController2>(SnippetController2.ID);\n\t}\n\n\tstatic readonly InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\n\tstatic readonly HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\n\tstatic readonly HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\n\n\tprivate readonly _inSnippet: IContextKey<boolean>;\n\tprivate readonly _hasNextTabstop: IContextKey<boolean>;\n\tprivate readonly _hasPrevTabstop: IContextKey<boolean>;\n\n\tprivate _session?: SnippetSession;\n\tprivate readonly _snippetListener = new DisposableStore();\n\tprivate _modelVersionId: number = -1;\n\tprivate _currentChoice?: Choice;\n\n\tprivate _choiceCompletions?: { provider: CompletionItemProvider; enable(): void; disable(): void };\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tthis._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\n\t\tthis._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\n\t\tthis._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\n\t}\n\n\tdispose(): void {\n\t\tthis._inSnippet.reset();\n\t\tthis._hasPrevTabstop.reset();\n\t\tthis._hasNextTabstop.reset();\n\t\tthis._session?.dispose();\n\t\tthis._snippetListener.dispose();\n\t}\n\n\tinsert(\n\t\ttemplate: string,\n\t\topts?: Partial<ISnippetInsertOptions>\n\t): void {\n\t\t// this is here to find out more about the yet-not-understood\n\t\t// error that sometimes happens when we fail to inserted a nested\n\t\t// snippet\n\t\ttry {\n\t\t\tthis._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : { ..._defaultOptions, ...opts });\n\n\t\t} catch (e) {\n\t\t\tthis.cancel();\n\t\t\tthis._logService.error(e);\n\t\t\tthis._logService.error('snippet_error');\n\t\t\tthis._logService.error('insert_template=', template);\n\t\t\tthis._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n\t\t}\n\t}\n\n\tprivate _doInsert(\n\t\ttemplate: string | ISnippetEdit[],\n\t\topts: ISnippetInsertOptions,\n\t): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// don't listen while inserting the snippet\n\t\t// as that is the inflight state causing cancelation\n\t\tthis._snippetListener.clear();\n\n\t\tif (opts.undoStopBefore) {\n\t\t\tthis._editor.getModel().pushStackElement();\n\t\t}\n\n\t\t// don't merge\n\t\tif (this._session && typeof template !== 'string') {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tif (!this._session) {\n\t\t\tthis._modelVersionId = this._editor.getModel().getAlternativeVersionId();\n\t\t\tthis._session = new SnippetSession(this._editor, template, opts, this._languageConfigurationService);\n\t\t\tthis._session.insert(opts.reason);\n\t\t} else {\n\t\t\tassertType(typeof template === 'string');\n\t\t\tthis._session.merge(template, opts);\n\t\t}\n\n\t\tif (opts.undoStopAfter) {\n\t\t\tthis._editor.getModel().pushStackElement();\n\t\t}\n\n\t\t// regster completion item provider when there is any choice element\n\t\tif (this._session?.hasChoice) {\n\t\t\tconst provider: CompletionItemProvider = {\n\t\t\t\t_debugDisplayName: 'snippetChoiceCompletions',\n\t\t\t\tprovideCompletionItems: (model: ITextModel, position: Position) => {\n\t\t\t\t\tif (!this._session || model !== this._editor.getModel() || !Position.equals(this._editor.getPosition(), position)) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tconst { activeChoice } = this._session;\n\t\t\t\t\tif (!activeChoice || activeChoice.choice.options.length === 0) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst word = model.getValueInRange(activeChoice.range);\n\t\t\t\t\tconst isAnyOfOptions = Boolean(activeChoice.choice.options.find(o => o.value === word));\n\t\t\t\t\tconst suggestions: CompletionItem[] = [];\n\t\t\t\t\tfor (let i = 0; i < activeChoice.choice.options.length; i++) {\n\t\t\t\t\t\tconst option = activeChoice.choice.options[i];\n\t\t\t\t\t\tsuggestions.push({\n\t\t\t\t\t\t\tkind: CompletionItemKind.Value,\n\t\t\t\t\t\t\tlabel: option.value,\n\t\t\t\t\t\t\tinsertText: option.value,\n\t\t\t\t\t\t\tsortText: 'a'.repeat(i + 1),\n\t\t\t\t\t\t\trange: activeChoice.range,\n\t\t\t\t\t\t\tfilterText: isAnyOfOptions ? `${word}_${option.value}` : undefined,\n\t\t\t\t\t\t\tcommand: { id: 'jumpToNextSnippetPlaceholder', title: localize('next', 'Go to next placeholder...') }\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn { suggestions };\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst model = this._editor.getModel();\n\n\t\t\tlet registration: IDisposable | undefined;\n\t\t\tlet isRegistered = false;\n\t\t\tconst disable = () => {\n\t\t\t\tregistration?.dispose();\n\t\t\t\tisRegistered = false;\n\t\t\t};\n\n\t\t\tconst enable = () => {\n\t\t\t\tif (!isRegistered) {\n\t\t\t\t\tregistration = this._languageFeaturesService.completionProvider.register({\n\t\t\t\t\t\tlanguage: model.getLanguageId(),\n\t\t\t\t\t\tpattern: model.uri.fsPath,\n\t\t\t\t\t\tscheme: model.uri.scheme,\n\t\t\t\t\t\texclusive: true\n\t\t\t\t\t}, provider);\n\t\t\t\t\tthis._snippetListener.add(registration);\n\t\t\t\t\tisRegistered = true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._choiceCompletions = { provider, enable, disable };\n\t\t}\n\n\t\tthis._updateState();\n\n\t\tthis._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\n\t\tthis._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\n\t\tthis._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\n\t}\n\n\tprivate _updateState(): void {\n\t\tif (!this._session || !this._editor.hasModel()) {\n\t\t\t// canceled in the meanwhile\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\n\t\t\t// undo until the 'before' state happened\n\t\t\t// and makes use cancel snippet mode\n\t\t\treturn this.cancel();\n\t\t}\n\n\t\tif (!this._session.hasPlaceholder) {\n\t\t\t// don't listen for selection changes and don't\n\t\t\t// update context keys when the snippet is plain text\n\t\t\treturn this.cancel();\n\t\t}\n\n\t\tif (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\n\t\t\tthis._editor.getModel().pushStackElement();\n\t\t\treturn this.cancel();\n\t\t}\n\n\t\tthis._inSnippet.set(true);\n\t\tthis._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\n\t\tthis._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\n\n\t\tthis._handleChoice();\n\t}\n\n\tprivate _handleChoice(): void {\n\t\tif (!this._session || !this._editor.hasModel()) {\n\t\t\tthis._currentChoice = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tconst { activeChoice } = this._session;\n\t\tif (!activeChoice || !this._choiceCompletions) {\n\t\t\tthis._choiceCompletions?.disable();\n\t\t\tthis._currentChoice = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentChoice !== activeChoice.choice) {\n\t\t\tthis._currentChoice = activeChoice.choice;\n\n\t\t\tthis._choiceCompletions.enable();\n\n\t\t\t// trigger suggest with the special choice completion provider\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tshowSimpleSuggestions(this._editor, this._choiceCompletions!.provider);\n\t\t\t});\n\t\t}\n\t}\n\n\tfinish(): void {\n\t\twhile (this._inSnippet.get()) {\n\t\t\tthis.next();\n\t\t}\n\t}\n\n\tcancel(resetSelection: boolean = false): void {\n\t\tthis._inSnippet.reset();\n\t\tthis._hasPrevTabstop.reset();\n\t\tthis._hasNextTabstop.reset();\n\t\tthis._snippetListener.clear();\n\n\t\tthis._currentChoice = undefined;\n\n\t\tthis._session?.dispose();\n\t\tthis._session = undefined;\n\t\tthis._modelVersionId = -1;\n\t\tif (resetSelection) {\n\t\t\t// reset selection to the primary cursor when being asked\n\t\t\t// for. this happens when explicitly cancelling snippet mode,\n\t\t\t// e.g. when pressing ESC\n\t\t\tthis._editor.setSelections([this._editor.getSelection()!]);\n\t\t}\n\t}\n\n\tprev(): void {\n\t\tthis._session?.prev();\n\t\tthis._updateState();\n\t}\n\n\tnext(): void {\n\t\tthis._session?.next();\n\t\tthis._updateState();\n\t}\n\n\tisInSnippet(): boolean {\n\t\treturn Boolean(this._inSnippet.get());\n\t}\n}\n\n\nregisterEditorContribution(SnippetController2.ID, SnippetController2, EditorContributionInstantiation.Lazy);\n\nconst CommandCtor = EditorCommand.bindToContribution<SnippetController2>(SnippetController2.get);\n\nregisterEditorCommand(new CommandCtor({\n\tid: 'jumpToNextSnippetPlaceholder',\n\tprecondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\n\thandler: ctrl => ctrl.next(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 30,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.Tab\n\t}\n}));\nregisterEditorCommand(new CommandCtor({\n\tid: 'jumpToPrevSnippetPlaceholder',\n\tprecondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\n\thandler: ctrl => ctrl.prev(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 30,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyMod.Shift | KeyCode.Tab\n\t}\n}));\nregisterEditorCommand(new CommandCtor({\n\tid: 'leaveSnippet',\n\tprecondition: SnippetController2.InSnippetMode,\n\thandler: ctrl => ctrl.cancel(true),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 30,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.Escape,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Escape]\n\t}\n}));\n\nregisterEditorCommand(new CommandCtor({\n\tid: 'acceptSnippet',\n\tprecondition: SnippetController2.InSnippetMode,\n\thandler: ctrl => ctrl.finish(),\n\t// kbOpts: {\n\t// \tweight: KeybindingWeight.EditorContrib + 30,\n\t// \tkbExpr: EditorContextKeys.textFocus,\n\t// \tprimary: KeyCode.Enter,\n\t// }\n}));\n"]}