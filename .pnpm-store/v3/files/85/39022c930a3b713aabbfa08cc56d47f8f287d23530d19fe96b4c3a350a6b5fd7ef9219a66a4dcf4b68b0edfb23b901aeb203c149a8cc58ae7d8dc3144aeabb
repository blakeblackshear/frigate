{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/colorPicker/browser/defaultDocumentColorProvider.ts","vs/editor/contrib/colorPicker/browser/defaultDocumentColorProvider.ts"],"names":[],"mappings":"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","file":"defaultDocumentColorProvider.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { DocumentColorProvider, IColor, IColorInformation, IColorPresentation } from '../../../common/languages.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\n\nexport class DefaultDocumentColorProvider implements DocumentColorProvider {\n\n\tconstructor(\n\t\t@IEditorWorkerService private readonly _editorWorkerService: IEditorWorkerService,\n\t) { }\n\n\tasync provideDocumentColors(model: ITextModel, _token: CancellationToken): Promise<IColorInformation[] | null> {\n\t\treturn this._editorWorkerService.computeDefaultDocumentColors(model.uri);\n\t}\n\n\tprovideColorPresentations(_model: ITextModel, colorInfo: IColorInformation, _token: CancellationToken): IColorPresentation[] {\n\t\tconst range = colorInfo.range;\n\t\tconst colorFromInfo: IColor = colorInfo.color;\n\t\tconst alpha = colorFromInfo.alpha;\n\t\tconst color = new Color(new RGBA(Math.round(255 * colorFromInfo.red), Math.round(255 * colorFromInfo.green), Math.round(255 * colorFromInfo.blue), alpha));\n\n\t\tconst rgb = alpha ? Color.Format.CSS.formatRGBA(color) : Color.Format.CSS.formatRGB(color);\n\t\tconst hsl = alpha ? Color.Format.CSS.formatHSLA(color) : Color.Format.CSS.formatHSL(color);\n\t\tconst hex = alpha ? Color.Format.CSS.formatHexA(color) : Color.Format.CSS.formatHex(color);\n\n\t\tconst colorPresentations: IColorPresentation[] = [];\n\t\tcolorPresentations.push({ label: rgb, textEdit: { range: range, text: rgb } });\n\t\tcolorPresentations.push({ label: hsl, textEdit: { range: range, text: hsl } });\n\t\tcolorPresentations.push({ label: hex, textEdit: { range: range, text: hex } });\n\t\treturn colorPresentations;\n\t}\n}\n\nexport class DefaultDocumentColorProviderFeature extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IEditorWorkerService editorWorkerService: IEditorWorkerService,\n\t) {\n\t\tsuper();\n\t\tthis._register(_languageFeaturesService.colorProvider.register('*', new DefaultDocumentColorProvider(editorWorkerService)));\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { DocumentColorProvider, IColor, IColorInformation, IColorPresentation } from '../../../common/languages.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\n\nexport class DefaultDocumentColorProvider implements DocumentColorProvider {\n\n\tconstructor(\n\t\t@IEditorWorkerService private readonly _editorWorkerService: IEditorWorkerService,\n\t) { }\n\n\tasync provideDocumentColors(model: ITextModel, _token: CancellationToken): Promise<IColorInformation[] | null> {\n\t\treturn this._editorWorkerService.computeDefaultDocumentColors(model.uri);\n\t}\n\n\tprovideColorPresentations(_model: ITextModel, colorInfo: IColorInformation, _token: CancellationToken): IColorPresentation[] {\n\t\tconst range = colorInfo.range;\n\t\tconst colorFromInfo: IColor = colorInfo.color;\n\t\tconst alpha = colorFromInfo.alpha;\n\t\tconst color = new Color(new RGBA(Math.round(255 * colorFromInfo.red), Math.round(255 * colorFromInfo.green), Math.round(255 * colorFromInfo.blue), alpha));\n\n\t\tconst rgb = alpha ? Color.Format.CSS.formatRGBA(color) : Color.Format.CSS.formatRGB(color);\n\t\tconst hsl = alpha ? Color.Format.CSS.formatHSLA(color) : Color.Format.CSS.formatHSL(color);\n\t\tconst hex = alpha ? Color.Format.CSS.formatHexA(color) : Color.Format.CSS.formatHex(color);\n\n\t\tconst colorPresentations: IColorPresentation[] = [];\n\t\tcolorPresentations.push({ label: rgb, textEdit: { range: range, text: rgb } });\n\t\tcolorPresentations.push({ label: hsl, textEdit: { range: range, text: hsl } });\n\t\tcolorPresentations.push({ label: hex, textEdit: { range: range, text: hex } });\n\t\treturn colorPresentations;\n\t}\n}\n\nexport class DefaultDocumentColorProviderFeature extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IEditorWorkerService editorWorkerService: IEditorWorkerService,\n\t) {\n\t\tsuper();\n\t\tthis._register(_languageFeaturesService.colorProvider.register('*', new DefaultDocumentColorProvider(editorWorkerService)));\n\t}\n}\n\n"]}