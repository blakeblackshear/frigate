{"version":3,"sources":["vs/editor/contrib/wordHighlighter/browser/highlightDecorations.ts"],"names":[],"mappings":"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","file":"highlightDecorations.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './highlightDecorations.css';\nimport { MinimapPosition, OverviewRulerLane, TrackedRangeStickiness } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DocumentHighlightKind } from '../../../common/languages.js';\nimport * as nls from '../../../../nls.js';\nimport { activeContrastBorder, editorSelectionHighlight, minimapSelectionOccurrenceHighlight, overviewRulerSelectionHighlightForeground, registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n\nconst wordHighlightBackground = registerColor('editor.wordHighlightBackground', { dark: '#575757B8', light: '#57575740', hcDark: null, hcLight: null }, nls.localize('wordHighlight', 'Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\nregisterColor('editor.wordHighlightStrongBackground', { dark: '#004972B8', light: '#0e639c40', hcDark: null, hcLight: null }, nls.localize('wordHighlightStrong', 'Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\nregisterColor('editor.wordHighlightTextBackground', wordHighlightBackground, nls.localize('wordHighlightText', 'Background color of a textual occurrence for a symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nconst wordHighlightBorder = registerColor('editor.wordHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('wordHighlightBorder', 'Border color of a symbol during read-access, like reading a variable.'));\nregisterColor('editor.wordHighlightStrongBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('wordHighlightStrongBorder', 'Border color of a symbol during write-access, like writing to a variable.'));\nregisterColor('editor.wordHighlightTextBorder', wordHighlightBorder, nls.localize('wordHighlightTextBorder', \"Border color of a textual occurrence for a symbol.\"));\nconst overviewRulerWordHighlightForeground = registerColor('editorOverviewRuler.wordHighlightForeground', '#A0A0A0CC', nls.localize('overviewRulerWordHighlightForeground', 'Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nconst overviewRulerWordHighlightStrongForeground = registerColor('editorOverviewRuler.wordHighlightStrongForeground', '#C0A0C0CC', nls.localize('overviewRulerWordHighlightStrongForeground', 'Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nconst overviewRulerWordHighlightTextForeground = registerColor('editorOverviewRuler.wordHighlightTextForeground', overviewRulerSelectionHighlightForeground, nls.localize('overviewRulerWordHighlightTextForeground', 'Overview ruler marker color of a textual occurrence for a symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nconst _WRITE_OPTIONS = ModelDecorationOptions.register({\n\tdescription: 'word-highlight-strong',\n\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\tclassName: 'wordHighlightStrong',\n\toverviewRuler: {\n\t\tcolor: themeColorFromId(overviewRulerWordHighlightStrongForeground),\n\t\tposition: OverviewRulerLane.Center\n\t},\n\tminimap: {\n\t\tcolor: themeColorFromId(minimapSelectionOccurrenceHighlight),\n\t\tposition: MinimapPosition.Inline\n\t},\n});\n\nconst _TEXT_OPTIONS = ModelDecorationOptions.register({\n\tdescription: 'word-highlight-text',\n\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\tclassName: 'wordHighlightText',\n\toverviewRuler: {\n\t\tcolor: themeColorFromId(overviewRulerWordHighlightTextForeground),\n\t\tposition: OverviewRulerLane.Center\n\t},\n\tminimap: {\n\t\tcolor: themeColorFromId(minimapSelectionOccurrenceHighlight),\n\t\tposition: MinimapPosition.Inline\n\t},\n});\n\nconst _SELECTION_HIGHLIGHT_OPTIONS = ModelDecorationOptions.register({\n\tdescription: 'selection-highlight-overview',\n\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\tclassName: 'selectionHighlight',\n\toverviewRuler: {\n\t\tcolor: themeColorFromId(overviewRulerSelectionHighlightForeground),\n\t\tposition: OverviewRulerLane.Center\n\t},\n\tminimap: {\n\t\tcolor: themeColorFromId(minimapSelectionOccurrenceHighlight),\n\t\tposition: MinimapPosition.Inline\n\t},\n});\n\nconst _SELECTION_HIGHLIGHT_OPTIONS_NO_OVERVIEW = ModelDecorationOptions.register({\n\tdescription: 'selection-highlight',\n\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\tclassName: 'selectionHighlight',\n});\n\nconst _REGULAR_OPTIONS = ModelDecorationOptions.register({\n\tdescription: 'word-highlight',\n\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\tclassName: 'wordHighlight',\n\toverviewRuler: {\n\t\tcolor: themeColorFromId(overviewRulerWordHighlightForeground),\n\t\tposition: OverviewRulerLane.Center\n\t},\n\tminimap: {\n\t\tcolor: themeColorFromId(minimapSelectionOccurrenceHighlight),\n\t\tposition: MinimapPosition.Inline\n\t},\n});\n\nexport function getHighlightDecorationOptions(kind: DocumentHighlightKind | undefined): ModelDecorationOptions {\n\tif (kind === DocumentHighlightKind.Write) {\n\t\treturn _WRITE_OPTIONS;\n\t} else if (kind === DocumentHighlightKind.Text) {\n\t\treturn _TEXT_OPTIONS;\n\t} else {\n\t\treturn _REGULAR_OPTIONS;\n\t}\n}\n\nexport function getSelectionHighlightDecorationOptions(hasSemanticHighlights: boolean): ModelDecorationOptions {\n\t// Show in overviewRuler only if model has no semantic highlighting\n\treturn (hasSemanticHighlights ? _SELECTION_HIGHLIGHT_OPTIONS_NO_OVERVIEW : _SELECTION_HIGHLIGHT_OPTIONS);\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst selectionHighlight = theme.getColor(editorSelectionHighlight);\n\tif (selectionHighlight) {\n\t\tcollector.addRule(`.monaco-editor .selectionHighlight { background-color: ${selectionHighlight.transparent(0.5)}; }`);\n\t}\n});\n"]}