{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/colorPicker/browser/hoverColorPicker/hoverColorPickerParticipant.ts","vs/editor/contrib/colorPicker/browser/hoverColorPicker/hoverColorPickerParticipant.ts"],"names":[],"mappings":"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","file":"hoverColorPickerParticipant.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AsyncIterableProducer } from '../../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { IModelDecoration } from '../../../../common/model.js';\nimport { DocumentColorProvider } from '../../../../common/languages.js';\nimport { ColorDetector } from '../colorDetector.js';\nimport { ColorPickerModel } from '../colorPickerModel.js';\nimport { ColorPickerWidget } from '../colorPickerWidget.js';\nimport { HoverAnchor, HoverAnchorType, IEditorHoverParticipant, IEditorHoverRenderContext, IHoverPart, IRenderedHoverPart, IRenderedHoverParts, RenderedHoverParts } from '../../../hover/browser/hoverTypes.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { BaseColor, ColorPickerWidgetType, createColorHover, updateColorPresentations, updateEditorModel } from '../colorPickerParticipantUtils.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Dimension } from '../../../../../base/browser/dom.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { HoverStartSource } from '../../../hover/browser/hoverOperation.js';\n\nexport class ColorHover implements IHoverPart, BaseColor {\n\n\t/**\n\t * Force the hover to always be rendered at this specific range,\n\t * even in the case of multiple hover parts.\n\t */\n\tpublic readonly forceShowAtRange: boolean = true;\n\n\tconstructor(\n\t\tpublic readonly owner: IEditorHoverParticipant<ColorHover>,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly model: ColorPickerModel,\n\t\tpublic readonly provider: DocumentColorProvider\n\t) { }\n\n\tpublic isValidForHoverAnchor(anchor: HoverAnchor): boolean {\n\t\treturn (\n\t\t\tanchor.type === HoverAnchorType.Range\n\t\t\t&& this.range.startColumn <= anchor.range.startColumn\n\t\t\t&& this.range.endColumn >= anchor.range.endColumn\n\t\t);\n\t}\n\n\tpublic static fromBaseColor(owner: IEditorHoverParticipant<ColorHover>, color: BaseColor): ColorHover {\n\t\treturn new ColorHover(owner, color.range, color.model, color.provider);\n\t}\n}\n\nexport class HoverColorPickerParticipant implements IEditorHoverParticipant<ColorHover> {\n\n\tpublic readonly hoverOrdinal: number = 2;\n\n\tprivate _colorPicker: ColorPickerWidget | undefined;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) { }\n\n\tpublic computeSync(_anchor: HoverAnchor, _lineDecorations: IModelDecoration[], source: HoverStartSource): ColorHover[] {\n\t\treturn [];\n\t}\n\n\tpublic computeAsync(anchor: HoverAnchor, lineDecorations: IModelDecoration[], source: HoverStartSource, token: CancellationToken): AsyncIterableProducer<ColorHover> {\n\t\treturn AsyncIterableProducer.fromPromise(this._computeAsync(anchor, lineDecorations, source));\n\t}\n\n\tprivate async _computeAsync(_anchor: HoverAnchor, lineDecorations: IModelDecoration[], source: HoverStartSource): Promise<ColorHover[]> {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn [];\n\t\t}\n\t\tif (!this._isValidRequest(source)) {\n\t\t\treturn [];\n\t\t}\n\t\tconst colorDetector = ColorDetector.get(this._editor);\n\t\tif (!colorDetector) {\n\t\t\treturn [];\n\t\t}\n\t\tfor (const d of lineDecorations) {\n\t\t\tif (!colorDetector.isColorDecoration(d)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst colorData = colorDetector.getColorData(d.range.getStartPosition());\n\t\t\tif (colorData) {\n\t\t\t\tconst colorHover = ColorHover.fromBaseColor(this, await createColorHover(this._editor.getModel(), colorData.colorInfo, colorData.provider));\n\t\t\t\treturn [colorHover];\n\t\t\t}\n\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate _isValidRequest(source: HoverStartSource): boolean {\n\t\tconst decoratorActivatedOn = this._editor.getOption(EditorOption.colorDecoratorsActivatedOn);\n\t\tswitch (source) {\n\t\t\tcase HoverStartSource.Mouse:\n\t\t\t\treturn decoratorActivatedOn === 'hover' || decoratorActivatedOn === 'clickAndHover';\n\t\t\tcase HoverStartSource.Click:\n\t\t\t\treturn decoratorActivatedOn === 'click' || decoratorActivatedOn === 'clickAndHover';\n\t\t\tcase HoverStartSource.Keyboard:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic renderHoverParts(context: IEditorHoverRenderContext, hoverParts: ColorHover[]): IRenderedHoverParts<ColorHover> {\n\t\tconst editor = this._editor;\n\t\tif (hoverParts.length === 0 || !editor.hasModel()) {\n\t\t\treturn new RenderedHoverParts([]);\n\t\t}\n\t\tconst minimumHeight = editor.getOption(EditorOption.lineHeight) + 8;\n\t\tcontext.setMinimumDimensions(new Dimension(302, minimumHeight));\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst colorHover = hoverParts[0];\n\t\tconst editorModel = editor.getModel();\n\t\tconst model = colorHover.model;\n\t\tthis._colorPicker = disposables.add(new ColorPickerWidget(context.fragment, model, editor.getOption(EditorOption.pixelRatio), this._themeService, ColorPickerWidgetType.Hover));\n\n\t\tlet editorUpdatedByColorPicker = false;\n\t\tlet range = new Range(colorHover.range.startLineNumber, colorHover.range.startColumn, colorHover.range.endLineNumber, colorHover.range.endColumn);\n\n\t\tdisposables.add(model.onColorFlushed(async (color: Color) => {\n\t\t\tawait updateColorPresentations(editorModel, model, color, range, colorHover);\n\t\t\teditorUpdatedByColorPicker = true;\n\t\t\trange = updateEditorModel(editor, range, model);\n\t\t}));\n\t\tdisposables.add(model.onDidChangeColor((color: Color) => {\n\t\t\tupdateColorPresentations(editorModel, model, color, range, colorHover);\n\t\t}));\n\t\tdisposables.add(editor.onDidChangeModelContent((e) => {\n\t\t\tif (editorUpdatedByColorPicker) {\n\t\t\t\teditorUpdatedByColorPicker = false;\n\t\t\t} else {\n\t\t\t\tcontext.hide();\n\t\t\t\teditor.focus();\n\t\t\t}\n\t\t}));\n\t\tconst renderedHoverPart: IRenderedHoverPart<ColorHover> = {\n\t\t\thoverPart: ColorHover.fromBaseColor(this, colorHover),\n\t\t\thoverElement: this._colorPicker.domNode,\n\t\t\tdispose() { disposables.dispose(); }\n\t\t};\n\t\treturn new RenderedHoverParts([renderedHoverPart]);\n\t}\n\n\tpublic handleResize(): void {\n\t\tthis._colorPicker?.layout();\n\t}\n\n\tpublic handleContentsChanged(): void {\n\t\tthis._colorPicker?.layout();\n\t}\n\n\tpublic handleHide(): void {\n\t\tthis._colorPicker?.dispose();\n\t\tthis._colorPicker = undefined;\n\t}\n\n\tpublic isColorPickerVisible(): boolean {\n\t\treturn !!this._colorPicker;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AsyncIterableProducer } from '../../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { IModelDecoration } from '../../../../common/model.js';\nimport { DocumentColorProvider } from '../../../../common/languages.js';\nimport { ColorDetector } from '../colorDetector.js';\nimport { ColorPickerModel } from '../colorPickerModel.js';\nimport { ColorPickerWidget } from '../colorPickerWidget.js';\nimport { HoverAnchor, HoverAnchorType, IEditorHoverParticipant, IEditorHoverRenderContext, IHoverPart, IRenderedHoverPart, IRenderedHoverParts, RenderedHoverParts } from '../../../hover/browser/hoverTypes.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { BaseColor, ColorPickerWidgetType, createColorHover, updateColorPresentations, updateEditorModel } from '../colorPickerParticipantUtils.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Dimension } from '../../../../../base/browser/dom.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { HoverStartSource } from '../../../hover/browser/hoverOperation.js';\n\nexport class ColorHover implements IHoverPart, BaseColor {\n\n\t/**\n\t * Force the hover to always be rendered at this specific range,\n\t * even in the case of multiple hover parts.\n\t */\n\tpublic readonly forceShowAtRange: boolean = true;\n\n\tconstructor(\n\t\tpublic readonly owner: IEditorHoverParticipant<ColorHover>,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly model: ColorPickerModel,\n\t\tpublic readonly provider: DocumentColorProvider\n\t) { }\n\n\tpublic isValidForHoverAnchor(anchor: HoverAnchor): boolean {\n\t\treturn (\n\t\t\tanchor.type === HoverAnchorType.Range\n\t\t\t&& this.range.startColumn <= anchor.range.startColumn\n\t\t\t&& this.range.endColumn >= anchor.range.endColumn\n\t\t);\n\t}\n\n\tpublic static fromBaseColor(owner: IEditorHoverParticipant<ColorHover>, color: BaseColor): ColorHover {\n\t\treturn new ColorHover(owner, color.range, color.model, color.provider);\n\t}\n}\n\nexport class HoverColorPickerParticipant implements IEditorHoverParticipant<ColorHover> {\n\n\tpublic readonly hoverOrdinal: number = 2;\n\n\tprivate _colorPicker: ColorPickerWidget | undefined;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) { }\n\n\tpublic computeSync(_anchor: HoverAnchor, _lineDecorations: IModelDecoration[], source: HoverStartSource): ColorHover[] {\n\t\treturn [];\n\t}\n\n\tpublic computeAsync(anchor: HoverAnchor, lineDecorations: IModelDecoration[], source: HoverStartSource, token: CancellationToken): AsyncIterableProducer<ColorHover> {\n\t\treturn AsyncIterableProducer.fromPromise(this._computeAsync(anchor, lineDecorations, source));\n\t}\n\n\tprivate async _computeAsync(_anchor: HoverAnchor, lineDecorations: IModelDecoration[], source: HoverStartSource): Promise<ColorHover[]> {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn [];\n\t\t}\n\t\tif (!this._isValidRequest(source)) {\n\t\t\treturn [];\n\t\t}\n\t\tconst colorDetector = ColorDetector.get(this._editor);\n\t\tif (!colorDetector) {\n\t\t\treturn [];\n\t\t}\n\t\tfor (const d of lineDecorations) {\n\t\t\tif (!colorDetector.isColorDecoration(d)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst colorData = colorDetector.getColorData(d.range.getStartPosition());\n\t\t\tif (colorData) {\n\t\t\t\tconst colorHover = ColorHover.fromBaseColor(this, await createColorHover(this._editor.getModel(), colorData.colorInfo, colorData.provider));\n\t\t\t\treturn [colorHover];\n\t\t\t}\n\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate _isValidRequest(source: HoverStartSource): boolean {\n\t\tconst decoratorActivatedOn = this._editor.getOption(EditorOption.colorDecoratorsActivatedOn);\n\t\tswitch (source) {\n\t\t\tcase HoverStartSource.Mouse:\n\t\t\t\treturn decoratorActivatedOn === 'hover' || decoratorActivatedOn === 'clickAndHover';\n\t\t\tcase HoverStartSource.Click:\n\t\t\t\treturn decoratorActivatedOn === 'click' || decoratorActivatedOn === 'clickAndHover';\n\t\t\tcase HoverStartSource.Keyboard:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic renderHoverParts(context: IEditorHoverRenderContext, hoverParts: ColorHover[]): IRenderedHoverParts<ColorHover> {\n\t\tconst editor = this._editor;\n\t\tif (hoverParts.length === 0 || !editor.hasModel()) {\n\t\t\treturn new RenderedHoverParts([]);\n\t\t}\n\t\tconst minimumHeight = editor.getOption(EditorOption.lineHeight) + 8;\n\t\tcontext.setMinimumDimensions(new Dimension(302, minimumHeight));\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst colorHover = hoverParts[0];\n\t\tconst editorModel = editor.getModel();\n\t\tconst model = colorHover.model;\n\t\tthis._colorPicker = disposables.add(new ColorPickerWidget(context.fragment, model, editor.getOption(EditorOption.pixelRatio), this._themeService, ColorPickerWidgetType.Hover));\n\n\t\tlet editorUpdatedByColorPicker = false;\n\t\tlet range = new Range(colorHover.range.startLineNumber, colorHover.range.startColumn, colorHover.range.endLineNumber, colorHover.range.endColumn);\n\n\t\tdisposables.add(model.onColorFlushed(async (color: Color) => {\n\t\t\tawait updateColorPresentations(editorModel, model, color, range, colorHover);\n\t\t\teditorUpdatedByColorPicker = true;\n\t\t\trange = updateEditorModel(editor, range, model);\n\t\t}));\n\t\tdisposables.add(model.onDidChangeColor((color: Color) => {\n\t\t\tupdateColorPresentations(editorModel, model, color, range, colorHover);\n\t\t}));\n\t\tdisposables.add(editor.onDidChangeModelContent((e) => {\n\t\t\tif (editorUpdatedByColorPicker) {\n\t\t\t\teditorUpdatedByColorPicker = false;\n\t\t\t} else {\n\t\t\t\tcontext.hide();\n\t\t\t\teditor.focus();\n\t\t\t}\n\t\t}));\n\t\tconst renderedHoverPart: IRenderedHoverPart<ColorHover> = {\n\t\t\thoverPart: ColorHover.fromBaseColor(this, colorHover),\n\t\t\thoverElement: this._colorPicker.domNode,\n\t\t\tdispose() { disposables.dispose(); }\n\t\t};\n\t\treturn new RenderedHoverParts([renderedHoverPart]);\n\t}\n\n\tpublic handleResize(): void {\n\t\tthis._colorPicker?.layout();\n\t}\n\n\tpublic handleContentsChanged(): void {\n\t\tthis._colorPicker?.layout();\n\t}\n\n\tpublic handleHide(): void {\n\t\tthis._colorPicker?.dispose();\n\t\tthis._colorPicker = undefined;\n\t}\n\n\tpublic isColorPickerVisible(): boolean {\n\t\treturn !!this._colorPicker;\n\t}\n}\n"]}