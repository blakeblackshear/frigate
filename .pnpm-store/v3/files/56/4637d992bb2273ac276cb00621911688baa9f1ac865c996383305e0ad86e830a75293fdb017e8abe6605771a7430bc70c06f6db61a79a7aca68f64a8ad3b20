{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/hover/browser/contentHoverTypes.ts","vs/editor/contrib/hover/browser/contentHoverTypes.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAKhG,MAAM,OAAO,kBAAkB;IAE9B,YACiB,UAAwB,EACxB,UAAmB,EACnB,OAAoC;QAFpC,eAAU,GAAV,UAAU,CAAc;QACxB,eAAU,GAAV,UAAU,CAAS;QACnB,YAAO,GAAP,OAAO,CAA6B;IACjD,CAAC;IAEE,MAAM,CAAC,MAAmB;QAChC,MAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1F,IAAI,kBAAkB,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAC1D,OAAO,IAAI,CAAC;QACb,CAAC;QACD,OAAO,IAAI,0BAA0B,CAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAChG,CAAC;CACD;AAED,MAAM,OAAO,0BAA2B,SAAQ,kBAAkB;IAEjE,YACkB,QAA4B,EAC7C,QAAsB,EACtB,UAAmB,EACnB,OAAoC;QAEpC,KAAK,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QALpB,aAAQ,GAAR,QAAQ,CAAoB;IAM9C,CAAC;IAEe,MAAM,CAAC,MAAmB;QACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;CACD","file":"contentHoverTypes.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ContentHoverComputerOptions } from './contentHoverComputer.js';\nimport { HoverAnchor, IHoverPart } from './hoverTypes.js';\n\nexport class ContentHoverResult {\n\n\tconstructor(\n\t\tpublic readonly hoverParts: IHoverPart[],\n\t\tpublic readonly isComplete: boolean,\n\t\tpublic readonly options: ContentHoverComputerOptions\n\t) { }\n\n\tpublic filter(anchor: HoverAnchor): ContentHoverResult {\n\t\tconst filteredHoverParts = this.hoverParts.filter((m) => m.isValidForHoverAnchor(anchor));\n\t\tif (filteredHoverParts.length === this.hoverParts.length) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new FilteredContentHoverResult(this, filteredHoverParts, this.isComplete, this.options);\n\t}\n}\n\nexport class FilteredContentHoverResult extends ContentHoverResult {\n\n\tconstructor(\n\t\tprivate readonly original: ContentHoverResult,\n\t\tmessages: IHoverPart[],\n\t\tisComplete: boolean,\n\t\toptions: ContentHoverComputerOptions\n\t) {\n\t\tsuper(messages, isComplete, options);\n\t}\n\n\tpublic override filter(anchor: HoverAnchor): ContentHoverResult {\n\t\treturn this.original.filter(anchor);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ContentHoverComputerOptions } from './contentHoverComputer.js';\nimport { HoverAnchor, IHoverPart } from './hoverTypes.js';\n\nexport class ContentHoverResult {\n\n\tconstructor(\n\t\tpublic readonly hoverParts: IHoverPart[],\n\t\tpublic readonly isComplete: boolean,\n\t\tpublic readonly options: ContentHoverComputerOptions\n\t) { }\n\n\tpublic filter(anchor: HoverAnchor): ContentHoverResult {\n\t\tconst filteredHoverParts = this.hoverParts.filter((m) => m.isValidForHoverAnchor(anchor));\n\t\tif (filteredHoverParts.length === this.hoverParts.length) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new FilteredContentHoverResult(this, filteredHoverParts, this.isComplete, this.options);\n\t}\n}\n\nexport class FilteredContentHoverResult extends ContentHoverResult {\n\n\tconstructor(\n\t\tprivate readonly original: ContentHoverResult,\n\t\tmessages: IHoverPart[],\n\t\tisComplete: boolean,\n\t\toptions: ContentHoverComputerOptions\n\t) {\n\t\tsuper(messages, isComplete, options);\n\t}\n\n\tpublic override filter(anchor: HoverAnchor): ContentHoverResult {\n\t\treturn this.original.filter(anchor);\n\t}\n}\n"]}