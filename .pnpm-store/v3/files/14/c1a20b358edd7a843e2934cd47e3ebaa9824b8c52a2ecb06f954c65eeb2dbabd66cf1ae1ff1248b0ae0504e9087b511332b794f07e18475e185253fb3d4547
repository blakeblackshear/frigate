{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/inlineEdit.ts","vs/editor/contrib/inlineCompletions/browser/model/inlineEdit.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAMhG,MAAM,OAAO,UAAU;IACtB,YACiB,IAAqB,EACrB,QAA4C,EAC5C,gBAAsC;QAFtC,SAAI,GAAJ,IAAI,CAAiB;QACrB,aAAQ,GAAR,QAAQ,CAAoC;QAC5C,qBAAgB,GAAhB,gBAAgB,CAAsB;IACnD,CAAC;IAEE,MAAM,CAAC,KAAiB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;eAC/B,IAAI,CAAC,gBAAgB,KAAK,KAAK,CAAC,gBAAgB,CAAC;IACtD,CAAC;CACD","file":"inlineEdit.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { InlineCompletionCommand } from '../../../../common/languages.js';\nimport { InlineSuggestionItem } from './inlineSuggestionItem.js';\n\nexport class InlineEdit {\n\tconstructor(\n\t\tpublic readonly edit: TextReplacement,\n\t\tpublic readonly commands: readonly InlineCompletionCommand[],\n\t\tpublic readonly inlineCompletion: InlineSuggestionItem,\n\t) { }\n\n\tpublic equals(other: InlineEdit): boolean {\n\t\treturn this.edit.equals(other.edit)\n\t\t\t&& this.inlineCompletion === other.inlineCompletion;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { InlineCompletionCommand } from '../../../../common/languages.js';\nimport { InlineSuggestionItem } from './inlineSuggestionItem.js';\n\nexport class InlineEdit {\n\tconstructor(\n\t\tpublic readonly edit: TextReplacement,\n\t\tpublic readonly commands: readonly InlineCompletionCommand[],\n\t\tpublic readonly inlineCompletion: InlineSuggestionItem,\n\t) { }\n\n\tpublic equals(other: InlineEdit): boolean {\n\t\treturn this.edit.equals(other.edit)\n\t\t\t&& this.inlineCompletion === other.inlineCompletion;\n\t}\n}\n"]}