{"version":3,"sources":["vs/editor/browser/gpu/viewGpuContext.ts"],"names":[],"mappings":"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","file":"viewGpuContext.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../nls.js';\nimport { addDisposableListener, getActiveWindow } from '../../../base/browser/dom.js';\nimport { createFastDomNode, type FastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ViewportData } from '../../common/viewLayout/viewLinesViewportData.js';\nimport { ViewLineOptions } from '../viewParts/viewLines/viewLineOptions.js';\nimport { observableValue, runOnChange, type IObservable } from '../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { TextureAtlas } from './atlas/textureAtlas.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { INotificationService, IPromptChoice, Severity } from '../../../platform/notification/common/notification.js';\nimport { GPULifecycle } from './gpuDisposable.js';\nimport { ensureNonNullable, observeDevicePixelDimensions } from './gpuUtils.js';\nimport { RectangleRenderer } from './rectangleRenderer.js';\nimport { ViewContext } from '../../common/viewModel/viewContext.js';\nimport { DecorationCssRuleExtractor } from './css/decorationCssRuleExtractor.js';\nimport { Event } from '../../../base/common/event.js';\nimport { EditorOption, type IEditorOptions } from '../../common/config/editorOptions.js';\nimport { DecorationStyleCache } from './css/decorationStyleCache.js';\nimport { InlineDecorationType } from '../../common/viewModel/inlineDecorations.js';\n\nexport class ViewGpuContext extends Disposable {\n\t/**\n\t * The hard cap for line columns rendered by the GPU renderer.\n\t */\n\treadonly maxGpuCols = 2000;\n\n\treadonly canvas: FastDomNode<HTMLCanvasElement>;\n\treadonly ctx: GPUCanvasContext;\n\n\tstatic device: Promise<GPUDevice>;\n\tstatic deviceSync: GPUDevice | undefined;\n\n\treadonly rectangleRenderer: RectangleRenderer;\n\n\tprivate static readonly _decorationCssRuleExtractor = new DecorationCssRuleExtractor();\n\tstatic get decorationCssRuleExtractor(): DecorationCssRuleExtractor {\n\t\treturn ViewGpuContext._decorationCssRuleExtractor;\n\t}\n\n\tprivate static readonly _decorationStyleCache = new DecorationStyleCache();\n\tstatic get decorationStyleCache(): DecorationStyleCache {\n\t\treturn ViewGpuContext._decorationStyleCache;\n\t}\n\n\tprivate static _atlas: TextureAtlas | undefined;\n\n\t/**\n\t * The shared texture atlas to use across all views.\n\t *\n\t * @throws if called before the GPU device is resolved\n\t */\n\tstatic get atlas(): TextureAtlas {\n\t\tif (!ViewGpuContext._atlas) {\n\t\t\tthrow new BugIndicatingError('Cannot call ViewGpuContext.textureAtlas before device is resolved');\n\t\t}\n\t\treturn ViewGpuContext._atlas;\n\t}\n\t/**\n\t * The shared texture atlas to use across all views. This is a convenience alias for\n\t * {@link ViewGpuContext.atlas}.\n\t *\n\t * @throws if called before the GPU device is resolved\n\t */\n\tget atlas(): TextureAtlas {\n\t\treturn ViewGpuContext.atlas;\n\t}\n\n\treadonly canvasDevicePixelDimensions: IObservable<{ width: number; height: number }>;\n\treadonly devicePixelRatio: IObservable<number>;\n\treadonly contentLeft: IObservable<number>;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.canvas = createFastDomNode(document.createElement('canvas'));\n\t\tthis.canvas.setClassName('editorCanvas');\n\n\t\t// Adjust the canvas size to avoid drawing under the scroll bar\n\t\tthis._register(Event.runAndSubscribe(configurationService.onDidChangeConfiguration, e => {\n\t\t\tif (!e || e.affectsConfiguration('editor.scrollbar.verticalScrollbarSize')) {\n\t\t\t\tconst verticalScrollbarSize = configurationService.getValue<IEditorOptions>('editor').scrollbar?.verticalScrollbarSize ?? 14;\n\t\t\t\tthis.canvas.domNode.style.boxSizing = 'border-box';\n\t\t\t\tthis.canvas.domNode.style.paddingRight = `${verticalScrollbarSize}px`;\n\t\t\t}\n\t\t}));\n\n\t\tthis.ctx = ensureNonNullable(this.canvas.domNode.getContext('webgpu'));\n\n\t\t// Request the GPU device, we only want to do this a single time per window as it's async\n\t\t// and can delay the initial render.\n\t\tif (!ViewGpuContext.device) {\n\t\t\tViewGpuContext.device = GPULifecycle.requestDevice((message) => {\n\t\t\t\tconst choices: IPromptChoice[] = [{\n\t\t\t\t\tlabel: nls.localize('editor.dom.render', \"Use DOM-based rendering\"),\n\t\t\t\t\trun: () => this.configurationService.updateValue('editor.experimentalGpuAcceleration', 'off'),\n\t\t\t\t}];\n\t\t\t\tthis._notificationService.prompt(Severity.Warning, message, choices);\n\t\t\t}).then(ref => {\n\t\t\t\tViewGpuContext.deviceSync = ref.object;\n\t\t\t\tif (!ViewGpuContext._atlas) {\n\t\t\t\t\tViewGpuContext._atlas = this._instantiationService.createInstance(TextureAtlas, ref.object.limits.maxTextureDimension2D, undefined, ViewGpuContext.decorationStyleCache);\n\t\t\t\t}\n\t\t\t\treturn ref.object;\n\t\t\t});\n\t\t}\n\n\t\tconst dprObs = observableValue(this, getActiveWindow().devicePixelRatio);\n\t\tthis._register(addDisposableListener(getActiveWindow(), 'resize', () => {\n\t\t\tdprObs.set(getActiveWindow().devicePixelRatio, undefined);\n\t\t}));\n\t\tthis.devicePixelRatio = dprObs;\n\t\tthis._register(runOnChange(this.devicePixelRatio, () => ViewGpuContext.atlas?.clear()));\n\n\t\tconst canvasDevicePixelDimensions = observableValue(this, { width: this.canvas.domNode.width, height: this.canvas.domNode.height });\n\t\tthis._register(observeDevicePixelDimensions(\n\t\t\tthis.canvas.domNode,\n\t\t\tgetActiveWindow(),\n\t\t\t(width, height) => {\n\t\t\t\tthis.canvas.domNode.width = width;\n\t\t\t\tthis.canvas.domNode.height = height;\n\t\t\t\tcanvasDevicePixelDimensions.set({ width, height }, undefined);\n\t\t\t}\n\t\t));\n\t\tthis.canvasDevicePixelDimensions = canvasDevicePixelDimensions;\n\n\t\tconst contentLeft = observableValue(this, 0);\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tcontentLeft.set(context.configuration.options.get(EditorOption.layoutInfo).contentLeft, undefined);\n\t\t}));\n\t\tthis.contentLeft = contentLeft;\n\n\t\tthis.rectangleRenderer = this._instantiationService.createInstance(RectangleRenderer, context, this.contentLeft, this.devicePixelRatio, this.canvas.domNode, this.ctx, ViewGpuContext.device);\n\t}\n\n\t/**\n\t * This method determines which lines can be and are allowed to be rendered using the GPU\n\t * renderer. Eventually this should trend all lines, except maybe exceptional cases like\n\t * decorations that use class names.\n\t */\n\tpublic canRender(options: ViewLineOptions, viewportData: ViewportData, lineNumber: number): boolean {\n\t\tconst data = viewportData.getViewLineRenderingData(lineNumber);\n\n\t\t// Check if the line has simple attributes that aren't supported\n\t\tif (\n\t\t\tdata.containsRTL ||\n\t\t\tdata.maxColumn > this.maxGpuCols\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if all inline decorations are supported\n\t\tif (data.inlineDecorations.length > 0) {\n\t\t\tlet supported = true;\n\t\t\tfor (const decoration of data.inlineDecorations) {\n\t\t\t\tif (decoration.type !== InlineDecorationType.Regular) {\n\t\t\t\t\tsupported = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst styleRules = ViewGpuContext._decorationCssRuleExtractor.getStyleRules(this.canvas.domNode, decoration.inlineClassName);\n\t\t\t\tsupported &&= styleRules.every(rule => {\n\t\t\t\t\t// Pseudo classes aren't supported currently\n\t\t\t\t\tif (rule.selectorText.includes(':')) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tfor (const r of rule.style) {\n\t\t\t\t\t\tif (!supportsCssRule(r, rule.style)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tif (!supported) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn supported;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Like {@link canRender} but returns detailed information about why the line cannot be rendered.\n\t */\n\tpublic canRenderDetailed(options: ViewLineOptions, viewportData: ViewportData, lineNumber: number): string[] {\n\t\tconst data = viewportData.getViewLineRenderingData(lineNumber);\n\t\tconst reasons: string[] = [];\n\t\tif (data.containsRTL) {\n\t\t\treasons.push('containsRTL');\n\t\t}\n\t\tif (data.maxColumn > this.maxGpuCols) {\n\t\t\treasons.push('maxColumn > maxGpuCols');\n\t\t}\n\t\tif (data.inlineDecorations.length > 0) {\n\t\t\tlet supported = true;\n\t\t\tconst problemTypes: InlineDecorationType[] = [];\n\t\t\tconst problemSelectors: string[] = [];\n\t\t\tconst problemRules: string[] = [];\n\t\t\tfor (const decoration of data.inlineDecorations) {\n\t\t\t\tif (decoration.type !== InlineDecorationType.Regular) {\n\t\t\t\t\tproblemTypes.push(decoration.type);\n\t\t\t\t\tsupported = false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst styleRules = ViewGpuContext._decorationCssRuleExtractor.getStyleRules(this.canvas.domNode, decoration.inlineClassName);\n\t\t\t\tsupported &&= styleRules.every(rule => {\n\t\t\t\t\t// Pseudo classes aren't supported currently\n\t\t\t\t\tif (rule.selectorText.includes(':')) {\n\t\t\t\t\t\tproblemSelectors.push(rule.selectorText);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tfor (const r of rule.style) {\n\t\t\t\t\t\tif (!supportsCssRule(r, rule.style)) {\n\t\t\t\t\t\t\tproblemRules.push(`${r}: ${rule.style[r as any]}`);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tif (!supported) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (problemTypes.length > 0) {\n\t\t\t\treasons.push(`inlineDecorations with unsupported types (${problemTypes.map(e => `\\`${e}\\``).join(', ')})`);\n\t\t\t}\n\t\t\tif (problemRules.length > 0) {\n\t\t\t\treasons.push(`inlineDecorations with unsupported CSS rules (${problemRules.map(e => `\\`${e}\\``).join(', ')})`);\n\t\t\t}\n\t\t\tif (problemSelectors.length > 0) {\n\t\t\t\treasons.push(`inlineDecorations with unsupported CSS selectors (${problemSelectors.map(e => `\\`${e}\\``).join(', ')})`);\n\t\t\t}\n\t\t}\n\t\treturn reasons;\n\t}\n}\n\n/**\n * A list of supported decoration CSS rules that can be used in the GPU renderer.\n */\nconst gpuSupportedDecorationCssRules = [\n\t'color',\n\t'font-weight',\n\t'opacity',\n];\n\nfunction supportsCssRule(rule: string, style: CSSStyleDeclaration) {\n\tif (!gpuSupportedDecorationCssRules.includes(rule)) {\n\t\treturn false;\n\t}\n\t// Check for values that aren't supported\n\tswitch (rule) {\n\t\tdefault: return true;\n\t}\n}\n"]}