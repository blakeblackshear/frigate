{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/lineNumbers/lineNumbers.ts","vs/editor/browser/viewParts/lineNumbers/lineNumbers.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,OAAO,mBAAmB,CAAC;AAC3B,OAAO,KAAK,QAAQ,MAAM,qCAAqC,CAAC;AAChE,OAAO,EAAE,kBAAkB,EAAE,MAAM,kCAAkC,CAAC;AAEtE,OAAO,EAAE,QAAQ,EAAE,MAAM,kCAAkC,CAAC;AAC5D,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AAItD,OAAO,EAAE,0BAA0B,EAAE,MAAM,mDAAmD,CAAC;AAC/F,OAAO,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,MAAM,6CAA6C,CAAC;AAExG;;GAEG;AACH,MAAM,OAAO,kBAAmB,SAAQ,kBAAkB;aAElC,eAAU,GAAG,cAAc,CAAC;IAcnD,YAAY,OAAoB;QAC/B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,wBAAwB,GAAG,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAEO,WAAW;QAClB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;QACpD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,GAAG,kCAAyB,CAAC;QACxD,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,mCAA0B,CAAC;QAC1D,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC,UAAU,CAAC;QACjD,IAAI,CAAC,wBAAwB,GAAG,WAAW,CAAC,QAAQ,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,GAAG,2CAAiC,CAAC;QACxE,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,mCAAyB,CAAC;QACxD,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,eAAe,CAAC;QACnD,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,gBAAgB,CAAC;IACtD,CAAC;IAEe,OAAO;QACtB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,KAAK,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,2BAA2B;IAEX,sBAAsB,CAAC,CAA2C;QACjF,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,IAAI,CAAC;IACb,CAAC;IACe,oBAAoB,CAAC,CAAyC;QAC7E,MAAM,mBAAmB,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAoB,CAAC,kCAAkC,CAAC,mBAAmB,CAAC,CAAC;QAErI,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,IAAI,CAAC,sBAAsB,KAAK,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,CAAC;YAC9E,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC;YACvE,YAAY,GAAG,IAAI,CAAC;QACrB,CAAC;QACD,IAAI,IAAI,CAAC,kBAAkB,2CAAmC,IAAI,IAAI,CAAC,kBAAkB,2CAAmC,EAAE,CAAC;YAC9H,YAAY,GAAG,IAAI,CAAC;QACrB,CAAC;QACD,OAAO,YAAY,CAAC;IACrB,CAAC;IACe,SAAS,CAAC,CAA8B;QACvD,OAAO,IAAI,CAAC;IACb,CAAC;IACe,cAAc,CAAC,CAAmC;QACjE,OAAO,IAAI,CAAC;IACb,CAAC;IACe,cAAc,CAAC,CAAmC;QACjE,OAAO,IAAI,CAAC;IACb,CAAC;IACe,eAAe,CAAC,CAAoC;QACnE,OAAO,IAAI,CAAC;IACb,CAAC;IACe,eAAe,CAAC,CAAoC;QACnE,OAAO,CAAC,CAAC,gBAAgB,CAAC;IAC3B,CAAC;IACe,cAAc,CAAC,CAAmC;QACjE,OAAO,IAAI,CAAC;IACb,CAAC;IACe,oBAAoB,CAAC,CAAyC;QAC7E,OAAO,CAAC,CAAC,iBAAiB,CAAC;IAC5B,CAAC;IAED,yBAAyB;IAEjB,wBAAwB,CAAC,cAAsB;QACtD,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAoB,CAAC,kCAAkC,CAAC,IAAI,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;QACvI,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAChC,OAAO,EAAE,CAAC;QACX,CAAC;QACD,MAAM,eAAe,GAAG,aAAa,CAAC,UAAU,CAAC;QAEjD,IAAI,IAAI,CAAC,wBAAwB,EAAE,CAAC;YACnC,OAAO,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,CAAC;QACvD,CAAC;QAED,IAAI,IAAI,CAAC,kBAAkB,2CAAmC,EAAE,CAAC;YAChE,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,wBAAwB,CAAC,UAAU,GAAG,eAAe,CAAC,CAAC;YAClF,IAAI,IAAI,KAAK,CAAC,EAAE,CAAC;gBAChB,OAAO,6CAA6C,GAAG,eAAe,GAAG,SAAS,CAAC;YACpF,CAAC;YACD,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC;QAED,IAAI,IAAI,CAAC,kBAAkB,2CAAmC,EAAE,CAAC;YAChE,IAAI,IAAI,CAAC,wBAAwB,CAAC,UAAU,KAAK,eAAe,EAAE,CAAC;gBAClE,OAAO,MAAM,CAAC,eAAe,CAAC,CAAC;YAChC,CAAC;YACD,IAAI,eAAe,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC;gBAChC,OAAO,MAAM,CAAC,eAAe,CAAC,CAAC;YAChC,CAAC;YACD,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;YAC/D,IAAI,eAAe,KAAK,eAAe,EAAE,CAAC;gBACzC,OAAO,MAAM,CAAC,eAAe,CAAC,CAAC;YAChC,CAAC;YACD,OAAO,EAAE,CAAC;QACX,CAAC;QAED,OAAO,MAAM,CAAC,eAAe,CAAC,CAAC;IAChC,CAAC;IAEM,aAAa,CAAC,GAAqB;QACzC,IAAI,IAAI,CAAC,kBAAkB,sCAA8B,EAAE,CAAC;YAC3D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO;QACR,CAAC;QAED,MAAM,mBAAmB,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC5G,MAAM,sBAAsB,GAAG,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC;QAChE,MAAM,oBAAoB,GAAG,GAAG,CAAC,YAAY,CAAC,aAAa,CAAC;QAE5D,MAAM,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,wBAAwB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAC1I,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjF,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAE7B,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QACzD,MAAM,MAAM,GAAa,EAAE,CAAC;QAC5B,KAAK,IAAI,UAAU,GAAG,sBAAsB,EAAE,UAAU,IAAI,oBAAoB,EAAE,UAAU,EAAE,EAAE,CAAC;YAChG,MAAM,SAAS,GAAG,UAAU,GAAG,sBAAsB,CAAC;YACtD,MAAM,eAAe,GAAW,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAoB,CAAC,kCAAkC,CAAC,IAAI,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YAExJ,IAAI,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;YACjE,IAAI,eAAe,GAAG,EAAE,CAAC;YAEzB,4DAA4D;YAC5D,OAAO,oBAAoB,GAAG,iBAAiB,CAAC,MAAM,IAAI,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC,aAAa,GAAG,UAAU,EAAE,CAAC;gBACpI,oBAAoB,EAAE,CAAC;YACxB,CAAC;YACD,KAAK,IAAI,CAAC,GAAG,oBAAoB,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBAChD,IAAI,KAAK,CAAC,eAAe,IAAI,UAAU,EAAE,CAAC;oBACzC,eAAe,IAAI,GAAG,GAAG,OAAO,CAAC,mBAAmB,CAAC;gBACtD,CAAC;YACF,CAAC;YAED,IAAI,CAAC,gBAAgB,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3C,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;gBACvB,SAAS;YACV,CAAC;YAED,IAAI,UAAU,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;gBACzF,wBAAwB;gBACxB,IAAI,IAAI,CAAC,mBAAmB,KAAK,KAAK,EAAE,CAAC;oBACxC,gBAAgB,GAAG,EAAE,CAAC;gBACvB,CAAC;gBACD,IAAI,IAAI,CAAC,mBAAmB,KAAK,QAAQ,EAAE,CAAC;oBAC3C,eAAe,IAAI,qBAAqB,CAAC;gBAC1C,CAAC;YACF,CAAC;YACD,IAAI,eAAe,KAAK,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBACrD,eAAe,IAAI,qBAAqB,CAAC;YAC1C,CAAC;YAGD,MAAM,CAAC,SAAS,CAAC,GAAG,CACnB,eAAe,kBAAkB,CAAC,UAAU,GAAG,mBAAmB,GAAG,eAAe,iBAAiB,IAAI,CAAC,gBAAgB,YAAY,IAAI,CAAC,iBAAiB,QAAQ,gBAAgB,QAAQ,CAC5L,CAAC;QACH,CAAC;QAED,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;IAC7B,CAAC;IAEM,MAAM,CAAC,eAAuB,EAAE,UAAkB;QACxD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACzB,OAAO,EAAE,CAAC;QACX,CAAC;QACD,MAAM,SAAS,GAAG,UAAU,GAAG,eAAe,CAAC;QAC/C,IAAI,SAAS,GAAG,CAAC,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;YAC7D,OAAO,EAAE,CAAC;QACX,CAAC;QACD,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;;AAGF,0BAA0B,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE;IAC/C,MAAM,sBAAsB,GAAG,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IACjE,MAAM,2BAA2B,GAAG,KAAK,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC;IAC3E,IAAI,2BAA2B,EAAE,CAAC;QACjC,SAAS,CAAC,OAAO,CAAC,4DAA4D,2BAA2B,KAAK,CAAC,CAAC;IACjH,CAAC;SAAM,IAAI,sBAAsB,EAAE,CAAC;QACnC,SAAS,CAAC,OAAO,CAAC,4DAA4D,sBAAsB,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC7H,CAAC;AACF,CAAC,CAAC,CAAC","file":"lineNumbers.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { RenderLineNumbersType, EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorDimmedLineNumber, editorLineNumbers } from '../../../common/core/editorColorRegistry.js';\n\n/**\n * Renders line numbers to the left of the main view lines content.\n */\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n\n\tpublic static readonly CLASS_NAME = 'line-numbers';\n\n\tprivate readonly _context: ViewContext;\n\n\tprivate _lineHeight!: number;\n\tprivate _renderLineNumbers!: RenderLineNumbersType;\n\tprivate _renderCustomLineNumbers!: ((lineNumber: number) => string) | null;\n\tprivate _renderFinalNewline!: 'off' | 'on' | 'dimmed';\n\tprivate _lineNumbersLeft!: number;\n\tprivate _lineNumbersWidth!: number;\n\tprivate _lastCursorModelPosition: Position;\n\tprivate _renderResult: string[] | null;\n\tprivate _activeModelLineNumber: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\n\t\tthis._readConfig();\n\n\t\tthis._lastCursorModelPosition = new Position(1, 1);\n\t\tthis._renderResult = null;\n\t\tthis._activeModelLineNumber = 1;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tprivate _readConfig(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tconst lineNumbers = options.get(EditorOption.lineNumbers);\n\t\tthis._renderLineNumbers = lineNumbers.renderType;\n\t\tthis._renderCustomLineNumbers = lineNumbers.renderFn;\n\t\tthis._renderFinalNewline = options.get(EditorOption.renderFinalNewline);\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n\t\tthis._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._readConfig();\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst primaryViewPosition = e.selections[0].getPosition();\n\t\tthis._lastCursorModelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n\n\t\tlet shouldRender = false;\n\t\tif (this._activeModelLineNumber !== this._lastCursorModelPosition.lineNumber) {\n\t\t\tthis._activeModelLineNumber = this._lastCursorModelPosition.lineNumber;\n\t\t\tshouldRender = true;\n\t\t}\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Relative || this._renderLineNumbers === RenderLineNumbersType.Interval) {\n\t\t\tshouldRender = true;\n\t\t}\n\t\treturn shouldRender;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn e.affectsLineNumber;\n\t}\n\n\t// --- end event handlers\n\n\tprivate _getLineRenderLineNumber(viewLineNumber: number): string {\n\t\tconst modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n\t\tif (modelPosition.column !== 1) {\n\t\t\treturn '';\n\t\t}\n\t\tconst modelLineNumber = modelPosition.lineNumber;\n\n\t\tif (this._renderCustomLineNumbers) {\n\t\t\treturn this._renderCustomLineNumbers(modelLineNumber);\n\t\t}\n\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Relative) {\n\t\t\tconst diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n\t\t\tif (diff === 0) {\n\t\t\t\treturn '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n\t\t\t}\n\t\t\treturn String(diff);\n\t\t}\n\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Interval) {\n\t\t\tif (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\tif (modelLineNumber % 10 === 0) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\tconst finalLineNumber = this._context.viewModel.getLineCount();\n\t\t\tif (modelLineNumber === finalLineNumber) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\treturn String(modelLineNumber);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Off) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tconst lineNoDecorations = this._context.viewModel.getDecorationsInViewport(ctx.visibleRange).filter(d => !!d.options.lineNumberClassName);\n\t\tlineNoDecorations.sort((a, b) => Range.compareRangesUsingEnds(a.range, b.range));\n\t\tlet decorationStartIndex = 0;\n\n\t\tconst lineCount = this._context.viewModel.getLineCount();\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst modelLineNumber: number = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber, 1)).lineNumber;\n\n\t\t\tlet renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n\t\t\tlet extraClassNames = '';\n\n\t\t\t// skip decorations whose end positions we've already passed\n\t\t\twhile (decorationStartIndex < lineNoDecorations.length && lineNoDecorations[decorationStartIndex].range.endLineNumber < lineNumber) {\n\t\t\t\tdecorationStartIndex++;\n\t\t\t}\n\t\t\tfor (let i = decorationStartIndex; i < lineNoDecorations.length; i++) {\n\t\t\t\tconst { range, options } = lineNoDecorations[i];\n\t\t\t\tif (range.startLineNumber <= lineNumber) {\n\t\t\t\t\textraClassNames += ' ' + options.lineNumberClassName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!renderLineNumber && !extraClassNames) {\n\t\t\t\toutput[lineIndex] = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lineNumber === lineCount && this._context.viewModel.getLineLength(lineNumber) === 0) {\n\t\t\t\t// this is the last line\n\t\t\t\tif (this._renderFinalNewline === 'off') {\n\t\t\t\t\trenderLineNumber = '';\n\t\t\t\t}\n\t\t\t\tif (this._renderFinalNewline === 'dimmed') {\n\t\t\t\t\textraClassNames += ' dimmed-line-number';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (modelLineNumber === this._activeModelLineNumber) {\n\t\t\t\textraClassNames += ' active-line-number';\n\t\t\t}\n\n\n\t\t\toutput[lineIndex] = (\n\t\t\t\t`<div class=\"${LineNumbersOverlay.CLASS_NAME}${lineHeightClassName}${extraClassNames}\" style=\"left:${this._lineNumbersLeft}px;width:${this._lineNumbersWidth}px;\">${renderLineNumber}</div>`\n\t\t\t);\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst editorLineNumbersColor = theme.getColor(editorLineNumbers);\n\tconst editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n\tif (editorDimmedLineNumberColor) {\n\t\tcollector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorDimmedLineNumberColor}; }`);\n\t} else if (editorLineNumbersColor) {\n\t\tcollector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorLineNumbersColor.transparent(0.4)}; }`);\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { RenderLineNumbersType, EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorDimmedLineNumber, editorLineNumbers } from '../../../common/core/editorColorRegistry.js';\n\n/**\n * Renders line numbers to the left of the main view lines content.\n */\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n\n\tpublic static readonly CLASS_NAME = 'line-numbers';\n\n\tprivate readonly _context: ViewContext;\n\n\tprivate _lineHeight!: number;\n\tprivate _renderLineNumbers!: RenderLineNumbersType;\n\tprivate _renderCustomLineNumbers!: ((lineNumber: number) => string) | null;\n\tprivate _renderFinalNewline!: 'off' | 'on' | 'dimmed';\n\tprivate _lineNumbersLeft!: number;\n\tprivate _lineNumbersWidth!: number;\n\tprivate _lastCursorModelPosition: Position;\n\tprivate _renderResult: string[] | null;\n\tprivate _activeModelLineNumber: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\n\t\tthis._readConfig();\n\n\t\tthis._lastCursorModelPosition = new Position(1, 1);\n\t\tthis._renderResult = null;\n\t\tthis._activeModelLineNumber = 1;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tprivate _readConfig(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tconst lineNumbers = options.get(EditorOption.lineNumbers);\n\t\tthis._renderLineNumbers = lineNumbers.renderType;\n\t\tthis._renderCustomLineNumbers = lineNumbers.renderFn;\n\t\tthis._renderFinalNewline = options.get(EditorOption.renderFinalNewline);\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n\t\tthis._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._readConfig();\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst primaryViewPosition = e.selections[0].getPosition();\n\t\tthis._lastCursorModelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n\n\t\tlet shouldRender = false;\n\t\tif (this._activeModelLineNumber !== this._lastCursorModelPosition.lineNumber) {\n\t\t\tthis._activeModelLineNumber = this._lastCursorModelPosition.lineNumber;\n\t\t\tshouldRender = true;\n\t\t}\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Relative || this._renderLineNumbers === RenderLineNumbersType.Interval) {\n\t\t\tshouldRender = true;\n\t\t}\n\t\treturn shouldRender;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn e.affectsLineNumber;\n\t}\n\n\t// --- end event handlers\n\n\tprivate _getLineRenderLineNumber(viewLineNumber: number): string {\n\t\tconst modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n\t\tif (modelPosition.column !== 1) {\n\t\t\treturn '';\n\t\t}\n\t\tconst modelLineNumber = modelPosition.lineNumber;\n\n\t\tif (this._renderCustomLineNumbers) {\n\t\t\treturn this._renderCustomLineNumbers(modelLineNumber);\n\t\t}\n\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Relative) {\n\t\t\tconst diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n\t\t\tif (diff === 0) {\n\t\t\t\treturn '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n\t\t\t}\n\t\t\treturn String(diff);\n\t\t}\n\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Interval) {\n\t\t\tif (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\tif (modelLineNumber % 10 === 0) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\tconst finalLineNumber = this._context.viewModel.getLineCount();\n\t\t\tif (modelLineNumber === finalLineNumber) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\treturn String(modelLineNumber);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Off) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tconst lineNoDecorations = this._context.viewModel.getDecorationsInViewport(ctx.visibleRange).filter(d => !!d.options.lineNumberClassName);\n\t\tlineNoDecorations.sort((a, b) => Range.compareRangesUsingEnds(a.range, b.range));\n\t\tlet decorationStartIndex = 0;\n\n\t\tconst lineCount = this._context.viewModel.getLineCount();\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst modelLineNumber: number = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber, 1)).lineNumber;\n\n\t\t\tlet renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n\t\t\tlet extraClassNames = '';\n\n\t\t\t// skip decorations whose end positions we've already passed\n\t\t\twhile (decorationStartIndex < lineNoDecorations.length && lineNoDecorations[decorationStartIndex].range.endLineNumber < lineNumber) {\n\t\t\t\tdecorationStartIndex++;\n\t\t\t}\n\t\t\tfor (let i = decorationStartIndex; i < lineNoDecorations.length; i++) {\n\t\t\t\tconst { range, options } = lineNoDecorations[i];\n\t\t\t\tif (range.startLineNumber <= lineNumber) {\n\t\t\t\t\textraClassNames += ' ' + options.lineNumberClassName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!renderLineNumber && !extraClassNames) {\n\t\t\t\toutput[lineIndex] = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lineNumber === lineCount && this._context.viewModel.getLineLength(lineNumber) === 0) {\n\t\t\t\t// this is the last line\n\t\t\t\tif (this._renderFinalNewline === 'off') {\n\t\t\t\t\trenderLineNumber = '';\n\t\t\t\t}\n\t\t\t\tif (this._renderFinalNewline === 'dimmed') {\n\t\t\t\t\textraClassNames += ' dimmed-line-number';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (modelLineNumber === this._activeModelLineNumber) {\n\t\t\t\textraClassNames += ' active-line-number';\n\t\t\t}\n\n\n\t\t\toutput[lineIndex] = (\n\t\t\t\t`<div class=\"${LineNumbersOverlay.CLASS_NAME}${lineHeightClassName}${extraClassNames}\" style=\"left:${this._lineNumbersLeft}px;width:${this._lineNumbersWidth}px;\">${renderLineNumber}</div>`\n\t\t\t);\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst editorLineNumbersColor = theme.getColor(editorLineNumbers);\n\tconst editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n\tif (editorDimmedLineNumberColor) {\n\t\tcollector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorDimmedLineNumberColor}; }`);\n\t} else if (editorLineNumbersColor) {\n\t\tcollector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorLineNumbersColor.transparent(0.4)}; }`);\n\t}\n});\n"]}