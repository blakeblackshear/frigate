{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/hover/browser/glyphHoverController.ts","vs/editor/contrib/hover/browser/glyphHoverController.ts"],"names":[],"mappings":"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","file":"glyphHoverController.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor, IEditorMouseEvent, IPartialEditorMouseEvent } from '../../../browser/editorBrowser.js';\nimport { ConfigurationChangedEvent, EditorOption } from '../../../common/config/editorOptions.js';\nimport { IEditorContribution, IScrollEvent } from '../../../common/editorCommon.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IHoverWidget } from './hoverTypes.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { isMousePositionWithinElement } from './hoverUtils.js';\nimport './hover.css';\nimport { GlyphHoverWidget } from './glyphHoverWidget.js';\n\n// sticky hover widget which doesn't disappear on focus out and such\nconst _sticky = false\n\t// || Boolean(\"true\") // done \"weirdly\" so that a lint warning prevents you from pushing this\n\t;\n\ninterface IHoverSettings {\n\treadonly enabled: boolean;\n\treadonly sticky: boolean;\n\treadonly hidingDelay: number;\n}\n\ninterface IHoverState {\n\tmouseDown: boolean;\n}\n\nexport class GlyphHoverController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.marginHover';\n\n\tpublic shouldKeepOpenOnEditorMouseMoveOrLeave: boolean = false;\n\n\tprivate readonly _listenersStore = new DisposableStore();\n\n\tprivate _glyphWidget: GlyphHoverWidget | undefined;\n\tprivate _mouseMoveEvent: IEditorMouseEvent | undefined;\n\tprivate _reactToEditorMouseMoveRunner: RunOnceScheduler;\n\n\tprivate _hoverSettings!: IHoverSettings;\n\tprivate _hoverState: IHoverState = {\n\t\tmouseDown: false\n\t};\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._reactToEditorMouseMoveRunner = this._register(\n\t\t\tnew RunOnceScheduler(\n\t\t\t\t() => this._reactToEditorMouseMove(this._mouseMoveEvent), 0\n\t\t\t)\n\t\t);\n\t\tthis._hookListeners();\n\t\tthis._register(this._editor.onDidChangeConfiguration((e: ConfigurationChangedEvent) => {\n\t\t\tif (e.hasChanged(EditorOption.hover)) {\n\t\t\t\tthis._unhookListeners();\n\t\t\t\tthis._hookListeners();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _hookListeners(): void {\n\n\t\tconst hoverOpts = this._editor.getOption(EditorOption.hover);\n\t\tthis._hoverSettings = {\n\t\t\tenabled: hoverOpts.enabled,\n\t\t\tsticky: hoverOpts.sticky,\n\t\t\thidingDelay: hoverOpts.hidingDelay\n\t\t};\n\n\t\tif (hoverOpts.enabled) {\n\t\t\tthis._listenersStore.add(this._editor.onMouseDown((e: IEditorMouseEvent) => this._onEditorMouseDown(e)));\n\t\t\tthis._listenersStore.add(this._editor.onMouseUp(() => this._onEditorMouseUp()));\n\t\t\tthis._listenersStore.add(this._editor.onMouseMove((e: IEditorMouseEvent) => this._onEditorMouseMove(e)));\n\t\t\tthis._listenersStore.add(this._editor.onKeyDown((e: IKeyboardEvent) => this._onKeyDown(e)));\n\t\t} else {\n\t\t\tthis._listenersStore.add(this._editor.onMouseMove((e: IEditorMouseEvent) => this._onEditorMouseMove(e)));\n\t\t\tthis._listenersStore.add(this._editor.onKeyDown((e: IKeyboardEvent) => this._onKeyDown(e)));\n\t\t}\n\n\t\tthis._listenersStore.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n\t\tthis._listenersStore.add(this._editor.onDidChangeModel(() => {\n\t\t\tthis._cancelScheduler();\n\t\t\tthis.hideGlyphHover();\n\t\t}));\n\t\tthis._listenersStore.add(this._editor.onDidChangeModelContent(() => this._cancelScheduler()));\n\t\tthis._listenersStore.add(this._editor.onDidScrollChange((e: IScrollEvent) => this._onEditorScrollChanged(e)));\n\t}\n\n\tprivate _unhookListeners(): void {\n\t\tthis._listenersStore.clear();\n\t}\n\n\tprivate _cancelScheduler() {\n\t\tthis._mouseMoveEvent = undefined;\n\t\tthis._reactToEditorMouseMoveRunner.cancel();\n\t}\n\n\tprivate _onEditorScrollChanged(e: IScrollEvent): void {\n\t\tif (e.scrollTopChanged || e.scrollLeftChanged) {\n\t\t\tthis.hideGlyphHover();\n\t\t}\n\t}\n\n\tprivate _onEditorMouseDown(mouseEvent: IEditorMouseEvent): void {\n\t\tthis._hoverState.mouseDown = true;\n\t\tconst shouldNotHideCurrentHoverWidget = this._isMouseOnGlyphHoverWidget(mouseEvent);\n\t\tif (shouldNotHideCurrentHoverWidget) {\n\t\t\treturn;\n\t\t}\n\t\tthis.hideGlyphHover();\n\t}\n\n\tprivate _isMouseOnGlyphHoverWidget(mouseEvent: IPartialEditorMouseEvent): boolean {\n\t\tconst glyphHoverWidgetNode = this._glyphWidget?.getDomNode();\n\t\tif (glyphHoverWidgetNode) {\n\t\t\treturn isMousePositionWithinElement(glyphHoverWidgetNode, mouseEvent.event.posx, mouseEvent.event.posy);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _onEditorMouseUp(): void {\n\t\tthis._hoverState.mouseDown = false;\n\t}\n\n\tprivate _onEditorMouseLeave(mouseEvent: IPartialEditorMouseEvent): void {\n\t\tif (this.shouldKeepOpenOnEditorMouseMoveOrLeave) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cancelScheduler();\n\t\tconst shouldNotHideCurrentHoverWidget = this._isMouseOnGlyphHoverWidget(mouseEvent);\n\t\tif (shouldNotHideCurrentHoverWidget) {\n\t\t\treturn;\n\t\t}\n\t\tif (_sticky) {\n\t\t\treturn;\n\t\t}\n\t\tthis.hideGlyphHover();\n\t}\n\n\tprivate _shouldNotRecomputeCurrentHoverWidget(mouseEvent: IEditorMouseEvent): boolean {\n\t\tconst isHoverSticky = this._hoverSettings.sticky;\n\t\tconst isMouseOnGlyphHoverWidget = this._isMouseOnGlyphHoverWidget(mouseEvent);\n\t\treturn isHoverSticky && isMouseOnGlyphHoverWidget;\n\t}\n\n\tprivate _onEditorMouseMove(mouseEvent: IEditorMouseEvent): void {\n\t\tif (this.shouldKeepOpenOnEditorMouseMoveOrLeave) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseMoveEvent = mouseEvent;\n\t\tconst shouldNotRecomputeCurrentHoverWidget = this._shouldNotRecomputeCurrentHoverWidget(mouseEvent);\n\t\tif (shouldNotRecomputeCurrentHoverWidget) {\n\t\t\tthis._reactToEditorMouseMoveRunner.cancel();\n\t\t\treturn;\n\t\t}\n\t\tthis._reactToEditorMouseMove(mouseEvent);\n\t}\n\n\tprivate _reactToEditorMouseMove(mouseEvent: IEditorMouseEvent | undefined): void {\n\n\t\tif (!mouseEvent) {\n\t\t\treturn;\n\t\t}\n\t\tconst glyphWidgetShowsOrWillShow = this._tryShowHoverWidget(mouseEvent);\n\t\tif (glyphWidgetShowsOrWillShow) {\n\t\t\treturn;\n\t\t}\n\t\tif (_sticky) {\n\t\t\treturn;\n\t\t}\n\t\tthis.hideGlyphHover();\n\t}\n\n\tprivate _tryShowHoverWidget(mouseEvent: IEditorMouseEvent): boolean {\n\t\tconst glyphWidget: IHoverWidget = this._getOrCreateGlyphWidget();\n\t\treturn glyphWidget.showsOrWillShow(mouseEvent);\n\t}\n\n\tprivate _onKeyDown(e: IKeyboardEvent): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (e.keyCode === KeyCode.Ctrl\n\t\t\t|| e.keyCode === KeyCode.Alt\n\t\t\t|| e.keyCode === KeyCode.Meta\n\t\t\t|| e.keyCode === KeyCode.Shift) {\n\t\t\t// Do not hide hover when a modifier key is pressed\n\t\t\treturn;\n\t\t}\n\t\tthis.hideGlyphHover();\n\t}\n\n\tpublic hideGlyphHover(): void {\n\t\tif (_sticky) {\n\t\t\treturn;\n\t\t}\n\t\tthis._glyphWidget?.hide();\n\t}\n\n\tprivate _getOrCreateGlyphWidget(): GlyphHoverWidget {\n\t\tif (!this._glyphWidget) {\n\t\t\tthis._glyphWidget = this._instantiationService.createInstance(GlyphHoverWidget, this._editor);\n\t\t}\n\t\treturn this._glyphWidget;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._unhookListeners();\n\t\tthis._listenersStore.dispose();\n\t\tthis._glyphWidget?.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor, IEditorMouseEvent, IPartialEditorMouseEvent } from '../../../browser/editorBrowser.js';\nimport { ConfigurationChangedEvent, EditorOption } from '../../../common/config/editorOptions.js';\nimport { IEditorContribution, IScrollEvent } from '../../../common/editorCommon.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IHoverWidget } from './hoverTypes.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { isMousePositionWithinElement } from './hoverUtils.js';\nimport './hover.css';\nimport { GlyphHoverWidget } from './glyphHoverWidget.js';\n\n// sticky hover widget which doesn't disappear on focus out and such\nconst _sticky = false\n\t// || Boolean(\"true\") // done \"weirdly\" so that a lint warning prevents you from pushing this\n\t;\n\ninterface IHoverSettings {\n\treadonly enabled: boolean;\n\treadonly sticky: boolean;\n\treadonly hidingDelay: number;\n}\n\ninterface IHoverState {\n\tmouseDown: boolean;\n}\n\nexport class GlyphHoverController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.marginHover';\n\n\tpublic shouldKeepOpenOnEditorMouseMoveOrLeave: boolean = false;\n\n\tprivate readonly _listenersStore = new DisposableStore();\n\n\tprivate _glyphWidget: GlyphHoverWidget | undefined;\n\tprivate _mouseMoveEvent: IEditorMouseEvent | undefined;\n\tprivate _reactToEditorMouseMoveRunner: RunOnceScheduler;\n\n\tprivate _hoverSettings!: IHoverSettings;\n\tprivate _hoverState: IHoverState = {\n\t\tmouseDown: false\n\t};\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._reactToEditorMouseMoveRunner = this._register(\n\t\t\tnew RunOnceScheduler(\n\t\t\t\t() => this._reactToEditorMouseMove(this._mouseMoveEvent), 0\n\t\t\t)\n\t\t);\n\t\tthis._hookListeners();\n\t\tthis._register(this._editor.onDidChangeConfiguration((e: ConfigurationChangedEvent) => {\n\t\t\tif (e.hasChanged(EditorOption.hover)) {\n\t\t\t\tthis._unhookListeners();\n\t\t\t\tthis._hookListeners();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _hookListeners(): void {\n\n\t\tconst hoverOpts = this._editor.getOption(EditorOption.hover);\n\t\tthis._hoverSettings = {\n\t\t\tenabled: hoverOpts.enabled,\n\t\t\tsticky: hoverOpts.sticky,\n\t\t\thidingDelay: hoverOpts.hidingDelay\n\t\t};\n\n\t\tif (hoverOpts.enabled) {\n\t\t\tthis._listenersStore.add(this._editor.onMouseDown((e: IEditorMouseEvent) => this._onEditorMouseDown(e)));\n\t\t\tthis._listenersStore.add(this._editor.onMouseUp(() => this._onEditorMouseUp()));\n\t\t\tthis._listenersStore.add(this._editor.onMouseMove((e: IEditorMouseEvent) => this._onEditorMouseMove(e)));\n\t\t\tthis._listenersStore.add(this._editor.onKeyDown((e: IKeyboardEvent) => this._onKeyDown(e)));\n\t\t} else {\n\t\t\tthis._listenersStore.add(this._editor.onMouseMove((e: IEditorMouseEvent) => this._onEditorMouseMove(e)));\n\t\t\tthis._listenersStore.add(this._editor.onKeyDown((e: IKeyboardEvent) => this._onKeyDown(e)));\n\t\t}\n\n\t\tthis._listenersStore.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n\t\tthis._listenersStore.add(this._editor.onDidChangeModel(() => {\n\t\t\tthis._cancelScheduler();\n\t\t\tthis.hideGlyphHover();\n\t\t}));\n\t\tthis._listenersStore.add(this._editor.onDidChangeModelContent(() => this._cancelScheduler()));\n\t\tthis._listenersStore.add(this._editor.onDidScrollChange((e: IScrollEvent) => this._onEditorScrollChanged(e)));\n\t}\n\n\tprivate _unhookListeners(): void {\n\t\tthis._listenersStore.clear();\n\t}\n\n\tprivate _cancelScheduler() {\n\t\tthis._mouseMoveEvent = undefined;\n\t\tthis._reactToEditorMouseMoveRunner.cancel();\n\t}\n\n\tprivate _onEditorScrollChanged(e: IScrollEvent): void {\n\t\tif (e.scrollTopChanged || e.scrollLeftChanged) {\n\t\t\tthis.hideGlyphHover();\n\t\t}\n\t}\n\n\tprivate _onEditorMouseDown(mouseEvent: IEditorMouseEvent): void {\n\t\tthis._hoverState.mouseDown = true;\n\t\tconst shouldNotHideCurrentHoverWidget = this._isMouseOnGlyphHoverWidget(mouseEvent);\n\t\tif (shouldNotHideCurrentHoverWidget) {\n\t\t\treturn;\n\t\t}\n\t\tthis.hideGlyphHover();\n\t}\n\n\tprivate _isMouseOnGlyphHoverWidget(mouseEvent: IPartialEditorMouseEvent): boolean {\n\t\tconst glyphHoverWidgetNode = this._glyphWidget?.getDomNode();\n\t\tif (glyphHoverWidgetNode) {\n\t\t\treturn isMousePositionWithinElement(glyphHoverWidgetNode, mouseEvent.event.posx, mouseEvent.event.posy);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _onEditorMouseUp(): void {\n\t\tthis._hoverState.mouseDown = false;\n\t}\n\n\tprivate _onEditorMouseLeave(mouseEvent: IPartialEditorMouseEvent): void {\n\t\tif (this.shouldKeepOpenOnEditorMouseMoveOrLeave) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cancelScheduler();\n\t\tconst shouldNotHideCurrentHoverWidget = this._isMouseOnGlyphHoverWidget(mouseEvent);\n\t\tif (shouldNotHideCurrentHoverWidget) {\n\t\t\treturn;\n\t\t}\n\t\tif (_sticky) {\n\t\t\treturn;\n\t\t}\n\t\tthis.hideGlyphHover();\n\t}\n\n\tprivate _shouldNotRecomputeCurrentHoverWidget(mouseEvent: IEditorMouseEvent): boolean {\n\t\tconst isHoverSticky = this._hoverSettings.sticky;\n\t\tconst isMouseOnGlyphHoverWidget = this._isMouseOnGlyphHoverWidget(mouseEvent);\n\t\treturn isHoverSticky && isMouseOnGlyphHoverWidget;\n\t}\n\n\tprivate _onEditorMouseMove(mouseEvent: IEditorMouseEvent): void {\n\t\tif (this.shouldKeepOpenOnEditorMouseMoveOrLeave) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseMoveEvent = mouseEvent;\n\t\tconst shouldNotRecomputeCurrentHoverWidget = this._shouldNotRecomputeCurrentHoverWidget(mouseEvent);\n\t\tif (shouldNotRecomputeCurrentHoverWidget) {\n\t\t\tthis._reactToEditorMouseMoveRunner.cancel();\n\t\t\treturn;\n\t\t}\n\t\tthis._reactToEditorMouseMove(mouseEvent);\n\t}\n\n\tprivate _reactToEditorMouseMove(mouseEvent: IEditorMouseEvent | undefined): void {\n\n\t\tif (!mouseEvent) {\n\t\t\treturn;\n\t\t}\n\t\tconst glyphWidgetShowsOrWillShow = this._tryShowHoverWidget(mouseEvent);\n\t\tif (glyphWidgetShowsOrWillShow) {\n\t\t\treturn;\n\t\t}\n\t\tif (_sticky) {\n\t\t\treturn;\n\t\t}\n\t\tthis.hideGlyphHover();\n\t}\n\n\tprivate _tryShowHoverWidget(mouseEvent: IEditorMouseEvent): boolean {\n\t\tconst glyphWidget: IHoverWidget = this._getOrCreateGlyphWidget();\n\t\treturn glyphWidget.showsOrWillShow(mouseEvent);\n\t}\n\n\tprivate _onKeyDown(e: IKeyboardEvent): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (e.keyCode === KeyCode.Ctrl\n\t\t\t|| e.keyCode === KeyCode.Alt\n\t\t\t|| e.keyCode === KeyCode.Meta\n\t\t\t|| e.keyCode === KeyCode.Shift) {\n\t\t\t// Do not hide hover when a modifier key is pressed\n\t\t\treturn;\n\t\t}\n\t\tthis.hideGlyphHover();\n\t}\n\n\tpublic hideGlyphHover(): void {\n\t\tif (_sticky) {\n\t\t\treturn;\n\t\t}\n\t\tthis._glyphWidget?.hide();\n\t}\n\n\tprivate _getOrCreateGlyphWidget(): GlyphHoverWidget {\n\t\tif (!this._glyphWidget) {\n\t\t\tthis._glyphWidget = this._instantiationService.createInstance(GlyphHoverWidget, this._editor);\n\t\t}\n\t\treturn this._glyphWidget;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._unhookListeners();\n\t\tthis._listenersStore.dispose();\n\t\tthis._glyphWidget?.dispose();\n\t}\n}\n"]}