{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/hover/browser/hover.ts","vs/platform/hover/browser/hover.ts"],"names":[],"mappings":"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","file":"hover.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IHoverDelegate, IHoverDelegateOptions } from '../../../base/browser/ui/hover/hoverDelegate.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { addStandardDisposableListener, isHTMLElement } from '../../../base/browser/dom.js';\nimport { KeyCode } from '../../../base/common/keyCodes.js';\nimport { IHoverDelegate2, IHoverOptions, IHoverWidget, IManagedHoverContentOrFactory } from '../../../base/browser/ui/hover/hover.js';\n\nexport const IHoverService = createDecorator<IHoverService>('hoverService');\n\nexport interface IHoverService extends IHoverDelegate2 {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface IHoverDelayOptions {\n\treadonly instantHover?: boolean;\n\treadonly dynamicDelay?: (content?: IManagedHoverContentOrFactory) => number | undefined;\n}\n\nexport class WorkbenchHoverDelegate extends Disposable implements IHoverDelegate {\n\n\tprivate lastHoverHideTime = 0;\n\tprivate timeLimit = 200;\n\n\tprivate _delay: number;\n\tget delay(): number | ((content: IManagedHoverContentOrFactory) => number) {\n\t\tif (this.isInstantlyHovering()) {\n\t\t\treturn 0; // show instantly when a hover was recently shown\n\t\t}\n\n\t\tif (this.hoverOptions?.dynamicDelay) {\n\t\t\treturn content => this.hoverOptions?.dynamicDelay?.(content) ?? this._delay;\n\t\t}\n\n\t\treturn this._delay;\n\t}\n\n\tprivate readonly hoverDisposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tpublic readonly placement: 'mouse' | 'element',\n\t\tprivate readonly hoverOptions: IHoverDelayOptions | undefined,\n\t\tprivate overrideOptions: Partial<IHoverOptions> | ((options: IHoverDelegateOptions, focus?: boolean) => Partial<IHoverOptions>) = {},\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\n\t\tthis._delay = this.configurationService.getValue<number>('workbench.hover.delay');\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('workbench.hover.delay')) {\n\t\t\t\tthis._delay = this.configurationService.getValue<number>('workbench.hover.delay');\n\t\t\t}\n\t\t}));\n\t}\n\n\tshowHover(options: IHoverDelegateOptions, focus?: boolean): IHoverWidget | undefined {\n\t\tconst overrideOptions = typeof this.overrideOptions === 'function' ? this.overrideOptions(options, focus) : this.overrideOptions;\n\n\t\t// close hover on escape\n\t\tthis.hoverDisposables.clear();\n\t\tconst targets = isHTMLElement(options.target) ? [options.target] : options.target.targetElements;\n\t\tfor (const target of targets) {\n\t\t\tthis.hoverDisposables.add(addStandardDisposableListener(target, 'keydown', (e) => {\n\t\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\t\tthis.hoverService.hideHover();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tconst id = isHTMLElement(options.content)\n\t\t\t? undefined\n\t\t\t: typeof options.content === 'string'\n\t\t\t\t? options.content.toString()\n\t\t\t\t: options.content.value;\n\n\t\treturn this.hoverService.showInstantHover({\n\t\t\t...options,\n\t\t\t...overrideOptions,\n\t\t\tpersistence: {\n\t\t\t\thideOnKeyDown: true,\n\t\t\t\t...overrideOptions.persistence\n\t\t\t},\n\t\t\tid,\n\t\t\tappearance: {\n\t\t\t\t...options.appearance,\n\t\t\t\tcompact: true,\n\t\t\t\tskipFadeInAnimation: this.isInstantlyHovering(),\n\t\t\t\t...overrideOptions.appearance\n\t\t\t}\n\t\t}, focus);\n\t}\n\n\tprivate isInstantlyHovering(): boolean {\n\t\treturn !!this.hoverOptions?.instantHover && Date.now() - this.lastHoverHideTime < this.timeLimit;\n\t}\n\n\tonDidHideHover(): void {\n\t\tthis.hoverDisposables.clear();\n\t\tif (this.hoverOptions?.instantHover) {\n\t\t\tthis.lastHoverHideTime = Date.now();\n\t\t}\n\t}\n}\n\n// TODO@benibenj remove this, only temp fix for contextviews\nexport const nativeHoverDelegate: IHoverDelegate = {\n\tshowHover: function (): IHoverWidget | undefined {\n\t\tthrow new Error('Native hover function not implemented.');\n\t},\n\tdelay: 0,\n\tshowNativeHover: true\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IHoverDelegate, IHoverDelegateOptions } from '../../../base/browser/ui/hover/hoverDelegate.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { addStandardDisposableListener, isHTMLElement } from '../../../base/browser/dom.js';\nimport { KeyCode } from '../../../base/common/keyCodes.js';\nimport { IHoverDelegate2, IHoverOptions, IHoverWidget, IManagedHoverContentOrFactory } from '../../../base/browser/ui/hover/hover.js';\n\nexport const IHoverService = createDecorator<IHoverService>('hoverService');\n\nexport interface IHoverService extends IHoverDelegate2 {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface IHoverDelayOptions {\n\treadonly instantHover?: boolean;\n\treadonly dynamicDelay?: (content?: IManagedHoverContentOrFactory) => number | undefined;\n}\n\nexport class WorkbenchHoverDelegate extends Disposable implements IHoverDelegate {\n\n\tprivate lastHoverHideTime = 0;\n\tprivate timeLimit = 200;\n\n\tprivate _delay: number;\n\tget delay(): number | ((content: IManagedHoverContentOrFactory) => number) {\n\t\tif (this.isInstantlyHovering()) {\n\t\t\treturn 0; // show instantly when a hover was recently shown\n\t\t}\n\n\t\tif (this.hoverOptions?.dynamicDelay) {\n\t\t\treturn content => this.hoverOptions?.dynamicDelay?.(content) ?? this._delay;\n\t\t}\n\n\t\treturn this._delay;\n\t}\n\n\tprivate readonly hoverDisposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tpublic readonly placement: 'mouse' | 'element',\n\t\tprivate readonly hoverOptions: IHoverDelayOptions | undefined,\n\t\tprivate overrideOptions: Partial<IHoverOptions> | ((options: IHoverDelegateOptions, focus?: boolean) => Partial<IHoverOptions>) = {},\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\n\t\tthis._delay = this.configurationService.getValue<number>('workbench.hover.delay');\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('workbench.hover.delay')) {\n\t\t\t\tthis._delay = this.configurationService.getValue<number>('workbench.hover.delay');\n\t\t\t}\n\t\t}));\n\t}\n\n\tshowHover(options: IHoverDelegateOptions, focus?: boolean): IHoverWidget | undefined {\n\t\tconst overrideOptions = typeof this.overrideOptions === 'function' ? this.overrideOptions(options, focus) : this.overrideOptions;\n\n\t\t// close hover on escape\n\t\tthis.hoverDisposables.clear();\n\t\tconst targets = isHTMLElement(options.target) ? [options.target] : options.target.targetElements;\n\t\tfor (const target of targets) {\n\t\t\tthis.hoverDisposables.add(addStandardDisposableListener(target, 'keydown', (e) => {\n\t\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\t\tthis.hoverService.hideHover();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tconst id = isHTMLElement(options.content)\n\t\t\t? undefined\n\t\t\t: typeof options.content === 'string'\n\t\t\t\t? options.content.toString()\n\t\t\t\t: options.content.value;\n\n\t\treturn this.hoverService.showInstantHover({\n\t\t\t...options,\n\t\t\t...overrideOptions,\n\t\t\tpersistence: {\n\t\t\t\thideOnKeyDown: true,\n\t\t\t\t...overrideOptions.persistence\n\t\t\t},\n\t\t\tid,\n\t\t\tappearance: {\n\t\t\t\t...options.appearance,\n\t\t\t\tcompact: true,\n\t\t\t\tskipFadeInAnimation: this.isInstantlyHovering(),\n\t\t\t\t...overrideOptions.appearance\n\t\t\t}\n\t\t}, focus);\n\t}\n\n\tprivate isInstantlyHovering(): boolean {\n\t\treturn !!this.hoverOptions?.instantHover && Date.now() - this.lastHoverHideTime < this.timeLimit;\n\t}\n\n\tonDidHideHover(): void {\n\t\tthis.hoverDisposables.clear();\n\t\tif (this.hoverOptions?.instantHover) {\n\t\t\tthis.lastHoverHideTime = Date.now();\n\t\t}\n\t}\n}\n\n// TODO@benibenj remove this, only temp fix for contextviews\nexport const nativeHoverDelegate: IHoverDelegate = {\n\tshowHover: function (): IHoverWidget | undefined {\n\t\tthrow new Error('Native hover function not implemented.');\n\t},\n\tdelay: 0,\n\tshowNativeHover: true\n};\n"]}