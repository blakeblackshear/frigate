{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/accessibility/browser/accessibilityService.ts","vs/platform/accessibility/browser/accessibilityService.ts"],"names":[],"mappings":"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","file":"accessibilityService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { AccessibilitySupport, CONTEXT_ACCESSIBILITY_MODE_ENABLED, IAccessibilityService } from '../common/accessibility.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKey, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\n\nexport class AccessibilityService extends Disposable implements IAccessibilityService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _accessibilityModeEnabledContext: IContextKey<boolean>;\n\tprotected _accessibilitySupport = AccessibilitySupport.Unknown;\n\tprotected readonly _onDidChangeScreenReaderOptimized = new Emitter<void>();\n\n\tprotected _configMotionReduced: 'auto' | 'on' | 'off';\n\tprotected _systemMotionReduced: boolean;\n\tprotected readonly _onDidChangeReducedMotion = new Emitter<void>();\n\n\tprivate _linkUnderlinesEnabled: boolean;\n\tprotected readonly _onDidChangeLinkUnderline = new Emitter<void>();\n\n\tconstructor(\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@ILayoutService private readonly _layoutService: ILayoutService,\n\t\t@IConfigurationService protected readonly _configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t\tthis._accessibilityModeEnabledContext = CONTEXT_ACCESSIBILITY_MODE_ENABLED.bindTo(this._contextKeyService);\n\n\t\tconst updateContextKey = () => this._accessibilityModeEnabledContext.set(this.isScreenReaderOptimized());\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('editor.accessibilitySupport')) {\n\t\t\t\tupdateContextKey();\n\t\t\t\tthis._onDidChangeScreenReaderOptimized.fire();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration('workbench.reduceMotion')) {\n\t\t\t\tthis._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n\t\t\t\tthis._onDidChangeReducedMotion.fire();\n\t\t\t}\n\t\t}));\n\t\tupdateContextKey();\n\t\tthis._register(this.onDidChangeScreenReaderOptimized(() => updateContextKey()));\n\n\t\tconst reduceMotionMatcher = mainWindow.matchMedia(`(prefers-reduced-motion: reduce)`);\n\t\tthis._systemMotionReduced = reduceMotionMatcher.matches;\n\t\tthis._configMotionReduced = this._configurationService.getValue<'auto' | 'on' | 'off'>('workbench.reduceMotion');\n\n\t\tthis._linkUnderlinesEnabled = this._configurationService.getValue('accessibility.underlineLinks');\n\n\t\tthis.initReducedMotionListeners(reduceMotionMatcher);\n\t\tthis.initLinkUnderlineListeners();\n\t}\n\n\tprivate initReducedMotionListeners(reduceMotionMatcher: MediaQueryList) {\n\n\t\tthis._register(addDisposableListener(reduceMotionMatcher, 'change', () => {\n\t\t\tthis._systemMotionReduced = reduceMotionMatcher.matches;\n\t\t\tif (this._configMotionReduced === 'auto') {\n\t\t\t\tthis._onDidChangeReducedMotion.fire();\n\t\t\t}\n\t\t}));\n\n\t\tconst updateRootClasses = () => {\n\t\t\tconst reduce = this.isMotionReduced();\n\t\t\tthis._layoutService.mainContainer.classList.toggle('reduce-motion', reduce);\n\t\t\tthis._layoutService.mainContainer.classList.toggle('enable-motion', !reduce);\n\t\t};\n\n\t\tupdateRootClasses();\n\t\tthis._register(this.onDidChangeReducedMotion(() => updateRootClasses()));\n\t}\n\n\tprivate initLinkUnderlineListeners() {\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('accessibility.underlineLinks')) {\n\t\t\t\tconst linkUnderlinesEnabled = this._configurationService.getValue<boolean>('accessibility.underlineLinks');\n\t\t\t\tthis._linkUnderlinesEnabled = linkUnderlinesEnabled;\n\t\t\t\tthis._onDidChangeLinkUnderline.fire();\n\t\t\t}\n\t\t}));\n\n\t\tconst updateLinkUnderlineClasses = () => {\n\t\t\tconst underlineLinks = this._linkUnderlinesEnabled;\n\t\t\tthis._layoutService.mainContainer.classList.toggle('underline-links', underlineLinks);\n\t\t};\n\n\t\tupdateLinkUnderlineClasses();\n\n\t\tthis._register(this.onDidChangeLinkUnderlines(() => updateLinkUnderlineClasses()));\n\t}\n\n\tpublic onDidChangeLinkUnderlines(listener: () => void) {\n\t\treturn this._onDidChangeLinkUnderline.event(listener);\n\t}\n\n\tget onDidChangeScreenReaderOptimized(): Event<void> {\n\t\treturn this._onDidChangeScreenReaderOptimized.event;\n\t}\n\n\tisScreenReaderOptimized(): boolean {\n\t\tconst config = this._configurationService.getValue('editor.accessibilitySupport');\n\t\treturn config === 'on' || (config === 'auto' && this._accessibilitySupport === AccessibilitySupport.Enabled);\n\t}\n\n\tget onDidChangeReducedMotion(): Event<void> {\n\t\treturn this._onDidChangeReducedMotion.event;\n\t}\n\n\tisMotionReduced(): boolean {\n\t\tconst config = this._configMotionReduced;\n\t\treturn config === 'on' || (config === 'auto' && this._systemMotionReduced);\n\t}\n\n\tgetAccessibilitySupport(): AccessibilitySupport {\n\t\treturn this._accessibilitySupport;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { AccessibilitySupport, CONTEXT_ACCESSIBILITY_MODE_ENABLED, IAccessibilityService } from '../common/accessibility.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKey, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\n\nexport class AccessibilityService extends Disposable implements IAccessibilityService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _accessibilityModeEnabledContext: IContextKey<boolean>;\n\tprotected _accessibilitySupport = AccessibilitySupport.Unknown;\n\tprotected readonly _onDidChangeScreenReaderOptimized = new Emitter<void>();\n\n\tprotected _configMotionReduced: 'auto' | 'on' | 'off';\n\tprotected _systemMotionReduced: boolean;\n\tprotected readonly _onDidChangeReducedMotion = new Emitter<void>();\n\n\tprivate _linkUnderlinesEnabled: boolean;\n\tprotected readonly _onDidChangeLinkUnderline = new Emitter<void>();\n\n\tconstructor(\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@ILayoutService private readonly _layoutService: ILayoutService,\n\t\t@IConfigurationService protected readonly _configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t\tthis._accessibilityModeEnabledContext = CONTEXT_ACCESSIBILITY_MODE_ENABLED.bindTo(this._contextKeyService);\n\n\t\tconst updateContextKey = () => this._accessibilityModeEnabledContext.set(this.isScreenReaderOptimized());\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('editor.accessibilitySupport')) {\n\t\t\t\tupdateContextKey();\n\t\t\t\tthis._onDidChangeScreenReaderOptimized.fire();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration('workbench.reduceMotion')) {\n\t\t\t\tthis._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n\t\t\t\tthis._onDidChangeReducedMotion.fire();\n\t\t\t}\n\t\t}));\n\t\tupdateContextKey();\n\t\tthis._register(this.onDidChangeScreenReaderOptimized(() => updateContextKey()));\n\n\t\tconst reduceMotionMatcher = mainWindow.matchMedia(`(prefers-reduced-motion: reduce)`);\n\t\tthis._systemMotionReduced = reduceMotionMatcher.matches;\n\t\tthis._configMotionReduced = this._configurationService.getValue<'auto' | 'on' | 'off'>('workbench.reduceMotion');\n\n\t\tthis._linkUnderlinesEnabled = this._configurationService.getValue('accessibility.underlineLinks');\n\n\t\tthis.initReducedMotionListeners(reduceMotionMatcher);\n\t\tthis.initLinkUnderlineListeners();\n\t}\n\n\tprivate initReducedMotionListeners(reduceMotionMatcher: MediaQueryList) {\n\n\t\tthis._register(addDisposableListener(reduceMotionMatcher, 'change', () => {\n\t\t\tthis._systemMotionReduced = reduceMotionMatcher.matches;\n\t\t\tif (this._configMotionReduced === 'auto') {\n\t\t\t\tthis._onDidChangeReducedMotion.fire();\n\t\t\t}\n\t\t}));\n\n\t\tconst updateRootClasses = () => {\n\t\t\tconst reduce = this.isMotionReduced();\n\t\t\tthis._layoutService.mainContainer.classList.toggle('reduce-motion', reduce);\n\t\t\tthis._layoutService.mainContainer.classList.toggle('enable-motion', !reduce);\n\t\t};\n\n\t\tupdateRootClasses();\n\t\tthis._register(this.onDidChangeReducedMotion(() => updateRootClasses()));\n\t}\n\n\tprivate initLinkUnderlineListeners() {\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('accessibility.underlineLinks')) {\n\t\t\t\tconst linkUnderlinesEnabled = this._configurationService.getValue<boolean>('accessibility.underlineLinks');\n\t\t\t\tthis._linkUnderlinesEnabled = linkUnderlinesEnabled;\n\t\t\t\tthis._onDidChangeLinkUnderline.fire();\n\t\t\t}\n\t\t}));\n\n\t\tconst updateLinkUnderlineClasses = () => {\n\t\t\tconst underlineLinks = this._linkUnderlinesEnabled;\n\t\t\tthis._layoutService.mainContainer.classList.toggle('underline-links', underlineLinks);\n\t\t};\n\n\t\tupdateLinkUnderlineClasses();\n\n\t\tthis._register(this.onDidChangeLinkUnderlines(() => updateLinkUnderlineClasses()));\n\t}\n\n\tpublic onDidChangeLinkUnderlines(listener: () => void) {\n\t\treturn this._onDidChangeLinkUnderline.event(listener);\n\t}\n\n\tget onDidChangeScreenReaderOptimized(): Event<void> {\n\t\treturn this._onDidChangeScreenReaderOptimized.event;\n\t}\n\n\tisScreenReaderOptimized(): boolean {\n\t\tconst config = this._configurationService.getValue('editor.accessibilitySupport');\n\t\treturn config === 'on' || (config === 'auto' && this._accessibilitySupport === AccessibilitySupport.Enabled);\n\t}\n\n\tget onDidChangeReducedMotion(): Event<void> {\n\t\treturn this._onDidChangeReducedMotion.event;\n\t}\n\n\tisMotionReduced(): boolean {\n\t\tconst config = this._configMotionReduced;\n\t\treturn config === 'on' || (config === 'auto' && this._systemMotionReduced);\n\t}\n\n\tgetAccessibilitySupport(): AccessibilitySupport {\n\t\treturn this._accessibilitySupport;\n\t}\n}\n"]}