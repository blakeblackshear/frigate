{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsCustomView.ts","vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsCustomView.ts"],"names":[],"mappings":"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","file":"inlineEditsCustomView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derived, derivedObservableWithCache, IObservable, IReader, observableValue } from '../../../../../../../base/common/observable.js';\nimport { editorBackground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { InlineCompletionDisplayLocation, InlineCompletionDisplayLocationKind } from '../../../../../../common/languages.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getEditorBlendedColor, inlineEditIndicatorPrimaryBackground, inlineEditIndicatorSecondaryBackground, inlineEditIndicatorsuccessfulBackground } from '../theme.js';\nimport { getContentRenderWidth, maxContentWidthInRange, rectToProps } from '../utils/utils.js';\n\nconst MIN_END_OF_LINE_PADDING = 14;\nconst PADDING_VERTICALLY = 0;\nconst PADDING_HORIZONTALLY = 4;\nconst HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW = 4;\nconst VERTICAL_OFFSET_WHEN_ABOVE_BELOW = 2;\n// !! minEndOfLinePadding should always be larger than paddingHorizontally + horizontalOffsetWhenAboveBelow\n\nexport class InlineEditsCustomView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _isHovered = observableValue(this, false);\n\treadonly isHovered: IObservable<boolean> = this._isHovered;\n\tprivate readonly _viewRef = n.ref<HTMLDivElement>();\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\treadonly minEditorScrollHeight: IObservable<number>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tdisplayLocation: IObservable<InlineCompletionDisplayLocation | undefined>,\n\t\ttabAction: IObservable<InlineEditTabAction>,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst styles = tabAction.map((v, reader) => {\n\t\t\tlet border;\n\t\t\tswitch (v) {\n\t\t\t\tcase InlineEditTabAction.Inactive: border = inlineEditIndicatorSecondaryBackground; break;\n\t\t\t\tcase InlineEditTabAction.Jump: border = inlineEditIndicatorPrimaryBackground; break;\n\t\t\t\tcase InlineEditTabAction.Accept: border = inlineEditIndicatorsuccessfulBackground; break;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tborder: getEditorBlendedColor(border, themeService).read(reader).toString(),\n\t\t\t\tbackground: asCssVariable(editorBackground)\n\t\t\t};\n\t\t});\n\n\t\tconst state = displayLocation.map(dl => dl ? this.getState(dl) : undefined);\n\n\t\tconst view = state.map(s => s ? this.getRendering(s, styles) : undefined);\n\n\t\tthis.minEditorScrollHeight = derived(this, reader => {\n\t\t\tconst s = state.read(reader);\n\t\t\tif (!s) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn s.rect.read(reader).bottom + this._editor.getScrollTop();\n\t\t});\n\n\t\tconst overlay = n.div({\n\t\t\tclass: 'inline-edits-custom-view',\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t\ttop: '0px',\n\t\t\t\tleft: '0px',\n\t\t\t\tdisplay: 'block',\n\t\t\t},\n\t\t}, [view]).keepUpdated(this._store);\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: overlay.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derivedObservableWithCache<number>(this, (reader, prev) => {\n\t\t\t\tconst s = state.read(reader);\n\t\t\t\tif (!s) { return prev ?? 0; }\n\n\t\t\t\tconst current = s.rect.map(rect => rect.right).read(reader)\n\t\t\t\t\t+ this._editorObs.layoutInfoVerticalScrollbarWidth.read(reader)\n\t\t\t\t\t+ PADDING_HORIZONTALLY\n\t\t\t\t\t- this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\t\treturn Math.max(prev ?? 0, current); // will run into infinite loop otherwise TODO: fix this\n\t\t\t}).recomputeInitiallyAndOnChange(this._store),\n\t\t}));\n\n\t\tthis._register(autorun((reader) => {\n\t\t\tconst v = view.read(reader);\n\t\t\tif (!v) { this._isHovered.set(false, undefined); return; }\n\t\t\tthis._isHovered.set(overlay.isHovered.read(reader), undefined);\n\t\t}));\n\t}\n\n\t// TODO: this is very similar to side by side `fitsInsideViewport`, try to use the same function\n\tprivate fitsInsideViewport(range: LineRange, displayLabel: string, reader: IReader | undefined): boolean {\n\t\tconst editorWidth = this._editorObs.layoutInfoWidth.read(reader);\n\t\tconst editorContentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\tconst editorVerticalScrollbar = this._editor.getLayoutInfo().verticalScrollbarWidth;\n\t\tconst minimapWidth = this._editorObs.layoutInfoMinimap.read(reader).minimapLeft !== 0 ? this._editorObs.layoutInfoMinimap.read(reader).minimapWidth : 0;\n\n\t\tconst maxOriginalContent = maxContentWidthInRange(this._editorObs, range, undefined);\n\t\tconst maxModifiedContent = getContentRenderWidth(displayLabel, this._editor, this._editor.getModel()!);\n\t\tconst padding = PADDING_HORIZONTALLY + MIN_END_OF_LINE_PADDING;\n\n\t\treturn maxOriginalContent + maxModifiedContent + padding < editorWidth - editorContentLeft - editorVerticalScrollbar - minimapWidth;\n\t}\n\n\tprivate getState(displayLocation: InlineCompletionDisplayLocation): { rect: IObservable<Rect>; label: string; kind: InlineCompletionDisplayLocationKind } {\n\n\t\tconst contentState = derived(this, (reader) => {\n\t\t\tconst startLineNumber = displayLocation.range.startLineNumber;\n\t\t\tconst endLineNumber = displayLocation.range.endLineNumber;\n\t\t\tconst startColumn = displayLocation.range.startColumn;\n\t\t\tconst endColumn = displayLocation.range.endColumn;\n\t\t\tconst lineCount = this._editor.getModel()?.getLineCount() ?? 0;\n\n\t\t\tconst lineWidth = maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber, startLineNumber + 1), reader);\n\t\t\tconst lineWidthBelow = startLineNumber + 1 <= lineCount ? maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber + 1, startLineNumber + 2), reader) : undefined;\n\t\t\tconst lineWidthAbove = startLineNumber - 1 >= 1 ? maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber - 1, startLineNumber), reader) : undefined;\n\t\t\tconst startContentLeftOffset = this._editor.getOffsetForColumn(startLineNumber, startColumn);\n\t\t\tconst endContentLeftOffset = this._editor.getOffsetForColumn(endLineNumber, endColumn);\n\n\t\t\treturn {\n\t\t\t\tlineWidth,\n\t\t\t\tlineWidthBelow,\n\t\t\t\tlineWidthAbove,\n\t\t\t\tstartContentLeftOffset,\n\t\t\t\tendContentLeftOffset\n\t\t\t};\n\t\t});\n\n\t\tconst startLineNumber = displayLocation.range.startLineNumber;\n\t\tconst endLineNumber = displayLocation.range.endLineNumber;\n\t\t// only check viewport once in the beginning when rendering the view\n\t\tconst fitsInsideViewport = this.fitsInsideViewport(new LineRange(startLineNumber, endLineNumber + 1), displayLocation.label, undefined);\n\n\t\tconst rect = derived(this, reader => {\n\t\t\tconst w = this._editorObs.getOption(EditorOption.fontInfo).read(reader).typicalHalfwidthCharacterWidth;\n\n\t\t\tconst { lineWidth, lineWidthBelow, lineWidthAbove, startContentLeftOffset, endContentLeftOffset } = contentState.read(reader);\n\n\t\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\tconst lineHeight = this._editorObs.observeLineHeightForLine(startLineNumber).recomputeInitiallyAndOnChange(reader.store).read(reader);\n\t\t\tconst scrollTop = this._editorObs.scrollTop.read(reader);\n\t\t\tconst scrollLeft = this._editorObs.scrollLeft.read(reader);\n\n\t\t\tlet position: 'end' | 'below' | 'above';\n\t\t\tif (startLineNumber === endLineNumber && endContentLeftOffset + 5 * w >= lineWidth && fitsInsideViewport) {\n\t\t\t\tposition = 'end'; // Render at the end of the line if the range ends almost at the end of the line\n\t\t\t} else if (lineWidthBelow !== undefined && lineWidthBelow + MIN_END_OF_LINE_PADDING - HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW - PADDING_HORIZONTALLY < startContentLeftOffset) {\n\t\t\t\tposition = 'below'; // Render Below if possible\n\t\t\t} else if (lineWidthAbove !== undefined && lineWidthAbove + MIN_END_OF_LINE_PADDING - HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW - PADDING_HORIZONTALLY < startContentLeftOffset) {\n\t\t\t\tposition = 'above'; // Render Above if possible\n\t\t\t} else {\n\t\t\t\tposition = 'end'; // Render at the end of the line otherwise\n\t\t\t}\n\n\t\t\tlet topOfLine;\n\t\t\tlet contentStartOffset;\n\t\t\tlet deltaX = 0;\n\t\t\tlet deltaY = 0;\n\n\t\t\tswitch (position) {\n\t\t\t\tcase 'end': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber);\n\t\t\t\t\tcontentStartOffset = lineWidth;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + MIN_END_OF_LINE_PADDING;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'below': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber + 1);\n\t\t\t\t\tcontentStartOffset = startContentLeftOffset;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tdeltaY = PADDING_VERTICALLY + VERTICAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'above': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber - 1);\n\t\t\t\t\tcontentStartOffset = startContentLeftOffset;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tdeltaY = -PADDING_VERTICALLY + VERTICAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst textRect = Rect.fromLeftTopWidthHeight(\n\t\t\t\tcontentLeft + contentStartOffset - scrollLeft,\n\t\t\t\ttopOfLine - scrollTop,\n\t\t\t\tw * displayLocation.label.length,\n\t\t\t\tlineHeight\n\t\t\t);\n\n\t\t\treturn textRect.withMargin(PADDING_VERTICALLY, PADDING_HORIZONTALLY).translateX(deltaX).translateY(deltaY);\n\t\t});\n\n\t\treturn {\n\t\t\trect,\n\t\t\tlabel: displayLocation.label,\n\t\t\tkind: displayLocation.kind\n\t\t};\n\t}\n\n\tprivate getRendering(state: { rect: IObservable<Rect>; label: string; kind: InlineCompletionDisplayLocationKind }, styles: IObservable<{ background: string; border: string }>) {\n\n\t\tconst line = document.createElement('div');\n\t\tconst t = this._editor.getModel()!.tokenization.tokenizeLinesAt(1, [state.label])?.[0];\n\t\tlet tokens: LineTokens;\n\t\tif (t && state.kind === InlineCompletionDisplayLocationKind.Code) {\n\t\t\ttokens = TokenArray.fromLineTokens(t).toLineTokens(state.label, this._languageService.languageIdCodec);\n\t\t} else {\n\t\t\ttokens = LineTokens.createEmpty(state.label, this._languageService.languageIdCodec);\n\t\t}\n\n\t\tconst result = renderLines(new LineSource([tokens]), RenderOptions.fromEditor(this._editor).withSetWidth(false).withScrollBeyondLastColumn(0), [], line, true);\n\t\tline.style.width = `${result.minWidthInPx}px`;\n\n\t\tconst rect = state.rect.map(r => r.withMargin(0, PADDING_HORIZONTALLY));\n\n\t\treturn n.div({\n\t\t\tclass: 'collapsedView',\n\t\t\tref: this._viewRef,\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\t...rectToProps(reader => rect.read(reader)),\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tboxSizing: 'border-box',\n\t\t\t\tcursor: 'pointer',\n\t\t\t\tborder: styles.map(s => `1px solid ${s.border}`),\n\t\t\t\tborderRadius: '4px',\n\t\t\t\tbackgroundColor: styles.map(s => s.background),\n\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignItems: 'center',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t},\n\t\t\tonmousedown: e => {\n\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t},\n\t\t\tonclick: (e) => { this._onDidClick.fire(new StandardMouseEvent(getWindow(e), e)); }\n\t\t}, [\n\t\t\tline\n\t\t]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derived, derivedObservableWithCache, IObservable, IReader, observableValue } from '../../../../../../../base/common/observable.js';\nimport { editorBackground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { InlineCompletionDisplayLocation, InlineCompletionDisplayLocationKind } from '../../../../../../common/languages.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getEditorBlendedColor, inlineEditIndicatorPrimaryBackground, inlineEditIndicatorSecondaryBackground, inlineEditIndicatorsuccessfulBackground } from '../theme.js';\nimport { getContentRenderWidth, maxContentWidthInRange, rectToProps } from '../utils/utils.js';\n\nconst MIN_END_OF_LINE_PADDING = 14;\nconst PADDING_VERTICALLY = 0;\nconst PADDING_HORIZONTALLY = 4;\nconst HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW = 4;\nconst VERTICAL_OFFSET_WHEN_ABOVE_BELOW = 2;\n// !! minEndOfLinePadding should always be larger than paddingHorizontally + horizontalOffsetWhenAboveBelow\n\nexport class InlineEditsCustomView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _isHovered = observableValue(this, false);\n\treadonly isHovered: IObservable<boolean> = this._isHovered;\n\tprivate readonly _viewRef = n.ref<HTMLDivElement>();\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\treadonly minEditorScrollHeight: IObservable<number>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tdisplayLocation: IObservable<InlineCompletionDisplayLocation | undefined>,\n\t\ttabAction: IObservable<InlineEditTabAction>,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst styles = tabAction.map((v, reader) => {\n\t\t\tlet border;\n\t\t\tswitch (v) {\n\t\t\t\tcase InlineEditTabAction.Inactive: border = inlineEditIndicatorSecondaryBackground; break;\n\t\t\t\tcase InlineEditTabAction.Jump: border = inlineEditIndicatorPrimaryBackground; break;\n\t\t\t\tcase InlineEditTabAction.Accept: border = inlineEditIndicatorsuccessfulBackground; break;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tborder: getEditorBlendedColor(border, themeService).read(reader).toString(),\n\t\t\t\tbackground: asCssVariable(editorBackground)\n\t\t\t};\n\t\t});\n\n\t\tconst state = displayLocation.map(dl => dl ? this.getState(dl) : undefined);\n\n\t\tconst view = state.map(s => s ? this.getRendering(s, styles) : undefined);\n\n\t\tthis.minEditorScrollHeight = derived(this, reader => {\n\t\t\tconst s = state.read(reader);\n\t\t\tif (!s) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn s.rect.read(reader).bottom + this._editor.getScrollTop();\n\t\t});\n\n\t\tconst overlay = n.div({\n\t\t\tclass: 'inline-edits-custom-view',\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t\ttop: '0px',\n\t\t\t\tleft: '0px',\n\t\t\t\tdisplay: 'block',\n\t\t\t},\n\t\t}, [view]).keepUpdated(this._store);\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: overlay.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derivedObservableWithCache<number>(this, (reader, prev) => {\n\t\t\t\tconst s = state.read(reader);\n\t\t\t\tif (!s) { return prev ?? 0; }\n\n\t\t\t\tconst current = s.rect.map(rect => rect.right).read(reader)\n\t\t\t\t\t+ this._editorObs.layoutInfoVerticalScrollbarWidth.read(reader)\n\t\t\t\t\t+ PADDING_HORIZONTALLY\n\t\t\t\t\t- this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\t\treturn Math.max(prev ?? 0, current); // will run into infinite loop otherwise TODO: fix this\n\t\t\t}).recomputeInitiallyAndOnChange(this._store),\n\t\t}));\n\n\t\tthis._register(autorun((reader) => {\n\t\t\tconst v = view.read(reader);\n\t\t\tif (!v) { this._isHovered.set(false, undefined); return; }\n\t\t\tthis._isHovered.set(overlay.isHovered.read(reader), undefined);\n\t\t}));\n\t}\n\n\t// TODO: this is very similar to side by side `fitsInsideViewport`, try to use the same function\n\tprivate fitsInsideViewport(range: LineRange, displayLabel: string, reader: IReader | undefined): boolean {\n\t\tconst editorWidth = this._editorObs.layoutInfoWidth.read(reader);\n\t\tconst editorContentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\tconst editorVerticalScrollbar = this._editor.getLayoutInfo().verticalScrollbarWidth;\n\t\tconst minimapWidth = this._editorObs.layoutInfoMinimap.read(reader).minimapLeft !== 0 ? this._editorObs.layoutInfoMinimap.read(reader).minimapWidth : 0;\n\n\t\tconst maxOriginalContent = maxContentWidthInRange(this._editorObs, range, undefined);\n\t\tconst maxModifiedContent = getContentRenderWidth(displayLabel, this._editor, this._editor.getModel()!);\n\t\tconst padding = PADDING_HORIZONTALLY + MIN_END_OF_LINE_PADDING;\n\n\t\treturn maxOriginalContent + maxModifiedContent + padding < editorWidth - editorContentLeft - editorVerticalScrollbar - minimapWidth;\n\t}\n\n\tprivate getState(displayLocation: InlineCompletionDisplayLocation): { rect: IObservable<Rect>; label: string; kind: InlineCompletionDisplayLocationKind } {\n\n\t\tconst contentState = derived(this, (reader) => {\n\t\t\tconst startLineNumber = displayLocation.range.startLineNumber;\n\t\t\tconst endLineNumber = displayLocation.range.endLineNumber;\n\t\t\tconst startColumn = displayLocation.range.startColumn;\n\t\t\tconst endColumn = displayLocation.range.endColumn;\n\t\t\tconst lineCount = this._editor.getModel()?.getLineCount() ?? 0;\n\n\t\t\tconst lineWidth = maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber, startLineNumber + 1), reader);\n\t\t\tconst lineWidthBelow = startLineNumber + 1 <= lineCount ? maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber + 1, startLineNumber + 2), reader) : undefined;\n\t\t\tconst lineWidthAbove = startLineNumber - 1 >= 1 ? maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber - 1, startLineNumber), reader) : undefined;\n\t\t\tconst startContentLeftOffset = this._editor.getOffsetForColumn(startLineNumber, startColumn);\n\t\t\tconst endContentLeftOffset = this._editor.getOffsetForColumn(endLineNumber, endColumn);\n\n\t\t\treturn {\n\t\t\t\tlineWidth,\n\t\t\t\tlineWidthBelow,\n\t\t\t\tlineWidthAbove,\n\t\t\t\tstartContentLeftOffset,\n\t\t\t\tendContentLeftOffset\n\t\t\t};\n\t\t});\n\n\t\tconst startLineNumber = displayLocation.range.startLineNumber;\n\t\tconst endLineNumber = displayLocation.range.endLineNumber;\n\t\t// only check viewport once in the beginning when rendering the view\n\t\tconst fitsInsideViewport = this.fitsInsideViewport(new LineRange(startLineNumber, endLineNumber + 1), displayLocation.label, undefined);\n\n\t\tconst rect = derived(this, reader => {\n\t\t\tconst w = this._editorObs.getOption(EditorOption.fontInfo).read(reader).typicalHalfwidthCharacterWidth;\n\n\t\t\tconst { lineWidth, lineWidthBelow, lineWidthAbove, startContentLeftOffset, endContentLeftOffset } = contentState.read(reader);\n\n\t\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\tconst lineHeight = this._editorObs.observeLineHeightForLine(startLineNumber).recomputeInitiallyAndOnChange(reader.store).read(reader);\n\t\t\tconst scrollTop = this._editorObs.scrollTop.read(reader);\n\t\t\tconst scrollLeft = this._editorObs.scrollLeft.read(reader);\n\n\t\t\tlet position: 'end' | 'below' | 'above';\n\t\t\tif (startLineNumber === endLineNumber && endContentLeftOffset + 5 * w >= lineWidth && fitsInsideViewport) {\n\t\t\t\tposition = 'end'; // Render at the end of the line if the range ends almost at the end of the line\n\t\t\t} else if (lineWidthBelow !== undefined && lineWidthBelow + MIN_END_OF_LINE_PADDING - HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW - PADDING_HORIZONTALLY < startContentLeftOffset) {\n\t\t\t\tposition = 'below'; // Render Below if possible\n\t\t\t} else if (lineWidthAbove !== undefined && lineWidthAbove + MIN_END_OF_LINE_PADDING - HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW - PADDING_HORIZONTALLY < startContentLeftOffset) {\n\t\t\t\tposition = 'above'; // Render Above if possible\n\t\t\t} else {\n\t\t\t\tposition = 'end'; // Render at the end of the line otherwise\n\t\t\t}\n\n\t\t\tlet topOfLine;\n\t\t\tlet contentStartOffset;\n\t\t\tlet deltaX = 0;\n\t\t\tlet deltaY = 0;\n\n\t\t\tswitch (position) {\n\t\t\t\tcase 'end': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber);\n\t\t\t\t\tcontentStartOffset = lineWidth;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + MIN_END_OF_LINE_PADDING;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'below': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber + 1);\n\t\t\t\t\tcontentStartOffset = startContentLeftOffset;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tdeltaY = PADDING_VERTICALLY + VERTICAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'above': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber - 1);\n\t\t\t\t\tcontentStartOffset = startContentLeftOffset;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tdeltaY = -PADDING_VERTICALLY + VERTICAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst textRect = Rect.fromLeftTopWidthHeight(\n\t\t\t\tcontentLeft + contentStartOffset - scrollLeft,\n\t\t\t\ttopOfLine - scrollTop,\n\t\t\t\tw * displayLocation.label.length,\n\t\t\t\tlineHeight\n\t\t\t);\n\n\t\t\treturn textRect.withMargin(PADDING_VERTICALLY, PADDING_HORIZONTALLY).translateX(deltaX).translateY(deltaY);\n\t\t});\n\n\t\treturn {\n\t\t\trect,\n\t\t\tlabel: displayLocation.label,\n\t\t\tkind: displayLocation.kind\n\t\t};\n\t}\n\n\tprivate getRendering(state: { rect: IObservable<Rect>; label: string; kind: InlineCompletionDisplayLocationKind }, styles: IObservable<{ background: string; border: string }>) {\n\n\t\tconst line = document.createElement('div');\n\t\tconst t = this._editor.getModel()!.tokenization.tokenizeLinesAt(1, [state.label])?.[0];\n\t\tlet tokens: LineTokens;\n\t\tif (t && state.kind === InlineCompletionDisplayLocationKind.Code) {\n\t\t\ttokens = TokenArray.fromLineTokens(t).toLineTokens(state.label, this._languageService.languageIdCodec);\n\t\t} else {\n\t\t\ttokens = LineTokens.createEmpty(state.label, this._languageService.languageIdCodec);\n\t\t}\n\n\t\tconst result = renderLines(new LineSource([tokens]), RenderOptions.fromEditor(this._editor).withSetWidth(false).withScrollBeyondLastColumn(0), [], line, true);\n\t\tline.style.width = `${result.minWidthInPx}px`;\n\n\t\tconst rect = state.rect.map(r => r.withMargin(0, PADDING_HORIZONTALLY));\n\n\t\treturn n.div({\n\t\t\tclass: 'collapsedView',\n\t\t\tref: this._viewRef,\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\t...rectToProps(reader => rect.read(reader)),\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tboxSizing: 'border-box',\n\t\t\t\tcursor: 'pointer',\n\t\t\t\tborder: styles.map(s => `1px solid ${s.border}`),\n\t\t\t\tborderRadius: '4px',\n\t\t\t\tbackgroundColor: styles.map(s => s.background),\n\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignItems: 'center',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t},\n\t\t\tonmousedown: e => {\n\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t},\n\t\t\tonclick: (e) => { this._onDidClick.fire(new StandardMouseEvent(getWindow(e), e)); }\n\t\t}, [\n\t\t\tline\n\t\t]);\n\t}\n}\n"]}