{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/colorPicker/browser/hoverColorPicker/hoverColorPicker.ts","vs/editor/contrib/colorPicker/browser/hoverColorPicker/hoverColorPicker.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAGhG,OAAO,EAAE,iCAAiC,EAAE,MAAM,qBAAqB,CAAC;AAGxE,MAAM,UAAU,kBAAkB,CAAC,UAAoC;IACtE,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IACjC,OAAO,CAAC,CAAC,MAAM;WACX,MAAM,CAAC,IAAI,yCAAiC;WAC5C,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,YAAY,KAAK,iCAAiC,CAAC;AAC5F,CAAC","file":"hoverColorPicker.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPartialEditorMouseEvent, MouseTargetType } from '../../../../browser/editorBrowser.js';\nimport { ColorDecorationInjectedTextMarker } from '../colorDetector.js';\n\n\nexport function isOnColorDecorator(mouseEvent: IPartialEditorMouseEvent): boolean {\n\tconst target = mouseEvent.target;\n\treturn !!target\n\t\t&& target.type === MouseTargetType.CONTENT_TEXT\n\t\t&& target.detail.injectedText?.options.attachedData === ColorDecorationInjectedTextMarker;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPartialEditorMouseEvent, MouseTargetType } from '../../../../browser/editorBrowser.js';\nimport { ColorDecorationInjectedTextMarker } from '../colorDetector.js';\n\n\nexport function isOnColorDecorator(mouseEvent: IPartialEditorMouseEvent): boolean {\n\tconst target = mouseEvent.target;\n\treturn !!target\n\t\t&& target.type === MouseTargetType.CONTENT_TEXT\n\t\t&& target.detail.injectedText?.options.attachedData === ColorDecorationInjectedTextMarker;\n}\n"]}