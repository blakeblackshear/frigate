{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/colorPicker/browser/standaloneColorPicker/standaloneColorPickerController.ts","vs/editor/contrib/colorPicker/browser/standaloneColorPicker/standaloneColorPickerController.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;AAEhG,OAAO,EAAe,kBAAkB,EAAE,MAAM,yDAAyD,CAAC;AAC1G,OAAO,EAAE,qBAAqB,EAAE,MAAM,+DAA+D,CAAC;AAGtG,OAAO,EAAE,iBAAiB,EAAE,MAAM,yCAAyC,CAAC;AAC5E,OAAO,EAAE,2BAA2B,EAAE,MAAM,kCAAkC,CAAC;AAC/E,OAAO,EAAE,UAAU,EAAE,MAAM,yCAAyC,CAAC;AAE9D,IAAM,+BAA+B,GAArC,MAAM,+BAAgC,SAAQ,UAAU;;aAEhD,OAAE,GAAG,gDAAH,AAAmD,CAAC;IAKpE,YACkB,OAAoB,EACjB,kBAAsC,EACnC,qBAA6D;QAEpF,KAAK,EAAE,CAAC;QAJS,YAAO,GAAP,OAAO,CAAa;QAEG,0BAAqB,GAArB,qBAAqB,CAAuB;QAP7E,iCAA4B,GAAuC,IAAI,CAAC;QAU/E,IAAI,CAAC,6BAA6B,GAAG,iBAAiB,CAAC,4BAA4B,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAC/G,IAAI,CAAC,6BAA6B,GAAG,iBAAiB,CAAC,4BAA4B,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;IAChH,CAAC;IAEM,WAAW;QACjB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC9B,OAAO;QACR,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,GAAG,EAAE,EAAE,CAAC;YAC/C,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAC5E,2BAA2B,EAC3B,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,6BAA6B,EAClC,IAAI,CAAC,6BAA6B,CAClC,CAAC;QACH,CAAC;aAAM,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,GAAG,EAAE,EAAE,CAAC;YACtD,IAAI,CAAC,4BAA4B,EAAE,KAAK,EAAE,CAAC;QAC5C,CAAC;IACF,CAAC;IAEM,IAAI;QACV,IAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,4BAA4B,EAAE,IAAI,EAAE,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAEM,WAAW;QACjB,IAAI,CAAC,4BAA4B,EAAE,YAAY,EAAE,CAAC;QAClD,IAAI,CAAC,IAAI,EAAE,CAAC;IACb,CAAC;IAEM,MAAM,CAAC,GAAG,CAAC,MAAmB;QACpC,OAAO,MAAM,CAAC,eAAe,CAAkC,iCAA+B,CAAC,EAAE,CAAC,CAAC;IACpG,CAAC;;AA/CW,+BAA+B;IASzC,WAAA,kBAAkB,CAAA;IAClB,WAAA,qBAAqB,CAAA;GAVX,+BAA+B,CAgD3C","file":"standaloneColorPickerController.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IContextKey, IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { IEditorContribution } from '../../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../../common/editorContextKeys.js';\nimport { StandaloneColorPickerWidget } from './standaloneColorPickerWidget.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\n\nexport class StandaloneColorPickerController extends Disposable implements IEditorContribution {\n\n\tpublic static ID = 'editor.contrib.standaloneColorPickerController';\n\tprivate _standaloneColorPickerWidget: StandaloneColorPickerWidget | null = null;\n\tprivate _standaloneColorPickerVisible: IContextKey<boolean>;\n\tprivate _standaloneColorPickerFocused: IContextKey<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IContextKeyService _contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._standaloneColorPickerVisible = EditorContextKeys.standaloneColorPickerVisible.bindTo(_contextKeyService);\n\t\tthis._standaloneColorPickerFocused = EditorContextKeys.standaloneColorPickerFocused.bindTo(_contextKeyService);\n\t}\n\n\tpublic showOrFocus() {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._standaloneColorPickerVisible.get()) {\n\t\t\tthis._standaloneColorPickerWidget = this._instantiationService.createInstance(\n\t\t\t\tStandaloneColorPickerWidget,\n\t\t\t\tthis._editor,\n\t\t\t\tthis._standaloneColorPickerVisible,\n\t\t\t\tthis._standaloneColorPickerFocused\n\t\t\t);\n\t\t} else if (!this._standaloneColorPickerFocused.get()) {\n\t\t\tthis._standaloneColorPickerWidget?.focus();\n\t\t}\n\t}\n\n\tpublic hide() {\n\t\tthis._standaloneColorPickerFocused.set(false);\n\t\tthis._standaloneColorPickerVisible.set(false);\n\t\tthis._standaloneColorPickerWidget?.hide();\n\t\tthis._editor.focus();\n\t}\n\n\tpublic insertColor() {\n\t\tthis._standaloneColorPickerWidget?.updateEditor();\n\t\tthis.hide();\n\t}\n\n\tpublic static get(editor: ICodeEditor) {\n\t\treturn editor.getContribution<StandaloneColorPickerController>(StandaloneColorPickerController.ID);\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IContextKey, IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { IEditorContribution } from '../../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../../common/editorContextKeys.js';\nimport { StandaloneColorPickerWidget } from './standaloneColorPickerWidget.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\n\nexport class StandaloneColorPickerController extends Disposable implements IEditorContribution {\n\n\tpublic static ID = 'editor.contrib.standaloneColorPickerController';\n\tprivate _standaloneColorPickerWidget: StandaloneColorPickerWidget | null = null;\n\tprivate _standaloneColorPickerVisible: IContextKey<boolean>;\n\tprivate _standaloneColorPickerFocused: IContextKey<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IContextKeyService _contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._standaloneColorPickerVisible = EditorContextKeys.standaloneColorPickerVisible.bindTo(_contextKeyService);\n\t\tthis._standaloneColorPickerFocused = EditorContextKeys.standaloneColorPickerFocused.bindTo(_contextKeyService);\n\t}\n\n\tpublic showOrFocus() {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._standaloneColorPickerVisible.get()) {\n\t\t\tthis._standaloneColorPickerWidget = this._instantiationService.createInstance(\n\t\t\t\tStandaloneColorPickerWidget,\n\t\t\t\tthis._editor,\n\t\t\t\tthis._standaloneColorPickerVisible,\n\t\t\t\tthis._standaloneColorPickerFocused\n\t\t\t);\n\t\t} else if (!this._standaloneColorPickerFocused.get()) {\n\t\t\tthis._standaloneColorPickerWidget?.focus();\n\t\t}\n\t}\n\n\tpublic hide() {\n\t\tthis._standaloneColorPickerFocused.set(false);\n\t\tthis._standaloneColorPickerVisible.set(false);\n\t\tthis._standaloneColorPickerWidget?.hide();\n\t\tthis._editor.focus();\n\t}\n\n\tpublic insertColor() {\n\t\tthis._standaloneColorPickerWidget?.updateEditor();\n\t\tthis.hide();\n\t}\n\n\tpublic static get(editor: ICodeEditor) {\n\t\treturn editor.getContribution<StandaloneColorPickerController>(StandaloneColorPickerController.ID);\n\t}\n}\n\n"]}