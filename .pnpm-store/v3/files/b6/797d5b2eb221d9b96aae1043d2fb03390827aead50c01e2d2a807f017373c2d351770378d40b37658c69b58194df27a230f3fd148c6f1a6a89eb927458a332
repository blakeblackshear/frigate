{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/core/2d/rect.ts","vs/editor/common/core/2d/rect.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,OAAO,EAAE,kBAAkB,EAAE,MAAM,mCAAmC,CAAC;AAEvE,OAAO,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AAEnC,MAAM,OAAO,IAAI;IAET,MAAM,CAAC,UAAU,CAAC,OAAc,EAAE,WAAkB;QAC1D,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAEM,MAAM,CAAC,aAAa,CAAC,KAAY,EAAE,IAAW;QACpD,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC;IAEM,MAAM,CAAC,sBAAsB,CAAC,IAAY,EAAE,GAAW,EAAE,KAAa,EAAE,MAAc;QAC5F,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAC3C,CAAC;IAEM,MAAM,CAAC,sBAAsB,CAAC,IAAY,EAAE,GAAW,EAAE,KAAa,EAAE,MAAc;QAC5F,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,GAAG,KAAK,EAAE,GAAG,GAAG,MAAM,CAAC,CAAC;IACxD,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,SAAsB,EAAE,SAAsB;QACtE,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC;IACnG,CAAC;IAEM,MAAM,CAAC,IAAI,CAAC,KAAa;QAC/B,IAAI,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC;QACnC,IAAI,GAAG,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAClC,IAAI,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC;QACpC,IAAI,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAErC,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YAC1B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9B,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACpC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED,IAAW,KAAK,KAAK,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD,IAAW,MAAM,KAAK,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAEtD,YACiB,IAAY,EACZ,GAAW,EACX,KAAa,EACb,MAAc;QAHd,SAAI,GAAJ,IAAI,CAAQ;QACZ,QAAG,GAAH,GAAG,CAAQ;QACX,UAAK,GAAL,KAAK,CAAQ;QACb,WAAM,GAAN,MAAM,CAAQ;QAE9B,IAAI,IAAI,GAAG,KAAK,EAAE,CAAC;YAClB,MAAM,IAAI,kBAAkB,CAAC,4CAA4C,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;QAC7F,CAAC;QACD,IAAI,GAAG,GAAG,MAAM,EAAE,CAAC;YAClB,MAAM,IAAI,kBAAkB,CAAC,0CAA0C,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC;QAC3F,CAAC;IACF,CAAC;IAKD,UAAU,CAAC,qBAA6B,EAAE,iBAA0B,EAAE,MAAe,EAAE,IAAa;QACnG,IAAI,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,CAAC;QAErD,sBAAsB;QACtB,IAAI,iBAAiB,KAAK,SAAS,IAAI,MAAM,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;YACnF,UAAU,GAAG,WAAW,GAAG,SAAS,GAAG,YAAY,GAAG,qBAAqB,CAAC;QAC7E,CAAC;QACD,kCAAkC;aAC7B,IAAI,MAAM,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;YACrD,UAAU,GAAG,WAAW,GAAG,iBAAkB,CAAC;YAC9C,SAAS,GAAG,YAAY,GAAG,qBAAqB,CAAC;QAClD,CAAC;QACD,mCAAmC;aAC9B,CAAC;YACL,UAAU,GAAG,IAAK,CAAC;YACnB,WAAW,GAAG,iBAAkB,CAAC;YACjC,SAAS,GAAG,qBAAqB,CAAC;YAClC,YAAY,GAAG,MAAO,CAAC;QACxB,CAAC;QAED,OAAO,IAAI,IAAI,CACd,IAAI,CAAC,IAAI,GAAG,UAAU,EACtB,IAAI,CAAC,GAAG,GAAG,SAAS,EACpB,IAAI,CAAC,KAAK,GAAG,WAAW,EACxB,IAAI,CAAC,MAAM,GAAG,YAAY,CAC1B,CAAC;IACH,CAAC;IAED,iBAAiB,CAAC,KAAkB;QACnC,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/C,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5D,OAAO,IAAI,IAAI,CACd,IAAI,CAAC,IAAI,EACT,MAAM,EACN,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAC3B,CAAC;IACH,CAAC;IAED,mBAAmB,CAAC,KAAkB;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QAC1D,OAAO,IAAI,IAAI,CACd,OAAO,EACP,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,EAC3B,IAAI,CAAC,MAAM,CACX,CAAC;IACH,CAAC;IAED,QAAQ;QACP,OAAO,SAAS,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;IAC3E,CAAC;IAED,SAAS,CAAC,MAAY;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QACjD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;QAEpD,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,MAAM,EAAE,CAAC;YAClC,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED,YAAY,CAAC,KAAW;QACvB,OAAO,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI;eAC1B,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG;eACrB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK;eACzB,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,KAAY;QACzB,OAAO,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC;eACvB,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;eACnB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC;eACrB,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED,mBAAmB,CAAC,MAAY;QAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAE3B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAEnB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACpB,CAAC;aAAM,IAAI,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;YACxC,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,CAAC;QAED,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;YACtB,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAClB,CAAC;aAAM,IAAI,GAAG,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YACzC,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAC9B,CAAC;QAED,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,GAAG,KAAK,EAAE,GAAG,GAAG,MAAM,CAAC,CAAC;IACxD,CAAC;IAED,SAAS,CAAC,KAAa;QACtB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACtE,CAAC;IAED,UAAU,CAAC,MAAc;QACxB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC;IACrE,CAAC;IAED,OAAO,CAAC,GAAW;QAClB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,QAAQ,CAAC,IAAY;QACpB,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,UAAU,CAAC,KAAa;QACvB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/E,CAAC;IAED,UAAU,CAAC,KAAa;QACvB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;IAC/E,CAAC;IAED,aAAa;QACZ,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,cAAc;QACb,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED,WAAW;QACV,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ;QACP,OAAO;YACN,QAAQ,EAAE,UAAU;YACpB,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI;YACtB,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI;YACpB,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,IAAI;YACxB,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,IAAI;SAC1B,CAAC;IACH,CAAC;CACD","file":"rect.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { OffsetRange } from '../ranges/offsetRange.js';\nimport { Point } from './point.js';\n\nexport class Rect {\n\n\tpublic static fromPoints(topLeft: Point, bottomRight: Point): Rect {\n\t\treturn new Rect(topLeft.x, topLeft.y, bottomRight.x, bottomRight.y);\n\t}\n\n\tpublic static fromPointSize(point: Point, size: Point): Rect {\n\t\treturn new Rect(point.x, point.y, point.x + size.x, point.y + size.y);\n\t}\n\n\tpublic static fromLeftTopRightBottom(left: number, top: number, right: number, bottom: number): Rect {\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tpublic static fromLeftTopWidthHeight(left: number, top: number, width: number, height: number): Rect {\n\t\treturn new Rect(left, top, left + width, top + height);\n\t}\n\n\tpublic static fromRanges(leftRight: OffsetRange, topBottom: OffsetRange): Rect {\n\t\treturn new Rect(leftRight.start, topBottom.start, leftRight.endExclusive, topBottom.endExclusive);\n\t}\n\n\tpublic static hull(rects: Rect[]): Rect {\n\t\tlet left = Number.MAX_SAFE_INTEGER;\n\t\tlet top = Number.MAX_SAFE_INTEGER;\n\t\tlet right = Number.MIN_SAFE_INTEGER;\n\t\tlet bottom = Number.MIN_SAFE_INTEGER;\n\n\t\tfor (const rect of rects) {\n\t\t\tleft = Math.min(left, rect.left);\n\t\t\ttop = Math.min(top, rect.top);\n\t\t\tright = Math.max(right, rect.right);\n\t\t\tbottom = Math.max(bottom, rect.bottom);\n\t\t}\n\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tpublic get width() { return this.right - this.left; }\n\tpublic get height() { return this.bottom - this.top; }\n\n\tconstructor(\n\t\tpublic readonly left: number,\n\t\tpublic readonly top: number,\n\t\tpublic readonly right: number,\n\t\tpublic readonly bottom: number,\n\t) {\n\t\tif (left > right) {\n\t\t\tthrow new BugIndicatingError('Invalid arguments: Horizontally offset by ' + (left - right));\n\t\t}\n\t\tif (top > bottom) {\n\t\t\tthrow new BugIndicatingError('Invalid arguments: Vertically offset by ' + (top - bottom));\n\t\t}\n\t}\n\n\twithMargin(margin: number): Rect;\n\twithMargin(marginVertical: number, marginHorizontal: number): Rect;\n\twithMargin(marginTop: number, marginRight: number, marginBottom: number, marginLeft: number): Rect;\n\twithMargin(marginOrVerticalOrTop: number, rightOrHorizontal?: number, bottom?: number, left?: number): Rect {\n\t\tlet marginLeft, marginRight, marginTop, marginBottom;\n\n\t\t// Single margin value\n\t\tif (rightOrHorizontal === undefined && bottom === undefined && left === undefined) {\n\t\t\tmarginLeft = marginRight = marginTop = marginBottom = marginOrVerticalOrTop;\n\t\t}\n\t\t// Vertical and horizontal margins\n\t\telse if (bottom === undefined && left === undefined) {\n\t\t\tmarginLeft = marginRight = rightOrHorizontal!;\n\t\t\tmarginTop = marginBottom = marginOrVerticalOrTop;\n\t\t}\n\t\t// Individual margins for all sides\n\t\telse {\n\t\t\tmarginLeft = left!;\n\t\t\tmarginRight = rightOrHorizontal!;\n\t\t\tmarginTop = marginOrVerticalOrTop;\n\t\t\tmarginBottom = bottom!;\n\t\t}\n\n\t\treturn new Rect(\n\t\t\tthis.left - marginLeft,\n\t\t\tthis.top - marginTop,\n\t\t\tthis.right + marginRight,\n\t\t\tthis.bottom + marginBottom,\n\t\t);\n\t}\n\n\tintersectVertical(range: OffsetRange): Rect {\n\t\tconst newTop = Math.max(this.top, range.start);\n\t\tconst newBottom = Math.min(this.bottom, range.endExclusive);\n\t\treturn new Rect(\n\t\t\tthis.left,\n\t\t\tnewTop,\n\t\t\tthis.right,\n\t\t\tMath.max(newTop, newBottom),\n\t\t);\n\t}\n\n\tintersectHorizontal(range: OffsetRange): Rect {\n\t\tconst newLeft = Math.max(this.left, range.start);\n\t\tconst newRight = Math.min(this.right, range.endExclusive);\n\t\treturn new Rect(\n\t\t\tnewLeft,\n\t\t\tthis.top,\n\t\t\tMath.max(newLeft, newRight),\n\t\t\tthis.bottom,\n\t\t);\n\t}\n\n\ttoString(): string {\n\t\treturn `Rect{(${this.left},${this.top}), (${this.right},${this.bottom})}`;\n\t}\n\n\tintersect(parent: Rect): Rect | undefined {\n\t\tconst left = Math.max(this.left, parent.left);\n\t\tconst right = Math.min(this.right, parent.right);\n\t\tconst top = Math.max(this.top, parent.top);\n\t\tconst bottom = Math.min(this.bottom, parent.bottom);\n\n\t\tif (left > right || top > bottom) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tcontainsRect(other: Rect): boolean {\n\t\treturn this.left <= other.left\n\t\t\t&& this.top <= other.top\n\t\t\t&& this.right >= other.right\n\t\t\t&& this.bottom >= other.bottom;\n\t}\n\n\tcontainsPoint(point: Point): boolean {\n\t\treturn this.left <= point.x\n\t\t\t&& this.top <= point.y\n\t\t\t&& this.right >= point.x\n\t\t\t&& this.bottom >= point.y;\n\t}\n\n\tmoveToBeContainedIn(parent: Rect): Rect {\n\t\tconst width = this.width;\n\t\tconst height = this.height;\n\n\t\tlet left = this.left;\n\t\tlet top = this.top;\n\n\t\tif (left < parent.left) {\n\t\t\tleft = parent.left;\n\t\t} else if (left + width > parent.right) {\n\t\t\tleft = parent.right - width;\n\t\t}\n\n\t\tif (top < parent.top) {\n\t\t\ttop = parent.top;\n\t\t} else if (top + height > parent.bottom) {\n\t\t\ttop = parent.bottom - height;\n\t\t}\n\n\t\treturn new Rect(left, top, left + width, top + height);\n\t}\n\n\twithWidth(width: number): Rect {\n\t\treturn new Rect(this.left, this.top, this.left + width, this.bottom);\n\t}\n\n\twithHeight(height: number): Rect {\n\t\treturn new Rect(this.left, this.top, this.right, this.top + height);\n\t}\n\n\twithTop(top: number): Rect {\n\t\treturn new Rect(this.left, top, this.right, this.bottom);\n\t}\n\n\twithLeft(left: number): Rect {\n\t\treturn new Rect(left, this.top, this.right, this.bottom);\n\t}\n\n\ttranslateX(delta: number): Rect {\n\t\treturn new Rect(this.left + delta, this.top, this.right + delta, this.bottom);\n\t}\n\n\ttranslateY(delta: number): Rect {\n\t\treturn new Rect(this.left, this.top + delta, this.right, this.bottom + delta);\n\t}\n\n\tgetLeftBottom(): Point {\n\t\treturn new Point(this.left, this.bottom);\n\t}\n\n\tgetRightBottom(): Point {\n\t\treturn new Point(this.right, this.bottom);\n\t}\n\n\tgetRightTop(): Point {\n\t\treturn new Point(this.right, this.top);\n\t}\n\n\ttoStyles() {\n\t\treturn {\n\t\t\tposition: 'absolute',\n\t\t\tleft: `${this.left}px`,\n\t\t\ttop: `${this.top}px`,\n\t\t\twidth: `${this.width}px`,\n\t\t\theight: `${this.height}px`,\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { OffsetRange } from '../ranges/offsetRange.js';\nimport { Point } from './point.js';\n\nexport class Rect {\n\n\tpublic static fromPoints(topLeft: Point, bottomRight: Point): Rect {\n\t\treturn new Rect(topLeft.x, topLeft.y, bottomRight.x, bottomRight.y);\n\t}\n\n\tpublic static fromPointSize(point: Point, size: Point): Rect {\n\t\treturn new Rect(point.x, point.y, point.x + size.x, point.y + size.y);\n\t}\n\n\tpublic static fromLeftTopRightBottom(left: number, top: number, right: number, bottom: number): Rect {\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tpublic static fromLeftTopWidthHeight(left: number, top: number, width: number, height: number): Rect {\n\t\treturn new Rect(left, top, left + width, top + height);\n\t}\n\n\tpublic static fromRanges(leftRight: OffsetRange, topBottom: OffsetRange): Rect {\n\t\treturn new Rect(leftRight.start, topBottom.start, leftRight.endExclusive, topBottom.endExclusive);\n\t}\n\n\tpublic static hull(rects: Rect[]): Rect {\n\t\tlet left = Number.MAX_SAFE_INTEGER;\n\t\tlet top = Number.MAX_SAFE_INTEGER;\n\t\tlet right = Number.MIN_SAFE_INTEGER;\n\t\tlet bottom = Number.MIN_SAFE_INTEGER;\n\n\t\tfor (const rect of rects) {\n\t\t\tleft = Math.min(left, rect.left);\n\t\t\ttop = Math.min(top, rect.top);\n\t\t\tright = Math.max(right, rect.right);\n\t\t\tbottom = Math.max(bottom, rect.bottom);\n\t\t}\n\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tpublic get width() { return this.right - this.left; }\n\tpublic get height() { return this.bottom - this.top; }\n\n\tconstructor(\n\t\tpublic readonly left: number,\n\t\tpublic readonly top: number,\n\t\tpublic readonly right: number,\n\t\tpublic readonly bottom: number,\n\t) {\n\t\tif (left > right) {\n\t\t\tthrow new BugIndicatingError('Invalid arguments: Horizontally offset by ' + (left - right));\n\t\t}\n\t\tif (top > bottom) {\n\t\t\tthrow new BugIndicatingError('Invalid arguments: Vertically offset by ' + (top - bottom));\n\t\t}\n\t}\n\n\twithMargin(margin: number): Rect;\n\twithMargin(marginVertical: number, marginHorizontal: number): Rect;\n\twithMargin(marginTop: number, marginRight: number, marginBottom: number, marginLeft: number): Rect;\n\twithMargin(marginOrVerticalOrTop: number, rightOrHorizontal?: number, bottom?: number, left?: number): Rect {\n\t\tlet marginLeft, marginRight, marginTop, marginBottom;\n\n\t\t// Single margin value\n\t\tif (rightOrHorizontal === undefined && bottom === undefined && left === undefined) {\n\t\t\tmarginLeft = marginRight = marginTop = marginBottom = marginOrVerticalOrTop;\n\t\t}\n\t\t// Vertical and horizontal margins\n\t\telse if (bottom === undefined && left === undefined) {\n\t\t\tmarginLeft = marginRight = rightOrHorizontal!;\n\t\t\tmarginTop = marginBottom = marginOrVerticalOrTop;\n\t\t}\n\t\t// Individual margins for all sides\n\t\telse {\n\t\t\tmarginLeft = left!;\n\t\t\tmarginRight = rightOrHorizontal!;\n\t\t\tmarginTop = marginOrVerticalOrTop;\n\t\t\tmarginBottom = bottom!;\n\t\t}\n\n\t\treturn new Rect(\n\t\t\tthis.left - marginLeft,\n\t\t\tthis.top - marginTop,\n\t\t\tthis.right + marginRight,\n\t\t\tthis.bottom + marginBottom,\n\t\t);\n\t}\n\n\tintersectVertical(range: OffsetRange): Rect {\n\t\tconst newTop = Math.max(this.top, range.start);\n\t\tconst newBottom = Math.min(this.bottom, range.endExclusive);\n\t\treturn new Rect(\n\t\t\tthis.left,\n\t\t\tnewTop,\n\t\t\tthis.right,\n\t\t\tMath.max(newTop, newBottom),\n\t\t);\n\t}\n\n\tintersectHorizontal(range: OffsetRange): Rect {\n\t\tconst newLeft = Math.max(this.left, range.start);\n\t\tconst newRight = Math.min(this.right, range.endExclusive);\n\t\treturn new Rect(\n\t\t\tnewLeft,\n\t\t\tthis.top,\n\t\t\tMath.max(newLeft, newRight),\n\t\t\tthis.bottom,\n\t\t);\n\t}\n\n\ttoString(): string {\n\t\treturn `Rect{(${this.left},${this.top}), (${this.right},${this.bottom})}`;\n\t}\n\n\tintersect(parent: Rect): Rect | undefined {\n\t\tconst left = Math.max(this.left, parent.left);\n\t\tconst right = Math.min(this.right, parent.right);\n\t\tconst top = Math.max(this.top, parent.top);\n\t\tconst bottom = Math.min(this.bottom, parent.bottom);\n\n\t\tif (left > right || top > bottom) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tcontainsRect(other: Rect): boolean {\n\t\treturn this.left <= other.left\n\t\t\t&& this.top <= other.top\n\t\t\t&& this.right >= other.right\n\t\t\t&& this.bottom >= other.bottom;\n\t}\n\n\tcontainsPoint(point: Point): boolean {\n\t\treturn this.left <= point.x\n\t\t\t&& this.top <= point.y\n\t\t\t&& this.right >= point.x\n\t\t\t&& this.bottom >= point.y;\n\t}\n\n\tmoveToBeContainedIn(parent: Rect): Rect {\n\t\tconst width = this.width;\n\t\tconst height = this.height;\n\n\t\tlet left = this.left;\n\t\tlet top = this.top;\n\n\t\tif (left < parent.left) {\n\t\t\tleft = parent.left;\n\t\t} else if (left + width > parent.right) {\n\t\t\tleft = parent.right - width;\n\t\t}\n\n\t\tif (top < parent.top) {\n\t\t\ttop = parent.top;\n\t\t} else if (top + height > parent.bottom) {\n\t\t\ttop = parent.bottom - height;\n\t\t}\n\n\t\treturn new Rect(left, top, left + width, top + height);\n\t}\n\n\twithWidth(width: number): Rect {\n\t\treturn new Rect(this.left, this.top, this.left + width, this.bottom);\n\t}\n\n\twithHeight(height: number): Rect {\n\t\treturn new Rect(this.left, this.top, this.right, this.top + height);\n\t}\n\n\twithTop(top: number): Rect {\n\t\treturn new Rect(this.left, top, this.right, this.bottom);\n\t}\n\n\twithLeft(left: number): Rect {\n\t\treturn new Rect(left, this.top, this.right, this.bottom);\n\t}\n\n\ttranslateX(delta: number): Rect {\n\t\treturn new Rect(this.left + delta, this.top, this.right + delta, this.bottom);\n\t}\n\n\ttranslateY(delta: number): Rect {\n\t\treturn new Rect(this.left, this.top + delta, this.right, this.bottom + delta);\n\t}\n\n\tgetLeftBottom(): Point {\n\t\treturn new Point(this.left, this.bottom);\n\t}\n\n\tgetRightBottom(): Point {\n\t\treturn new Point(this.right, this.bottom);\n\t}\n\n\tgetRightTop(): Point {\n\t\treturn new Point(this.right, this.top);\n\t}\n\n\ttoStyles() {\n\t\treturn {\n\t\t\tposition: 'absolute',\n\t\t\tleft: `${this.left}px`,\n\t\t\ttop: `${this.top}px`,\n\t\t\twidth: `${this.width}px`,\n\t\t\theight: `${this.height}px`,\n\t\t};\n\t}\n}\n"]}