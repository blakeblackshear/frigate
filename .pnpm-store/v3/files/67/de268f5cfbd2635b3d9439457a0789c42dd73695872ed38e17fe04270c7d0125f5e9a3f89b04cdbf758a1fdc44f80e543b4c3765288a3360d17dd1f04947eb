{"version":3,"sources":["vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.ts"],"names":[],"mappings":"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","file":"dropIntoEditorController.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from '../../../../base/common/actions.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancelablePromise, createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { VSDataTransfer } from '../../../../base/common/dataTransfer.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dataTransfer.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IPosition } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\nimport { DocumentDropEdit, DocumentDropEditProvider } from '../../../common/languages.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { CodeEditorStateFlag, EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { PreferredDropConfiguration } from './dropIntoEditorContribution.js';\nimport { sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\n\nexport const dropAsPreferenceConfig = 'editor.dropIntoEditor.preferences';\n\nexport const changeDropTypeCommandId = 'editor.changeDropType';\n\nexport const dropWidgetVisibleCtx = new RawContextKey<boolean>('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\n\nexport class DropIntoEditorController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.dropIntoEditorController';\n\n\tpublic static get(editor: ICodeEditor): DropIntoEditorController | null {\n\t\treturn editor.getContribution<DropIntoEditorController>(DropIntoEditorController.ID);\n\t}\n\n\tprivate static _configureDefaultAction?: IAction;\n\n\t/**\n\t * Global tracking the current drop operation.\n\t *\n\t * TODO: figure out how to make this work with multiple windows\n\t */\n\tprivate static _currentDropOperation?: CancelablePromise<void>;\n\n\tprivate readonly _dropProgressManager: InlineProgressManager;\n\tprivate readonly _postDropWidgetManager: PostEditWidgetManager<DocumentDropEdit>;\n\n\tprivate readonly treeItemsTransfer = LocalSelectionTransfer.getInstance<DraggedTreeItemsIdentifier>();\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ITreeViewsDnDService private readonly _treeViewsDragAndDropService: ITreeViewsDnDService\n\t) {\n\t\tsuper();\n\n\t\tthis._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n\t\tthis._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx,\n\t\t\t{ id: changeDropTypeCommandId, label: localize('postDropWidgetTitle', \"Show drop options...\") },\n\t\t\t() => DropIntoEditorController._configureDefaultAction ? [DropIntoEditorController._configureDefaultAction] : []));\n\n\t\tthis._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n\t}\n\n\tpublic clearWidgets() {\n\t\tthis._postDropWidgetManager.clear();\n\t}\n\n\tpublic changeDropType() {\n\t\tthis._postDropWidgetManager.tryShowSelector();\n\t}\n\n\tprivate async onDropIntoEditor(editor: ICodeEditor, position: IPosition, dragEvent: DragEvent) {\n\t\tif (!dragEvent.dataTransfer || !editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tDropIntoEditorController._currentDropOperation?.cancel();\n\n\t\teditor.focus();\n\t\teditor.setPosition(position);\n\n\t\tconst p = createCancelablePromise(async (token) => {\n\t\t\tconst disposables = new DisposableStore();\n\n\t\t\tconst tokenSource = disposables.add(new EditorStateCancellationTokenSource(editor, CodeEditorStateFlag.Value, undefined, token));\n\t\t\ttry {\n\t\t\t\tconst ourDataTransfer = await this.extractDataTransferData(dragEvent);\n\t\t\t\tif (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst model = editor.getModel();\n\t\t\t\tif (!model) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst providers = this._languageFeaturesService.documentDropEditProvider\n\t\t\t\t\t.ordered(model)\n\t\t\t\t\t.filter(provider => {\n\t\t\t\t\t\tif (!provider.dropMimeTypes) {\n\t\t\t\t\t\t\t// Keep all providers that don't specify mime types\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n\t\t\t\t\t});\n\n\t\t\t\tconst editSession = disposables.add(await this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource.token));\n\t\t\t\tif (tokenSource.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (editSession.edits.length) {\n\t\t\t\t\tconst activeEditIndex = this.getInitialActiveEditIndex(model, editSession.edits);\n\t\t\t\t\tconst canShowWidget = editor.getOption(EditorOption.dropIntoEditor).showDropSelector === 'afterDrop';\n\t\t\t\t\t// Pass in the parent token here as it tracks cancelling the entire drop operation\n\t\t\t\t\tawait this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], { activeEditIndex, allEdits: editSession.edits }, canShowWidget, async edit => edit, token);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tdisposables.dispose();\n\t\t\t\tif (DropIntoEditorController._currentDropOperation === p) {\n\t\t\t\t\tDropIntoEditorController._currentDropOperation = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p, { cancel: () => p.cancel() });\n\t\tDropIntoEditorController._currentDropOperation = p;\n\t}\n\n\tprivate async getDropEdits(providers: readonly DocumentDropEditProvider[], model: ITextModel, position: IPosition, dataTransfer: VSDataTransfer, token: CancellationToken) {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst results = await raceCancellation(Promise.all(providers.map(async provider => {\n\t\t\ttry {\n\t\t\t\tconst edits = await provider.provideDocumentDropEdits(model, position, dataTransfer, token);\n\t\t\t\tif (edits) {\n\t\t\t\t\tdisposables.add(edits);\n\t\t\t\t}\n\t\t\t\treturn edits?.edits.map(edit => ({ ...edit, providerId: provider.id }));\n\t\t\t} catch (err) {\n\t\t\t\tif (!isCancellationError(err)) {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})), token);\n\n\t\tconst edits = coalesce(results ?? []).flat();\n\t\treturn {\n\t\t\tedits: sortEditsByYieldTo(edits),\n\t\t\tdispose: () => disposables.dispose()\n\t\t};\n\t}\n\n\tprivate getInitialActiveEditIndex(model: ITextModel, edits: ReadonlyArray<DocumentDropEdit>): number {\n\t\tconst preferredProviders = this._configService.getValue<PreferredDropConfiguration[]>(dropAsPreferenceConfig, { resource: model.uri });\n\t\tfor (const config of Array.isArray(preferredProviders) ? preferredProviders : []) {\n\t\t\tconst desiredKind = new HierarchicalKind(config);\n\t\t\tconst editIndex = edits.findIndex(edit => edit.kind && desiredKind.contains(edit.kind));\n\t\t\tif (editIndex >= 0) {\n\t\t\t\treturn editIndex;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate async extractDataTransferData(dragEvent: DragEvent): Promise<VSDataTransfer> {\n\t\tif (!dragEvent.dataTransfer) {\n\t\t\treturn new VSDataTransfer();\n\t\t}\n\n\t\tconst dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n\n\t\tif (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n\t\t\tconst data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n\t\t\tif (Array.isArray(data)) {\n\t\t\t\tfor (const id of data) {\n\t\t\t\t\tconst treeDataTransfer = await this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n\t\t\t\t\tif (treeDataTransfer) {\n\t\t\t\t\t\tfor (const [type, value] of treeDataTransfer) {\n\t\t\t\t\t\t\tdataTransfer.replace(type, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dataTransfer;\n\t}\n}\n"]}