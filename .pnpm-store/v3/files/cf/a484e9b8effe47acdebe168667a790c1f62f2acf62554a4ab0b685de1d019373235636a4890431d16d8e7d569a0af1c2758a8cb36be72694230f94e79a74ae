{"version":3,"sources":["vs/editor/contrib/snippet/browser/snippetVariables.ts"],"names":[],"mappings":"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","file":"snippetVariables.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { normalizeDriveLetter } from '../../../../base/common/labels.js';\nimport * as path from '../../../../base/common/path.js';\nimport { dirname } from '../../../../base/common/resources.js';\nimport { commonPrefixLength, getLeadingWhitespace, isFalsyOrWhitespace, splitLines } from '../../../../base/common/strings.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { Text, Variable, VariableResolver } from './snippetParser.js';\nimport { OvertypingCapturer } from '../../suggest/browser/suggestOvertypingCapturer.js';\nimport * as nls from '../../../../nls.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { WORKSPACE_EXTENSION, isSingleFolderWorkspaceIdentifier, toWorkspaceIdentifier, IWorkspaceContextService, ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier, isEmptyWorkspaceIdentifier } from '../../../../platform/workspace/common/workspace.js';\n\nexport const KnownSnippetVariableNames = Object.freeze<{ [key: string]: true }>({\n\t'CURRENT_YEAR': true,\n\t'CURRENT_YEAR_SHORT': true,\n\t'CURRENT_MONTH': true,\n\t'CURRENT_DATE': true,\n\t'CURRENT_HOUR': true,\n\t'CURRENT_MINUTE': true,\n\t'CURRENT_SECOND': true,\n\t'CURRENT_DAY_NAME': true,\n\t'CURRENT_DAY_NAME_SHORT': true,\n\t'CURRENT_MONTH_NAME': true,\n\t'CURRENT_MONTH_NAME_SHORT': true,\n\t'CURRENT_SECONDS_UNIX': true,\n\t'CURRENT_TIMEZONE_OFFSET': true,\n\t'SELECTION': true,\n\t'CLIPBOARD': true,\n\t'TM_SELECTED_TEXT': true,\n\t'TM_CURRENT_LINE': true,\n\t'TM_CURRENT_WORD': true,\n\t'TM_LINE_INDEX': true,\n\t'TM_LINE_NUMBER': true,\n\t'TM_FILENAME': true,\n\t'TM_FILENAME_BASE': true,\n\t'TM_DIRECTORY': true,\n\t'TM_FILEPATH': true,\n\t'CURSOR_INDEX': true, // 0-offset\n\t'CURSOR_NUMBER': true, // 1-offset\n\t'RELATIVE_FILEPATH': true,\n\t'BLOCK_COMMENT_START': true,\n\t'BLOCK_COMMENT_END': true,\n\t'LINE_COMMENT': true,\n\t'WORKSPACE_NAME': true,\n\t'WORKSPACE_FOLDER': true,\n\t'RANDOM': true,\n\t'RANDOM_HEX': true,\n\t'UUID': true\n});\n\nexport class CompositeSnippetVariableResolver implements VariableResolver {\n\n\tconstructor(private readonly _delegates: VariableResolver[]) {\n\t\t//\n\t}\n\n\tresolve(variable: Variable): string | undefined {\n\t\tfor (const delegate of this._delegates) {\n\t\t\tconst value = delegate.resolve(variable);\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport class SelectionBasedVariableResolver implements VariableResolver {\n\n\tconstructor(\n\t\tprivate readonly _model: ITextModel,\n\t\tprivate readonly _selection: Selection,\n\t\tprivate readonly _selectionIdx: number,\n\t\tprivate readonly _overtypingCapturer: OvertypingCapturer | undefined\n\t) {\n\t\t//\n\t}\n\n\tresolve(variable: Variable): string | undefined {\n\n\t\tconst { name } = variable;\n\n\t\tif (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\n\t\t\tlet value = this._model.getValueInRange(this._selection) || undefined;\n\t\t\tlet isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;\n\n\t\t\t// If there was no selected text, try to get last overtyped text\n\t\t\tif (!value && this._overtypingCapturer) {\n\t\t\t\tconst info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);\n\t\t\t\tif (info) {\n\t\t\t\t\tvalue = info.value;\n\t\t\t\t\tisMultiline = info.multiline;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value && isMultiline && variable.snippet) {\n\t\t\t\t// Selection is a multiline string which we indentation we now\n\t\t\t\t// need to adjust. We compare the indentation of this variable\n\t\t\t\t// with the indentation at the editor position and add potential\n\t\t\t\t// extra indentation to the value\n\n\t\t\t\tconst line = this._model.getLineContent(this._selection.startLineNumber);\n\t\t\t\tconst lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\n\n\t\t\t\tlet varLeadingWhitespace = lineLeadingWhitespace;\n\t\t\t\tvariable.snippet.walk(marker => {\n\t\t\t\t\tif (marker === variable) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (marker instanceof Text) {\n\t\t\t\t\t\tvarLeadingWhitespace = getLeadingWhitespace(splitLines(marker.value).pop()!);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tconst whitespaceCommonLength = commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);\n\n\t\t\t\tvalue = value.replace(\n\t\t\t\t\t/(\\r\\n|\\r|\\n)(.*)/g,\n\t\t\t\t\t(m, newline, rest) => `${newline}${varLeadingWhitespace.substr(whitespaceCommonLength)}${rest}`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn value;\n\n\t\t} else if (name === 'TM_CURRENT_LINE') {\n\t\t\treturn this._model.getLineContent(this._selection.positionLineNumber);\n\n\t\t} else if (name === 'TM_CURRENT_WORD') {\n\t\t\tconst info = this._model.getWordAtPosition({\n\t\t\t\tlineNumber: this._selection.positionLineNumber,\n\t\t\t\tcolumn: this._selection.positionColumn\n\t\t\t});\n\t\t\treturn info && info.word || undefined;\n\n\t\t} else if (name === 'TM_LINE_INDEX') {\n\t\t\treturn String(this._selection.positionLineNumber - 1);\n\n\t\t} else if (name === 'TM_LINE_NUMBER') {\n\t\t\treturn String(this._selection.positionLineNumber);\n\n\t\t} else if (name === 'CURSOR_INDEX') {\n\t\t\treturn String(this._selectionIdx);\n\n\t\t} else if (name === 'CURSOR_NUMBER') {\n\t\t\treturn String(this._selectionIdx + 1);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport class ModelBasedVariableResolver implements VariableResolver {\n\n\tconstructor(\n\t\tprivate readonly _labelService: ILabelService,\n\t\tprivate readonly _model: ITextModel\n\t) {\n\t\t//\n\t}\n\n\tresolve(variable: Variable): string | undefined {\n\n\t\tconst { name } = variable;\n\n\t\tif (name === 'TM_FILENAME') {\n\t\t\treturn path.basename(this._model.uri.fsPath);\n\n\t\t} else if (name === 'TM_FILENAME_BASE') {\n\t\t\tconst name = path.basename(this._model.uri.fsPath);\n\t\t\tconst idx = name.lastIndexOf('.');\n\t\t\tif (idx <= 0) {\n\t\t\t\treturn name;\n\t\t\t} else {\n\t\t\t\treturn name.slice(0, idx);\n\t\t\t}\n\n\t\t} else if (name === 'TM_DIRECTORY') {\n\t\t\tif (path.dirname(this._model.uri.fsPath) === '.') {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn this._labelService.getUriLabel(dirname(this._model.uri));\n\n\t\t} else if (name === 'TM_FILEPATH') {\n\t\t\treturn this._labelService.getUriLabel(this._model.uri);\n\t\t} else if (name === 'RELATIVE_FILEPATH') {\n\t\t\treturn this._labelService.getUriLabel(this._model.uri, { relative: true, noPrefix: true });\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport interface IReadClipboardText {\n\t(): string | undefined;\n}\n\nexport class ClipboardBasedVariableResolver implements VariableResolver {\n\n\tconstructor(\n\t\tprivate readonly _readClipboardText: IReadClipboardText,\n\t\tprivate readonly _selectionIdx: number,\n\t\tprivate readonly _selectionCount: number,\n\t\tprivate readonly _spread: boolean\n\t) {\n\t\t//\n\t}\n\n\tresolve(variable: Variable): string | undefined {\n\t\tif (variable.name !== 'CLIPBOARD') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst clipboardText = this._readClipboardText();\n\t\tif (!clipboardText) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// `spread` is assigning each cursor a line of the clipboard\n\t\t// text whenever there the line count equals the cursor count\n\t\t// and when enabled\n\t\tif (this._spread) {\n\t\t\tconst lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(s => !isFalsyOrWhitespace(s));\n\t\t\tif (lines.length === this._selectionCount) {\n\t\t\t\treturn lines[this._selectionIdx];\n\t\t\t}\n\t\t}\n\t\treturn clipboardText;\n\t}\n}\nexport class CommentBasedVariableResolver implements VariableResolver {\n\tconstructor(\n\t\tprivate readonly _model: ITextModel,\n\t\tprivate readonly _selection: Selection,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService\n\t) {\n\t\t//\n\t}\n\tresolve(variable: Variable): string | undefined {\n\t\tconst { name } = variable;\n\t\tconst langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);\n\t\tconst config = this._languageConfigurationService.getLanguageConfiguration(langId).comments;\n\t\tif (!config) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (name === 'LINE_COMMENT') {\n\t\t\treturn config.lineCommentToken || undefined;\n\t\t} else if (name === 'BLOCK_COMMENT_START') {\n\t\t\treturn config.blockCommentStartToken || undefined;\n\t\t} else if (name === 'BLOCK_COMMENT_END') {\n\t\t\treturn config.blockCommentEndToken || undefined;\n\t\t}\n\t\treturn undefined;\n\t}\n}\nexport class TimeBasedVariableResolver implements VariableResolver {\n\n\tprivate static readonly dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\n\tprivate static readonly dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\n\tprivate static readonly monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\n\tprivate static readonly monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\n\n\tprivate readonly _date = new Date();\n\n\tresolve(variable: Variable): string | undefined {\n\t\tconst { name } = variable;\n\n\t\tif (name === 'CURRENT_YEAR') {\n\t\t\treturn String(this._date.getFullYear());\n\t\t} else if (name === 'CURRENT_YEAR_SHORT') {\n\t\t\treturn String(this._date.getFullYear()).slice(-2);\n\t\t} else if (name === 'CURRENT_MONTH') {\n\t\t\treturn String(this._date.getMonth().valueOf() + 1).padStart(2, '0');\n\t\t} else if (name === 'CURRENT_DATE') {\n\t\t\treturn String(this._date.getDate().valueOf()).padStart(2, '0');\n\t\t} else if (name === 'CURRENT_HOUR') {\n\t\t\treturn String(this._date.getHours().valueOf()).padStart(2, '0');\n\t\t} else if (name === 'CURRENT_MINUTE') {\n\t\t\treturn String(this._date.getMinutes().valueOf()).padStart(2, '0');\n\t\t} else if (name === 'CURRENT_SECOND') {\n\t\t\treturn String(this._date.getSeconds().valueOf()).padStart(2, '0');\n\t\t} else if (name === 'CURRENT_DAY_NAME') {\n\t\t\treturn TimeBasedVariableResolver.dayNames[this._date.getDay()];\n\t\t} else if (name === 'CURRENT_DAY_NAME_SHORT') {\n\t\t\treturn TimeBasedVariableResolver.dayNamesShort[this._date.getDay()];\n\t\t} else if (name === 'CURRENT_MONTH_NAME') {\n\t\t\treturn TimeBasedVariableResolver.monthNames[this._date.getMonth()];\n\t\t} else if (name === 'CURRENT_MONTH_NAME_SHORT') {\n\t\t\treturn TimeBasedVariableResolver.monthNamesShort[this._date.getMonth()];\n\t\t} else if (name === 'CURRENT_SECONDS_UNIX') {\n\t\t\treturn String(Math.floor(this._date.getTime() / 1000));\n\t\t} else if (name === 'CURRENT_TIMEZONE_OFFSET') {\n\t\t\tconst rawTimeOffset = this._date.getTimezoneOffset();\n\t\t\tconst sign = rawTimeOffset > 0 ? '-' : '+';\n\t\t\tconst hours = Math.trunc(Math.abs(rawTimeOffset / 60));\n\t\t\tconst hoursString = (hours < 10 ? '0' + hours : hours);\n\t\t\tconst minutes = Math.abs(rawTimeOffset) - hours * 60;\n\t\t\tconst minutesString = (minutes < 10 ? '0' + minutes : minutes);\n\t\t\treturn sign + hoursString + ':' + minutesString;\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport class WorkspaceBasedVariableResolver implements VariableResolver {\n\tconstructor(\n\t\tprivate readonly _workspaceService: IWorkspaceContextService | undefined,\n\t) {\n\t\t//\n\t}\n\n\tresolve(variable: Variable): string | undefined {\n\t\tif (!this._workspaceService) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\n\t\tif (isEmptyWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (variable.name === 'WORKSPACE_NAME') {\n\t\t\treturn this._resolveWorkspaceName(workspaceIdentifier);\n\t\t} else if (variable.name === 'WORKSPACE_FOLDER') {\n\t\t\treturn this._resoveWorkspacePath(workspaceIdentifier);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\tprivate _resolveWorkspaceName(workspaceIdentifier: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier): string | undefined {\n\t\tif (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn path.basename(workspaceIdentifier.uri.path);\n\t\t}\n\n\t\tlet filename = path.basename(workspaceIdentifier.configPath.path);\n\t\tif (filename.endsWith(WORKSPACE_EXTENSION)) {\n\t\t\tfilename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\n\t\t}\n\t\treturn filename;\n\t}\n\tprivate _resoveWorkspacePath(workspaceIdentifier: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier): string | undefined {\n\t\tif (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn normalizeDriveLetter(workspaceIdentifier.uri.fsPath);\n\t\t}\n\n\t\tconst filename = path.basename(workspaceIdentifier.configPath.path);\n\t\tlet folderpath = workspaceIdentifier.configPath.fsPath;\n\t\tif (folderpath.endsWith(filename)) {\n\t\t\tfolderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\n\t\t}\n\t\treturn (folderpath ? normalizeDriveLetter(folderpath) : '/');\n\t}\n}\n\nexport class RandomBasedVariableResolver implements VariableResolver {\n\tresolve(variable: Variable): string | undefined {\n\t\tconst { name } = variable;\n\n\t\tif (name === 'RANDOM') {\n\t\t\treturn Math.random().toString().slice(-6);\n\t\t} else if (name === 'RANDOM_HEX') {\n\t\t\treturn Math.random().toString(16).slice(-6);\n\t\t} else if (name === 'UUID') {\n\t\t\treturn generateUuid();\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n"]}