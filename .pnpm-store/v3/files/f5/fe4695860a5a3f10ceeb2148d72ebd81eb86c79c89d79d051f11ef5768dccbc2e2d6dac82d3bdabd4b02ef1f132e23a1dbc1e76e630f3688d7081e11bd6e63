{"version":3,"sources":["vs/platform/theme/common/colors/editorColors.ts"],"names":[],"mappings":"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","file":"editorColors.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\n\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent, lessProminent, darken, lighten } from '../colorUtils.js';\n\n// Import the colors we need\nimport { foreground, contrastBorder, activeContrastBorder } from './baseColors.js';\nimport { scrollbarShadow, badgeBackground } from './miscColors.js';\n\n\n// ----- editor\n\nexport const editorBackground = registerColor('editor.background',\n\t{ light: '#ffffff', dark: '#1E1E1E', hcDark: Color.black, hcLight: Color.white },\n\tnls.localize('editorBackground', \"Editor background color.\"));\n\nexport const editorForeground = registerColor('editor.foreground',\n\t{ light: '#333333', dark: '#BBBBBB', hcDark: Color.white, hcLight: foreground },\n\tnls.localize('editorForeground', \"Editor default foreground color.\"));\n\n\nexport const editorStickyScrollBackground = registerColor('editorStickyScroll.background',\n\teditorBackground,\n\tnls.localize('editorStickyScrollBackground', \"Background color of sticky scroll in the editor\"));\n\nexport const editorStickyScrollGutterBackground = registerColor('editorStickyScrollGutter.background',\n\teditorBackground,\n\tnls.localize('editorStickyScrollGutterBackground', \"Background color of the gutter part of sticky scroll in the editor\"));\n\nexport const editorStickyScrollHoverBackground = registerColor('editorStickyScrollHover.background',\n\t{ dark: '#2A2D2E', light: '#F0F0F0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) },\n\tnls.localize('editorStickyScrollHoverBackground', \"Background color of sticky scroll on hover in the editor\"));\n\nexport const editorStickyScrollBorder = registerColor('editorStickyScroll.border',\n\t{ dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('editorStickyScrollBorder', \"Border color of sticky scroll in the editor\"));\n\nexport const editorStickyScrollShadow = registerColor('editorStickyScroll.shadow',\n\tscrollbarShadow,\n\tnls.localize('editorStickyScrollShadow', \" Shadow color of sticky scroll in the editor\"));\n\n\nexport const editorWidgetBackground = registerColor('editorWidget.background',\n\t{ dark: '#252526', light: '#F3F3F3', hcDark: '#0C141F', hcLight: Color.white },\n\tnls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\n\nexport const editorWidgetForeground = registerColor('editorWidget.foreground',\n\tforeground,\n\tnls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\n\nexport const editorWidgetBorder = registerColor('editorWidget.border',\n\t{ dark: '#454545', light: '#C8C8C8', hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\n\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder',\n\tnull,\n\tnls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\n\n\nexport const editorErrorBackground = registerColor('editorError.background',\n\tnull,\n\tnls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const editorErrorForeground = registerColor('editorError.foreground',\n\t{ dark: '#F14C4C', light: '#E51400', hcDark: '#F48771', hcLight: '#B5200D' },\n\tnls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\n\nexport const editorErrorBorder = registerColor('editorError.border',\n\t{ dark: null, light: null, hcDark: Color.fromHex('#E47777').transparent(0.8), hcLight: '#B5200D' },\n\tnls.localize('errorBorder', 'If set, color of double underlines for errors in the editor.'));\n\n\nexport const editorWarningBackground = registerColor('editorWarning.background',\n\tnull,\n\tnls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const editorWarningForeground = registerColor('editorWarning.foreground',\n\t{ dark: '#CCA700', light: '#BF8803', hcDark: '#FFD370', hcLight: '#895503' },\n\tnls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\n\nexport const editorWarningBorder = registerColor('editorWarning.border',\n\t{ dark: null, light: null, hcDark: Color.fromHex('#FFCC00').transparent(0.8), hcLight: Color.fromHex('#FFCC00').transparent(0.8) },\n\tnls.localize('warningBorder', 'If set, color of double underlines for warnings in the editor.'));\n\n\nexport const editorInfoBackground = registerColor('editorInfo.background',\n\tnull,\n\tnls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const editorInfoForeground = registerColor('editorInfo.foreground',\n\t{ dark: '#3794FF', light: '#1a85ff', hcDark: '#3794FF', hcLight: '#1a85ff' },\n\tnls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\n\nexport const editorInfoBorder = registerColor('editorInfo.border',\n\t{ dark: null, light: null, hcDark: Color.fromHex('#3794FF').transparent(0.8), hcLight: '#292929' },\n\tnls.localize('infoBorder', 'If set, color of double underlines for infos in the editor.'));\n\n\nexport const editorHintForeground = registerColor('editorHint.foreground',\n\t{ dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hcDark: null, hcLight: null },\n\tnls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\n\nexport const editorHintBorder = registerColor('editorHint.border',\n\t{ dark: null, light: null, hcDark: Color.fromHex('#eeeeee').transparent(0.8), hcLight: '#292929' },\n\tnls.localize('hintBorder', 'If set, color of double underlines for hints in the editor.'));\n\n\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground',\n\t{ dark: '#4E94CE', light: Color.blue, hcDark: Color.cyan, hcLight: '#292929' },\n\tnls.localize('activeLinkForeground', 'Color of active links.'));\n\n\n// ----- editor selection\n\nexport const editorSelectionBackground = registerColor('editor.selectionBackground',\n\t{ light: '#ADD6FF', dark: '#264F78', hcDark: '#f3f518', hcLight: '#0F4A85' },\n\tnls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\n\nexport const editorSelectionForeground = registerColor('editor.selectionForeground',\n\t{ light: null, dark: null, hcDark: '#000000', hcLight: Color.white },\n\tnls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\n\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground',\n\t{ light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hcDark: transparent(editorSelectionBackground, 0.7), hcLight: transparent(editorSelectionBackground, 0.5) },\n\tnls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\n\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground',\n\t{ light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hcDark: null, hcLight: null },\n\tnls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder',\n\t{ light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder },\n\tnls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n\nexport const editorCompositionBorder = registerColor('editor.compositionBorder',\n\t{ light: '#000000', dark: '#ffffff', hcLight: '#000000', hcDark: '#ffffff' },\n\tnls.localize('editorCompositionBorder', \"The border color for an IME composition.\"));\n\n\n// ----- editor find\n\nexport const editorFindMatch = registerColor('editor.findMatchBackground',\n\t{ light: '#A8AC94', dark: '#515C6A', hcDark: null, hcLight: null },\n\tnls.localize('editorFindMatch', \"Color of the current search match.\"));\n\nexport const editorFindMatchForeground = registerColor('editor.findMatchForeground',\n\tnull,\n\tnls.localize('editorFindMatchForeground', \"Text color of the current search match.\"));\n\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground',\n\t{ light: '#EA5C0055', dark: '#EA5C0055', hcDark: null, hcLight: null },\n\tnls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\n\nexport const editorFindMatchHighlightForeground = registerColor('editor.findMatchHighlightForeground',\n\tnull,\n\tnls.localize('findMatchHighlightForeground', \"Foreground color of the other search matches.\"), true);\n\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground',\n\t{ dark: '#3a3d4166', light: '#b4b4b44d', hcDark: null, hcLight: null },\n\tnls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder',\n\t{ light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder },\n\tnls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\n\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder',\n\t{ light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder },\n\tnls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\n\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder',\n\t{ dark: null, light: null, hcDark: transparent(activeContrastBorder, 0.4), hcLight: transparent(activeContrastBorder, 0.4) },\n\tnls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n\n\n// ----- editor hover\n\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground',\n\t{ light: '#ADD6FF26', dark: '#264f7840', hcDark: '#ADD6FF26', hcLight: null },\n\tnls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const editorHoverBackground = registerColor('editorHoverWidget.background',\n\teditorWidgetBackground,\n\tnls.localize('hoverBackground', 'Background color of the editor hover.'));\n\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground',\n\teditorWidgetForeground,\n\tnls.localize('hoverForeground', 'Foreground color of the editor hover.'));\n\nexport const editorHoverBorder = registerColor('editorHoverWidget.border',\n\teditorWidgetBorder,\n\tnls.localize('hoverBorder', 'Border color of the editor hover.'));\n\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground',\n\t{ dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground },\n\tnls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n\n\n// ----- editor inlay hint\n\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground',\n\t{ dark: '#969696', light: '#969696', hcDark: Color.white, hcLight: Color.black },\n\tnls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\n\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background',\n\t{ dark: transparent(badgeBackground, .10), light: transparent(badgeBackground, .10), hcDark: transparent(Color.white, .10), hcLight: transparent(badgeBackground, .10) },\n\tnls.localize('editorInlayHintBackground', 'Background color of inline hints'));\n\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground',\n\teditorInlayHintForeground,\n\tnls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\n\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground',\n\teditorInlayHintBackground,\n\tnls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\n\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground',\n\teditorInlayHintForeground,\n\tnls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\n\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground',\n\teditorInlayHintBackground,\n\tnls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n\n\n// ----- editor lightbulb\n\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground',\n\t{ dark: '#FFCC00', light: '#DDB100', hcDark: '#FFCC00', hcLight: '#007ACC' },\n\tnls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\n\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground',\n\t{ dark: '#75BEFF', light: '#007ACC', hcDark: '#75BEFF', hcLight: '#007ACC' },\n\tnls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\n\nexport const editorLightBulbAiForeground = registerColor('editorLightBulbAi.foreground',\n\teditorLightBulbForeground,\n\tnls.localize('editorLightBulbAiForeground', \"The color used for the lightbulb AI icon.\"));\n\n\n// ----- editor snippet\n\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground',\n\t{ dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hcDark: new Color(new RGBA(124, 124, 124, 0.3)), hcLight: new Color(new RGBA(10, 50, 100, 0.2)) },\n\tnls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\n\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder',\n\tnull,\n\tnls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\n\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground',\n\tnull,\n\tnls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\n\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder',\n\t{ dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hcDark: '#525252', hcLight: '#292929' },\n\tnls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n\n\n// ----- diff editor\n\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, .2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, .2));\n\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground',\n\t{ dark: '#9ccc2c33', light: '#9ccc2c40', hcDark: null, hcLight: null },\n\tnls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground',\n\t{ dark: '#ff000033', light: '#ff000033', hcDark: null, hcLight: null },\n\tnls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\n\n\nexport const diffInsertedLine = registerColor('diffEditor.insertedLineBackground',\n\t{ dark: defaultInsertColor, light: defaultInsertColor, hcDark: null, hcLight: null },\n\tnls.localize('diffEditorInsertedLines', 'Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const diffRemovedLine = registerColor('diffEditor.removedLineBackground',\n\t{ dark: defaultRemoveColor, light: defaultRemoveColor, hcDark: null, hcLight: null },\n\tnls.localize('diffEditorRemovedLines', 'Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\n\n\nexport const diffInsertedLineGutter = registerColor('diffEditorGutter.insertedLineBackground',\n\tnull,\n\tnls.localize('diffEditorInsertedLineGutter', 'Background color for the margin where lines got inserted.'));\n\nexport const diffRemovedLineGutter = registerColor('diffEditorGutter.removedLineBackground',\n\tnull,\n\tnls.localize('diffEditorRemovedLineGutter', 'Background color for the margin where lines got removed.'));\n\n\nexport const diffOverviewRulerInserted = registerColor('diffEditorOverview.insertedForeground',\n\tnull,\n\tnls.localize('diffEditorOverviewInserted', 'Diff overview ruler foreground for inserted content.'));\n\nexport const diffOverviewRulerRemoved = registerColor('diffEditorOverview.removedForeground',\n\tnull,\n\tnls.localize('diffEditorOverviewRemoved', 'Diff overview ruler foreground for removed content.'));\n\n\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder',\n\t{ dark: null, light: null, hcDark: '#33ff2eff', hcLight: '#374E06' },\n\tnls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\n\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder',\n\t{ dark: null, light: null, hcDark: '#FF008F', hcLight: '#AD0707' },\n\tnls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\n\n\nexport const diffBorder = registerColor('diffEditor.border',\n\t{ dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('diffEditorBorder', 'Border color between the two text editors.'));\n\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill',\n\t{ dark: '#cccccc33', light: '#22222233', hcDark: null, hcLight: null },\n\tnls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\n\n\nexport const diffUnchangedRegionBackground = registerColor('diffEditor.unchangedRegionBackground',\n\t'sideBar.background',\n\tnls.localize('diffEditor.unchangedRegionBackground', \"The background color of unchanged blocks in the diff editor.\"));\n\nexport const diffUnchangedRegionForeground = registerColor('diffEditor.unchangedRegionForeground',\n\t'foreground',\n\tnls.localize('diffEditor.unchangedRegionForeground', \"The foreground color of unchanged blocks in the diff editor.\"));\n\nexport const diffUnchangedTextBackground = registerColor('diffEditor.unchangedCodeBackground',\n\t{ dark: '#74747429', light: '#b8b8b829', hcDark: null, hcLight: null },\n\tnls.localize('diffEditor.unchangedCodeBackground', \"The background color of unchanged code in the diff editor.\"));\n\n\n// ----- widget\n\nexport const widgetShadow = registerColor('widget.shadow',\n\t{ dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hcDark: null, hcLight: null },\n\tnls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\n\nexport const widgetBorder = registerColor('widget.border',\n\t{ dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('widgetBorder', 'Border color of widgets such as find/replace inside the editor.'));\n\n\n// ----- toolbar\n\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground',\n\t{ dark: '#5a5d5e50', light: '#b8b8b850', hcDark: null, hcLight: null },\n\tnls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\n\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline',\n\t{ dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder },\n\tnls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\n\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground',\n\t{ dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hcDark: null, hcLight: null },\n\tnls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n\n\n// ----- breadcumbs\n\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground',\n\ttransparent(foreground, 0.8),\n\tnls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\n\nexport const breadcrumbsBackground = registerColor('breadcrumb.background',\n\teditorBackground,\n\tnls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\n\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground',\n\t{ light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) },\n\tnls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\n\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground',\n\t{ light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) },\n\tnls.localize('breadcrumbsSelectedForeground', \"Color of selected breadcrumb items.\"));\n\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background',\n\teditorWidgetBackground,\n\tnls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n\n\n// ----- merge\n\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\n\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground',\n\t{ dark: currentBaseColor, light: currentBaseColor, hcDark: null, hcLight: null },\n\tnls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground',\n\ttransparent(mergeCurrentHeaderBackground, contentTransparency),\n\tnls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground',\n\t{ dark: incomingBaseColor, light: incomingBaseColor, hcDark: null, hcLight: null },\n\tnls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground',\n\ttransparent(mergeIncomingHeaderBackground, contentTransparency),\n\tnls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground',\n\t{ dark: commonBaseColor, light: commonBaseColor, hcDark: null, hcLight: null },\n\tnls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground',\n\ttransparent(mergeCommonHeaderBackground, contentTransparency),\n\tnls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const mergeBorder = registerColor('merge.border',\n\t{ dark: null, light: null, hcDark: '#C3DF6F', hcLight: '#007ACC' },\n\tnls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\n\n\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground',\n\t{ dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder },\n\tnls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\n\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground',\n\t{ dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder },\n\tnls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\n\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground',\n\t{ dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder },\n\tnls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\n\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground',\n\t{ dark: '#d186167e', light: '#d186167e', hcDark: '#AB5A00', hcLight: '#AB5A00' },\n\tnls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground',\n\t'#A0A0A0CC',\n\tnls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\n\n\n// ----- problems\n\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground',\n\teditorErrorForeground,\n\tnls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\n\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground',\n\teditorWarningForeground,\n\tnls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\n\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground',\n\teditorInfoForeground,\n\tnls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n"]}