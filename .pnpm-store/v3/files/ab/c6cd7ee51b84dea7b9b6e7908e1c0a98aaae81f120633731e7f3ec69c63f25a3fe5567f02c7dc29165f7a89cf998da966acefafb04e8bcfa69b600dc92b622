{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/standalone/browser/standaloneLayoutService.ts","vs/editor/standalone/browser/standaloneLayoutService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;AAEhG,OAAO,KAAK,GAAG,MAAM,8BAA8B,CAAC;AACpD,OAAO,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EAAE,QAAQ,EAAE,MAAM,gCAAgC,CAAC;AAC1D,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AACtD,OAAO,EAAE,kBAAkB,EAAE,MAAM,6CAA6C,CAAC;AACjF,OAAO,EAAqB,iBAAiB,EAAE,MAAM,sDAAsD,CAAC;AAC5G,OAAO,EAAqB,cAAc,EAAE,MAAM,mDAAmD,CAAC;AAEtG,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAS5B,IAAI,aAAa;QAChB,OAAO,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,mBAAmB,EAAE,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC;IAC3G,CAAC;IAED,IAAI,eAAe;QAClB,MAAM,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,IAAI,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;QAEzH,OAAO,gBAAgB,EAAE,mBAAmB,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC;IACtE,CAAC;IAED,IAAI,sBAAsB;QACzB,OAAO,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,wBAAwB;QAC3B,OAAO,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAChD,CAAC;IAKD,IAAI,UAAU;QACb,OAAO,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;IAChH,CAAC;IAED,YAAY;QACX,OAAO,IAAI,CAAC,eAAe,CAAC;IAC7B,CAAC;IAED,yBAAyB,KAAK,OAAO,SAAS,CAAC,CAAC,CAAC;IAEjD,KAAK;QACJ,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,EAAE,KAAK,EAAE,CAAC;IACzD,CAAC;IAED,YACqB,kBAA8C;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QA1C1D,6BAAwB,GAAG,KAAK,CAAC,IAAI,CAAC;QACtC,+BAA0B,GAAG,KAAK,CAAC,IAAI,CAAC;QACxC,yBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC;QAClC,+BAA0B,GAAG,KAAK,CAAC,IAAI,CAAC;QACxC,sBAAiB,GAAG,KAAK,CAAC,IAAI,CAAC;QAoB/B,wBAAmB,GAAsB,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;QACrE,0BAAqB,GAAsB,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;IAkB5E,CAAC;CAEL,CAAA;AAhDK,uBAAuB;IA6C1B,WAAA,kBAAkB,CAAA;GA7Cf,uBAAuB,CAgD5B;AAEM,IAAM,yBAAyB,GAA/B,MAAM,yBAA0B,SAAQ,uBAAuB;IACrE,IAAa,aAAa;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IACD,YACS,UAAuB,EACX,iBAAqC;QAEzD,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAHjB,eAAU,GAAV,UAAU,CAAa;IAIhC,CAAC;CACD,CAAA;AAVY,yBAAyB;IAMnC,WAAA,kBAAkB,CAAA;GANR,yBAAyB,CAUrC;;AAED,iBAAiB,CAAC,cAAc,EAAE,uBAAuB,oCAA4B,CAAC","file":"standaloneLayoutService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { Event } from '../../../base/common/event.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { ILayoutOffsetInfo, ILayoutService } from '../../../platform/layout/browser/layoutService.js';\n\nclass StandaloneLayoutService implements ILayoutService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onDidLayoutMainContainer = Event.None;\n\treadonly onDidLayoutActiveContainer = Event.None;\n\treadonly onDidLayoutContainer = Event.None;\n\treadonly onDidChangeActiveContainer = Event.None;\n\treadonly onDidAddContainer = Event.None;\n\n\tget mainContainer(): HTMLElement {\n\t\treturn this._codeEditorService.listCodeEditors().at(0)?.getContainerDomNode() ?? mainWindow.document.body;\n\t}\n\n\tget activeContainer(): HTMLElement {\n\t\tconst activeCodeEditor = this._codeEditorService.getFocusedCodeEditor() ?? this._codeEditorService.getActiveCodeEditor();\n\n\t\treturn activeCodeEditor?.getContainerDomNode() ?? this.mainContainer;\n\t}\n\n\tget mainContainerDimension(): dom.IDimension {\n\t\treturn dom.getClientArea(this.mainContainer);\n\t}\n\n\tget activeContainerDimension() {\n\t\treturn dom.getClientArea(this.activeContainer);\n\t}\n\n\treadonly mainContainerOffset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\treadonly activeContainerOffset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\n\tget containers(): Iterable<HTMLElement> {\n\t\treturn coalesce(this._codeEditorService.listCodeEditors().map(codeEditor => codeEditor.getContainerDomNode()));\n\t}\n\n\tgetContainer() {\n\t\treturn this.activeContainer;\n\t}\n\n\twhenContainerStylesLoaded() { return undefined; }\n\n\tfocus(): void {\n\t\tthis._codeEditorService.getFocusedCodeEditor()?.focus();\n\t}\n\n\tconstructor(\n\t\t@ICodeEditorService private _codeEditorService: ICodeEditorService\n\t) { }\n\n}\n\nexport class EditorScopedLayoutService extends StandaloneLayoutService {\n\toverride get mainContainer(): HTMLElement {\n\t\treturn this._container;\n\t}\n\tconstructor(\n\t\tprivate _container: HTMLElement,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper(codeEditorService);\n\t}\n}\n\nregisterSingleton(ILayoutService, StandaloneLayoutService, InstantiationType.Delayed);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { Event } from '../../../base/common/event.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { ILayoutOffsetInfo, ILayoutService } from '../../../platform/layout/browser/layoutService.js';\n\nclass StandaloneLayoutService implements ILayoutService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onDidLayoutMainContainer = Event.None;\n\treadonly onDidLayoutActiveContainer = Event.None;\n\treadonly onDidLayoutContainer = Event.None;\n\treadonly onDidChangeActiveContainer = Event.None;\n\treadonly onDidAddContainer = Event.None;\n\n\tget mainContainer(): HTMLElement {\n\t\treturn this._codeEditorService.listCodeEditors().at(0)?.getContainerDomNode() ?? mainWindow.document.body;\n\t}\n\n\tget activeContainer(): HTMLElement {\n\t\tconst activeCodeEditor = this._codeEditorService.getFocusedCodeEditor() ?? this._codeEditorService.getActiveCodeEditor();\n\n\t\treturn activeCodeEditor?.getContainerDomNode() ?? this.mainContainer;\n\t}\n\n\tget mainContainerDimension(): dom.IDimension {\n\t\treturn dom.getClientArea(this.mainContainer);\n\t}\n\n\tget activeContainerDimension() {\n\t\treturn dom.getClientArea(this.activeContainer);\n\t}\n\n\treadonly mainContainerOffset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\treadonly activeContainerOffset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\n\tget containers(): Iterable<HTMLElement> {\n\t\treturn coalesce(this._codeEditorService.listCodeEditors().map(codeEditor => codeEditor.getContainerDomNode()));\n\t}\n\n\tgetContainer() {\n\t\treturn this.activeContainer;\n\t}\n\n\twhenContainerStylesLoaded() { return undefined; }\n\n\tfocus(): void {\n\t\tthis._codeEditorService.getFocusedCodeEditor()?.focus();\n\t}\n\n\tconstructor(\n\t\t@ICodeEditorService private _codeEditorService: ICodeEditorService\n\t) { }\n\n}\n\nexport class EditorScopedLayoutService extends StandaloneLayoutService {\n\toverride get mainContainer(): HTMLElement {\n\t\treturn this._container;\n\t}\n\tconstructor(\n\t\tprivate _container: HTMLElement,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper(codeEditorService);\n\t}\n}\n\nregisterSingleton(ILayoutService, StandaloneLayoutService, InstantiationType.Delayed);\n"]}