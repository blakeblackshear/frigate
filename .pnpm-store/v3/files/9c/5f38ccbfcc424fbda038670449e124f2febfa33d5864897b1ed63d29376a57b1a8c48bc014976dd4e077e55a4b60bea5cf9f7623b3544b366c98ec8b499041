{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/base/browser/ui/scrollbar/scrollableElementOptions.ts","vs/base/browser/ui/scrollbar/scrollableElementOptions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG","file":"scrollableElementOptions.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ScrollbarVisibility } from '../../../common/scrollable.js';\n\nexport interface ScrollableElementCreationOptions {\n\t/**\n\t * The scrollable element should not do any DOM mutations until renderNow() is called.\n\t * Defaults to false.\n\t */\n\tlazyRender?: boolean;\n\t/**\n\t * CSS Class name for the scrollable element.\n\t */\n\tclassName?: string;\n\t/**\n\t * Drop subtle horizontal and vertical shadows.\n\t * Defaults to false.\n\t */\n\tuseShadows?: boolean;\n\t/**\n\t * Handle mouse wheel (listen to mouse wheel scrolling).\n\t * Defaults to true\n\t */\n\thandleMouseWheel?: boolean;\n\t/**\n\t * If mouse wheel is handled, make mouse wheel scrolling smooth.\n\t * Defaults to true.\n\t */\n\tmouseWheelSmoothScroll?: boolean;\n\t/**\n\t * Make scrolling inertial - mostly useful with touchpad on linux.\n\t */\n\tinertialScroll?: boolean;\n\t/**\n\t * Flip axes. Treat vertical scrolling like horizontal and vice-versa.\n\t * Defaults to false.\n\t */\n\tflipAxes?: boolean;\n\t/**\n\t * If enabled, will scroll horizontally when scrolling vertical.\n\t * Defaults to false.\n\t */\n\tscrollYToX?: boolean;\n\t/**\n\t * Consume all mouse wheel events if a scrollbar is needed (i.e. scrollSize > size).\n\t * Defaults to false.\n\t */\n\tconsumeMouseWheelIfScrollbarIsNeeded?: boolean;\n\t/**\n\t * Always consume mouse wheel events, even when scrolling is no longer possible.\n\t * Defaults to false.\n\t */\n\talwaysConsumeMouseWheel?: boolean;\n\t/**\n\t * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n\t * Defaults to 1.\n\t */\n\tmouseWheelScrollSensitivity?: number;\n\t/**\n\t * FastScrolling mulitplier speed when pressing `Alt`\n\t * Defaults to 5.\n\t */\n\tfastScrollSensitivity?: number;\n\t/**\n\t * Whether the scrollable will only scroll along the predominant axis when scrolling both\n\t * vertically and horizontally at the same time.\n\t * Prevents horizontal drift when scrolling vertically on a trackpad.\n\t * Defaults to true.\n\t */\n\tscrollPredominantAxis?: boolean;\n\t/**\n\t * Height for vertical arrows (top/bottom) and width for horizontal arrows (left/right).\n\t * Defaults to 11.\n\t */\n\tarrowSize?: number;\n\t/**\n\t * The dom node events should be bound to.\n\t * If no listenOnDomNode is provided, the dom node passed to the constructor will be used for event listening.\n\t */\n\tlistenOnDomNode?: HTMLElement;\n\t/**\n\t * Control the visibility of the horizontal scrollbar.\n\t * Accepted values: 'auto' (on mouse over), 'visible' (always visible), 'hidden' (never visible)\n\t * Defaults to 'auto'.\n\t */\n\thorizontal?: ScrollbarVisibility;\n\t/**\n\t * Height (in px) of the horizontal scrollbar.\n\t * Defaults to 10.\n\t */\n\thorizontalScrollbarSize?: number;\n\t/**\n\t * Height (in px) of the horizontal scrollbar slider.\n\t * Defaults to `horizontalScrollbarSize`\n\t */\n\thorizontalSliderSize?: number;\n\t/**\n\t * Render arrows (left/right) for the horizontal scrollbar.\n\t * Defaults to false.\n\t */\n\thorizontalHasArrows?: boolean;\n\t/**\n\t * Control the visibility of the vertical scrollbar.\n\t * Accepted values: 'auto' (on mouse over), 'visible' (always visible), 'hidden' (never visible)\n\t * Defaults to 'auto'.\n\t */\n\tvertical?: ScrollbarVisibility;\n\t/**\n\t * Width (in px) of the vertical scrollbar.\n\t * Defaults to 10.\n\t */\n\tverticalScrollbarSize?: number;\n\t/**\n\t * Width (in px) of the vertical scrollbar slider.\n\t * Defaults to `verticalScrollbarSize`\n\t */\n\tverticalSliderSize?: number;\n\t/**\n\t * Render arrows (top/bottom) for the vertical scrollbar.\n\t * Defaults to false.\n\t */\n\tverticalHasArrows?: boolean;\n\t/**\n\t * Scroll gutter clicks move by page vs. jump to position.\n\t * Defaults to false.\n\t */\n\tscrollByPage?: boolean;\n}\n\nexport interface ScrollableElementChangeOptions {\n\thandleMouseWheel?: boolean;\n\tmouseWheelScrollSensitivity?: number;\n\tfastScrollSensitivity?: number;\n\tscrollPredominantAxis?: boolean;\n\thorizontal?: ScrollbarVisibility;\n\thorizontalScrollbarSize?: number;\n\tvertical?: ScrollbarVisibility;\n\tverticalScrollbarSize?: number;\n\tscrollByPage?: boolean;\n}\n\nexport interface ScrollableElementResolvedOptions {\n\tlazyRender: boolean;\n\tclassName: string;\n\tuseShadows: boolean;\n\thandleMouseWheel: boolean;\n\tflipAxes: boolean;\n\tscrollYToX: boolean;\n\tconsumeMouseWheelIfScrollbarIsNeeded: boolean;\n\talwaysConsumeMouseWheel: boolean;\n\tmouseWheelScrollSensitivity: number;\n\tfastScrollSensitivity: number;\n\tscrollPredominantAxis: boolean;\n\tmouseWheelSmoothScroll: boolean;\n\tinertialScroll: boolean;\n\tarrowSize: number;\n\tlistenOnDomNode: HTMLElement | null;\n\thorizontal: ScrollbarVisibility;\n\thorizontalScrollbarSize: number;\n\thorizontalSliderSize: number;\n\thorizontalHasArrows: boolean;\n\tvertical: ScrollbarVisibility;\n\tverticalScrollbarSize: number;\n\tverticalSliderSize: number;\n\tverticalHasArrows: boolean;\n\tscrollByPage: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ScrollbarVisibility } from '../../../common/scrollable.js';\n\nexport interface ScrollableElementCreationOptions {\n\t/**\n\t * The scrollable element should not do any DOM mutations until renderNow() is called.\n\t * Defaults to false.\n\t */\n\tlazyRender?: boolean;\n\t/**\n\t * CSS Class name for the scrollable element.\n\t */\n\tclassName?: string;\n\t/**\n\t * Drop subtle horizontal and vertical shadows.\n\t * Defaults to false.\n\t */\n\tuseShadows?: boolean;\n\t/**\n\t * Handle mouse wheel (listen to mouse wheel scrolling).\n\t * Defaults to true\n\t */\n\thandleMouseWheel?: boolean;\n\t/**\n\t * If mouse wheel is handled, make mouse wheel scrolling smooth.\n\t * Defaults to true.\n\t */\n\tmouseWheelSmoothScroll?: boolean;\n\t/**\n\t * Make scrolling inertial - mostly useful with touchpad on linux.\n\t */\n\tinertialScroll?: boolean;\n\t/**\n\t * Flip axes. Treat vertical scrolling like horizontal and vice-versa.\n\t * Defaults to false.\n\t */\n\tflipAxes?: boolean;\n\t/**\n\t * If enabled, will scroll horizontally when scrolling vertical.\n\t * Defaults to false.\n\t */\n\tscrollYToX?: boolean;\n\t/**\n\t * Consume all mouse wheel events if a scrollbar is needed (i.e. scrollSize > size).\n\t * Defaults to false.\n\t */\n\tconsumeMouseWheelIfScrollbarIsNeeded?: boolean;\n\t/**\n\t * Always consume mouse wheel events, even when scrolling is no longer possible.\n\t * Defaults to false.\n\t */\n\talwaysConsumeMouseWheel?: boolean;\n\t/**\n\t * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n\t * Defaults to 1.\n\t */\n\tmouseWheelScrollSensitivity?: number;\n\t/**\n\t * FastScrolling mulitplier speed when pressing `Alt`\n\t * Defaults to 5.\n\t */\n\tfastScrollSensitivity?: number;\n\t/**\n\t * Whether the scrollable will only scroll along the predominant axis when scrolling both\n\t * vertically and horizontally at the same time.\n\t * Prevents horizontal drift when scrolling vertically on a trackpad.\n\t * Defaults to true.\n\t */\n\tscrollPredominantAxis?: boolean;\n\t/**\n\t * Height for vertical arrows (top/bottom) and width for horizontal arrows (left/right).\n\t * Defaults to 11.\n\t */\n\tarrowSize?: number;\n\t/**\n\t * The dom node events should be bound to.\n\t * If no listenOnDomNode is provided, the dom node passed to the constructor will be used for event listening.\n\t */\n\tlistenOnDomNode?: HTMLElement;\n\t/**\n\t * Control the visibility of the horizontal scrollbar.\n\t * Accepted values: 'auto' (on mouse over), 'visible' (always visible), 'hidden' (never visible)\n\t * Defaults to 'auto'.\n\t */\n\thorizontal?: ScrollbarVisibility;\n\t/**\n\t * Height (in px) of the horizontal scrollbar.\n\t * Defaults to 10.\n\t */\n\thorizontalScrollbarSize?: number;\n\t/**\n\t * Height (in px) of the horizontal scrollbar slider.\n\t * Defaults to `horizontalScrollbarSize`\n\t */\n\thorizontalSliderSize?: number;\n\t/**\n\t * Render arrows (left/right) for the horizontal scrollbar.\n\t * Defaults to false.\n\t */\n\thorizontalHasArrows?: boolean;\n\t/**\n\t * Control the visibility of the vertical scrollbar.\n\t * Accepted values: 'auto' (on mouse over), 'visible' (always visible), 'hidden' (never visible)\n\t * Defaults to 'auto'.\n\t */\n\tvertical?: ScrollbarVisibility;\n\t/**\n\t * Width (in px) of the vertical scrollbar.\n\t * Defaults to 10.\n\t */\n\tverticalScrollbarSize?: number;\n\t/**\n\t * Width (in px) of the vertical scrollbar slider.\n\t * Defaults to `verticalScrollbarSize`\n\t */\n\tverticalSliderSize?: number;\n\t/**\n\t * Render arrows (top/bottom) for the vertical scrollbar.\n\t * Defaults to false.\n\t */\n\tverticalHasArrows?: boolean;\n\t/**\n\t * Scroll gutter clicks move by page vs. jump to position.\n\t * Defaults to false.\n\t */\n\tscrollByPage?: boolean;\n}\n\nexport interface ScrollableElementChangeOptions {\n\thandleMouseWheel?: boolean;\n\tmouseWheelScrollSensitivity?: number;\n\tfastScrollSensitivity?: number;\n\tscrollPredominantAxis?: boolean;\n\thorizontal?: ScrollbarVisibility;\n\thorizontalScrollbarSize?: number;\n\tvertical?: ScrollbarVisibility;\n\tverticalScrollbarSize?: number;\n\tscrollByPage?: boolean;\n}\n\nexport interface ScrollableElementResolvedOptions {\n\tlazyRender: boolean;\n\tclassName: string;\n\tuseShadows: boolean;\n\thandleMouseWheel: boolean;\n\tflipAxes: boolean;\n\tscrollYToX: boolean;\n\tconsumeMouseWheelIfScrollbarIsNeeded: boolean;\n\talwaysConsumeMouseWheel: boolean;\n\tmouseWheelScrollSensitivity: number;\n\tfastScrollSensitivity: number;\n\tscrollPredominantAxis: boolean;\n\tmouseWheelSmoothScroll: boolean;\n\tinertialScroll: boolean;\n\tarrowSize: number;\n\tlistenOnDomNode: HTMLElement | null;\n\thorizontal: ScrollbarVisibility;\n\thorizontalScrollbarSize: number;\n\thorizontalSliderSize: number;\n\thorizontalHasArrows: boolean;\n\tvertical: ScrollbarVisibility;\n\tverticalScrollbarSize: number;\n\tverticalSliderSize: number;\n\tverticalHasArrows: boolean;\n\tscrollByPage: boolean;\n}\n"]}