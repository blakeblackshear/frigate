{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/treeViewsDnd.ts","vs/editor/common/services/treeViewsDnd.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAQhG,MAAM,OAAO,mBAAmB;IAAhC;QAES,oBAAe,GAAwC,IAAI,GAAG,EAAE,CAAC;IAU1E,CAAC;IARA,2BAA2B,CAAC,IAAwB;QACnD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;YAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAClC,OAAO,SAAS,CAAC;QAClB,CAAC;QACD,OAAO,SAAS,CAAC;IAClB,CAAC;CACD;AAGD,MAAM,OAAO,0BAA0B;IAEtC,YAAqB,UAAkB;QAAlB,eAAU,GAAV,UAAU,CAAQ;IAAI,CAAC;CAC5C","file":"treeViewsDnd.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ITreeViewsDnDService<T> {\n\treadonly _serviceBrand: undefined;\n\n\tremoveDragOperationTransfer(uuid: string | undefined): Promise<T | undefined> | undefined;\n}\n\nexport class TreeViewsDnDService<T> implements ITreeViewsDnDService<T> {\n\t_serviceBrand: undefined;\n\tprivate _dragOperations: Map<string, Promise<T | undefined>> = new Map();\n\n\tremoveDragOperationTransfer(uuid: string | undefined): Promise<T | undefined> | undefined {\n\t\tif ((uuid && this._dragOperations.has(uuid))) {\n\t\t\tconst operation = this._dragOperations.get(uuid);\n\t\t\tthis._dragOperations.delete(uuid);\n\t\t\treturn operation;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n\nexport class DraggedTreeItemsIdentifier {\n\n\tconstructor(readonly identifier: string) { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ITreeViewsDnDService<T> {\n\treadonly _serviceBrand: undefined;\n\n\tremoveDragOperationTransfer(uuid: string | undefined): Promise<T | undefined> | undefined;\n}\n\nexport class TreeViewsDnDService<T> implements ITreeViewsDnDService<T> {\n\t_serviceBrand: undefined;\n\tprivate _dragOperations: Map<string, Promise<T | undefined>> = new Map();\n\n\tremoveDragOperationTransfer(uuid: string | undefined): Promise<T | undefined> | undefined {\n\t\tif ((uuid && this._dragOperations.has(uuid))) {\n\t\t\tconst operation = this._dragOperations.get(uuid);\n\t\t\tthis._dragOperations.delete(uuid);\n\t\t\treturn operation;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n\nexport class DraggedTreeItemsIdentifier {\n\n\tconstructor(readonly identifier: string) { }\n}\n"]}