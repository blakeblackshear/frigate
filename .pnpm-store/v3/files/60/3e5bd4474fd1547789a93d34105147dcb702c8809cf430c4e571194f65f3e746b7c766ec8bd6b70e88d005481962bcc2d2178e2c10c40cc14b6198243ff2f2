{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/editorAction.ts","vs/editor/common/editorAction.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAMhG,MAAM,OAAO,oBAAoB;IAEhC,YACiB,EAAU,EACV,KAAa,EACb,KAAa,EACb,QAAsC,EACrC,aAA+C,EAC/C,IAAsC,EACtC,kBAAsC;QANvC,OAAE,GAAF,EAAE,CAAQ;QACV,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAA8B;QACrC,kBAAa,GAAb,aAAa,CAAkC;QAC/C,SAAI,GAAJ,IAAI,CAAkC;QACtC,uBAAkB,GAAlB,kBAAkB,CAAoB;IACpD,CAAC;IAEE,WAAW;QACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACxE,CAAC;IAEM,GAAG,CAAC,IAAa;QACvB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;YACzB,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACnC,CAAC;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;CACD","file":"editorAction.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEditorAction } from './editorCommon.js';\nimport { ICommandMetadata } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpression, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\n\nexport class InternalEditorAction implements IEditorAction {\n\n\tconstructor(\n\t\tpublic readonly id: string,\n\t\tpublic readonly label: string,\n\t\tpublic readonly alias: string,\n\t\tpublic readonly metadata: ICommandMetadata | undefined,\n\t\tprivate readonly _precondition: ContextKeyExpression | undefined,\n\t\tprivate readonly _run: (args: unknown) => Promise<void>,\n\t\tprivate readonly _contextKeyService: IContextKeyService\n\t) { }\n\n\tpublic isSupported(): boolean {\n\t\treturn this._contextKeyService.contextMatchesRules(this._precondition);\n\t}\n\n\tpublic run(args: unknown): Promise<void> {\n\t\tif (!this.isSupported()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._run(args);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEditorAction } from './editorCommon.js';\nimport { ICommandMetadata } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpression, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\n\nexport class InternalEditorAction implements IEditorAction {\n\n\tconstructor(\n\t\tpublic readonly id: string,\n\t\tpublic readonly label: string,\n\t\tpublic readonly alias: string,\n\t\tpublic readonly metadata: ICommandMetadata | undefined,\n\t\tprivate readonly _precondition: ContextKeyExpression | undefined,\n\t\tprivate readonly _run: (args: unknown) => Promise<void>,\n\t\tprivate readonly _contextKeyService: IContextKeyService\n\t) { }\n\n\tpublic isSupported(): boolean {\n\t\treturn this._contextKeyService.contextMatchesRules(this._precondition);\n\t}\n\n\tpublic run(args: unknown): Promise<void> {\n\t\tif (!this.isSupported()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._run(args);\n\t}\n}\n"]}