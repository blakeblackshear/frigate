{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/editor.api.ts","vs/editor/editor.api.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,OAAO,EAAE,aAAa,EAA4C,MAAM,kCAAkC,CAAC;AAC3G,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AACzE,OAAO,EAAE,qBAAqB,EAAE,MAAM,0CAA0C,CAAC;AACjF,OAAO,EAAE,wBAAwB,EAAE,MAAM,6CAA6C,CAAC;AACvF,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AAEzE,qCAAqC;AACrC,aAAa,CAAC,cAAc,CAAC,YAAY,8BAAsB,CAAC;AAChE,aAAa,CAAC,WAAW,CAAC,YAAY,GAAG,KAAK,CAAC;AAC/C,aAAa,CAAC,UAAU,CAAC,YAAY,4CAAoC,CAAC;AAC1E,aAAa,CAAC,kBAAkB,CAAC,YAAY,GAAG,CAAC,CAAC;AAElD,6FAA6F;AAC7F,6DAA6D;AAC7D,mBAAmB,CAAC,oBAAoB,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAEvG,MAAM,GAAG,GAAG,mBAAmB,EAAE,CAAC;AAClC,GAAG,CAAC,MAAM,GAAG,qBAAqB,EAAE,CAAC;AACrC,GAAG,CAAC,SAAS,GAAG,wBAAwB,EAAE,CAAC;AAC3C,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAG,CAAC,uBAAuB,CAAC;AACnE,MAAM,CAAC,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;AACnC,MAAM,CAAC,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;AACnC,MAAM,CAAC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;AACrC,MAAM,CAAC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;AAC/B,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;AACvC,MAAM,CAAC,MAAM,kBAAkB,GAAG,GAAG,CAAC,kBAAkB,CAAC;AACzD,MAAM,CAAC,MAAM,cAAc,GAAG,GAAG,CAAC,cAAc,CAAC;AACjD,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;AACvC,MAAM,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AAC3B,MAAM,CAAC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;AAC/B,MAAM,CAAC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACjC,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;AAMvC,MAAM,iBAAiB,GAAoC,UAAkB,CAAC,iBAAiB,CAAC;AAChG,IAAI,iBAAiB,EAAE,SAAS,IAAI,CAAC,OAAQ,UAAkB,CAAC,MAAM,KAAK,UAAU,IAAI,CAAE,UAAkB,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;IAC5H,UAAU,CAAC,MAAM,GAAG,GAAG,CAAC;AACzB,CAAC;AAED,IAAI,OAAQ,UAAkB,CAAC,OAAO,KAAK,WAAW,IAAI,OAAQ,UAAkB,CAAC,OAAO,CAAC,MAAM,KAAK,UAAU,EAAE,CAAC;IACnH,UAAkB,CAAC,OAAO,CAAC,MAAM,CAAC;QAClC,sBAAsB,EAAE;YACvB,6BAA6B;YAC7B,kCAAkC;YAClC,oCAAoC;YACpC,yCAAyC;YACzC,YAAY;YACZ,uBAAuB;YACvB,cAAc;YACd,mBAAmB;YACnB,YAAY;YACZ,kBAAkB;YAClB,0CAA0C;SAC1C;KACD,CAAC,CAAC;AACJ,CAAC","file":"editor.api.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorOptions, WrappingIndent, EditorAutoIndentStrategy } from './common/config/editorOptions.js';\nimport { createMonacoBaseAPI } from './common/services/editorBaseApi.js';\nimport { createMonacoEditorAPI } from './standalone/browser/standaloneEditor.js';\nimport { createMonacoLanguagesAPI } from './standalone/browser/standaloneLanguages.js';\nimport { FormattingConflicts } from './contrib/format/browser/format.js';\n\n// Set defaults for standalone editor\nEditorOptions.wrappingIndent.defaultValue = WrappingIndent.None;\nEditorOptions.glyphMargin.defaultValue = false;\nEditorOptions.autoIndent.defaultValue = EditorAutoIndentStrategy.Advanced;\nEditorOptions.overviewRulerLanes.defaultValue = 2;\n\n// We need to register a formatter selector which simply picks the first available formatter.\n// See https://github.com/microsoft/monaco-editor/issues/2327\nFormattingConflicts.setFormatterSelector((formatter, document, mode) => Promise.resolve(formatter[0]));\n\nconst api = createMonacoBaseAPI();\napi.editor = createMonacoEditorAPI();\napi.languages = createMonacoLanguagesAPI();\nexport const CancellationTokenSource = api.CancellationTokenSource;\nexport const Emitter = api.Emitter;\nexport const KeyCode = api.KeyCode;\nexport const KeyMod = api.KeyMod;\nexport const Position = api.Position;\nexport const Range = api.Range;\nexport const Selection = api.Selection;\nexport const SelectionDirection = api.SelectionDirection;\nexport const MarkerSeverity = api.MarkerSeverity;\nexport const MarkerTag = api.MarkerTag;\nexport const Uri = api.Uri;\nexport const Token = api.Token;\nexport const editor = api.editor;\nexport const languages = api.languages;\n\ninterface IMonacoEnvironment {\n\tglobalAPI?: boolean;\n}\n\nconst monacoEnvironment: IMonacoEnvironment | undefined = (globalThis as any).MonacoEnvironment;\nif (monacoEnvironment?.globalAPI || (typeof (globalThis as any).define === 'function' && ((globalThis as any).define).amd)) {\n\tglobalThis.monaco = api;\n}\n\nif (typeof (globalThis as any).require !== 'undefined' && typeof (globalThis as any).require.config === 'function') {\n\t(globalThis as any).require.config({\n\t\tignoreDuplicateModules: [\n\t\t\t'vscode-languageserver-types',\n\t\t\t'vscode-languageserver-types/main',\n\t\t\t'vscode-languageserver-textdocument',\n\t\t\t'vscode-languageserver-textdocument/main',\n\t\t\t'vscode-nls',\n\t\t\t'vscode-nls/vscode-nls',\n\t\t\t'jsonc-parser',\n\t\t\t'jsonc-parser/main',\n\t\t\t'vscode-uri',\n\t\t\t'vscode-uri/index',\n\t\t\t'vs/basic-languages/typescript/typescript'\n\t\t]\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorOptions, WrappingIndent, EditorAutoIndentStrategy } from './common/config/editorOptions.js';\nimport { createMonacoBaseAPI } from './common/services/editorBaseApi.js';\nimport { createMonacoEditorAPI } from './standalone/browser/standaloneEditor.js';\nimport { createMonacoLanguagesAPI } from './standalone/browser/standaloneLanguages.js';\nimport { FormattingConflicts } from './contrib/format/browser/format.js';\n\n// Set defaults for standalone editor\nEditorOptions.wrappingIndent.defaultValue = WrappingIndent.None;\nEditorOptions.glyphMargin.defaultValue = false;\nEditorOptions.autoIndent.defaultValue = EditorAutoIndentStrategy.Advanced;\nEditorOptions.overviewRulerLanes.defaultValue = 2;\n\n// We need to register a formatter selector which simply picks the first available formatter.\n// See https://github.com/microsoft/monaco-editor/issues/2327\nFormattingConflicts.setFormatterSelector((formatter, document, mode) => Promise.resolve(formatter[0]));\n\nconst api = createMonacoBaseAPI();\napi.editor = createMonacoEditorAPI();\napi.languages = createMonacoLanguagesAPI();\nexport const CancellationTokenSource = api.CancellationTokenSource;\nexport const Emitter = api.Emitter;\nexport const KeyCode = api.KeyCode;\nexport const KeyMod = api.KeyMod;\nexport const Position = api.Position;\nexport const Range = api.Range;\nexport const Selection = api.Selection;\nexport const SelectionDirection = api.SelectionDirection;\nexport const MarkerSeverity = api.MarkerSeverity;\nexport const MarkerTag = api.MarkerTag;\nexport const Uri = api.Uri;\nexport const Token = api.Token;\nexport const editor = api.editor;\nexport const languages = api.languages;\n\ninterface IMonacoEnvironment {\n\tglobalAPI?: boolean;\n}\n\nconst monacoEnvironment: IMonacoEnvironment | undefined = (globalThis as any).MonacoEnvironment;\nif (monacoEnvironment?.globalAPI || (typeof (globalThis as any).define === 'function' && ((globalThis as any).define).amd)) {\n\tglobalThis.monaco = api;\n}\n\nif (typeof (globalThis as any).require !== 'undefined' && typeof (globalThis as any).require.config === 'function') {\n\t(globalThis as any).require.config({\n\t\tignoreDuplicateModules: [\n\t\t\t'vscode-languageserver-types',\n\t\t\t'vscode-languageserver-types/main',\n\t\t\t'vscode-languageserver-textdocument',\n\t\t\t'vscode-languageserver-textdocument/main',\n\t\t\t'vscode-nls',\n\t\t\t'vscode-nls/vscode-nls',\n\t\t\t'jsonc-parser',\n\t\t\t'jsonc-parser/main',\n\t\t\t'vscode-uri',\n\t\t\t'vscode-uri/index',\n\t\t\t'vs/basic-languages/typescript/typescript'\n\t\t]\n\t});\n}\n"]}