{
	"keys": {
		"vs/base/browser/ui/actionbar/actionViewItems": [
			{
				"key": "titleLabel",
				"comment": [
					"action title",
					"action keybinding"
				]
			}
		],
		"vs/base/browser/ui/findinput/findInput": [
			"defaultLabel"
		],
		"vs/base/browser/ui/findinput/findInputToggles": [
			"caseDescription",
			"wordsDescription",
			"regexDescription"
		],
		"vs/base/browser/ui/findinput/replaceInput": [
			"defaultLabel",
			"label.preserveCaseToggle"
		],
		"vs/base/browser/ui/hover/hoverWidget": [
			"acessibleViewHint",
			"acessibleViewHintNoKbOpen"
		],
		"vs/base/browser/ui/inputbox/inputBox": [
			"alertErrorMessage",
			"alertWarningMessage",
			"alertInfoMessage",
			{
				"key": "history.inputbox.hint.suffix.noparens",
				"comment": [
					"Text is the suffix of an input field placeholder coming after the action the input field performs, this will be used when the input field ends in a closing parenthesis \")\", for example \"Filter (e.g. text, !exclude)\". The character inserted into the final string is ⇅ to represent the up and down arrow keys."
				]
			},
			{
				"key": "history.inputbox.hint.suffix.inparens",
				"comment": [
					"Text is the suffix of an input field placeholder coming after the action the input field performs, this will be used when the input field does NOT end in a closing parenthesis (eg. \"Find\"). The character inserted into the final string is ⇅ to represent the up and down arrow keys."
				]
			},
			"clearedInput"
		],
		"vs/base/browser/ui/keybindingLabel/keybindingLabel": [
			"unbound"
		],
		"vs/base/browser/ui/selectBox/selectBoxCustom": [
			{
				"key": "selectBox",
				"comment": [
					"Behave like native select dropdown element."
				]
			}
		],
		"vs/base/browser/ui/toolbar/toolbar": [
			"moreActions"
		],
		"vs/base/browser/ui/tree/abstractTree": [
			"type to search",
			"close",
			"type to search",
			"not found",
			"replFindNoResults",
			"foundResults",
			"type to filter",
			"type to search",
			"filter",
			"fuzzySearch"
		],
		"vs/base/common/actions": [
			"submenu.empty"
		],
		"vs/base/common/errorMessage": [
			"stackTrace.format",
			"nodeExceptionMessage",
			"error.defaultMessage",
			"error.defaultMessage",
			"error.moreErrors",
			"error.defaultMessage"
		],
		"vs/base/common/keybindingLabels": [
			{
				"key": "ctrlKey",
				"comment": [
					"This is the short form for the Control key on the keyboard"
				]
			},
			{
				"key": "shiftKey",
				"comment": [
					"This is the short form for the Shift key on the keyboard"
				]
			},
			{
				"key": "altKey",
				"comment": [
					"This is the short form for the Alt key on the keyboard"
				]
			},
			{
				"key": "windowsKey",
				"comment": [
					"This is the short form for the Windows key on the keyboard"
				]
			},
			{
				"key": "ctrlKey",
				"comment": [
					"This is the short form for the Control key on the keyboard"
				]
			},
			{
				"key": "shiftKey",
				"comment": [
					"This is the short form for the Shift key on the keyboard"
				]
			},
			{
				"key": "altKey",
				"comment": [
					"This is the short form for the Alt key on the keyboard"
				]
			},
			{
				"key": "superKey",
				"comment": [
					"This is the short form for the Super key on the keyboard"
				]
			},
			{
				"key": "ctrlKey.long",
				"comment": [
					"This is the long form for the Control key on the keyboard"
				]
			},
			{
				"key": "shiftKey.long",
				"comment": [
					"This is the long form for the Shift key on the keyboard"
				]
			},
			{
				"key": "optKey.long",
				"comment": [
					"This is the long form for the Alt/Option key on the keyboard"
				]
			},
			{
				"key": "cmdKey.long",
				"comment": [
					"This is the long form for the Command key on the keyboard"
				]
			},
			{
				"key": "ctrlKey.long",
				"comment": [
					"This is the long form for the Control key on the keyboard"
				]
			},
			{
				"key": "shiftKey.long",
				"comment": [
					"This is the long form for the Shift key on the keyboard"
				]
			},
			{
				"key": "altKey.long",
				"comment": [
					"This is the long form for the Alt key on the keyboard"
				]
			},
			{
				"key": "windowsKey.long",
				"comment": [
					"This is the long form for the Windows key on the keyboard"
				]
			},
			{
				"key": "ctrlKey.long",
				"comment": [
					"This is the long form for the Control key on the keyboard"
				]
			},
			{
				"key": "shiftKey.long",
				"comment": [
					"This is the long form for the Shift key on the keyboard"
				]
			},
			{
				"key": "altKey.long",
				"comment": [
					"This is the long form for the Alt key on the keyboard"
				]
			},
			{
				"key": "superKey.long",
				"comment": [
					"This is the long form for the Super key on the keyboard"
				]
			}
		],
		"vs/editor/browser/controller/editContext/native/screenReaderSupport": [
			"editor"
		],
		"vs/editor/browser/controller/editContext/screenReaderUtils": [
			"accessibilityModeOff",
			"accessibilityOffAriaLabel",
			"accessibilityOffAriaLabelNoKb",
			"accessibilityOffAriaLabelNoKbs"
		],
		"vs/editor/browser/controller/editContext/textArea/textAreaEditContext": [
			"editor"
		],
		"vs/editor/browser/coreCommands": [
			"stickydesc",
			"stickydesc",
			"removedCursor"
		],
		"vs/editor/browser/editorExtensions": [
			{
				"key": "miUndo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"undo",
			"undo",
			{
				"key": "miRedo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"redo",
			"redo",
			{
				"key": "miSelectAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"selectAll",
			"selectAll"
		],
		"vs/editor/browser/gpu/viewGpuContext": [
			"editor.dom.render"
		],
		"vs/editor/browser/services/hoverService/hoverWidget": [
			"hoverhint"
		],
		"vs/editor/browser/services/hoverService/updatableHoverWidget": [
			"iconLabel.loading"
		],
		"vs/editor/browser/services/inlineCompletionsService": [
			"inlineCompletions.snoozed",
			"snooze.placeholder",
			"action.inlineSuggest.snooze",
			"action.inlineSuggest.cancelSnooze"
		],
		"vs/editor/browser/widget/codeEditor/codeEditorWidget": [
			"cursors.maximum",
			"goToSetting"
		],
		"vs/editor/browser/widget/diffEditor/commands": [
			"toggleCollapseUnchangedRegions",
			"toggleShowMovedCodeBlocks",
			"toggleUseInlineViewWhenSpaceIsLimited",
			"diffEditor",
			"switchSide",
			"exitCompareMove",
			"collapseAllUnchangedRegions",
			"showAllUnchangedRegions",
			"revert",
			"accessibleDiffViewer",
			"editor.action.accessibleDiffViewer.next",
			"editor.action.accessibleDiffViewer.prev"
		],
		"vs/editor/browser/widget/diffEditor/components/accessibleDiffViewer": [
			"accessibleDiffViewerInsertIcon",
			"accessibleDiffViewerRemoveIcon",
			"accessibleDiffViewerCloseIcon",
			"label.close",
			"ariaLabel",
			"no_lines_changed",
			"one_line_changed",
			"more_lines_changed",
			{
				"key": "header",
				"comment": [
					"This is the ARIA label for a git diff header.",
					"A git diff header looks like this: @@ -154,12 +159,39 @@.",
					"That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.",
					"Variables 0 and 1 refer to the diff index out of total number of diffs.",
					"Variables 2 and 4 will be numbers (a line number).",
					"Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately."
				]
			},
			"blankLine",
			{
				"key": "unchangedLine",
				"comment": [
					"The placeholders are contents of the line and should not be translated."
				]
			},
			"equalLine",
			"insertLine",
			"deleteLine"
		],
		"vs/editor/browser/widget/diffEditor/components/diffEditorEditors": [
			"diff-aria-navigation-tip"
		],
		"vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/inlineDiffDeletedCodeMargin": [
			"diff.clipboard.copyDeletedLinesContent.label",
			"diff.clipboard.copyDeletedLinesContent.single.label",
			"diff.clipboard.copyChangedLinesContent.label",
			"diff.clipboard.copyChangedLinesContent.single.label",
			"diff.clipboard.copyDeletedLineContent.label",
			"diff.clipboard.copyChangedLineContent.label",
			"diff.inline.revertChange.label"
		],
		"vs/editor/browser/widget/diffEditor/diffEditor.contribution": [
			"useInlineViewWhenSpaceIsLimited",
			"showMoves",
			"revertHunk",
			"revertSelection",
			"Open Accessible Diff Viewer"
		],
		"vs/editor/browser/widget/diffEditor/features/hideUnchangedRegionsFeature": [
			"foldUnchanged",
			"hiddenLines",
			"diff.hiddenLines.top",
			"showUnchangedRegion",
			"diff.bottom",
			"hiddenLines",
			"diff.hiddenLines.expandAll"
		],
		"vs/editor/browser/widget/diffEditor/features/movedBlocksLinesFeature": [
			"codeMovedToWithChanges",
			"codeMovedFromWithChanges",
			"codeMovedTo",
			"codeMovedFrom"
		],
		"vs/editor/browser/widget/diffEditor/features/revertButtonsFeature": [
			"revertSelectedChanges",
			"revertChange"
		],
		"vs/editor/browser/widget/diffEditor/registrations.contribution": [
			"diffEditor.move.border",
			"diffEditor.moveActive.border",
			"diffEditor.unchangedRegionShadow",
			"diffInsertIcon",
			"diffRemoveIcon"
		],
		"vs/editor/browser/widget/multiDiffEditor/colors": [
			"multiDiffEditor.headerBackground",
			"multiDiffEditor.background",
			"multiDiffEditor.border"
		],
		"vs/editor/browser/widget/multiDiffEditor/multiDiffEditorWidgetImpl": [
			"loading",
			"noChangedFiles"
		],
		"vs/editor/common/config/editorConfigurationSchema": [
			"editorConfigurationTitle",
			"tabSize",
			"indentSize",
			"insertSpaces",
			"detectIndentation",
			"trimAutoWhitespace",
			"largeFileOptimizations",
			"wordBasedSuggestions.off",
			"wordBasedSuggestions.currentDocument",
			"wordBasedSuggestions.matchingDocuments",
			"wordBasedSuggestions.allDocuments",
			"wordBasedSuggestions",
			"semanticHighlighting.true",
			"semanticHighlighting.false",
			"semanticHighlighting.configuredByTheme",
			"semanticHighlighting.enabled",
			"stablePeek",
			"maxTokenizationLineLength",
			"editor.experimental.asyncTokenization",
			"editor.experimental.asyncTokenizationLogging",
			"editor.experimental.asyncTokenizationVerification",
			"editor.experimental.treeSitterTelemetry",
			"editor.experimental.preferTreeSitter.css",
			"editor.experimental.preferTreeSitter.typescript",
			"editor.experimental.preferTreeSitter.ini",
			"editor.experimental.preferTreeSitter.regex",
			"schema.brackets",
			"schema.openBracket",
			"schema.closeBracket",
			"schema.colorizedBracketPairs",
			"schema.openBracket",
			"schema.closeBracket",
			"maxComputationTime",
			"maxFileSize",
			"sideBySide",
			"renderSideBySideInlineBreakpoint",
			"useInlineViewWhenSpaceIsLimited",
			"renderMarginRevertIcon",
			"renderGutterMenu",
			"ignoreTrimWhitespace",
			"renderIndicators",
			"codeLens",
			"wordWrap.off",
			"wordWrap.on",
			"wordWrap.inherit",
			"diffAlgorithm.legacy",
			"diffAlgorithm.advanced",
			"hideUnchangedRegions.enabled",
			"hideUnchangedRegions.revealLineCount",
			"hideUnchangedRegions.minimumLineCount",
			"hideUnchangedRegions.contextLineCount",
			"showMoves",
			"showEmptyDecorations",
			"useTrueInlineView"
		],
		"vs/editor/common/config/editorOptions": [
			"accessibilitySupport.auto",
			"accessibilitySupport.on",
			"accessibilitySupport.off",
			"accessibilitySupport",
			"comments.insertSpace",
			"comments.ignoreEmptyLines",
			"emptySelectionClipboard",
			"find.cursorMoveOnType",
			"editor.find.seedSearchStringFromSelection.never",
			"editor.find.seedSearchStringFromSelection.always",
			"editor.find.seedSearchStringFromSelection.selection",
			"find.seedSearchStringFromSelection",
			"editor.find.autoFindInSelection.never",
			"editor.find.autoFindInSelection.always",
			"editor.find.autoFindInSelection.multiline",
			"find.autoFindInSelection",
			"find.globalFindClipboard",
			"find.addExtraSpaceOnTop",
			"find.loop",
			"editor.find.history.never",
			"editor.find.history.workspace",
			"find.history",
			"editor.find.replaceHistory.never",
			"editor.find.replaceHistory.workspace",
			"find.replaceHistory",
			"find.findOnType",
			"fontLigatures",
			"fontFeatureSettings",
			"fontLigaturesGeneral",
			"fontVariations",
			"fontVariationSettings",
			"fontVariationsGeneral",
			"fontSize",
			"fontWeightErrorMessage",
			"fontWeight",
			"editor.gotoLocation.multiple.peek",
			"editor.gotoLocation.multiple.gotoAndPeek",
			"editor.gotoLocation.multiple.goto",
			"editor.gotoLocation.multiple.deprecated",
			"editor.editor.gotoLocation.multipleDefinitions",
			"editor.editor.gotoLocation.multipleTypeDefinitions",
			"editor.editor.gotoLocation.multipleDeclarations",
			"editor.editor.gotoLocation.multipleImplemenattions",
			"editor.editor.gotoLocation.multipleReferences",
			"alternativeDefinitionCommand",
			"alternativeTypeDefinitionCommand",
			"alternativeDeclarationCommand",
			"alternativeImplementationCommand",
			"alternativeReferenceCommand",
			"hover.enabled",
			"hover.delay",
			"hover.sticky",
			"hover.hidingDelay",
			"hover.above",
			"wrappingStrategy.simple",
			"wrappingStrategy.advanced",
			"wrappingStrategy",
			"editor.lightbulb.enabled.off",
			"editor.lightbulb.enabled.onCode",
			"editor.lightbulb.enabled.on",
			"enabled",
			"editor.stickyScroll.enabled",
			"editor.stickyScroll.maxLineCount",
			"editor.stickyScroll.defaultModel",
			"editor.stickyScroll.scrollWithEditor",
			"inlayHints.enable",
			"editor.inlayHints.on",
			"editor.inlayHints.onUnlessPressed",
			"editor.inlayHints.offUnlessPressed",
			"editor.inlayHints.off",
			"inlayHints.fontSize",
			"inlayHints.fontFamily",
			"inlayHints.padding",
			"inlayHints.maximumLength",
			"lineHeight",
			"minimap.enabled",
			"minimap.autohide.none",
			"minimap.autohide.mouseover",
			"minimap.autohide.scroll",
			"minimap.autohide",
			"minimap.size.proportional",
			"minimap.size.fill",
			"minimap.size.fit",
			"minimap.size",
			"minimap.side",
			"minimap.showSlider",
			"minimap.scale",
			"minimap.renderCharacters",
			"minimap.maxColumn",
			"minimap.showRegionSectionHeaders",
			"minimap.showMarkSectionHeaders",
			"minimap.markSectionHeaderRegex",
			"minimap.sectionHeaderFontSize",
			"minimap.sectionHeaderLetterSpacing",
			"padding.top",
			"padding.bottom",
			"parameterHints.enabled",
			"parameterHints.cycle",
			"on",
			"inline",
			"off",
			"quickSuggestions.strings",
			"quickSuggestions.comments",
			"quickSuggestions.other",
			"quickSuggestions",
			"lineNumbers.off",
			"lineNumbers.on",
			"lineNumbers.relative",
			"lineNumbers.interval",
			"lineNumbers",
			"rulers.size",
			"rulers.color",
			"rulers",
			"scrollbar.vertical.auto",
			"scrollbar.vertical.visible",
			"scrollbar.vertical.fit",
			"scrollbar.vertical",
			"scrollbar.horizontal.auto",
			"scrollbar.horizontal.visible",
			"scrollbar.horizontal.fit",
			"scrollbar.horizontal",
			"scrollbar.verticalScrollbarSize",
			"scrollbar.horizontalScrollbarSize",
			"scrollbar.scrollByPage",
			"scrollbar.ignoreHorizontalScrollbarInContentHeight",
			"unicodeHighlight.nonBasicASCII",
			"unicodeHighlight.invisibleCharacters",
			"unicodeHighlight.ambiguousCharacters",
			"unicodeHighlight.includeComments",
			"unicodeHighlight.includeStrings",
			"unicodeHighlight.allowedCharacters",
			"unicodeHighlight.allowedLocales",
			"inlineSuggest.enabled",
			"inlineSuggest.showToolbar.always",
			"inlineSuggest.showToolbar.onHover",
			"inlineSuggest.showToolbar.never",
			"inlineSuggest.showToolbar",
			"inlineSuggest.syntaxHighlightingEnabled",
			"inlineSuggest.suppressSuggestions",
			"inlineSuggest.minShowDelay",
			"inlineSuggest.suppressInlineSuggestions",
			"inlineSuggest.triggerCommandOnProviderChange",
			"inlineSuggest.showOnSuggestConflict",
			"inlineSuggest.fontFamily",
			"inlineSuggest.edits.allowCodeShifting",
			"inlineSuggest.edits.renderSideBySide",
			"editor.inlineSuggest.edits.renderSideBySide.auto",
			"editor.inlineSuggest.edits.renderSideBySide.never",
			"inlineSuggest.edits.showCollapsed",
			"bracketPairColorization.enabled",
			"bracketPairColorization.independentColorPoolPerBracketType",
			"editor.guides.bracketPairs.true",
			"editor.guides.bracketPairs.active",
			"editor.guides.bracketPairs.false",
			"editor.guides.bracketPairs",
			"editor.guides.bracketPairsHorizontal.true",
			"editor.guides.bracketPairsHorizontal.active",
			"editor.guides.bracketPairsHorizontal.false",
			"editor.guides.bracketPairsHorizontal",
			"editor.guides.highlightActiveBracketPair",
			"editor.guides.indentation",
			"editor.guides.highlightActiveIndentation.true",
			"editor.guides.highlightActiveIndentation.always",
			"editor.guides.highlightActiveIndentation.false",
			"editor.guides.highlightActiveIndentation",
			"suggest.insertMode.insert",
			"suggest.insertMode.replace",
			"suggest.insertMode",
			"suggest.filterGraceful",
			"suggest.localityBonus",
			"suggest.shareSuggestSelections",
			"suggest.insertMode.always",
			"suggest.insertMode.never",
			"suggest.insertMode.whenTriggerCharacter",
			"suggest.insertMode.whenQuickSuggestion",
			"suggest.selectionMode",
			"suggest.snippetsPreventQuickSuggestions",
			"suggest.showIcons",
			"suggest.showStatusBar",
			"suggest.preview",
			"suggest.showInlineDetails",
			"suggest.maxVisibleSuggestions.dep",
			"deprecated",
			"editor.suggest.showMethods",
			"editor.suggest.showFunctions",
			"editor.suggest.showConstructors",
			"editor.suggest.showDeprecated",
			"editor.suggest.matchOnWordStartOnly",
			"editor.suggest.showFields",
			"editor.suggest.showVariables",
			"editor.suggest.showClasss",
			"editor.suggest.showStructs",
			"editor.suggest.showInterfaces",
			"editor.suggest.showModules",
			"editor.suggest.showPropertys",
			"editor.suggest.showEvents",
			"editor.suggest.showOperators",
			"editor.suggest.showUnits",
			"editor.suggest.showValues",
			"editor.suggest.showConstants",
			"editor.suggest.showEnums",
			"editor.suggest.showEnumMembers",
			"editor.suggest.showKeywords",
			"editor.suggest.showTexts",
			"editor.suggest.showColors",
			"editor.suggest.showFiles",
			"editor.suggest.showReferences",
			"editor.suggest.showCustomcolors",
			"editor.suggest.showFolders",
			"editor.suggest.showTypeParameters",
			"editor.suggest.showSnippets",
			"editor.suggest.showUsers",
			"editor.suggest.showIssues",
			"selectLeadingAndTrailingWhitespace",
			"selectSubwords",
			"wordSegmenterLocales",
			"wrappingIndent.none",
			"wrappingIndent.same",
			"wrappingIndent.indent",
			"wrappingIndent.deepIndent",
			"wrappingIndent",
			"dropIntoEditor.enabled",
			"dropIntoEditor.showDropSelector",
			"dropIntoEditor.showDropSelector.afterDrop",
			"dropIntoEditor.showDropSelector.never",
			"pasteAs.enabled",
			"pasteAs.showPasteSelector",
			"pasteAs.showPasteSelector.afterPaste",
			"pasteAs.showPasteSelector.never",
			"acceptSuggestionOnCommitCharacter",
			"acceptSuggestionOnEnterSmart",
			"acceptSuggestionOnEnter",
			"accessibilityPageSize",
			"allowVariableLineHeights",
			"allowVariableFonts",
			"allowVariableFontsInAccessibilityMode",
			"editorViewAccessibleLabel",
			"screenReaderAnnounceInlineSuggestion",
			"editor.autoClosingBrackets.languageDefined",
			"editor.autoClosingBrackets.beforeWhitespace",
			"autoClosingBrackets",
			"editor.autoClosingComments.languageDefined",
			"editor.autoClosingComments.beforeWhitespace",
			"autoClosingComments",
			"editor.autoClosingDelete.auto",
			"autoClosingDelete",
			"editor.autoClosingOvertype.auto",
			"autoClosingOvertype",
			"editor.autoClosingQuotes.languageDefined",
			"editor.autoClosingQuotes.beforeWhitespace",
			"autoClosingQuotes",
			"editor.autoIndent.none",
			"editor.autoIndent.keep",
			"editor.autoIndent.brackets",
			"editor.autoIndent.advanced",
			"editor.autoIndent.full",
			"autoIndent",
			"autoIndentOnPaste",
			"autoIndentOnPasteWithinString",
			"editor.autoSurround.languageDefined",
			"editor.autoSurround.quotes",
			"editor.autoSurround.brackets",
			"autoSurround",
			"stickyTabStops",
			"codeLens",
			"codeLensFontFamily",
			"codeLensFontSize",
			"colorDecorators",
			"editor.colorDecoratorActivatedOn.clickAndHover",
			"editor.colorDecoratorActivatedOn.hover",
			"editor.colorDecoratorActivatedOn.click",
			"colorDecoratorActivatedOn",
			"colorDecoratorsLimit",
			"columnSelection",
			"copyWithSyntaxHighlighting",
			"cursorBlinking",
			"cursorSmoothCaretAnimation.off",
			"cursorSmoothCaretAnimation.explicit",
			"cursorSmoothCaretAnimation.on",
			"cursorSmoothCaretAnimation",
			"cursorStyle",
			"overtypeCursorStyle",
			"cursorSurroundingLines",
			"cursorSurroundingLinesStyle.default",
			"cursorSurroundingLinesStyle.all",
			"cursorSurroundingLinesStyle",
			"cursorWidth",
			"cursorHeight",
			"dragAndDrop",
			"editContext",
			"renderRichScreenReaderContent",
			"experimentalGpuAcceleration.off",
			"experimentalGpuAcceleration.on",
			"experimentalGpuAcceleration",
			"experimentalWhitespaceRendering.svg",
			"experimentalWhitespaceRendering.font",
			"experimentalWhitespaceRendering.off",
			"experimentalWhitespaceRendering",
			"fastScrollSensitivity",
			"folding",
			"foldingStrategy.auto",
			"foldingStrategy.indentation",
			"foldingStrategy",
			"foldingHighlight",
			"foldingImportsByDefault",
			"foldingMaximumRegions",
			"unfoldOnClickAfterEndOfLine",
			"fontFamily",
			"formatOnPaste",
			"formatOnType",
			"glyphMargin",
			"hideCursorInOverviewRuler",
			"inertialScroll",
			"letterSpacing",
			"linkedEditing",
			"links",
			"matchBrackets",
			"mouseWheelScrollSensitivity",
			"mouseWheelZoom.mac",
			"mouseWheelZoom",
			"multiCursorMergeOverlapping",
			"multiCursorModifier.ctrlCmd",
			"multiCursorModifier.alt",
			{
				"key": "multiCursorModifier",
				"comment": [
					"- `ctrlCmd` refers to a value the setting can take and should not be localized.",
					"- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized."
				]
			},
			"multiCursorPaste.spread",
			"multiCursorPaste.full",
			"multiCursorPaste",
			"multiCursorLimit",
			"occurrencesHighlight.off",
			"occurrencesHighlight.singleFile",
			"occurrencesHighlight.multiFile",
			"occurrencesHighlight",
			"occurrencesHighlightDelay",
			"overtypeOnPaste",
			"overviewRulerBorder",
			"peekWidgetDefaultFocus.tree",
			"peekWidgetDefaultFocus.editor",
			"peekWidgetDefaultFocus",
			"definitionLinkOpensInPeek",
			"quickSuggestionsDelay",
			"renameOnType",
			"renameOnTypeDeprecate",
			"renderControlCharacters",
			"renderFinalNewline",
			"renderLineHighlight.all",
			"renderLineHighlight",
			"renderLineHighlightOnlyWhenFocus",
			"renderWhitespace.boundary",
			"renderWhitespace.selection",
			"renderWhitespace.trailing",
			"renderWhitespace",
			"roundedSelection",
			"scrollBeyondLastColumn",
			"scrollBeyondLastLine",
			"scrollOnMiddleClick",
			"scrollPredominantAxis",
			"selectionClipboard",
			"selectionHighlight",
			"selectionHighlightMaxLength",
			"selectionHighlightMultiline",
			"showFoldingControls.always",
			"showFoldingControls.never",
			"showFoldingControls.mouseover",
			"showFoldingControls",
			"showUnused",
			"showDeprecated",
			"snippetSuggestions.top",
			"snippetSuggestions.bottom",
			"snippetSuggestions.inline",
			"snippetSuggestions.none",
			"snippetSuggestions",
			"smoothScrolling",
			"inlineCompletionsAccessibilityVerbose",
			"suggestFontSize",
			"suggestLineHeight",
			"suggestOnTriggerCharacters",
			"suggestSelection.first",
			"suggestSelection.recentlyUsed",
			"suggestSelection.recentlyUsedByPrefix",
			"suggestSelection",
			"tabCompletion.on",
			"tabCompletion.off",
			"tabCompletion.onlySnippets",
			"tabCompletion",
			"trimWhitespaceOnDelete",
			"unusualLineTerminators.auto",
			"unusualLineTerminators.off",
			"unusualLineTerminators.prompt",
			"unusualLineTerminators",
			"useTabStops",
			"wordBreak.normal",
			"wordBreak.keepAll",
			"wordBreak",
			"wordSeparators",
			"wordWrap.off",
			"wordWrap.on",
			{
				"key": "wordWrap.wordWrapColumn",
				"comment": [
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap.bounded",
				"comment": [
					"- viewport means the edge of the visible window size.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap",
				"comment": [
					"- 'off', 'on', 'wordWrapColumn' and 'bounded' refer to values the setting can take and should not be localized.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrapColumn",
				"comment": [
					"- `editor.wordWrap` refers to a different setting and should not be localized.",
					"- 'wordWrapColumn' and 'bounded' refer to values the different setting can take and should not be localized."
				]
			},
			"wrapOnEscapedLineFeeds",
			"editor.defaultColorDecorators.auto",
			"editor.defaultColorDecorators.always",
			"editor.defaultColorDecorators.never",
			"defaultColorDecorators",
			"tabFocusMode"
		],
		"vs/editor/common/core/editorColorRegistry": [
			"lineHighlight",
			"lineHighlightBorderBox",
			"rangeHighlight",
			"rangeHighlightBorder",
			"symbolHighlight",
			"symbolHighlightBorder",
			"caret",
			"editorCursorBackground",
			"editorMultiCursorPrimaryForeground",
			"editorMultiCursorPrimaryBackground",
			"editorMultiCursorSecondaryForeground",
			"editorMultiCursorSecondaryBackground",
			"editorWhitespaces",
			"editorLineNumbers",
			"editorIndentGuides",
			"deprecatedEditorIndentGuides",
			"editorActiveIndentGuide",
			"deprecatedEditorActiveIndentGuide",
			"editorIndentGuides1",
			"editorIndentGuides2",
			"editorIndentGuides3",
			"editorIndentGuides4",
			"editorIndentGuides5",
			"editorIndentGuides6",
			"editorActiveIndentGuide1",
			"editorActiveIndentGuide2",
			"editorActiveIndentGuide3",
			"editorActiveIndentGuide4",
			"editorActiveIndentGuide5",
			"editorActiveIndentGuide6",
			"editorActiveLineNumber",
			"deprecatedEditorActiveLineNumber",
			"editorActiveLineNumber",
			"editorDimmedLineNumber",
			"editorRuler",
			"editorCodeLensForeground",
			"editorBracketMatchBackground",
			"editorBracketMatchBorder",
			"editorOverviewRulerBorder",
			"editorOverviewRulerBackground",
			"editorGutter",
			"unnecessaryCodeBorder",
			"unnecessaryCodeOpacity",
			"editorGhostTextBorder",
			"editorGhostTextForeground",
			"editorGhostTextBackground",
			"overviewRulerRangeHighlight",
			"overviewRuleError",
			"overviewRuleWarning",
			"overviewRuleInfo",
			"editorBracketHighlightForeground1",
			"editorBracketHighlightForeground2",
			"editorBracketHighlightForeground3",
			"editorBracketHighlightForeground4",
			"editorBracketHighlightForeground5",
			"editorBracketHighlightForeground6",
			"editorBracketHighlightUnexpectedBracketForeground",
			"editorBracketPairGuide.background1",
			"editorBracketPairGuide.background2",
			"editorBracketPairGuide.background3",
			"editorBracketPairGuide.background4",
			"editorBracketPairGuide.background5",
			"editorBracketPairGuide.background6",
			"editorBracketPairGuide.activeBackground1",
			"editorBracketPairGuide.activeBackground2",
			"editorBracketPairGuide.activeBackground3",
			"editorBracketPairGuide.activeBackground4",
			"editorBracketPairGuide.activeBackground5",
			"editorBracketPairGuide.activeBackground6",
			"editorUnicodeHighlight.border",
			"editorUnicodeHighlight.background"
		],
		"vs/editor/common/editorContextKeys": [
			"editorTextFocus",
			"editorFocus",
			"textInputFocus",
			"editorReadonly",
			"inDiffEditor",
			"isEmbeddedDiffEditor",
			"multiDiffEditorAllCollapsed",
			"diffEditorHasChanges",
			"comparingMovedCode",
			"accessibleDiffViewerVisible",
			"diffEditorRenderSideBySideInlineBreakpointReached",
			"diffEditorInlineMode",
			"diffEditorOriginalWritable",
			"diffEditorModifiedWritable",
			"diffEditorOriginalUri",
			"diffEditorModifiedUri",
			"editorColumnSelection",
			"editorHasSelection",
			"editorHasMultipleSelections",
			"editorTabMovesFocus",
			"editorHoverVisible",
			"editorHoverFocused",
			"stickyScrollFocused",
			"stickyScrollVisible",
			"standaloneColorPickerVisible",
			"standaloneColorPickerFocused",
			"inCompositeEditor",
			"editorLangId",
			"editorHasCompletionItemProvider",
			"editorHasCodeActionsProvider",
			"editorHasCodeLensProvider",
			"editorHasDefinitionProvider",
			"editorHasDeclarationProvider",
			"editorHasImplementationProvider",
			"editorHasTypeDefinitionProvider",
			"editorHasHoverProvider",
			"editorHasDocumentHighlightProvider",
			"editorHasDocumentSymbolProvider",
			"editorHasReferenceProvider",
			"editorHasRenameProvider",
			"editorHasSignatureHelpProvider",
			"editorHasInlayHintsProvider",
			"editorHasDocumentFormattingProvider",
			"editorHasDocumentSelectionFormattingProvider",
			"editorHasMultipleDocumentFormattingProvider",
			"editorHasMultipleDocumentSelectionFormattingProvider"
		],
		"vs/editor/common/languages": [
			"suggestWidget.kind.method",
			"suggestWidget.kind.function",
			"suggestWidget.kind.constructor",
			"suggestWidget.kind.field",
			"suggestWidget.kind.variable",
			"suggestWidget.kind.class",
			"suggestWidget.kind.struct",
			"suggestWidget.kind.interface",
			"suggestWidget.kind.module",
			"suggestWidget.kind.property",
			"suggestWidget.kind.event",
			"suggestWidget.kind.operator",
			"suggestWidget.kind.unit",
			"suggestWidget.kind.value",
			"suggestWidget.kind.constant",
			"suggestWidget.kind.enum",
			"suggestWidget.kind.enumMember",
			"suggestWidget.kind.keyword",
			"suggestWidget.kind.text",
			"suggestWidget.kind.color",
			"suggestWidget.kind.file",
			"suggestWidget.kind.reference",
			"suggestWidget.kind.customcolor",
			"suggestWidget.kind.folder",
			"suggestWidget.kind.typeParameter",
			"suggestWidget.kind.user",
			"suggestWidget.kind.issue",
			"suggestWidget.kind.tool",
			"suggestWidget.kind.snippet",
			"Array",
			"Boolean",
			"Class",
			"Constant",
			"Constructor",
			"Enum",
			"EnumMember",
			"Event",
			"Field",
			"File",
			"Function",
			"Interface",
			"Key",
			"Method",
			"Module",
			"Namespace",
			"Null",
			"Number",
			"Object",
			"Operator",
			"Package",
			"Property",
			"String",
			"Struct",
			"TypeParameter",
			"Variable",
			"symbolAriaLabel"
		],
		"vs/editor/common/languages/modesRegistry": [
			"plainText.alias"
		],
		"vs/editor/common/model/editStack": [
			"edit"
		],
		"vs/editor/common/standaloneStrings": [
			"inspectTokens",
			"gotoLineActionLabel",
			"helpQuickAccess",
			"quickCommandActionLabel",
			"quickCommandActionHelp",
			"quickOutlineActionLabel",
			"quickOutlineByCategoryActionLabel",
			"editorViewAccessibleLabel",
			"toggleHighContrast",
			"bulkEditServiceSummary"
		],
		"vs/editor/common/viewLayout/viewLineRenderer": [
			"showMore",
			"overflow.chars"
		],
		"vs/editor/contrib/anchorSelect/browser/anchorSelect": [
			"selectionAnchor",
			"anchorSet",
			"setSelectionAnchor",
			"goToSelectionAnchor",
			"selectFromAnchorToCursor",
			"cancelSelectionAnchor"
		],
		"vs/editor/contrib/bracketMatching/browser/bracketMatching": [
			"overviewRulerBracketMatchForeground",
			{
				"key": "miGoToBracket",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"smartSelect.jumpBracket",
			"smartSelect.selectToBracket",
			"smartSelect.selectToBracketDescription",
			"smartSelect.removeBrackets"
		],
		"vs/editor/contrib/caretOperations/browser/caretOperations": [
			"caret.moveLeft",
			"caret.moveRight"
		],
		"vs/editor/contrib/caretOperations/browser/transpose": [
			"transposeLetters.label"
		],
		"vs/editor/contrib/clipboard/browser/clipboard": [
			{
				"key": "miCut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"actions.clipboard.cutLabel",
			"actions.clipboard.cutLabel",
			"actions.clipboard.cutLabel",
			{
				"key": "miCopy",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"actions.clipboard.copyLabel",
			"actions.clipboard.copyLabel",
			"actions.clipboard.copyLabel",
			{
				"key": "miPaste",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"actions.clipboard.pasteLabel",
			"actions.clipboard.pasteLabel",
			"actions.clipboard.pasteLabel",
			"copy as",
			"copy as",
			"share",
			"share",
			"actions.clipboard.copyWithSyntaxHighlightingLabel"
		],
		"vs/editor/contrib/codeAction/browser/codeAction": [
			"applyCodeActionFailed"
		],
		"vs/editor/contrib/codeAction/browser/codeActionCommands": [
			"args.schema.kind",
			"args.schema.apply",
			"args.schema.apply.first",
			"args.schema.apply.ifSingle",
			"args.schema.apply.never",
			"args.schema.preferred",
			"editor.action.quickFix.noneMessage",
			"editor.action.codeAction.noneMessage.preferred.kind",
			"editor.action.codeAction.noneMessage.kind",
			"editor.action.codeAction.noneMessage.preferred",
			"editor.action.codeAction.noneMessage",
			"editor.action.refactor.noneMessage.preferred.kind",
			"editor.action.refactor.noneMessage.kind",
			"editor.action.refactor.noneMessage.preferred",
			"editor.action.refactor.noneMessage",
			"editor.action.source.noneMessage.preferred.kind",
			"editor.action.source.noneMessage.kind",
			"editor.action.source.noneMessage.preferred",
			"editor.action.source.noneMessage",
			"editor.action.organize.noneMessage",
			"fixAll.noneMessage",
			"editor.action.autoFix.noneMessage",
			"quickfix.trigger.label",
			"refactor.label",
			"source.label",
			"organizeImports.label",
			"organizeImports.description",
			"fixAll.label",
			"autoFix.label"
		],
		"vs/editor/contrib/codeAction/browser/codeActionContributions": [
			"showCodeActionHeaders",
			"includeNearbyQuickFixes",
			"triggerOnFocusChange"
		],
		"vs/editor/contrib/codeAction/browser/codeActionController": [
			"editingNewSelection",
			"hideMoreActions",
			"showMoreActions"
		],
		"vs/editor/contrib/codeAction/browser/codeActionMenu": [
			"codeAction.widget.id.more",
			"codeAction.widget.id.quickfix",
			"codeAction.widget.id.extract",
			"codeAction.widget.id.inline",
			"codeAction.widget.id.convert",
			"codeAction.widget.id.move",
			"codeAction.widget.id.surround",
			"codeAction.widget.id.source"
		],
		"vs/editor/contrib/codeAction/browser/lightBulbWidget": [
			"gutterLightbulbWidget",
			"gutterLightbulbAutoFixWidget",
			"gutterLightbulbAIFixWidget",
			"gutterLightbulbAIFixAutoFixWidget",
			"gutterLightbulbSparkleFilledWidget",
			"codeActionAutoRun",
			"preferredcodeActionWithKb",
			"codeActionWithKb",
			"codeAction"
		],
		"vs/editor/contrib/codelens/browser/codelensController": [
			"placeHolder",
			"showLensOnLine"
		],
		"vs/editor/contrib/colorPicker/browser/colorPickerParts/colorPickerCloseButton": [
			"closeIcon"
		],
		"vs/editor/contrib/colorPicker/browser/colorPickerParts/colorPickerHeader": [
			"clickToToggleColorOptions"
		],
		"vs/editor/contrib/colorPicker/browser/standaloneColorPicker/standaloneColorPickerActions": [
			{
				"key": "mishowOrFocusStandaloneColorPicker",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"showOrFocusStandaloneColorPicker",
			"showOrFocusStandaloneColorPickerDescription",
			{
				"key": "hideColorPicker",
				"comment": [
					"Action that hides the color picker"
				]
			},
			"hideColorPickerDescription",
			{
				"key": "insertColorWithStandaloneColorPicker",
				"comment": [
					"Action that inserts color with standalone color picker"
				]
			},
			"insertColorWithStandaloneColorPickerDescription"
		],
		"vs/editor/contrib/comment/browser/comment": [
			{
				"key": "miToggleLineComment",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleBlockComment",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"comment.line",
			"comment.line.add",
			"comment.line.remove",
			"comment.block"
		],
		"vs/editor/contrib/contextmenu/browser/contextmenu": [
			"context.minimap.minimap",
			"context.minimap.renderCharacters",
			"context.minimap.size",
			"context.minimap.size.proportional",
			"context.minimap.size.fill",
			"context.minimap.size.fit",
			"context.minimap.slider",
			"context.minimap.slider.mouseover",
			"context.minimap.slider.always",
			"action.showContextMenu.label"
		],
		"vs/editor/contrib/cursorUndo/browser/cursorUndo": [
			"cursor.undo",
			"cursor.redo"
		],
		"vs/editor/contrib/dropOrPasteInto/browser/copyPasteContribution": [
			"pasteAs.kind",
			"pasteAs.preferences",
			"pasteAs",
			"pasteAsText"
		],
		"vs/editor/contrib/dropOrPasteInto/browser/copyPasteController": [
			"pasteWidgetVisible",
			"postPasteWidgetTitle",
			"noPreferences",
			"pasteAsError",
			"resolveProcess",
			"pasteIntoEditorProgress",
			"pasteAsDefault",
			"pasteAsPickerPlaceholder",
			"pasteAsProgress"
		],
		"vs/editor/contrib/dropOrPasteInto/browser/defaultProviders": [
			"text.label",
			"defaultDropProvider.uriList.uris",
			"defaultDropProvider.uriList.uri",
			"defaultDropProvider.uriList.paths",
			"defaultDropProvider.uriList.path",
			"defaultDropProvider.uriList.relativePaths",
			"defaultDropProvider.uriList.relativePath",
			"pasteHtmlLabel"
		],
		"vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController": [
			"dropWidgetVisible",
			"postDropWidgetTitle",
			"dropIntoEditorProgress"
		],
		"vs/editor/contrib/dropOrPasteInto/browser/postEditWidget": [
			"resolveError",
			"applyError"
		],
		"vs/editor/contrib/editorState/browser/keybindingCancellation": [
			"cancellableOperation"
		],
		"vs/editor/contrib/find/browser/findController": [
			"too.large.for.replaceall",
			{
				"key": "miFind",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"findMatchAction.noResults",
			"findMatchAction.inputPlaceHolder",
			"findMatchAction.inputValidationMessage",
			"findMatchAction.inputValidationMessage",
			{
				"key": "miReplace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"startFindAction",
			"startFindWithArgsAction",
			"startFindWithSelectionAction",
			"findNextMatchAction",
			"findPreviousMatchAction",
			"findMatchAction.goToMatch",
			"nextSelectionMatchFindAction",
			"previousSelectionMatchFindAction",
			"startReplace"
		],
		"vs/editor/contrib/find/browser/findWidget": [
			"findCollapsedIcon",
			"findExpandedIcon",
			"findSelectionIcon",
			"findReplaceIcon",
			"findReplaceAllIcon",
			"findPreviousMatchIcon",
			"findNextMatchIcon",
			"label.findDialog",
			"label.find",
			"placeholder.find",
			"label.previousMatchButton",
			"label.nextMatchButton",
			"label.toggleSelectionFind",
			"label.closeButton",
			"label.replace",
			"placeholder.replace",
			"label.replaceButton",
			"label.replaceAllButton",
			"label.toggleReplaceButton",
			"title.matchesCountLimit",
			"label.matchesLocation",
			"label.noResults",
			"ariaSearchNoResultEmpty",
			"ariaSearchNoResult",
			"ariaSearchNoResultWithLineNum",
			"ariaSearchNoResultWithLineNumNoCurrentMatch"
		],
		"vs/editor/contrib/folding/browser/folding": [
			"unfoldAction.label",
			"unFoldRecursivelyAction.label",
			"foldAction.label",
			"toggleFoldAction.label",
			"foldRecursivelyAction.label",
			"toggleFoldRecursivelyAction.label",
			"foldAllBlockComments.label",
			"foldAllMarkerRegions.label",
			"unfoldAllMarkerRegions.label",
			"foldAllExcept.label",
			"unfoldAllExcept.label",
			"foldAllAction.label",
			"unfoldAllAction.label",
			"gotoParentFold.label",
			"gotoPreviousFold.label",
			"gotoNextFold.label",
			"createManualFoldRange.label",
			"removeManualFoldingRanges.label",
			"toggleImportFold.label",
			"foldLevelAction.label"
		],
		"vs/editor/contrib/folding/browser/foldingDecorations": [
			"foldBackgroundBackground",
			"collapsedTextColor",
			"editorGutter.foldingControlForeground",
			"foldingExpandedIcon",
			"foldingCollapsedIcon",
			"foldingManualCollapedIcon",
			"foldingManualExpandedIcon",
			"linesCollapsed",
			"linesExpanded"
		],
		"vs/editor/contrib/fontZoom/browser/fontZoom": [
			"EditorFontZoomIn.label",
			"EditorFontZoomOut.label",
			"EditorFontZoomReset.label"
		],
		"vs/editor/contrib/format/browser/formatActions": [
			"formatDocument.label",
			"formatSelection.label"
		],
		"vs/editor/contrib/gotoError/browser/gotoError": [
			"nextMarkerIcon",
			"previousMarkerIcon",
			{
				"key": "miGotoNextProblem",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoPreviousProblem",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"markerAction.next.label",
			"markerAction.previous.label",
			"markerAction.nextInFiles.label",
			"markerAction.previousInFiles.label"
		],
		"vs/editor/contrib/gotoError/browser/gotoErrorWidget": [
			"Error",
			"Warning",
			"Info",
			"Hint",
			"marker aria",
			"problems",
			"change",
			"editorMarkerNavigationError",
			"editorMarkerNavigationErrorHeaderBackground",
			"editorMarkerNavigationWarning",
			"editorMarkerNavigationWarningBackground",
			"editorMarkerNavigationInfo",
			"editorMarkerNavigationInfoHeaderBackground",
			"editorMarkerNavigationBackground"
		],
		"vs/editor/contrib/gotoSymbol/browser/goToCommands": [
			"peek.submenu",
			"def.title",
			"noResultWord",
			"generic.noResults",
			{
				"key": "miGotoDefinition",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"decl.title",
			"decl.noResultWord",
			"decl.generic.noResults",
			{
				"key": "miGotoDeclaration",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"decl.noResultWord",
			"decl.generic.noResults",
			"typedef.title",
			"goToTypeDefinition.noResultWord",
			"goToTypeDefinition.generic.noResults",
			{
				"key": "miGotoTypeDefinition",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"impl.title",
			"goToImplementation.noResultWord",
			"goToImplementation.generic.noResults",
			{
				"key": "miGotoImplementation",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"references.no",
			"references.noGeneric",
			{
				"key": "miGotoReference",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"ref.title",
			"ref.title",
			"generic.title",
			"generic.noResult",
			"ref.title",
			"actions.goToDecl.label",
			"actions.goToDeclToSide.label",
			"actions.previewDecl.label",
			"actions.goToDeclaration.label",
			"actions.peekDecl.label",
			"actions.goToTypeDefinition.label",
			"actions.peekTypeDefinition.label",
			"actions.goToImplementation.label",
			"actions.peekImplementation.label",
			"goToReferences.label",
			"references.action.label",
			"label.generic"
		],
		"vs/editor/contrib/gotoSymbol/browser/link/goToDefinitionAtPosition": [
			"multipleResults"
		],
		"vs/editor/contrib/gotoSymbol/browser/peek/referencesController": [
			"referenceSearchVisible",
			"labelLoading",
			"metaTitle.N"
		],
		"vs/editor/contrib/gotoSymbol/browser/peek/referencesTree": [
			"referencesCount",
			"referenceCount",
			"treeAriaLabel"
		],
		"vs/editor/contrib/gotoSymbol/browser/peek/referencesWidget": [
			"missingPreviewMessage",
			"noResults",
			"peekView.alternateTitle"
		],
		"vs/editor/contrib/gotoSymbol/browser/referencesModel": [
			"aria.oneReference",
			{
				"key": "aria.oneReference.preview",
				"comment": [
					"Placeholders are: 0: filename, 1:line number, 2: column number, 3: preview snippet of source code"
				]
			},
			"aria.fileReferences.1",
			"aria.fileReferences.N",
			"aria.result.0",
			"aria.result.1",
			"aria.result.n1",
			"aria.result.nm"
		],
		"vs/editor/contrib/gotoSymbol/browser/symbolNavigation": [
			"hasSymbols",
			"location.kb",
			"location"
		],
		"vs/editor/contrib/gpu/browser/gpuActions": [
			"logTextureAtlasStats.label",
			"saveTextureAtlas.label",
			"drawGlyph.label",
			"gpuDebug.label"
		],
		"vs/editor/contrib/hover/browser/hoverActionIds": [
			{
				"key": "increaseHoverVerbosityLevel",
				"comment": [
					"Label for action that will increase the hover verbosity level."
				]
			},
			{
				"key": "decreaseHoverVerbosityLevel",
				"comment": [
					"Label for action that will decrease the hover verbosity level."
				]
			}
		],
		"vs/editor/contrib/hover/browser/hoverActions": [
			"showOrFocusHover.focus.noAutoFocus",
			"showOrFocusHover.focus.focusIfVisible",
			"showOrFocusHover.focus.autoFocusImmediately",
			{
				"key": "showOrFocusHover",
				"comment": [
					"Label for action that will trigger the showing/focusing of a hover in the editor.",
					"If the hover is not visible, it will show the hover.",
					"This allows for users to show the hover without using the mouse."
				]
			},
			"showOrFocusHoverDescription",
			{
				"key": "showDefinitionPreviewHover",
				"comment": [
					"Label for action that will trigger the showing of definition preview hover in the editor.",
					"This allows for users to show the definition preview hover without using the mouse."
				]
			},
			"showDefinitionPreviewHoverDescription",
			{
				"key": "hideHover",
				"comment": [
					"Label for action that will hide the hover in the editor."
				]
			},
			{
				"key": "scrollUpHover",
				"comment": [
					"Action that allows to scroll up in the hover widget with the up arrow when the hover widget is focused."
				]
			},
			"scrollUpHoverDescription",
			{
				"key": "scrollDownHover",
				"comment": [
					"Action that allows to scroll down in the hover widget with the up arrow when the hover widget is focused."
				]
			},
			"scrollDownHoverDescription",
			{
				"key": "scrollLeftHover",
				"comment": [
					"Action that allows to scroll left in the hover widget with the left arrow when the hover widget is focused."
				]
			},
			"scrollLeftHoverDescription",
			{
				"key": "scrollRightHover",
				"comment": [
					"Action that allows to scroll right in the hover widget with the right arrow when the hover widget is focused."
				]
			},
			"scrollRightHoverDescription",
			{
				"key": "pageUpHover",
				"comment": [
					"Action that allows to page up in the hover widget with the page up command when the hover widget is focused."
				]
			},
			"pageUpHoverDescription",
			{
				"key": "pageDownHover",
				"comment": [
					"Action that allows to page down in the hover widget with the page down command when the hover widget is focused."
				]
			},
			"pageDownHoverDescription",
			{
				"key": "goToTopHover",
				"comment": [
					"Action that allows to go to the top of the hover widget with the home command when the hover widget is focused."
				]
			},
			"goToTopHoverDescription",
			{
				"key": "goToBottomHover",
				"comment": [
					"Action that allows to go to the bottom in the hover widget with the end command when the hover widget is focused."
				]
			},
			"goToBottomHoverDescription"
		],
		"vs/editor/contrib/hover/browser/markdownHoverParticipant": [
			"increaseHoverVerbosity",
			"decreaseHoverVerbosity",
			"modesContentHover.loading",
			"stopped rendering",
			"too many characters",
			"increaseVerbosityWithKb",
			"increaseVerbosity",
			"decreaseVerbosityWithKb",
			"decreaseVerbosity"
		],
		"vs/editor/contrib/hover/browser/markerHoverParticipant": [
			"view problem",
			"noQuickFixes",
			"checkingForQuickFixes",
			"noQuickFixes",
			"quick fixes"
		],
		"vs/editor/contrib/indentation/browser/indentation": [
			"configuredTabSize",
			"defaultTabSize",
			"currentTabSize",
			{
				"key": "selectTabWidth",
				"comment": [
					"Tab corresponds to the tab key"
				]
			},
			"indentationToSpaces",
			"indentationToSpacesDescription",
			"indentationToTabs",
			"indentationToTabsDescription",
			"indentUsingTabs",
			"indentUsingTabsDescription",
			"indentUsingSpaces",
			"indentUsingSpacesDescription",
			"changeTabDisplaySize",
			"changeTabDisplaySizeDescription",
			"detectIndentation",
			"detectIndentationDescription",
			"editor.reindentlines",
			"editor.reindentlinesDescription",
			"editor.reindentselectedlines",
			"editor.reindentselectedlinesDescription"
		],
		"vs/editor/contrib/inlayHints/browser/inlayHintsHover": [
			"hint.dbl",
			"links.navigate.kb.meta.mac",
			"links.navigate.kb.meta",
			"links.navigate.kb.alt.mac",
			"links.navigate.kb.alt",
			"hint.defAndCommand",
			"hint.def",
			"hint.cmd"
		],
		"vs/editor/contrib/inlineCompletions/browser/controller/commands": [
			"noInlineEditAvailable",
			"acceptWord",
			"acceptLine",
			"accept",
			"accept",
			"jump",
			"reject",
			"action.inlineSuggest.alwaysShowToolbar",
			"action.inlineSuggest.dev.extractRepro",
			"action.inlineSuggest.showNext",
			"action.inlineSuggest.showPrevious",
			"action.inlineSuggest.trigger",
			"action.inlineSuggest.trigger.explicitInlineEdit",
			"action.inlineSuggest.acceptNextWord",
			"action.inlineSuggest.acceptNextLine",
			"action.inlineSuggest.accept",
			"action.inlineSuggest.jump",
			"action.inlineSuggest.hide",
			"action.inlineSuggest.toggleShowCollapsed"
		],
		"vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionContextKeys": [
			"inlineSuggestionVisible",
			"inlineSuggestionHasIndentation",
			"inlineSuggestionHasIndentationLessThanTabSize",
			"suppressSuggestions",
			"cursorBeforeGhostText",
			"cursorInIndentation",
			"editor.hasSelection",
			"cursorAtInlineEdit",
			"inlineEditVisible",
			"tabShouldJumpToInlineEdit",
			"tabShouldAcceptInlineEdit",
			"inInlineEditsPreviewEditor"
		],
		"vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController": [
			"showAccessibleViewHint"
		],
		"vs/editor/contrib/inlineCompletions/browser/hintsWidget/hoverParticipant": [
			"inlineSuggestionFollows"
		],
		"vs/editor/contrib/inlineCompletions/browser/hintsWidget/inlineCompletionsHintsWidget": [
			"parameterHintsNextIcon",
			"parameterHintsPreviousIcon",
			{
				"key": "content",
				"comment": [
					"A label",
					"A keybinding"
				]
			},
			"previous",
			"next"
		],
		"vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/components/gutterIndicatorMenu": [
			"goto",
			"accept",
			"reject",
			"showExpanded",
			"showCollapsed",
			"settings"
		],
		"vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsModel": [
			"inlineEdit"
		],
		"vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/theme": [
			"inlineEdit.originalBackground",
			"inlineEdit.modifiedBackground",
			"inlineEdit.originalChangedLineBackground",
			"inlineEdit.originalChangedTextBackground",
			"inlineEdit.modifiedChangedLineBackground",
			"inlineEdit.modifiedChangedTextBackground",
			"inlineEdit.gutterIndicator.primaryForeground",
			"inlineEdit.gutterIndicator.primaryBorder",
			"inlineEdit.gutterIndicator.primaryBackground",
			"inlineEdit.gutterIndicator.secondaryForeground",
			"inlineEdit.gutterIndicator.secondaryBorder",
			"inlineEdit.gutterIndicator.secondaryBackground",
			"inlineEdit.gutterIndicator.successfulForeground",
			"inlineEdit.gutterIndicator.successfulBorder",
			"inlineEdit.gutterIndicator.successfulBackground",
			"inlineEdit.gutterIndicator.background",
			"inlineEdit.originalBorder",
			"inlineEdit.modifiedBorder",
			"inlineEdit.tabWillAcceptModifiedBorder",
			"inlineEdit.tabWillAcceptOriginalBorder"
		],
		"vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace": [
			"InPlaceReplaceAction.previous.label",
			"InPlaceReplaceAction.next.label"
		],
		"vs/editor/contrib/insertFinalNewLine/browser/insertFinalNewLine": [
			"insertFinalNewLine"
		],
		"vs/editor/contrib/lineSelection/browser/lineSelection": [
			"expandLineSelection"
		],
		"vs/editor/contrib/linesOperations/browser/linesOperations": [
			{
				"key": "miCopyLinesUp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopyLinesDown",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miDuplicateSelection",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveLinesUp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveLinesDown",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"lines.copyUp",
			"lines.copyDown",
			"duplicateSelection",
			"lines.moveUp",
			"lines.moveDown",
			"lines.sortAscending",
			"lines.sortDescending",
			"lines.deleteDuplicates",
			"lines.reverseLines",
			"lines.trimTrailingWhitespace",
			"lines.delete",
			"lines.indent",
			"lines.outdent",
			"lines.insertBefore",
			"lines.insertAfter",
			"lines.deleteAllLeft",
			"lines.deleteAllRight",
			"lines.joinLines",
			"editor.transpose",
			"editor.transformToUppercase",
			"editor.transformToLowercase",
			"editor.transformToTitlecase",
			"editor.transformToSnakecase",
			"editor.transformToCamelcase",
			"editor.transformToPascalcase",
			"editor.transformToKebabcase"
		],
		"vs/editor/contrib/linkedEditing/browser/linkedEditing": [
			"editorLinkedEditingBackground",
			"linkedEditing.label"
		],
		"vs/editor/contrib/links/browser/links": [
			"invalid.url",
			"missing.url",
			"links.navigate.executeCmd",
			"links.navigate.follow",
			"links.navigate.kb.meta.mac",
			"links.navigate.kb.meta",
			"links.navigate.kb.alt.mac",
			"links.navigate.kb.alt",
			"tooltip.explanation",
			"label"
		],
		"vs/editor/contrib/message/browser/messageController": [
			"messageVisible"
		],
		"vs/editor/contrib/multicursor/browser/multicursor": [
			"cursorAdded",
			"cursorsAdded",
			{
				"key": "miInsertCursorAbove",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInsertCursorBelow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInsertCursorAtEndOfEachLineSelected",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddSelectionToNextFindMatch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddSelectionToPreviousFindMatch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectHighlights",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mutlicursor.focusNextCursor.description",
			"mutlicursor.focusPreviousCursor.description",
			"mutlicursor.insertAbove",
			"mutlicursor.insertBelow",
			"mutlicursor.insertAtEndOfEachLineSelected",
			"mutlicursor.addCursorsToBottom",
			"mutlicursor.addCursorsToTop",
			"addSelectionToNextFindMatch",
			"addSelectionToPreviousFindMatch",
			"moveSelectionToNextFindMatch",
			"moveSelectionToPreviousFindMatch",
			"selectAllOccurrencesOfFindMatch",
			"changeAll.label",
			"mutlicursor.focusNextCursor",
			"mutlicursor.focusPreviousCursor"
		],
		"vs/editor/contrib/parameterHints/browser/parameterHints": [
			"parameterHints.trigger.label"
		],
		"vs/editor/contrib/parameterHints/browser/parameterHintsWidget": [
			"parameterHintsNextIcon",
			"parameterHintsPreviousIcon",
			"hint",
			"editorHoverWidgetHighlightForeground"
		],
		"vs/editor/contrib/peekView/browser/peekView": [
			"inReferenceSearchEditor",
			"label.close",
			"peekViewTitleBackground",
			"peekViewTitleForeground",
			"peekViewTitleInfoForeground",
			"peekViewBorder",
			"peekViewResultsBackground",
			"peekViewResultsMatchForeground",
			"peekViewResultsFileForeground",
			"peekViewResultsSelectionBackground",
			"peekViewResultsSelectionForeground",
			"peekViewEditorBackground",
			"peekViewEditorGutterBackground",
			"peekViewEditorStickScrollBackground",
			"peekViewEditorStickyScrollGutterBackground",
			"peekViewResultsMatchHighlight",
			"peekViewEditorMatchHighlight",
			"peekViewEditorMatchHighlightBorder"
		],
		"vs/editor/contrib/placeholderText/browser/placeholderText.contribution": [
			"placeholderForeground"
		],
		"vs/editor/contrib/quickAccess/browser/gotoLineQuickAccess": [
			"cannotRunGotoLine",
			"gotoLineColumnLabel",
			"gotoLineLabel",
			"gotoLineLabelEmptyWithLimit",
			"gotoLineLabelEmpty"
		],
		"vs/editor/contrib/quickAccess/browser/gotoSymbolQuickAccess": [
			"cannotRunGotoSymbolWithoutEditor",
			"cannotRunGotoSymbolWithoutSymbolProvider",
			"noMatchingSymbolResults",
			"noSymbolResults",
			"openToSide",
			"openToBottom",
			"symbols",
			"property",
			"method",
			"function",
			"_constructor",
			"variable",
			"class",
			"struct",
			"event",
			"operator",
			"interface",
			"namespace",
			"package",
			"typeParameter",
			"modules",
			"property",
			"enum",
			"enumMember",
			"string",
			"file",
			"array",
			"number",
			"boolean",
			"object",
			"key",
			"field",
			"constant"
		],
		"vs/editor/contrib/readOnlyMessage/browser/contribution": [
			"editor.simple.readonly",
			"editor.readonly"
		],
		"vs/editor/contrib/rename/browser/rename": [
			"no result",
			"resolveRenameLocationFailed",
			"label",
			"quotableLabel",
			"aria",
			"rename.failedApply",
			"rename.failed",
			"enablePreview",
			"rename.label",
			"focusNextRenameSuggestion",
			"focusPreviousRenameSuggestion"
		],
		"vs/editor/contrib/rename/browser/renameWidget": [
			"renameInputVisible",
			"renameInputFocused",
			{
				"key": "label",
				"comment": [
					"placeholders are keybindings, e.g \"F2 to Rename, Shift+F2 to Preview\""
				]
			},
			"renameSuggestionsReceivedAria",
			"renameAriaLabel",
			"generateRenameSuggestionsButton",
			"cancelRenameSuggestionsButton"
		],
		"vs/editor/contrib/smartSelect/browser/smartSelect": [
			{
				"key": "miSmartSelectGrow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSmartSelectShrink",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"smartSelect.expand",
			"smartSelect.shrink"
		],
		"vs/editor/contrib/snippet/browser/snippetController2": [
			"inSnippetMode",
			"hasNextTabstop",
			"hasPrevTabstop",
			"next"
		],
		"vs/editor/contrib/snippet/browser/snippetVariables": [
			"Sunday",
			"Monday",
			"Tuesday",
			"Wednesday",
			"Thursday",
			"Friday",
			"Saturday",
			"SundayShort",
			"MondayShort",
			"TuesdayShort",
			"WednesdayShort",
			"ThursdayShort",
			"FridayShort",
			"SaturdayShort",
			"January",
			"February",
			"March",
			"April",
			"May",
			"June",
			"July",
			"August",
			"September",
			"October",
			"November",
			"December",
			"JanuaryShort",
			"FebruaryShort",
			"MarchShort",
			"AprilShort",
			"MayShort",
			"JuneShort",
			"JulyShort",
			"AugustShort",
			"SeptemberShort",
			"OctoberShort",
			"NovemberShort",
			"DecemberShort"
		],
		"vs/editor/contrib/stickyScroll/browser/stickyScrollActions": [
			{
				"key": "mitoggleStickyScroll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"stickyScroll",
			{
				"key": "miStickyScroll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mifocusEditorStickyScroll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"toggleEditorStickyScroll",
			"toggleEditorStickyScroll.description",
			"focusStickyScroll",
			"selectNextStickyScrollLine.title",
			"selectPreviousStickyScrollLine.title",
			"goToFocusedStickyScrollLine.title",
			"selectEditor.title"
		],
		"vs/editor/contrib/suggest/browser/suggest": [
			"suggestWidgetHasSelection",
			"suggestWidgetDetailsVisible",
			"suggestWidgetMultipleSuggestions",
			"suggestionMakesTextEdit",
			"acceptSuggestionOnEnter",
			"suggestionHasInsertAndReplaceRange",
			"suggestionInsertMode",
			"suggestionCanResolve"
		],
		"vs/editor/contrib/suggest/browser/suggestController": [
			"aria.alert.snippet",
			"accept.insert",
			"accept.insert",
			"accept.replace",
			"accept.replace",
			"accept.insert",
			"detail.more",
			"detail.less",
			"suggest.trigger.label",
			"suggest.reset.label"
		],
		"vs/editor/contrib/suggest/browser/suggestWidget": [
			"editorSuggestWidgetBackground",
			"editorSuggestWidgetBorder",
			"editorSuggestWidgetForeground",
			"editorSuggestWidgetSelectedForeground",
			"editorSuggestWidgetSelectedIconForeground",
			"editorSuggestWidgetSelectedBackground",
			"editorSuggestWidgetHighlightForeground",
			"editorSuggestWidgetFocusHighlightForeground",
			"editorSuggestWidgetStatusForeground",
			"suggestWidget.loading",
			"suggestWidget.noSuggestions",
			"suggest",
			"label.full",
			"label.detail",
			"label.desc",
			"label",
			"ariaCurrenttSuggestionReadDetails"
		],
		"vs/editor/contrib/suggest/browser/suggestWidgetDetails": [
			"details.close",
			"loading"
		],
		"vs/editor/contrib/suggest/browser/suggestWidgetRenderer": [
			"suggestMoreInfoIcon",
			"readMore"
		],
		"vs/editor/contrib/suggest/browser/wordContextKey": [
			"desc"
		],
		"vs/editor/contrib/symbolIcons/browser/symbolIcons": [
			"symbolIcon.arrayForeground",
			"symbolIcon.booleanForeground",
			"symbolIcon.classForeground",
			"symbolIcon.colorForeground",
			"symbolIcon.constantForeground",
			"symbolIcon.constructorForeground",
			"symbolIcon.enumeratorForeground",
			"symbolIcon.enumeratorMemberForeground",
			"symbolIcon.eventForeground",
			"symbolIcon.fieldForeground",
			"symbolIcon.fileForeground",
			"symbolIcon.folderForeground",
			"symbolIcon.functionForeground",
			"symbolIcon.interfaceForeground",
			"symbolIcon.keyForeground",
			"symbolIcon.keywordForeground",
			"symbolIcon.methodForeground",
			"symbolIcon.moduleForeground",
			"symbolIcon.namespaceForeground",
			"symbolIcon.nullForeground",
			"symbolIcon.numberForeground",
			"symbolIcon.objectForeground",
			"symbolIcon.operatorForeground",
			"symbolIcon.packageForeground",
			"symbolIcon.propertyForeground",
			"symbolIcon.referenceForeground",
			"symbolIcon.snippetForeground",
			"symbolIcon.stringForeground",
			"symbolIcon.structForeground",
			"symbolIcon.textForeground",
			"symbolIcon.typeParameterForeground",
			"symbolIcon.unitForeground",
			"symbolIcon.variableForeground"
		],
		"vs/editor/contrib/toggleTabFocusMode/browser/toggleTabFocusMode": [
			"toggle.tabMovesFocus.on",
			"toggle.tabMovesFocus.off",
			{
				"key": "toggle.tabMovesFocus",
				"comment": [
					"Turn on/off use of tab key for moving focus around VS Code"
				]
			},
			"tabMovesFocusDescriptions"
		],
		"vs/editor/contrib/tokenization/browser/tokenization": [
			"forceRetokenize"
		],
		"vs/editor/contrib/unicodeHighlighter/browser/bannerController": [
			"closeBanner"
		],
		"vs/editor/contrib/unicodeHighlighter/browser/unicodeHighlighter": [
			"warningIcon",
			"unicodeHighlighting.thisDocumentHasManyNonBasicAsciiUnicodeCharacters",
			"unicodeHighlighting.thisDocumentHasManyAmbiguousUnicodeCharacters",
			"unicodeHighlighting.thisDocumentHasManyInvisibleUnicodeCharacters",
			"unicodeHighlight.configureUnicodeHighlightOptions",
			"unicodeHighlight.characterIsAmbiguousASCII",
			"unicodeHighlight.characterIsAmbiguous",
			"unicodeHighlight.characterIsInvisible",
			"unicodeHighlight.characterIsNonBasicAscii",
			"unicodeHighlight.adjustSettings",
			"unicodeHighlight.disableHighlightingInComments.shortLabel",
			"unicodeHighlight.disableHighlightingInStrings.shortLabel",
			"unicodeHighlight.disableHighlightingOfAmbiguousCharacters.shortLabel",
			"unicodeHighlight.disableHighlightingOfInvisibleCharacters.shortLabel",
			"unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters.shortLabel",
			"unicodeHighlight.excludeInvisibleCharFromBeingHighlighted",
			"unicodeHighlight.excludeCharFromBeingHighlighted",
			"unicodeHighlight.allowCommonCharactersInLanguage",
			"action.unicodeHighlight.disableHighlightingInComments",
			"action.unicodeHighlight.disableHighlightingInStrings",
			"action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters",
			"action.unicodeHighlight.disableHighlightingOfInvisibleCharacters",
			"action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters",
			"action.unicodeHighlight.showExcludeOptions"
		],
		"vs/editor/contrib/unusualLineTerminators/browser/unusualLineTerminators": [
			"unusualLineTerminators.title",
			"unusualLineTerminators.message",
			"unusualLineTerminators.detail",
			{
				"key": "unusualLineTerminators.fix",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"unusualLineTerminators.ignore"
		],
		"vs/editor/contrib/wordHighlighter/browser/highlightDecorations": [
			"wordHighlight",
			"wordHighlightStrong",
			"wordHighlightText",
			"wordHighlightBorder",
			"wordHighlightStrongBorder",
			"wordHighlightTextBorder",
			"overviewRulerWordHighlightForeground",
			"overviewRulerWordHighlightStrongForeground",
			"overviewRulerWordHighlightTextForeground"
		],
		"vs/editor/contrib/wordHighlighter/browser/wordHighlighter": [
			"wordHighlight.next.label",
			"wordHighlight.previous.label",
			"wordHighlight.trigger.label"
		],
		"vs/editor/contrib/wordOperations/browser/wordOperations": [
			"deleteInsideWord"
		],
		"vs/platform/accessibilitySignal/browser/accessibilitySignalService": [
			"accessibilitySignals.positionHasError.name",
			"accessibility.signals.positionHasError",
			"accessibilitySignals.positionHasWarning.name",
			"accessibility.signals.positionHasWarning",
			"accessibilitySignals.lineHasError.name",
			"accessibility.signals.lineHasError",
			"accessibilitySignals.lineHasWarning.name",
			"accessibility.signals.lineHasWarning",
			"accessibilitySignals.lineHasFoldedArea.name",
			"accessibility.signals.lineHasFoldedArea",
			"accessibilitySignals.lineHasBreakpoint.name",
			"accessibility.signals.lineHasBreakpoint",
			"accessibilitySignals.lineHasInlineSuggestion.name",
			"accessibilitySignals.nextEditSuggestion.name",
			"accessibility.signals.nextEditSuggestion",
			"accessibilitySignals.terminalQuickFix.name",
			"accessibility.signals.terminalQuickFix",
			"accessibilitySignals.onDebugBreak.name",
			"accessibility.signals.onDebugBreak",
			"accessibilitySignals.noInlayHints",
			"accessibility.signals.noInlayHints",
			"accessibilitySignals.taskCompleted",
			"accessibility.signals.taskCompleted",
			"accessibilitySignals.taskFailed",
			"accessibility.signals.taskFailed",
			"accessibilitySignals.terminalCommandFailed",
			"accessibility.signals.terminalCommandFailed",
			"accessibilitySignals.terminalCommandSucceeded",
			"accessibility.signals.terminalCommandSucceeded",
			"accessibilitySignals.terminalBell",
			"accessibility.signals.terminalBell",
			"accessibilitySignals.notebookCellCompleted",
			"accessibility.signals.notebookCellCompleted",
			"accessibilitySignals.notebookCellFailed",
			"accessibility.signals.notebookCellFailed",
			"accessibilitySignals.diffLineInserted",
			"accessibilitySignals.diffLineDeleted",
			"accessibilitySignals.diffLineModified",
			"accessibilitySignals.chatEditModifiedFile",
			"accessibility.signals.chatEditModifiedFile",
			"accessibilitySignals.chatRequestSent",
			"accessibility.signals.chatRequestSent",
			"accessibilitySignals.chatResponseReceived",
			"accessibilitySignals.codeActionRequestTriggered",
			"accessibility.signals.codeActionRequestTriggered",
			"accessibilitySignals.codeActionApplied",
			"accessibilitySignals.progress",
			"accessibility.signals.progress",
			"accessibilitySignals.clear",
			"accessibility.signals.clear",
			"accessibilitySignals.save",
			"accessibility.signals.save",
			"accessibilitySignals.format",
			"accessibility.signals.format",
			"accessibilitySignals.voiceRecordingStarted",
			"accessibilitySignals.voiceRecordingStopped",
			"accessibilitySignals.editsKept",
			"accessibility.signals.editsKept",
			"accessibilitySignals.editsUndone",
			"accessibility.signals.editsUndone",
			"accessibilitySignals.chatUserActionRequired",
			"accessibility.signals.chatUserActionRequired"
		],
		"vs/platform/action/common/actionCommonCategories": [
			"view",
			"help",
			"test",
			"file",
			"preferences",
			{
				"key": "developer",
				"comment": [
					"A developer on Code itself or someone diagnosing issues in Code"
				]
			}
		],
		"vs/platform/actions/browser/menuEntryActionViewItem": [
			"titleAndKb",
			"titleAndKb",
			"titleAndKbAndAlt",
			{
				"key": "content2",
				"comment": [
					"A label with keybindg like \"ESC to dismiss\""
				]
			},
			{
				"key": "content",
				"comment": [
					"A label",
					"A keybinding"
				]
			}
		],
		"vs/platform/actions/browser/toolbar": [
			"hide",
			"resetThisMenu"
		],
		"vs/platform/actions/common/menuService": [
			"hide.label",
			"configure keybinding"
		],
		"vs/platform/actionWidget/browser/actionList": [
			{
				"key": "label-preview",
				"comment": [
					"placeholders are keybindings, e.g \"F2 to Apply, Shift+F2 to Preview\""
				]
			},
			{
				"key": "label",
				"comment": [
					"placeholder is a keybinding, e.g \"F2 to Apply\""
				]
			},
			{
				"key": "customQuickFixWidget.labels",
				"comment": [
					"Action widget labels for accessibility."
				]
			},
			{
				"key": "customQuickFixWidget",
				"comment": [
					"An action widget option"
				]
			}
		],
		"vs/platform/actionWidget/browser/actionWidget": [
			"actionBar.toggledBackground",
			"codeActionMenuVisible",
			"hideCodeActionWidget.title",
			"selectPrevCodeAction.title",
			"selectNextCodeAction.title",
			"acceptSelected.title",
			"previewSelected.title"
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"defaultLanguageConfigurationOverrides.title",
			"defaultLanguageConfiguration.description",
			"overrideSettings.defaultDescription",
			"overrideSettings.errorMessage",
			"overrideSettings.defaultDescription",
			"overrideSettings.errorMessage",
			"config.property.empty",
			"config.property.languageDefault",
			"config.property.duplicate",
			"config.policy.duplicate"
		],
		"vs/platform/contextkey/browser/contextKeyService": [
			"getContextKeyInfo"
		],
		"vs/platform/contextkey/common/contextkey": [
			"contextkey.parser.error.emptyString",
			"contextkey.parser.error.emptyString.hint",
			"contextkey.parser.error.noInAfterNot",
			"contextkey.parser.error.closingParenthesis",
			"contextkey.parser.error.unexpectedToken",
			"contextkey.parser.error.unexpectedToken.hint",
			"contextkey.parser.error.unexpectedEOF",
			"contextkey.parser.error.unexpectedEOF.hint",
			"contextkey.parser.error.expectedButGot"
		],
		"vs/platform/contextkey/common/contextkeys": [
			"isMac",
			"isLinux",
			"isWindows",
			"isWeb",
			"isMacNative",
			"isIOS",
			"isMobile",
			"productQualityType",
			"isSimulation",
			"inputFocus"
		],
		"vs/platform/contextkey/common/scanner": [
			"contextkey.scanner.hint.didYouMean1",
			"contextkey.scanner.hint.didYouMean2",
			"contextkey.scanner.hint.didYouMean3",
			"contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote",
			"contextkey.scanner.hint.didYouForgetToEscapeSlash"
		],
		"vs/platform/history/browser/contextScopedHistoryWidget": [
			"suggestWidgetVisible"
		],
		"vs/platform/keybinding/common/abstractKeybindingService": [
			"first.chord",
			"next.chord",
			"missing.chord",
			"missing.chord"
		],
		"vs/platform/list/browser/listService": [
			"workbenchConfigurationTitle",
			"multiSelectModifier.ctrlCmd",
			"multiSelectModifier.alt",
			{
				"key": "multiSelectModifier",
				"comment": [
					"- `ctrlCmd` refers to a value the setting can take and should not be localized.",
					"- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized."
				]
			},
			{
				"key": "openModeModifier",
				"comment": [
					"`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized."
				]
			},
			"horizontalScrolling setting",
			"list.scrollByPage",
			"tree indent setting",
			"render tree indent guides",
			"list smoothScrolling setting",
			"Mouse Wheel Scroll Sensitivity",
			"Fast Scroll Sensitivity",
			"defaultFindModeSettingKey.highlight",
			"defaultFindModeSettingKey.filter",
			"defaultFindModeSettingKey",
			"keyboardNavigationSettingKey.simple",
			"keyboardNavigationSettingKey.highlight",
			"keyboardNavigationSettingKey.filter",
			"keyboardNavigationSettingKey",
			"keyboardNavigationSettingKeyDeprecated",
			"defaultFindMatchTypeSettingKey.fuzzy",
			"defaultFindMatchTypeSettingKey.contiguous",
			"defaultFindMatchTypeSettingKey",
			"expand mode",
			"sticky scroll",
			"sticky scroll maximum items",
			"typeNavigationMode2"
		],
		"vs/platform/markers/common/markers": [
			"sev.error",
			"sev.warning",
			"sev.info",
			"sev.errors",
			"sev.warnings",
			"sev.infos"
		],
		"vs/platform/markers/common/markerService": [
			"filtered",
			"filtered.network"
		],
		"vs/platform/quickinput/browser/commandsQuickAccess": [
			"recentlyUsed",
			"suggested",
			"commonlyUsed",
			"morecCommands",
			"suggested",
			"commandPickAriaLabelWithKeybinding",
			"canNotRun"
		],
		"vs/platform/quickinput/browser/helpQuickAccess": [
			"helpPickAriaLabel"
		],
		"vs/platform/quickinput/browser/quickInput": [
			"inQuickInput",
			"quickInputAlignment",
			"quickInputType",
			"cursorAtEndOfQuickInputBox",
			"quickInput.back",
			"inputModeEntry",
			"quickInput.steps",
			"quickInputBox.ariaLabel",
			"ok",
			"inputModeEntryDescription"
		],
		"vs/platform/quickinput/browser/quickInputActions": [
			"quickPick",
			"quickInput.nextSeparatorWithQuickAccessFallback",
			"quickInput.previousSeparatorWithQuickAccessFallback"
		],
		"vs/platform/quickinput/browser/quickInputController": [
			"quickInput.checkAll",
			{
				"key": "quickInput.visibleCount",
				"comment": [
					"This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers."
				]
			},
			{
				"key": "quickInput.countSelected",
				"comment": [
					"This tells the user how many items are selected in a list of items to select from. The items can be anything."
				]
			},
			"ok",
			"custom",
			"quickInput.backWithKeybinding",
			"quickInput.back"
		],
		"vs/platform/quickinput/browser/quickInputList": [
			"quickInput"
		],
		"vs/platform/quickinput/browser/quickInputUtils": [
			"executeCommand"
		],
		"vs/platform/quickinput/browser/tree/quickInputTreeAccessibilityProvider": [
			"quickTree"
		],
		"vs/platform/theme/common/colors/baseColors": [
			"foreground",
			"disabledForeground",
			"errorForeground",
			"descriptionForeground",
			"iconForeground",
			"focusBorder",
			"contrastBorder",
			"activeContrastBorder",
			"selectionBackground",
			"textLinkForeground",
			"textLinkActiveForeground",
			"textSeparatorForeground",
			"textPreformatForeground",
			"textPreformatBackground",
			"textBlockQuoteBackground",
			"textBlockQuoteBorder",
			"textCodeBlockBackground"
		],
		"vs/platform/theme/common/colors/chartsColors": [
			"chartsForeground",
			"chartsLines",
			"chartsRed",
			"chartsBlue",
			"chartsYellow",
			"chartsOrange",
			"chartsGreen",
			"chartsPurple"
		],
		"vs/platform/theme/common/colors/editorColors": [
			"editorBackground",
			"editorForeground",
			"editorStickyScrollBackground",
			"editorStickyScrollGutterBackground",
			"editorStickyScrollHoverBackground",
			"editorStickyScrollBorder",
			"editorStickyScrollShadow",
			"editorWidgetBackground",
			"editorWidgetForeground",
			"editorWidgetBorder",
			"editorWidgetResizeBorder",
			"editorError.background",
			"editorError.foreground",
			"errorBorder",
			"editorWarning.background",
			"editorWarning.foreground",
			"warningBorder",
			"editorInfo.background",
			"editorInfo.foreground",
			"infoBorder",
			"editorHint.foreground",
			"hintBorder",
			"activeLinkForeground",
			"editorSelectionBackground",
			"editorSelectionForeground",
			"editorInactiveSelection",
			"editorSelectionHighlight",
			"editorSelectionHighlightBorder",
			"editorCompositionBorder",
			"editorFindMatch",
			"editorFindMatchForeground",
			"findMatchHighlight",
			"findMatchHighlightForeground",
			"findRangeHighlight",
			"editorFindMatchBorder",
			"findMatchHighlightBorder",
			"findRangeHighlightBorder",
			"hoverHighlight",
			"hoverBackground",
			"hoverForeground",
			"hoverBorder",
			"statusBarBackground",
			"editorInlayHintForeground",
			"editorInlayHintBackground",
			"editorInlayHintForegroundTypes",
			"editorInlayHintBackgroundTypes",
			"editorInlayHintForegroundParameter",
			"editorInlayHintBackgroundParameter",
			"editorLightBulbForeground",
			"editorLightBulbAutoFixForeground",
			"editorLightBulbAiForeground",
			"snippetTabstopHighlightBackground",
			"snippetTabstopHighlightBorder",
			"snippetFinalTabstopHighlightBackground",
			"snippetFinalTabstopHighlightBorder",
			"diffEditorInserted",
			"diffEditorRemoved",
			"diffEditorInsertedLines",
			"diffEditorRemovedLines",
			"diffEditorInsertedLineGutter",
			"diffEditorRemovedLineGutter",
			"diffEditorOverviewInserted",
			"diffEditorOverviewRemoved",
			"diffEditorInsertedOutline",
			"diffEditorRemovedOutline",
			"diffEditorBorder",
			"diffDiagonalFill",
			"diffEditor.unchangedRegionBackground",
			"diffEditor.unchangedRegionForeground",
			"diffEditor.unchangedCodeBackground",
			"widgetShadow",
			"widgetBorder",
			"toolbarHoverBackground",
			"toolbarHoverOutline",
			"toolbarActiveBackground",
			"breadcrumbsFocusForeground",
			"breadcrumbsBackground",
			"breadcrumbsFocusForeground",
			"breadcrumbsSelectedForeground",
			"breadcrumbsSelectedBackground",
			"mergeCurrentHeaderBackground",
			"mergeCurrentContentBackground",
			"mergeIncomingHeaderBackground",
			"mergeIncomingContentBackground",
			"mergeCommonHeaderBackground",
			"mergeCommonContentBackground",
			"mergeBorder",
			"overviewRulerCurrentContentForeground",
			"overviewRulerIncomingContentForeground",
			"overviewRulerCommonContentForeground",
			"overviewRulerFindMatchForeground",
			"overviewRulerSelectionHighlightForeground",
			"problemsErrorIconForeground",
			"problemsWarningIconForeground",
			"problemsInfoIconForeground"
		],
		"vs/platform/theme/common/colors/inputColors": [
			"inputBoxBackground",
			"inputBoxForeground",
			"inputBoxBorder",
			"inputBoxActiveOptionBorder",
			"inputOption.hoverBackground",
			"inputOption.activeBackground",
			"inputOption.activeForeground",
			"inputPlaceholderForeground",
			"inputValidationInfoBackground",
			"inputValidationInfoForeground",
			"inputValidationInfoBorder",
			"inputValidationWarningBackground",
			"inputValidationWarningForeground",
			"inputValidationWarningBorder",
			"inputValidationErrorBackground",
			"inputValidationErrorForeground",
			"inputValidationErrorBorder",
			"dropdownBackground",
			"dropdownListBackground",
			"dropdownForeground",
			"dropdownBorder",
			"buttonForeground",
			"buttonSeparator",
			"buttonBackground",
			"buttonHoverBackground",
			"buttonBorder",
			"buttonSecondaryForeground",
			"buttonSecondaryBackground",
			"buttonSecondaryHoverBackground",
			"radioActiveForeground",
			"radioBackground",
			"radioActiveBorder",
			"radioInactiveForeground",
			"radioInactiveBackground",
			"radioInactiveBorder",
			"radioHoverBackground",
			"checkbox.background",
			"checkbox.select.background",
			"checkbox.foreground",
			"checkbox.border",
			"checkbox.select.border",
			"checkbox.disabled.background",
			"checkbox.disabled.foreground",
			"keybindingLabelBackground",
			"keybindingLabelForeground",
			"keybindingLabelBorder",
			"keybindingLabelBottomBorder"
		],
		"vs/platform/theme/common/colors/listColors": [
			"listFocusBackground",
			"listFocusForeground",
			"listFocusOutline",
			"listFocusAndSelectionOutline",
			"listActiveSelectionBackground",
			"listActiveSelectionForeground",
			"listActiveSelectionIconForeground",
			"listInactiveSelectionBackground",
			"listInactiveSelectionForeground",
			"listInactiveSelectionIconForeground",
			"listInactiveFocusBackground",
			"listInactiveFocusOutline",
			"listHoverBackground",
			"listHoverForeground",
			"listDropBackground",
			"listDropBetweenBackground",
			"highlight",
			"listFocusHighlightForeground",
			"invalidItemForeground",
			"listErrorForeground",
			"listWarningForeground",
			"listFilterWidgetBackground",
			"listFilterWidgetOutline",
			"listFilterWidgetNoMatchesOutline",
			"listFilterWidgetShadow",
			"listFilterMatchHighlight",
			"listFilterMatchHighlightBorder",
			"listDeemphasizedForeground",
			"treeIndentGuidesStroke",
			"treeInactiveIndentGuidesStroke",
			"tableColumnsBorder",
			"tableOddRowsBackgroundColor",
			"editorActionListBackground",
			"editorActionListForeground",
			"editorActionListFocusForeground",
			"editorActionListFocusBackground"
		],
		"vs/platform/theme/common/colors/menuColors": [
			"menuBorder",
			"menuForeground",
			"menuBackground",
			"menuSelectionForeground",
			"menuSelectionBackground",
			"menuSelectionBorder",
			"menuSeparatorBackground"
		],
		"vs/platform/theme/common/colors/minimapColors": [
			"minimapFindMatchHighlight",
			"minimapSelectionOccurrenceHighlight",
			"minimapSelectionHighlight",
			"minimapInfo",
			"overviewRuleWarning",
			"minimapError",
			"minimapBackground",
			"minimapForegroundOpacity",
			"minimapSliderBackground",
			"minimapSliderHoverBackground",
			"minimapSliderActiveBackground"
		],
		"vs/platform/theme/common/colors/miscColors": [
			"sashActiveBorder",
			"badgeBackground",
			"badgeForeground",
			"activityWarningBadge.foreground",
			"activityWarningBadge.background",
			"activityErrorBadge.foreground",
			"activityErrorBadge.background",
			"scrollbarShadow",
			"scrollbarSliderBackground",
			"scrollbarSliderHoverBackground",
			"scrollbarSliderActiveBackground",
			"progressBarBackground",
			"chartLine",
			"chartAxis",
			"chartGuide"
		],
		"vs/platform/theme/common/colors/quickpickColors": [
			"pickerBackground",
			"pickerForeground",
			"pickerTitleBackground",
			"pickerGroupForeground",
			"pickerGroupBorder",
			"quickInput.list.focusBackground deprecation",
			"quickInput.listFocusForeground",
			"quickInput.listFocusIconForeground",
			"quickInput.listFocusBackground"
		],
		"vs/platform/theme/common/colors/searchColors": [
			"search.resultsInfoForeground",
			"searchEditor.queryMatch",
			"searchEditor.editorFindMatchBorder"
		],
		"vs/platform/theme/common/colorUtils": [
			"transparecyRequired",
			"useDefault"
		],
		"vs/platform/theme/common/iconRegistry": [
			"schema.fontId.formatError",
			"iconDefinition.fontId",
			"iconDefinition.fontCharacter",
			"widgetClose",
			"previousChangeIcon",
			"nextChangeIcon"
		],
		"vs/platform/undoRedo/common/undoRedoService": [
			{
				"key": "externalRemoval",
				"comment": [
					"{0} is a list of filenames"
				]
			},
			{
				"key": "noParallelUniverses",
				"comment": [
					"{0} is a list of filenames"
				]
			},
			{
				"key": "cannotWorkspaceUndo",
				"comment": [
					"{0} is a label for an operation. {1} is another message."
				]
			},
			{
				"key": "cannotWorkspaceUndo",
				"comment": [
					"{0} is a label for an operation. {1} is another message."
				]
			},
			{
				"key": "cannotWorkspaceUndoDueToChanges",
				"comment": [
					"{0} is a label for an operation. {1} is a list of filenames."
				]
			},
			{
				"key": "cannotWorkspaceUndoDueToInProgressUndoRedo",
				"comment": [
					"{0} is a label for an operation. {1} is a list of filenames."
				]
			},
			{
				"key": "cannotWorkspaceUndoDueToInMeantimeUndoRedo",
				"comment": [
					"{0} is a label for an operation. {1} is a list of filenames."
				]
			},
			"confirmWorkspace",
			{
				"key": "ok",
				"comment": [
					"{0} denotes a number that is > 1, && denotes a mnemonic"
				]
			},
			{
				"key": "nok",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "cannotResourceUndoDueToInProgressUndoRedo",
				"comment": [
					"{0} is a label for an operation."
				]
			},
			"confirmDifferentSource",
			{
				"key": "confirmDifferentSource.yes",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"confirmDifferentSource.no",
			{
				"key": "cannotWorkspaceRedo",
				"comment": [
					"{0} is a label for an operation. {1} is another message."
				]
			},
			{
				"key": "cannotWorkspaceRedo",
				"comment": [
					"{0} is a label for an operation. {1} is another message."
				]
			},
			{
				"key": "cannotWorkspaceRedoDueToChanges",
				"comment": [
					"{0} is a label for an operation. {1} is a list of filenames."
				]
			},
			{
				"key": "cannotWorkspaceRedoDueToInProgressUndoRedo",
				"comment": [
					"{0} is a label for an operation. {1} is a list of filenames."
				]
			},
			{
				"key": "cannotWorkspaceRedoDueToInMeantimeUndoRedo",
				"comment": [
					"{0} is a label for an operation. {1} is a list of filenames."
				]
			},
			{
				"key": "cannotResourceRedoDueToInProgressUndoRedo",
				"comment": [
					"{0} is a label for an operation."
				]
			}
		],
		"vs/platform/workspace/common/workspace": [
			"codeWorkspace"
		]
	},
	"messages": {
		"vs/base/browser/ui/actionbar/actionViewItems": [
			"{0} ({1})"
		],
		"vs/base/browser/ui/findinput/findInput": [
			"input"
		],
		"vs/base/browser/ui/findinput/findInputToggles": [
			"Match Case",
			"Match Whole Word",
			"Use Regular Expression"
		],
		"vs/base/browser/ui/findinput/replaceInput": [
			"input",
			"Preserve Case"
		],
		"vs/base/browser/ui/hover/hoverWidget": [
			"Inspect this in the accessible view with {0}.",
			"Inspect this in the accessible view via the command Open Accessible View which is currently not triggerable via keybinding."
		],
		"vs/base/browser/ui/inputbox/inputBox": [
			"Error: {0}",
			"Warning: {0}",
			"Info: {0}",
			" or {0} for history",
			" ({0} for history)",
			"Cleared Input"
		],
		"vs/base/browser/ui/keybindingLabel/keybindingLabel": [
			"Unbound"
		],
		"vs/base/browser/ui/selectBox/selectBoxCustom": [
			"Select Box"
		],
		"vs/base/browser/ui/toolbar/toolbar": [
			"More Actions..."
		],
		"vs/base/browser/ui/tree/abstractTree": [
			"Type to search",
			"Close",
			"Type to search",
			"No results found.",
			"No results",
			"{0} results",
			"Type to filter",
			"Type to search",
			"Filter",
			"Fuzzy Match"
		],
		"vs/base/common/actions": [
			"(empty)"
		],
		"vs/base/common/errorMessage": [
			"{0}: {1}",
			"A system error occurred ({0})",
			"An unknown error occurred. Please consult the log for more details.",
			"An unknown error occurred. Please consult the log for more details.",
			"{0} ({1} errors in total)",
			"An unknown error occurred. Please consult the log for more details."
		],
		"vs/base/common/keybindingLabels": [
			"Ctrl",
			"Shift",
			"Alt",
			"Windows",
			"Ctrl",
			"Shift",
			"Alt",
			"Super",
			"Control",
			"Shift",
			"Option",
			"Command",
			"Control",
			"Shift",
			"Alt",
			"Windows",
			"Control",
			"Shift",
			"Alt",
			"Super"
		],
		"vs/editor/browser/controller/editContext/native/screenReaderSupport": [
			"editor"
		],
		"vs/editor/browser/controller/editContext/screenReaderUtils": [
			"The editor is not accessible at this time.",
			"{0} To enable screen reader optimized mode, use {1}",
			"{0} To enable screen reader optimized mode, open the quick pick with {1} and run the command Toggle Screen Reader Accessibility Mode, which is currently not triggerable via keyboard.",
			"{0} Please assign a keybinding for the command Toggle Screen Reader Accessibility Mode by accessing the keybindings editor with {1} and run it."
		],
		"vs/editor/browser/controller/editContext/textArea/textAreaEditContext": [
			"editor"
		],
		"vs/editor/browser/coreCommands": [
			"Stick to the end even when going to longer lines",
			"Stick to the end even when going to longer lines",
			"Removed secondary cursors"
		],
		"vs/editor/browser/editorExtensions": [
			"&&Undo",
			"Undo",
			"Undo",
			"&&Redo",
			"Redo",
			"Redo",
			"&&Select All",
			"Select All",
			"Select All"
		],
		"vs/editor/browser/gpu/viewGpuContext": [
			"Use DOM-based rendering"
		],
		"vs/editor/browser/services/hoverService/hoverWidget": [
			"Hold {0} key to mouse over"
		],
		"vs/editor/browser/services/hoverService/updatableHoverWidget": [
			"Loading..."
		],
		"vs/editor/browser/services/inlineCompletionsService": [
			"Whether inline completions are currently snoozed",
			"Select snooze duration for Code completions and NES",
			"Snooze Inline Suggestions",
			"Cancel Snooze Inline Suggestions"
		],
		"vs/editor/browser/widget/codeEditor/codeEditorWidget": [
			"The number of cursors has been limited to {0}. Consider using [find and replace](https://code.visualstudio.com/docs/editor/codebasics#_find-and-replace) for larger changes or increase the editor multi cursor limit setting.",
			"Increase Multi Cursor Limit"
		],
		"vs/editor/browser/widget/diffEditor/commands": [
			"Toggle Collapse Unchanged Regions",
			"Toggle Show Moved Code Blocks",
			"Toggle Use Inline View When Space Is Limited",
			"Diff Editor",
			"Switch Side",
			"Exit Compare Move",
			"Collapse All Unchanged Regions",
			"Show All Unchanged Regions",
			"Revert",
			"Accessible Diff Viewer",
			"Go to Next Difference",
			"Go to Previous Difference"
		],
		"vs/editor/browser/widget/diffEditor/components/accessibleDiffViewer": [
			"Icon for 'Insert' in accessible diff viewer.",
			"Icon for 'Remove' in accessible diff viewer.",
			"Icon for 'Close' in accessible diff viewer.",
			"Close",
			"Accessible Diff Viewer. Use arrow up and down to navigate.",
			"no lines changed",
			"1 line changed",
			"{0} lines changed",
			"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}",
			"blank",
			"{0} unchanged line {1}",
			"{0} original line {1} modified line {2}",
			"+ {0} modified line {1}",
			"- {0} original line {1}"
		],
		"vs/editor/browser/widget/diffEditor/components/diffEditorEditors": [
			" use {0} to open the accessibility help."
		],
		"vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/inlineDiffDeletedCodeMargin": [
			"Copy deleted lines",
			"Copy deleted line",
			"Copy changed lines",
			"Copy changed line",
			"Copy deleted line ({0})",
			"Copy changed line ({0})",
			"Revert this change"
		],
		"vs/editor/browser/widget/diffEditor/diffEditor.contribution": [
			"Use Inline View When Space Is Limited",
			"Show Moved Code Blocks",
			"Revert Block",
			"Revert Selection",
			"Open Accessible Diff Viewer"
		],
		"vs/editor/browser/widget/diffEditor/features/hideUnchangedRegionsFeature": [
			"Fold Unchanged Region",
			"{0} hidden lines",
			"Click or drag to show more above",
			"Show Unchanged Region",
			"Click or drag to show more below",
			"{0} hidden lines",
			"Double click to unfold"
		],
		"vs/editor/browser/widget/diffEditor/features/movedBlocksLinesFeature": [
			"Code moved with changes to line {0}-{1}",
			"Code moved with changes from line {0}-{1}",
			"Code moved to line {0}-{1}",
			"Code moved from line {0}-{1}"
		],
		"vs/editor/browser/widget/diffEditor/features/revertButtonsFeature": [
			"Revert Selected Changes",
			"Revert Change"
		],
		"vs/editor/browser/widget/diffEditor/registrations.contribution": [
			"The border color for text that got moved in the diff editor.",
			"The active border color for text that got moved in the diff editor.",
			"The color of the shadow around unchanged region widgets.",
			"Line decoration for inserts in the diff editor.",
			"Line decoration for removals in the diff editor."
		],
		"vs/editor/browser/widget/multiDiffEditor/colors": [
			"The background color of the diff editor's header",
			"The background color of the multi file diff editor",
			"The border color of the multi file diff editor"
		],
		"vs/editor/browser/widget/multiDiffEditor/multiDiffEditorWidgetImpl": [
			"Loading...",
			"No Changed Files"
		],
		"vs/editor/common/config/editorConfigurationSchema": [
			"Editor",
			"The number of spaces a tab is equal to. This setting is overridden based on the file contents when {0} is on.",
			"The number of spaces used for indentation or `\"tabSize\"` to use the value from `#editor.tabSize#`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
			"Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when {0} is on.",
			"Controls whether {0} and {1} will be automatically detected when a file is opened based on the file contents.",
			"Remove trailing auto inserted whitespace.",
			"Special handling for large files to disable certain memory intensive features.",
			"Turn off Word Based Suggestions.",
			"Only suggest words from the active document.",
			"Suggest words from all open documents of the same language.",
			"Suggest words from all open documents.",
			"Controls whether completions should be computed based on words in the document and from which documents they are computed.",
			"Semantic highlighting enabled for all color themes.",
			"Semantic highlighting disabled for all color themes.",
			"Semantic highlighting is configured by the current color theme's `semanticHighlighting` setting.",
			"Controls whether the semanticHighlighting is shown for the languages that support it.",
			"Keep peek editors open even when double-clicking their content or when hitting `Escape`.",
			"Lines above this length will not be tokenized for performance reasons",
			"Controls whether the tokenization should happen asynchronously on a web worker.",
			"Controls whether async tokenization should be logged. For debugging only.",
			"Controls whether async tokenization should be verified against legacy background tokenization. Might slow down tokenization. For debugging only.",
			"Controls whether tree sitter parsing should be turned on and telemetry collected. Setting `#editor.experimental.preferTreeSitter#` for specific languages will take precedence.",
			"Controls whether tree sitter parsing should be turned on for css. This will take precedence over `#editor.experimental.treeSitterTelemetry#` for css.",
			"Controls whether tree sitter parsing should be turned on for typescript. This will take precedence over `#editor.experimental.treeSitterTelemetry#` for typescript.",
			"Controls whether tree sitter parsing should be turned on for ini. This will take precedence over `#editor.experimental.treeSitterTelemetry#` for ini.",
			"Controls whether tree sitter parsing should be turned on for regex. This will take precedence over `#editor.experimental.treeSitterTelemetry#` for regex.",
			"Defines the bracket symbols that increase or decrease the indentation.",
			"The opening bracket character or string sequence.",
			"The closing bracket character or string sequence.",
			"Defines the bracket pairs that are colorized by their nesting level if bracket pair colorization is enabled.",
			"The opening bracket character or string sequence.",
			"The closing bracket character or string sequence.",
			"Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.",
			"Maximum file size in MB for which to compute diffs. Use 0 for no limit.",
			"Controls whether the diff editor shows the diff side by side or inline.",
			"If the diff editor width is smaller than this value, the inline view is used.",
			"If enabled and the editor width is too small, the inline view is used.",
			"When enabled, the diff editor shows arrows in its glyph margin to revert changes.",
			"When enabled, the diff editor shows a special gutter for revert and stage actions.",
			"When enabled, the diff editor ignores changes in leading or trailing whitespace.",
			"Controls whether the diff editor shows +/- indicators for added/removed changes.",
			"Controls whether the editor shows CodeLens.",
			"Lines will never wrap.",
			"Lines will wrap at the viewport width.",
			"Lines will wrap according to the {0} setting.",
			"Uses the legacy diffing algorithm.",
			"Uses the advanced diffing algorithm.",
			"Controls whether the diff editor shows unchanged regions.",
			"Controls how many lines are used for unchanged regions.",
			"Controls how many lines are used as a minimum for unchanged regions.",
			"Controls how many lines are used as context when comparing unchanged regions.",
			"Controls whether the diff editor should show detected code moves.",
			"Controls whether the diff editor shows empty decorations to see where characters got inserted or deleted.",
			"If enabled and the editor uses the inline view, word changes are rendered inline."
		],
		"vs/editor/common/config/editorOptions": [
			"Use platform APIs to detect when a Screen Reader is attached.",
			"Optimize for usage with a Screen Reader.",
			"Assume a screen reader is not attached.",
			"Controls if the UI should run in a mode where it is optimized for screen readers.",
			"Controls whether a space character is inserted when commenting.",
			"Controls if empty lines should be ignored with toggle, add or remove actions for line comments.",
			"Controls whether copying without a selection copies the current line.",
			"Controls whether the cursor should jump to find matches while typing.",
			"Never seed search string from the editor selection.",
			"Always seed search string from the editor selection, including word at cursor position.",
			"Only seed search string from the editor selection.",
			"Controls whether the search string in the Find Widget is seeded from the editor selection.",
			"Never turn on Find in Selection automatically (default).",
			"Always turn on Find in Selection automatically.",
			"Turn on Find in Selection automatically when multiple lines of content are selected.",
			"Controls the condition for turning on Find in Selection automatically.",
			"Controls whether the Find Widget should read or modify the shared find clipboard on macOS.",
			"Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
			"Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.",
			"Do not store search history from the find widget.",
			"Store search history across the active workspace",
			"Controls how the find widget history should be stored",
			"Do not store history from the replace widget.",
			"Store replace history across the active workspace",
			"Controls how the replace widget history should be stored",
			"Controls whether the Find Widget should search as you type.",
			"Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property.",
			"Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures.",
			"Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.",
			"Enables/Disables the translation from font-weight to font-variation-settings. Change this to a string for fine-grained control of the 'font-variation-settings' CSS property.",
			"Explicit 'font-variation-settings' CSS property. A boolean can be passed instead if one only needs to translate font-weight to font-variation-settings.",
			"Configures font variations. Can be either a boolean to enable/disable the translation from font-weight to font-variation-settings or a string for the value of the CSS 'font-variation-settings' property.",
			"Controls the font size in pixels.",
			"Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed.",
			"Controls the font weight. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
			"Show Peek view of the results (default)",
			"Go to the primary result and show a Peek view",
			"Go to the primary result and enable Peek-less navigation to others",
			"This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
			"Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to References'-command when multiple target locations exist.",
			"Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
			"Controls whether the hover is shown.",
			"Controls the delay in milliseconds after which the hover is shown.",
			"Controls whether the hover should remain visible when mouse is moved over it.",
			"Controls the delay in milliseconds after which the hover is hidden. Requires `#editor.hover.sticky#` to be enabled.",
			"Prefer showing hovers above the line, if there's space.",
			"Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
			"Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.",
			"Controls the algorithm that computes wrapping points. Note that when in accessibility mode, advanced will be used for the best experience.",
			"Disable the code action menu.",
			"Show the code action menu when the cursor is on lines with code.",
			"Show the code action menu when the cursor is on lines with code or on empty lines.",
			"Enables the Code Action lightbulb in the editor.",
			"Shows the nested current scopes during the scroll at the top of the editor.",
			"Defines the maximum number of sticky lines to show.",
			"Defines the model to use for determining which lines to stick. If the outline model does not exist, it will fall back on the folding provider model which falls back on the indentation model. This order is respected in all three cases.",
			"Enable scrolling of Sticky Scroll with the editor's horizontal scrollbar.",
			"Enables the inlay hints in the editor.",
			"Inlay hints are enabled",
			"Inlay hints are showing by default and hide when holding {0}",
			"Inlay hints are hidden by default and show when holding {0}",
			"Inlay hints are disabled",
			"Controls font size of inlay hints in the editor. As default the {0} is used when the configured value is less than {1} or greater than the editor font size.",
			"Controls font family of inlay hints in the editor. When set to empty, the {0} is used.",
			"Enables the padding around the inlay hints in the editor.",
			"Maximum overall length of inlay hints, for a single line, before they get truncated by the editor. Set to `0` to never truncate",
			"Controls the line height. \n - Use 0 to automatically compute the line height from the font size.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
			"Controls whether the minimap is shown.",
			"The minimap is always shown.",
			"The minimap is hidden when mouse is not over the minimap and shown when mouse is over the minimap.",
			"The minimap is only shown when the editor is scrolled",
			"Controls whether the minimap is hidden automatically.",
			"The minimap has the same size as the editor contents (and might scroll).",
			"The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
			"The minimap will shrink as necessary to never be larger than the editor (no scrolling).",
			"Controls the size of the minimap.",
			"Controls the side where to render the minimap.",
			"Controls when the minimap slider is shown.",
			"Scale of content drawn in the minimap: 1, 2 or 3.",
			"Render the actual characters on a line as opposed to color blocks.",
			"Limit the width of the minimap to render at most a certain number of columns.",
			"Controls whether named regions are shown as section headers in the minimap.",
			"Controls whether MARK: comments are shown as section headers in the minimap.",
			"Defines the regular expression used to find section headers in comments. The regex must contain a named match group `label` (written as `(?<label>.+)`) that encapsulates the section header, otherwise it will not work. Optionally you can include another match group named `separator`. Use \\n in the pattern to match multi-line headers.",
			"Controls the font size of section headers in the minimap.",
			"Controls the amount of space (in pixels) between characters of section header. This helps the readability of the header in small font sizes.",
			"Controls the amount of space between the top edge of the editor and the first line.",
			"Controls the amount of space between the bottom edge of the editor and the last line.",
			"Enables a pop-up that shows parameter documentation and type information as you type.",
			"Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
			"Quick suggestions show inside the suggest widget",
			"Quick suggestions show as ghost text",
			"Quick suggestions are disabled",
			"Enable quick suggestions inside strings.",
			"Enable quick suggestions inside comments.",
			"Enable quick suggestions outside of strings and comments.",
			"Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the {0}-setting which controls if suggestions are triggered by special characters.",
			"Line numbers are not rendered.",
			"Line numbers are rendered as absolute number.",
			"Line numbers are rendered as distance in lines to cursor position.",
			"Line numbers are rendered every 10 lines.",
			"Controls the display of line numbers.",
			"Number of monospace characters at which this editor ruler will render.",
			"Color of this editor ruler.",
			"Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
			"The vertical scrollbar will be visible only when necessary.",
			"The vertical scrollbar will always be visible.",
			"The vertical scrollbar will always be hidden.",
			"Controls the visibility of the vertical scrollbar.",
			"The horizontal scrollbar will be visible only when necessary.",
			"The horizontal scrollbar will always be visible.",
			"The horizontal scrollbar will always be hidden.",
			"Controls the visibility of the horizontal scrollbar.",
			"The width of the vertical scrollbar.",
			"The height of the horizontal scrollbar.",
			"Controls whether clicks scroll by page or jump to click position.",
			"When set, the horizontal scrollbar will not increase the size of the editor's content.",
			"Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.",
			"Controls whether characters that just reserve space or have no width at all are highlighted.",
			"Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.",
			"Controls whether characters in comments should also be subject to Unicode highlighting.",
			"Controls whether characters in strings should also be subject to Unicode highlighting.",
			"Defines allowed characters that are not being highlighted.",
			"Unicode characters that are common in allowed locales are not being highlighted.",
			"Controls whether to automatically show inline suggestions in the editor.",
			"Show the inline suggestion toolbar whenever an inline suggestion is shown.",
			"Show the inline suggestion toolbar when hovering over an inline suggestion.",
			"Never show the inline suggestion toolbar.",
			"Controls when to show the inline suggestion toolbar.",
			"Controls whether to show syntax highlighting for inline suggestions in the editor.",
			"Controls how inline suggestions interact with the suggest widget. If enabled, the suggest widget is not shown automatically when inline suggestions are available.",
			"Controls the minimal delay in milliseconds after which inline suggestions are shown after typing.",
			"Suppresses inline completions for specified extension IDs -- comma separated.",
			"Controls whether to trigger a command when the inline suggestion provider changes.",
			"Controls whether to show inline suggestions when there is a suggest conflict.",
			"Controls the font family of the inline suggestions.",
			"Controls whether showing a suggestion will shift the code to make space for the suggestion inline.",
			"Controls whether larger suggestions can be shown side by side.",
			"Larger suggestions will show side by side if there is enough space, otherwise they will be shown below.",
			"Larger suggestions are never shown side by side and will always be shown below.",
			"Controls whether the suggestion will show as collapsed until jumping to it.",
			"Controls whether bracket pair colorization is enabled or not. Use {0} to override the bracket highlight colors.",
			"Controls whether each bracket type has its own independent color pool.",
			"Enables bracket pair guides.",
			"Enables bracket pair guides only for the active bracket pair.",
			"Disables bracket pair guides.",
			"Controls whether bracket pair guides are enabled or not.",
			"Enables horizontal guides as addition to vertical bracket pair guides.",
			"Enables horizontal guides only for the active bracket pair.",
			"Disables horizontal bracket pair guides.",
			"Controls whether horizontal bracket pair guides are enabled or not.",
			"Controls whether the editor should highlight the active bracket pair.",
			"Controls whether the editor should render indent guides.",
			"Highlights the active indent guide.",
			"Highlights the active indent guide even if bracket guides are highlighted.",
			"Do not highlight the active indent guide.",
			"Controls whether the editor should highlight the active indent guide.",
			"Insert suggestion without overwriting text right of the cursor.",
			"Insert suggestion and overwrite text right of the cursor.",
			"Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
			"Controls whether filtering and sorting suggestions accounts for small typos.",
			"Controls whether sorting favors words that appear close to the cursor.",
			"Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
			"Always select a suggestion when automatically triggering IntelliSense.",
			"Never select a suggestion when automatically triggering IntelliSense.",
			"Select a suggestion only when triggering IntelliSense from a trigger character.",
			"Select a suggestion only when triggering IntelliSense as you type.",
			"Controls whether a suggestion is selected when the widget shows. Note that this only applies to automatically triggered suggestions ({0} and {1}) and that a suggestion is always selected when explicitly invoked, e.g via `Ctrl+Space`.",
			"Controls whether an active snippet prevents quick suggestions.",
			"Controls whether to show or hide icons in suggestions.",
			"Controls the visibility of the status bar at the bottom of the suggest widget.",
			"Controls whether to preview the suggestion outcome in the editor.",
			"Controls whether suggest details show inline with the label or only in the details widget.",
			"This setting is deprecated. The suggest widget can now be resized.",
			"This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
			"When enabled IntelliSense shows `method`-suggestions.",
			"When enabled IntelliSense shows `function`-suggestions.",
			"When enabled IntelliSense shows `constructor`-suggestions.",
			"When enabled IntelliSense shows `deprecated`-suggestions.",
			"When enabled IntelliSense filtering requires that the first character matches on a word start. For example, `c` on `Console` or `WebContext` but _not_ on `description`. When disabled IntelliSense will show more results but still sorts them by match quality.",
			"When enabled IntelliSense shows `field`-suggestions.",
			"When enabled IntelliSense shows `variable`-suggestions.",
			"When enabled IntelliSense shows `class`-suggestions.",
			"When enabled IntelliSense shows `struct`-suggestions.",
			"When enabled IntelliSense shows `interface`-suggestions.",
			"When enabled IntelliSense shows `module`-suggestions.",
			"When enabled IntelliSense shows `property`-suggestions.",
			"When enabled IntelliSense shows `event`-suggestions.",
			"When enabled IntelliSense shows `operator`-suggestions.",
			"When enabled IntelliSense shows `unit`-suggestions.",
			"When enabled IntelliSense shows `value`-suggestions.",
			"When enabled IntelliSense shows `constant`-suggestions.",
			"When enabled IntelliSense shows `enum`-suggestions.",
			"When enabled IntelliSense shows `enumMember`-suggestions.",
			"When enabled IntelliSense shows `keyword`-suggestions.",
			"When enabled IntelliSense shows `text`-suggestions.",
			"When enabled IntelliSense shows `color`-suggestions.",
			"When enabled IntelliSense shows `file`-suggestions.",
			"When enabled IntelliSense shows `reference`-suggestions.",
			"When enabled IntelliSense shows `customcolor`-suggestions.",
			"When enabled IntelliSense shows `folder`-suggestions.",
			"When enabled IntelliSense shows `typeParameter`-suggestions.",
			"When enabled IntelliSense shows `snippet`-suggestions.",
			"When enabled IntelliSense shows `user`-suggestions.",
			"When enabled IntelliSense shows `issues`-suggestions.",
			"Whether leading and trailing whitespace should always be selected.",
			"Whether subwords (like 'foo' in 'fooBar' or 'foo_bar') should be selected.",
			"Locales to be used for word segmentation when doing word related navigations or operations. Specify the BCP 47 language tag of the word you wish to recognize (e.g., ja, zh-CN, zh-Hant-TW, etc.).",
			"No indentation. Wrapped lines begin at column 1.",
			"Wrapped lines get the same indentation as the parent.",
			"Wrapped lines get +1 indentation toward the parent.",
			"Wrapped lines get +2 indentation toward the parent.",
			"Controls the indentation of wrapped lines.",
			"Controls whether you can drag and drop a file into a text editor by holding down the `Shift` key (instead of opening the file in an editor).",
			"Controls if a widget is shown when dropping files into the editor. This widget lets you control how the file is dropped.",
			"Show the drop selector widget after a file is dropped into the editor.",
			"Never show the drop selector widget. Instead the default drop provider is always used.",
			"Controls whether you can paste content in different ways.",
			"Controls if a widget is shown when pasting content in to the editor. This widget lets you control how the file is pasted.",
			"Show the paste selector widget after content is pasted into the editor.",
			"Never show the paste selector widget. Instead the default pasting behavior is always used.",
			"Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
			"Only accept a suggestion with `Enter` when it makes a textual change.",
			"Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
			"Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.",
			"Controls whether to allow using variable line heights in the editor.",
			"Controls whether to allow using variable fonts in the editor.",
			"Controls whether to allow using variable fonts in the editor in the accessibility mode.",
			"Editor content",
			"Control whether inline suggestions are announced by a screen reader.",
			"Use language configurations to determine when to autoclose brackets.",
			"Autoclose brackets only when the cursor is to the left of whitespace.",
			"Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
			"Use language configurations to determine when to autoclose comments.",
			"Autoclose comments only when the cursor is to the left of whitespace.",
			"Controls whether the editor should automatically close comments after the user adds an opening comment.",
			"Remove adjacent closing quotes or brackets only if they were automatically inserted.",
			"Controls whether the editor should remove adjacent closing quotes or brackets when deleting.",
			"Type over closing quotes or brackets only if they were automatically inserted.",
			"Controls whether the editor should type over closing quotes or brackets.",
			"Use language configurations to determine when to autoclose quotes.",
			"Autoclose quotes only when the cursor is to the left of whitespace.",
			"Controls whether the editor should automatically close quotes after the user adds an opening quote.",
			"The editor will not insert indentation automatically.",
			"The editor will keep the current line's indentation.",
			"The editor will keep the current line's indentation and honor language defined brackets.",
			"The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
			"The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.",
			"Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
			"Controls whether the editor should automatically auto-indent the pasted content.",
			"Controls whether the editor should automatically auto-indent the pasted content when pasted within a string. This takes effect when autoIndentOnPaste is true.",
			"Use language configurations to determine when to automatically surround selections.",
			"Surround with quotes but not brackets.",
			"Surround with brackets but not quotes.",
			"Controls whether the editor should automatically surround selections when typing quotes or brackets.",
			"Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.",
			"Controls whether the editor shows CodeLens.",
			"Controls the font family for CodeLens.",
			"Controls the font size in pixels for CodeLens. When set to 0, 90% of `#editor.fontSize#` is used.",
			"Controls whether the editor should render the inline color decorators and color picker.",
			"Make the color picker appear both on click and hover of the color decorator",
			"Make the color picker appear on hover of the color decorator",
			"Make the color picker appear on click of the color decorator",
			"Controls the condition to make a color picker appear from a color decorator.",
			"Controls the max number of color decorators that can be rendered in an editor at once.",
			"Enable that the selection with the mouse and keys is doing column selection.",
			"Controls whether syntax highlighting should be copied into the clipboard.",
			"Control the cursor animation style.",
			"Smooth caret animation is disabled.",
			"Smooth caret animation is enabled only when the user moves the cursor with an explicit gesture.",
			"Smooth caret animation is always enabled.",
			"Controls whether the smooth caret animation should be enabled.",
			"Controls the cursor style in insert input mode.",
			"Controls the cursor style in overtype input mode.",
			"Controls the minimal number of visible leading lines (minimum 0) and trailing lines (minimum 1) surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.",
			"`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
			"`cursorSurroundingLines` is enforced always.",
			"Controls when `#editor.cursorSurroundingLines#` should be enforced.",
			"Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
			"Controls the height of the cursor when `#editor.cursorStyle#` is set to `line`. Cursor's max height depends on line height.",
			"Controls whether the editor should allow moving selections via drag and drop.",
			"Sets whether the EditContext API should be used instead of the text area to power input in the editor.",
			"Whether to render rich screen reader content when the `#editor.editContext#` setting is enabled.",
			"Use regular DOM-based rendering.",
			"Use GPU acceleration.",
			"Controls whether to use the experimental GPU acceleration to render the editor.",
			"Use a new rendering method with svgs.",
			"Use a new rendering method with font characters.",
			"Use the stable rendering method.",
			"Controls whether whitespace is rendered with a new, experimental method.",
			"Scrolling speed multiplier when pressing `Alt`.",
			"Controls whether the editor has code folding enabled.",
			"Use a language-specific folding strategy if available, else the indentation-based one.",
			"Use the indentation-based folding strategy.",
			"Controls the strategy for computing folding ranges.",
			"Controls whether the editor should highlight folded ranges.",
			"Controls whether the editor automatically collapses import ranges.",
			"The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.",
			"Controls whether clicking on the empty content after a folded line will unfold the line.",
			"Controls the font family.",
			"Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
			"Controls whether the editor should automatically format the line after typing.",
			"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
			"Controls whether the cursor should be hidden in the overview ruler.",
			"Make scrolling inertial - mostly useful with touchpad on linux.",
			"Controls the letter spacing in pixels.",
			"Controls whether the editor has linked editing enabled. Depending on the language, related symbols such as HTML tags, are updated while editing.",
			"Controls whether the editor should detect links and make them clickable.",
			"Highlight matching brackets.",
			"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
			"Zoom the font of the editor when using mouse wheel and holding `Cmd`.",
			"Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
			"Merge multiple cursors when they are overlapping.",
			"Maps to `Control` on Windows and Linux and to `Command` on macOS.",
			"Maps to `Alt` on Windows and Linux and to `Option` on macOS.",
			"The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the [multicursor modifier](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
			"Each cursor pastes a single line of the text.",
			"Each cursor pastes the full text.",
			"Controls pasting when the line count of the pasted text matches the cursor count.",
			"Controls the max number of cursors that can be in an active editor at once.",
			"Does not highlight occurrences.",
			"Highlights occurrences only in the current file.",
			"Experimental: Highlights occurrences across all valid open files.",
			"Controls whether occurrences should be highlighted across open files.",
			"Controls the delay in milliseconds after which occurrences are highlighted.",
			"Controls whether pasting should overtype.",
			"Controls whether a border should be drawn around the overview ruler.",
			"Focus the tree when opening peek",
			"Focus the editor when opening peek",
			"Controls whether to focus the inline editor or the tree in the peek widget.",
			"Controls whether the Go to Definition mouse gesture always opens the peek widget.",
			"Controls the delay in milliseconds after which quick suggestions will show up.",
			"Controls whether the editor auto renames on type.",
			"Deprecated, use `#editor.linkedEditing#` instead.",
			"Controls whether the editor should render control characters.",
			"Render last line number when the file ends with a newline.",
			"Highlights both the gutter and the current line.",
			"Controls how the editor should render the current line highlight.",
			"Controls if the editor should render the current line highlight only when the editor is focused.",
			"Render whitespace characters except for single spaces between words.",
			"Render whitespace characters only on selected text.",
			"Render only trailing whitespace characters.",
			"Controls how the editor should render whitespace characters.",
			"Controls whether selections should have rounded corners.",
			"Controls the number of extra characters beyond which the editor will scroll horizontally.",
			"Controls whether the editor will scroll beyond the last line.",
			"Controls whether the editor will scroll when the middle button is pressed.",
			"Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
			"Controls whether the Linux primary clipboard should be supported.",
			"Controls whether the editor should highlight matches similar to the selection.",
			"Controls how many characters can be in the selection before similiar matches are not highlighted. Set to zero for unlimited.",
			"Controls whether the editor should highlight selection matches that span multiple lines.",
			"Always show the folding controls.",
			"Never show the folding controls and reduce the gutter size.",
			"Only show the folding controls when the mouse is over the gutter.",
			"Controls when the folding controls on the gutter are shown.",
			"Controls fading out of unused code.",
			"Controls strikethrough deprecated variables.",
			"Show snippet suggestions on top of other suggestions.",
			"Show snippet suggestions below other suggestions.",
			"Show snippets suggestions with other suggestions.",
			"Do not show snippet suggestions.",
			"Controls whether snippets are shown with other suggestions and how they are sorted.",
			"Controls whether the editor will scroll using an animation.",
			"Controls whether the accessibility hint should be provided to screen reader users when an inline completion is shown.",
			"Font size for the suggest widget. When set to {0}, the value of {1} is used.",
			"Line height for the suggest widget. When set to {0}, the value of {1} is used. The minimum value is 8.",
			"Controls whether suggestions should automatically show up when typing trigger characters.",
			"Always select the first suggestion.",
			"Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
			"Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.",
			"Controls how suggestions are pre-selected when showing the suggest list.",
			"Tab complete will insert the best matching suggestion when pressing tab.",
			"Disable tab completions.",
			"Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.",
			"Enables tab completions.",
			"Controls whether the editor will also delete the next line's indentation whitespace when deleting a newline.",
			"Unusual line terminators are automatically removed.",
			"Unusual line terminators are ignored.",
			"Unusual line terminators prompt to be removed.",
			"Remove unusual line terminators that might cause problems.",
			"Spaces and tabs are inserted and deleted in alignment with tab stops.",
			"Use the default line break rule.",
			"Word breaks should not be used for Chinese/Japanese/Korean (CJK) text. Non-CJK text behavior is the same as for normal.",
			"Controls the word break rules used for Chinese/Japanese/Korean (CJK) text.",
			"Characters that will be used as word separators when doing word related navigations or operations.",
			"Lines will never wrap.",
			"Lines will wrap at the viewport width.",
			"Lines will wrap at `#editor.wordWrapColumn#`.",
			"Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.",
			"Controls how lines should wrap.",
			"Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
			"Controls whether literal `\\n` shall trigger a wordWrap when `#editor.wordWrap#` is enabled.\n\nFor example:\n```c\nchar* str=\"hello\\nworld\"\n```\nwill be displayed as\n```c\nchar* str=\"hello\\n\n           world\"\n```",
			"Show default color decorators only when no extension provides colors decorators.",
			"Always show default color decorators.",
			"Never show default color decorators.",
			"Controls whether inline color decorations should be shown using the default document color provider.",
			"Controls whether the editor receives tabs or defers them to the workbench for navigation."
		],
		"vs/editor/common/core/editorColorRegistry": [
			"Background color for the highlight of line at the cursor position.",
			"Background color for the border around the line at the cursor position.",
			"Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.",
			"Background color of the border around highlighted ranges.",
			"Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.",
			"Background color of the border around highlighted symbols.",
			"Color of the editor cursor.",
			"The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.",
			"Color of the primary editor cursor when multiple cursors are present.",
			"The background color of the primary editor cursor when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.",
			"Color of secondary editor cursors when multiple cursors are present.",
			"The background color of secondary editor cursors when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.",
			"Color of whitespace characters in the editor.",
			"Color of editor line numbers.",
			"Color of the editor indentation guides.",
			"'editorIndentGuide.background' is deprecated. Use 'editorIndentGuide.background1' instead.",
			"Color of the active editor indentation guides.",
			"'editorIndentGuide.activeBackground' is deprecated. Use 'editorIndentGuide.activeBackground1' instead.",
			"Color of the editor indentation guides (1).",
			"Color of the editor indentation guides (2).",
			"Color of the editor indentation guides (3).",
			"Color of the editor indentation guides (4).",
			"Color of the editor indentation guides (5).",
			"Color of the editor indentation guides (6).",
			"Color of the active editor indentation guides (1).",
			"Color of the active editor indentation guides (2).",
			"Color of the active editor indentation guides (3).",
			"Color of the active editor indentation guides (4).",
			"Color of the active editor indentation guides (5).",
			"Color of the active editor indentation guides (6).",
			"Color of editor active line number",
			"Id is deprecated. Use 'editorLineNumber.activeForeground' instead.",
			"Color of editor active line number",
			"Color of the final editor line when editor.renderFinalNewline is set to dimmed.",
			"Color of the editor rulers.",
			"Foreground color of editor CodeLens",
			"Background color behind matching brackets",
			"Color for matching brackets boxes",
			"Color of the overview ruler border.",
			"Background color of the editor overview ruler.",
			"Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.",
			"Border color of unnecessary (unused) source code in the editor.",
			"Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  'editorUnnecessaryCode.border' theme color to underline unnecessary code instead of fading it out.",
			"Border color of ghost text in the editor.",
			"Foreground color of the ghost text in the editor.",
			"Background color of the ghost text in the editor.",
			"Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.",
			"Overview ruler marker color for errors.",
			"Overview ruler marker color for warnings.",
			"Overview ruler marker color for infos.",
			"Foreground color of brackets (1). Requires enabling bracket pair colorization.",
			"Foreground color of brackets (2). Requires enabling bracket pair colorization.",
			"Foreground color of brackets (3). Requires enabling bracket pair colorization.",
			"Foreground color of brackets (4). Requires enabling bracket pair colorization.",
			"Foreground color of brackets (5). Requires enabling bracket pair colorization.",
			"Foreground color of brackets (6). Requires enabling bracket pair colorization.",
			"Foreground color of unexpected brackets.",
			"Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.",
			"Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.",
			"Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.",
			"Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.",
			"Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.",
			"Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.",
			"Background color of active bracket pair guides (1). Requires enabling bracket pair guides.",
			"Background color of active bracket pair guides (2). Requires enabling bracket pair guides.",
			"Background color of active bracket pair guides (3). Requires enabling bracket pair guides.",
			"Background color of active bracket pair guides (4). Requires enabling bracket pair guides.",
			"Background color of active bracket pair guides (5). Requires enabling bracket pair guides.",
			"Background color of active bracket pair guides (6). Requires enabling bracket pair guides.",
			"Border color used to highlight unicode characters.",
			"Background color used to highlight unicode characters."
		],
		"vs/editor/common/editorContextKeys": [
			"Whether the editor text has focus (cursor is blinking)",
			"Whether the editor or an editor widget has focus (e.g. focus is in the find widget)",
			"Whether an editor or a rich text input has focus (cursor is blinking)",
			"Whether the editor is read-only",
			"Whether the context is a diff editor",
			"Whether the context is an embedded diff editor",
			"Whether all files in multi diff editor are collapsed",
			"Whether the diff editor has changes",
			"Whether a moved code block is selected for comparison",
			"Whether the accessible diff viewer is visible",
			"Whether the diff editor render side by side inline breakpoint is reached",
			"Whether inline mode is active",
			"Whether modified is writable in the diff editor",
			"Whether modified is writable in the diff editor",
			"The uri of the original document",
			"The uri of the modified document",
			"Whether `editor.columnSelection` is enabled",
			"Whether the editor has text selected",
			"Whether the editor has multiple selections",
			"Whether `Tab` will move focus out of the editor",
			"Whether the editor hover is visible",
			"Whether the editor hover is focused",
			"Whether the sticky scroll is focused",
			"Whether the sticky scroll is visible",
			"Whether the standalone color picker is visible",
			"Whether the standalone color picker is focused",
			"Whether the editor is part of a larger editor (e.g. notebooks)",
			"The language identifier of the editor",
			"Whether the editor has a completion item provider",
			"Whether the editor has a code actions provider",
			"Whether the editor has a code lens provider",
			"Whether the editor has a definition provider",
			"Whether the editor has a declaration provider",
			"Whether the editor has an implementation provider",
			"Whether the editor has a type definition provider",
			"Whether the editor has a hover provider",
			"Whether the editor has a document highlight provider",
			"Whether the editor has a document symbol provider",
			"Whether the editor has a reference provider",
			"Whether the editor has a rename provider",
			"Whether the editor has a signature help provider",
			"Whether the editor has an inline hints provider",
			"Whether the editor has a document formatting provider",
			"Whether the editor has a document selection formatting provider",
			"Whether the editor has multiple document formatting providers",
			"Whether the editor has multiple document selection formatting providers"
		],
		"vs/editor/common/languages": [
			"Method",
			"Function",
			"Constructor",
			"Field",
			"Variable",
			"Class",
			"Struct",
			"Interface",
			"Module",
			"Property",
			"Event",
			"Operator",
			"Unit",
			"Value",
			"Constant",
			"Enum",
			"Enum Member",
			"Keyword",
			"Text",
			"Color",
			"File",
			"Reference",
			"Custom Color",
			"Folder",
			"Type Parameter",
			"User",
			"Issue",
			"Tool",
			"Snippet",
			"array",
			"boolean",
			"class",
			"constant",
			"constructor",
			"enumeration",
			"enumeration member",
			"event",
			"field",
			"file",
			"function",
			"interface",
			"key",
			"method",
			"module",
			"namespace",
			"null",
			"number",
			"object",
			"operator",
			"package",
			"property",
			"string",
			"struct",
			"type parameter",
			"variable",
			"{0} ({1})"
		],
		"vs/editor/common/languages/modesRegistry": [
			"Plain Text"
		],
		"vs/editor/common/model/editStack": [
			"Typing"
		],
		"vs/editor/common/standaloneStrings": [
			"Developer: Inspect Tokens",
			"Go to Line/Column...",
			"Show all Quick Access Providers",
			"Command Palette",
			"Show And Run Commands",
			"Go to Symbol...",
			"Go to Symbol by Category...",
			"Editor content",
			"Toggle High Contrast Theme",
			"Made {0} edits in {1} files"
		],
		"vs/editor/common/viewLayout/viewLineRenderer": [
			"Show more ({0})",
			"{0} chars"
		],
		"vs/editor/contrib/anchorSelect/browser/anchorSelect": [
			"Selection Anchor",
			"Anchor set at {0}:{1}",
			"Set Selection Anchor",
			"Go to Selection Anchor",
			"Select from Anchor to Cursor",
			"Cancel Selection Anchor"
		],
		"vs/editor/contrib/bracketMatching/browser/bracketMatching": [
			"Overview ruler marker color for matching brackets.",
			"Go to &&Bracket",
			"Go to Bracket",
			"Select to Bracket",
			"Select the text inside and including the brackets or curly braces",
			"Remove Brackets"
		],
		"vs/editor/contrib/caretOperations/browser/caretOperations": [
			"Move Selected Text Left",
			"Move Selected Text Right"
		],
		"vs/editor/contrib/caretOperations/browser/transpose": [
			"Transpose Letters"
		],
		"vs/editor/contrib/clipboard/browser/clipboard": [
			"Cu&&t",
			"Cut",
			"Cut",
			"Cut",
			"&&Copy",
			"Copy",
			"Copy",
			"Copy",
			"&&Paste",
			"Paste",
			"Paste",
			"Paste",
			"Copy As",
			"Copy As",
			"Share",
			"Share",
			"Copy with Syntax Highlighting"
		],
		"vs/editor/contrib/codeAction/browser/codeAction": [
			"An unknown error occurred while applying the code action"
		],
		"vs/editor/contrib/codeAction/browser/codeActionCommands": [
			"Kind of the code action to run.",
			"Controls when the returned actions are applied.",
			"Always apply the first returned code action.",
			"Apply the first returned code action if it is the only one.",
			"Do not apply the returned code actions.",
			"Controls if only preferred code actions should be returned.",
			"No code actions available",
			"No preferred code actions for '{0}' available",
			"No code actions for '{0}' available",
			"No preferred code actions available",
			"No code actions available",
			"No preferred refactorings for '{0}' available",
			"No refactorings for '{0}' available",
			"No preferred refactorings available",
			"No refactorings available",
			"No preferred source actions for '{0}' available",
			"No source actions for '{0}' available",
			"No preferred source actions available",
			"No source actions available",
			"No organize imports action available",
			"No fix all action available",
			"No auto fixes available",
			"Quick Fix...",
			"Refactor...",
			"Source Action...",
			"Organize Imports",
			"Organize imports in the current file. Also called 'Optimize Imports' by some tools",
			"Fix All",
			"Auto Fix..."
		],
		"vs/editor/contrib/codeAction/browser/codeActionContributions": [
			"Enable/disable showing group headers in the Code Action menu.",
			"Enable/disable showing nearest Quick Fix within a line when not currently on a diagnostic.",
			"Enable triggering {0} when {1} is set to {2}. Code Actions must be set to {3} to be triggered for window and focus changes."
		],
		"vs/editor/contrib/codeAction/browser/codeActionController": [
			"Context: {0} at line {1} and column {2}.",
			"Hide Disabled",
			"Show Disabled"
		],
		"vs/editor/contrib/codeAction/browser/codeActionMenu": [
			"More Actions...",
			"Quick Fix",
			"Extract",
			"Inline",
			"Rewrite",
			"Move",
			"Surround With",
			"Source Action"
		],
		"vs/editor/contrib/codeAction/browser/lightBulbWidget": [
			"Icon which spawns code actions menu from the gutter when there is no space in the editor.",
			"Icon which spawns code actions menu from the gutter when there is no space in the editor and a quick fix is available.",
			"Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix is available.",
			"Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix and a quick fix is available.",
			"Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix and a quick fix is available.",
			"Run: {0}",
			"Show Code Actions. Preferred Quick Fix Available ({0})",
			"Show Code Actions ({0})",
			"Show Code Actions"
		],
		"vs/editor/contrib/codelens/browser/codelensController": [
			"Select a command",
			"Show CodeLens Commands for Current Line"
		],
		"vs/editor/contrib/colorPicker/browser/colorPickerParts/colorPickerCloseButton": [
			"Icon to close the color picker"
		],
		"vs/editor/contrib/colorPicker/browser/colorPickerParts/colorPickerHeader": [
			"Click to toggle color options (rgb/hsl/hex)"
		],
		"vs/editor/contrib/colorPicker/browser/standaloneColorPicker/standaloneColorPickerActions": [
			"&&Show or Focus Standalone Color Picker",
			"Show or Focus Standalone Color Picker",
			"Show or focus a standalone color picker which uses the default color provider. It displays hex/rgb/hsl colors.",
			"Hide the Color Picker",
			"Hide the standalone color picker.",
			"Insert Color with Standalone Color Picker",
			"Insert hex/rgb/hsl colors with the focused standalone color picker."
		],
		"vs/editor/contrib/comment/browser/comment": [
			"&&Toggle Line Comment",
			"Toggle &&Block Comment",
			"Toggle Line Comment",
			"Add Line Comment",
			"Remove Line Comment",
			"Toggle Block Comment"
		],
		"vs/editor/contrib/contextmenu/browser/contextmenu": [
			"Minimap",
			"Render Characters",
			"Vertical size",
			"Proportional",
			"Fill",
			"Fit",
			"Slider",
			"Mouse Over",
			"Always",
			"Show Editor Context Menu"
		],
		"vs/editor/contrib/cursorUndo/browser/cursorUndo": [
			"Cursor Undo",
			"Cursor Redo"
		],
		"vs/editor/contrib/dropOrPasteInto/browser/copyPasteContribution": [
			"The kind of the paste edit to try pasting with.\nIf there are multiple edits for this kind, the editor will show a picker. If there are no edits of this kind, the editor will show an error message.",
			"List of preferred paste edit kind to try applying.\nThe first edit matching the preferences will be applied.",
			"Paste As...",
			"Paste as Text"
		],
		"vs/editor/contrib/dropOrPasteInto/browser/copyPasteController": [
			"Whether the paste widget is showing",
			"Show paste options...",
			"empty",
			"No paste edits for '{0}' found",
			"Resolving paste edit for '{0}'. Click to cancel",
			"Running paste handlers. Click to cancel and do basic paste",
			"Configure default paste action",
			"Select Paste Action",
			"Running paste handlers"
		],
		"vs/editor/contrib/dropOrPasteInto/browser/defaultProviders": [
			"Insert Plain Text",
			"Insert Uris",
			"Insert Uri",
			"Insert Paths",
			"Insert Path",
			"Insert Relative Paths",
			"Insert Relative Path",
			"Insert HTML"
		],
		"vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController": [
			"Whether the drop widget is showing",
			"Show drop options...",
			"Running drop handlers. Click to cancel"
		],
		"vs/editor/contrib/dropOrPasteInto/browser/postEditWidget": [
			"Error resolving edit '{0}':\n{1}",
			"Error applying edit '{0}':\n{1}"
		],
		"vs/editor/contrib/editorState/browser/keybindingCancellation": [
			"Whether the editor runs a cancellable operation, e.g. like 'Peek References'"
		],
		"vs/editor/contrib/find/browser/findController": [
			"The file is too large to perform a replace all operation.",
			"&&Find",
			"No matches. Try searching for something else.",
			"Type a number to go to a specific match (between 1 and {0})",
			"Please type a number between 1 and {0}",
			"Please type a number between 1 and {0}",
			"&&Replace",
			"Find",
			"Find with Arguments",
			"Find with Selection",
			"Find Next",
			"Find Previous",
			"Go to Match...",
			"Find Next Selection",
			"Find Previous Selection",
			"Replace"
		],
		"vs/editor/contrib/find/browser/findWidget": [
			"Icon to indicate that the editor find widget is collapsed.",
			"Icon to indicate that the editor find widget is expanded.",
			"Icon for 'Find in Selection' in the editor find widget.",
			"Icon for 'Replace' in the editor find widget.",
			"Icon for 'Replace All' in the editor find widget.",
			"Icon for 'Find Previous' in the editor find widget.",
			"Icon for 'Find Next' in the editor find widget.",
			"Find / Replace",
			"Find",
			"Find",
			"Previous Match",
			"Next Match",
			"Find in Selection",
			"Close",
			"Replace",
			"Replace",
			"Replace",
			"Replace All",
			"Toggle Replace",
			"Only the first {0} results are highlighted, but all find operations work on the entire text.",
			"{0} of {1}",
			"No results",
			"{0} found",
			"{0} found for '{1}'",
			"{0} found for '{1}', at {2}",
			"{0} found for '{1}'"
		],
		"vs/editor/contrib/folding/browser/folding": [
			"Unfold",
			"Unfold Recursively",
			"Fold",
			"Toggle Fold",
			"Fold Recursively",
			"Toggle Fold Recursively",
			"Fold All Block Comments",
			"Fold All Regions",
			"Unfold All Regions",
			"Fold All Except Selected",
			"Unfold All Except Selected",
			"Fold All",
			"Unfold All",
			"Go to Parent Fold",
			"Go to Previous Folding Range",
			"Go to Next Folding Range",
			"Create Folding Range from Selection",
			"Remove Manual Folding Ranges",
			"Toggle Import Fold",
			"Fold Level {0}"
		],
		"vs/editor/contrib/folding/browser/foldingDecorations": [
			"Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations.",
			"Color of the collapsed text after the first line of a folded range.",
			"Color of the folding control in the editor gutter.",
			"Icon for expanded ranges in the editor glyph margin.",
			"Icon for collapsed ranges in the editor glyph margin.",
			"Icon for manually collapsed ranges in the editor glyph margin.",
			"Icon for manually expanded ranges in the editor glyph margin.",
			"Click to expand the range.",
			"Click to collapse the range."
		],
		"vs/editor/contrib/fontZoom/browser/fontZoom": [
			"Increase Editor Font Size",
			"Decrease Editor Font Size",
			"Reset Editor Font Size"
		],
		"vs/editor/contrib/format/browser/formatActions": [
			"Format Document",
			"Format Selection"
		],
		"vs/editor/contrib/gotoError/browser/gotoError": [
			"Icon for goto next marker.",
			"Icon for goto previous marker.",
			"Next &&Problem",
			"Previous &&Problem",
			"Go to Next Problem (Error, Warning, Info)",
			"Go to Previous Problem (Error, Warning, Info)",
			"Go to Next Problem in Files (Error, Warning, Info)",
			"Go to Previous Problem in Files (Error, Warning, Info)"
		],
		"vs/editor/contrib/gotoError/browser/gotoErrorWidget": [
			"Error",
			"Warning",
			"Info",
			"Hint",
			"{0} at {1}. ",
			"{0} of {1} problems",
			"{0} of {1} problem",
			"Editor marker navigation widget error color.",
			"Editor marker navigation widget error heading background.",
			"Editor marker navigation widget warning color.",
			"Editor marker navigation widget warning heading background.",
			"Editor marker navigation widget info color.",
			"Editor marker navigation widget info heading background.",
			"Editor marker navigation widget background."
		],
		"vs/editor/contrib/gotoSymbol/browser/goToCommands": [
			"Peek",
			"Definitions",
			"No definition found for '{0}'",
			"No definition found",
			"Go to &&Definition",
			"Declarations",
			"No declaration found for '{0}'",
			"No declaration found",
			"Go to &&Declaration",
			"No declaration found for '{0}'",
			"No declaration found",
			"Type Definitions",
			"No type definition found for '{0}'",
			"No type definition found",
			"Go to &&Type Definition",
			"Implementations",
			"No implementation found for '{0}'",
			"No implementation found",
			"Go to &&Implementations",
			"No references found for '{0}'",
			"No references found",
			"Go to &&References",
			"References",
			"References",
			"Locations",
			"No results for '{0}'",
			"References",
			"Go to Definition",
			"Open Definition to the Side",
			"Peek Definition",
			"Go to Declaration",
			"Peek Declaration",
			"Go to Type Definition",
			"Peek Type Definition",
			"Go to Implementations",
			"Peek Implementations",
			"Go to References",
			"Peek References",
			"Go to Any Symbol"
		],
		"vs/editor/contrib/gotoSymbol/browser/link/goToDefinitionAtPosition": [
			"Click to show {0} definitions."
		],
		"vs/editor/contrib/gotoSymbol/browser/peek/referencesController": [
			"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'",
			"Loading...",
			"{0} ({1})"
		],
		"vs/editor/contrib/gotoSymbol/browser/peek/referencesTree": [
			"{0} references",
			"{0} reference",
			"References"
		],
		"vs/editor/contrib/gotoSymbol/browser/peek/referencesWidget": [
			"no preview available",
			"No results",
			"References"
		],
		"vs/editor/contrib/gotoSymbol/browser/referencesModel": [
			"in {0} on line {1} at column {2}",
			"{0} in {1} on line {2} at column {3}",
			"1 symbol in {0}, full path {1}",
			"{0} symbols in {1}, full path {2}",
			"No results found",
			"Found 1 symbol in {0}",
			"Found {0} symbols in {1}",
			"Found {0} symbols in {1} files"
		],
		"vs/editor/contrib/gotoSymbol/browser/symbolNavigation": [
			"Whether there are symbol locations that can be navigated via keyboard-only.",
			"Symbol {0} of {1}, {2} for next",
			"Symbol {0} of {1}"
		],
		"vs/editor/contrib/gpu/browser/gpuActions": [
			"Log Texture Atlas Stats",
			"Save Texture Atlas",
			"Draw Glyph",
			"Developer: Debug Editor GPU Renderer"
		],
		"vs/editor/contrib/hover/browser/hoverActionIds": [
			"Increase Hover Verbosity Level",
			"Decrease Hover Verbosity Level"
		],
		"vs/editor/contrib/hover/browser/hoverActions": [
			"The hover will not automatically take focus.",
			"The hover will take focus only if it is already visible.",
			"The hover will automatically take focus when it appears.",
			"Show or Focus Hover",
			"Show or focus the editor hover which shows documentation, references, and other content for a symbol at the current cursor position.",
			"Show Definition Preview Hover",
			"Show the definition preview hover in the editor.",
			"Hide Hover",
			"Scroll Up Hover",
			"Scroll up the editor hover.",
			"Scroll Down Hover",
			"Scroll down the editor hover.",
			"Scroll Left Hover",
			"Scroll left the editor hover.",
			"Scroll Right Hover",
			"Scroll right the editor hover.",
			"Page Up Hover",
			"Page up the editor hover.",
			"Page Down Hover",
			"Page down the editor hover.",
			"Go To Top Hover",
			"Go to the top of the editor hover.",
			"Go To Bottom Hover",
			"Go to the bottom of the editor hover."
		],
		"vs/editor/contrib/hover/browser/markdownHoverParticipant": [
			"Icon for increaseing hover verbosity.",
			"Icon for decreasing hover verbosity.",
			"Loading...",
			"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.",
			"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.",
			"Increase Hover Verbosity ({0})",
			"Increase Hover Verbosity",
			"Decrease Hover Verbosity ({0})",
			"Decrease Hover Verbosity"
		],
		"vs/editor/contrib/hover/browser/markerHoverParticipant": [
			"View Problem",
			"No quick fixes available",
			"Checking for quick fixes...",
			"No quick fixes available",
			"Quick Fix..."
		],
		"vs/editor/contrib/indentation/browser/indentation": [
			"Configured Tab Size",
			"Default Tab Size",
			"Current Tab Size",
			"Select Tab Size for Current File",
			"Convert Indentation to Spaces",
			"Convert the tab indentation to spaces.",
			"Convert Indentation to Tabs",
			"Convert the spaces indentation to tabs.",
			"Indent Using Tabs",
			"Use indentation with tabs.",
			"Indent Using Spaces",
			"Use indentation with spaces.",
			"Change Tab Display Size",
			"Change the space size equivalent of the tab.",
			"Detect Indentation from Content",
			"Detect the indentation from content.",
			"Reindent Lines",
			"Reindent the lines of the editor.",
			"Reindent Selected Lines",
			"Reindent the selected lines of the editor."
		],
		"vs/editor/contrib/inlayHints/browser/inlayHintsHover": [
			"Double-click to insert",
			"cmd + click",
			"ctrl + click",
			"option + click",
			"alt + click",
			"Go to Definition ({0}), right click for more",
			"Go to Definition ({0})",
			"Execute Command"
		],
		"vs/editor/contrib/inlineCompletions/browser/controller/commands": [
			"No inline edit is available.",
			"Accept Word",
			"Accept Line",
			"Accept",
			"Accept",
			"Jump",
			"Reject",
			"Always Show Toolbar",
			"Developer: Extract Inline Suggest State",
			"Show Next Inline Suggestion",
			"Show Previous Inline Suggestion",
			"Trigger Inline Suggestion",
			"Trigger Next Edit Suggestion",
			"Accept Next Word Of Inline Suggestion",
			"Accept Next Line Of Inline Suggestion",
			"Accept Inline Suggestion",
			"Jump to next inline edit",
			"Hide Inline Suggestion",
			"Toggle Inline Suggestions Show Collapsed"
		],
		"vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionContextKeys": [
			"Whether an inline suggestion is visible",
			"Whether the inline suggestion starts with whitespace",
			"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab",
			"Whether suggestions should be suppressed for the current suggestion",
			"Whether the cursor is at ghost text",
			"Whether the cursor is in indentation",
			"Whether the editor has a selection",
			"Whether the cursor is at an inline edit",
			"Whether an inline edit is visible",
			"Whether tab should jump to an inline edit.",
			"Whether tab should accept the inline edit.",
			"Whether the current code editor is showing an inline edits preview"
		],
		"vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController": [
			"Inspect this in the accessible view ({0})"
		],
		"vs/editor/contrib/inlineCompletions/browser/hintsWidget/hoverParticipant": [
			"Suggestion:"
		],
		"vs/editor/contrib/inlineCompletions/browser/hintsWidget/inlineCompletionsHintsWidget": [
			"Icon for show next parameter hint.",
			"Icon for show previous parameter hint.",
			"{0} ({1})",
			"Previous",
			"Next"
		],
		"vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/components/gutterIndicatorMenu": [
			"Go To",
			"Accept",
			"Reject",
			"Show Expanded",
			"Show Collapsed",
			"Settings"
		],
		"vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsModel": [
			"Inline Edit"
		],
		"vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/theme": [
			"Background color for the original text in inline edits.",
			"Background color for the modified text in inline edits.",
			"Background color for the changed lines in the original text of inline edits.",
			"Overlay color for the changed text in the original text of inline edits.",
			"Background color for the changed lines in the modified text of inline edits.",
			"Overlay color for the changed text in the modified text of inline edits.",
			"Foreground color for the primary inline edit gutter indicator.",
			"Border color for the primary inline edit gutter indicator.",
			"Background color for the primary inline edit gutter indicator.",
			"Foreground color for the secondary inline edit gutter indicator.",
			"Border color for the secondary inline edit gutter indicator.",
			"Background color for the secondary inline edit gutter indicator.",
			"Foreground color for the successful inline edit gutter indicator.",
			"Border color for the successful inline edit gutter indicator.",
			"Background color for the successful inline edit gutter indicator.",
			"Background color for the inline edit gutter indicator.",
			"Border color for the original text in inline edits.",
			"Border color for the modified text in inline edits.",
			"Modified border color for the inline edits widget when tab will accept it.",
			"Original border color for the inline edits widget over the original text when tab will accept it."
		],
		"vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace": [
			"Replace with Previous Value",
			"Replace with Next Value"
		],
		"vs/editor/contrib/insertFinalNewLine/browser/insertFinalNewLine": [
			"Insert Final New Line"
		],
		"vs/editor/contrib/lineSelection/browser/lineSelection": [
			"Expand Line Selection"
		],
		"vs/editor/contrib/linesOperations/browser/linesOperations": [
			"&&Copy Line Up",
			"Co&&py Line Down",
			"&&Duplicate Selection",
			"Mo&&ve Line Up",
			"Move &&Line Down",
			"Copy Line Up",
			"Copy Line Down",
			"Duplicate Selection",
			"Move Line Up",
			"Move Line Down",
			"Sort Lines Ascending",
			"Sort Lines Descending",
			"Delete Duplicate Lines",
			"Reverse lines",
			"Trim Trailing Whitespace",
			"Delete Line",
			"Indent Line",
			"Outdent Line",
			"Insert Line Above",
			"Insert Line Below",
			"Delete All Left",
			"Delete All Right",
			"Join Lines",
			"Transpose Characters around the Cursor",
			"Transform to Uppercase",
			"Transform to Lowercase",
			"Transform to Title Case",
			"Transform to Snake Case",
			"Transform to Camel Case",
			"Transform to Pascal Case",
			"Transform to Kebab Case"
		],
		"vs/editor/contrib/linkedEditing/browser/linkedEditing": [
			"Background color when the editor auto renames on type.",
			"Start Linked Editing"
		],
		"vs/editor/contrib/links/browser/links": [
			"Failed to open this link because it is not well-formed: {0}",
			"Failed to open this link because its target is missing.",
			"Execute command",
			"Follow link",
			"cmd + click",
			"ctrl + click",
			"option + click",
			"alt + click",
			"Execute command {0}",
			"Open Link"
		],
		"vs/editor/contrib/message/browser/messageController": [
			"Whether the editor is currently showing an inline message"
		],
		"vs/editor/contrib/multicursor/browser/multicursor": [
			"Cursor added: {0}",
			"Cursors added: {0}",
			"&&Add Cursor Above",
			"A&&dd Cursor Below",
			"Add C&&ursors to Line Ends",
			"Add &&Next Occurrence",
			"Add P&&revious Occurrence",
			"Select All &&Occurrences",
			"Focuses the next cursor",
			"Focuses the previous cursor",
			"Add Cursor Above",
			"Add Cursor Below",
			"Add Cursors to Line Ends",
			"Add Cursors to Bottom",
			"Add Cursors to Top",
			"Add Selection to Next Find Match",
			"Add Selection to Previous Find Match",
			"Move Last Selection to Next Find Match",
			"Move Last Selection to Previous Find Match",
			"Select All Occurrences of Find Match",
			"Change All Occurrences",
			"Focus Next Cursor",
			"Focus Previous Cursor"
		],
		"vs/editor/contrib/parameterHints/browser/parameterHints": [
			"Trigger Parameter Hints"
		],
		"vs/editor/contrib/parameterHints/browser/parameterHintsWidget": [
			"Icon for show next parameter hint.",
			"Icon for show previous parameter hint.",
			"{0}, hint",
			"Foreground color of the active item in the parameter hint."
		],
		"vs/editor/contrib/peekView/browser/peekView": [
			"Whether the current code editor is embedded inside peek",
			"Close",
			"Background color of the peek view title area.",
			"Color of the peek view title.",
			"Color of the peek view title info.",
			"Color of the peek view borders and arrow.",
			"Background color of the peek view result list.",
			"Foreground color for line nodes in the peek view result list.",
			"Foreground color for file nodes in the peek view result list.",
			"Background color of the selected entry in the peek view result list.",
			"Foreground color of the selected entry in the peek view result list.",
			"Background color of the peek view editor.",
			"Background color of the gutter in the peek view editor.",
			"Background color of sticky scroll in the peek view editor.",
			"Background color of the gutter part of sticky scroll in the peek view editor.",
			"Match highlight color in the peek view result list.",
			"Match highlight color in the peek view editor.",
			"Match highlight border in the peek view editor."
		],
		"vs/editor/contrib/placeholderText/browser/placeholderText.contribution": [
			"Foreground color of the placeholder text in the editor."
		],
		"vs/editor/contrib/quickAccess/browser/gotoLineQuickAccess": [
			"Open a text editor first to go to a line.",
			"Go to line {0} and character {1}.",
			"Go to line {0}.",
			"Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.",
			"Current Line: {0}, Character: {1}. Type a line number to navigate to."
		],
		"vs/editor/contrib/quickAccess/browser/gotoSymbolQuickAccess": [
			"To go to a symbol, first open a text editor with symbol information.",
			"The active text editor does not provide symbol information.",
			"No matching editor symbols",
			"No editor symbols",
			"Open to the Side",
			"Open to the Bottom",
			"symbols ({0})",
			"properties ({0})",
			"methods ({0})",
			"functions ({0})",
			"constructors ({0})",
			"variables ({0})",
			"classes ({0})",
			"structs ({0})",
			"events ({0})",
			"operators ({0})",
			"interfaces ({0})",
			"namespaces ({0})",
			"packages ({0})",
			"type parameters ({0})",
			"modules ({0})",
			"properties ({0})",
			"enumerations ({0})",
			"enumeration members ({0})",
			"strings ({0})",
			"files ({0})",
			"arrays ({0})",
			"numbers ({0})",
			"booleans ({0})",
			"objects ({0})",
			"keys ({0})",
			"fields ({0})",
			"constants ({0})"
		],
		"vs/editor/contrib/readOnlyMessage/browser/contribution": [
			"Cannot edit in read-only input",
			"Cannot edit in read-only editor"
		],
		"vs/editor/contrib/rename/browser/rename": [
			"No result.",
			"An unknown error occurred while resolving rename location",
			"Renaming '{0}' to '{1}'",
			"Renaming {0} to {1}",
			"Successfully renamed '{0}' to '{1}'. Summary: {2}",
			"Rename failed to apply edits",
			"Rename failed to compute edits",
			"Enable/disable the ability to preview changes before renaming",
			"Rename Symbol",
			"Focus Next Rename Suggestion",
			"Focus Previous Rename Suggestion"
		],
		"vs/editor/contrib/rename/browser/renameWidget": [
			"Whether the rename input widget is visible",
			"Whether the rename input widget is focused",
			"{0} to Rename, {1} to Preview",
			"Received {0} rename suggestions",
			"Rename input. Type new name and press Enter to commit.",
			"Generate new name suggestions",
			"Cancel"
		],
		"vs/editor/contrib/smartSelect/browser/smartSelect": [
			"&&Expand Selection",
			"&&Shrink Selection",
			"Expand Selection",
			"Shrink Selection"
		],
		"vs/editor/contrib/snippet/browser/snippetController2": [
			"Whether the editor in current in snippet mode",
			"Whether there is a next tab stop when in snippet mode",
			"Whether there is a previous tab stop when in snippet mode",
			"Go to next placeholder..."
		],
		"vs/editor/contrib/snippet/browser/snippetVariables": [
			"Sunday",
			"Monday",
			"Tuesday",
			"Wednesday",
			"Thursday",
			"Friday",
			"Saturday",
			"Sun",
			"Mon",
			"Tue",
			"Wed",
			"Thu",
			"Fri",
			"Sat",
			"January",
			"February",
			"March",
			"April",
			"May",
			"June",
			"July",
			"August",
			"September",
			"October",
			"November",
			"December",
			"Jan",
			"Feb",
			"Mar",
			"Apr",
			"May",
			"Jun",
			"Jul",
			"Aug",
			"Sep",
			"Oct",
			"Nov",
			"Dec"
		],
		"vs/editor/contrib/stickyScroll/browser/stickyScrollActions": [
			"&&Toggle Editor Sticky Scroll",
			"Sticky Scroll",
			"&&Sticky Scroll",
			"&&Focus Editor Sticky Scroll",
			"Toggle Editor Sticky Scroll",
			"Toggle/enable the editor sticky scroll which shows the nested scopes at the top of the viewport",
			"Focus Editor Sticky Scroll",
			"Select the next editor sticky scroll line",
			"Select the previous sticky scroll line",
			"Go to the focused sticky scroll line",
			"Select Editor"
		],
		"vs/editor/contrib/suggest/browser/suggest": [
			"Whether any suggestion is focused",
			"Whether suggestion details are visible",
			"Whether there are multiple suggestions to pick from",
			"Whether inserting the current suggestion yields in a change or has everything already been typed",
			"Whether suggestions are inserted when pressing Enter",
			"Whether the current suggestion has insert and replace behaviour",
			"Whether the default behaviour is to insert or replace",
			"Whether the current suggestion supports to resolve further details"
		],
		"vs/editor/contrib/suggest/browser/suggestController": [
			"Accepting '{0}' made {1} additional edits",
			"Insert",
			"Insert",
			"Replace",
			"Replace",
			"Insert",
			"Show Less",
			"Show More",
			"Trigger Suggest",
			"Reset Suggest Widget Size"
		],
		"vs/editor/contrib/suggest/browser/suggestWidget": [
			"Background color of the suggest widget.",
			"Border color of the suggest widget.",
			"Foreground color of the suggest widget.",
			"Foreground color of the selected entry in the suggest widget.",
			"Icon foreground color of the selected entry in the suggest widget.",
			"Background color of the selected entry in the suggest widget.",
			"Color of the match highlights in the suggest widget.",
			"Color of the match highlights in the suggest widget when an item is focused.",
			"Foreground color of the suggest widget status.",
			"Loading...",
			"No suggestions.",
			"Suggest",
			"{0} {1}, {2}, {3}",
			"{0} {1}, {2}",
			"{0}, {1}, {2}",
			"{0}, {1}",
			"{0}, docs: {1}"
		],
		"vs/editor/contrib/suggest/browser/suggestWidgetDetails": [
			"Close",
			"Loading..."
		],
		"vs/editor/contrib/suggest/browser/suggestWidgetRenderer": [
			"Icon for more information in the suggest widget.",
			"Read More"
		],
		"vs/editor/contrib/suggest/browser/wordContextKey": [
			"A context key that is true when at the end of a word. Note that this is only defined when tab-completions are enabled"
		],
		"vs/editor/contrib/symbolIcons/browser/symbolIcons": [
			"The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget."
		],
		"vs/editor/contrib/toggleTabFocusMode/browser/toggleTabFocusMode": [
			"Pressing Tab will now move focus to the next focusable element",
			"Pressing Tab will now insert the tab character",
			"Toggle Tab Key Moves Focus",
			"Determines whether the tab key moves focus around the workbench or inserts the tab character in the current editor. This is also called tab trapping, tab navigation, or tab focus mode."
		],
		"vs/editor/contrib/tokenization/browser/tokenization": [
			"Developer: Force Retokenize"
		],
		"vs/editor/contrib/unicodeHighlighter/browser/bannerController": [
			"Close Banner"
		],
		"vs/editor/contrib/unicodeHighlighter/browser/unicodeHighlighter": [
			"Icon shown with a warning message in the extensions editor.",
			"This document contains many non-basic ASCII unicode characters",
			"This document contains many ambiguous unicode characters",
			"This document contains many invisible unicode characters",
			"Configure Unicode Highlight Options",
			"The character {0} could be confused with the ASCII character {1}, which is more common in source code.",
			"The character {0} could be confused with the character {1}, which is more common in source code.",
			"The character {0} is invisible.",
			"The character {0} is not a basic ASCII character.",
			"Adjust settings",
			"Disable Highlight In Comments",
			"Disable Highlight In Strings",
			"Disable Ambiguous Highlight",
			"Disable Invisible Highlight",
			"Disable Non ASCII Highlight",
			"Exclude {0} (invisible character) from being highlighted",
			"Exclude {0} from being highlighted",
			"Allow unicode characters that are more common in the language \"{0}\".",
			"Disable highlighting of characters in comments",
			"Disable highlighting of characters in strings",
			"Disable highlighting of ambiguous characters",
			"Disable highlighting of invisible characters",
			"Disable highlighting of non basic ASCII characters",
			"Show Exclude Options"
		],
		"vs/editor/contrib/unusualLineTerminators/browser/unusualLineTerminators": [
			"Unusual Line Terminators",
			"Detected unusual line terminators",
			"The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\n\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.",
			"&&Remove Unusual Line Terminators",
			"Ignore"
		],
		"vs/editor/contrib/wordHighlighter/browser/highlightDecorations": [
			"Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations.",
			"Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations.",
			"Background color of a textual occurrence for a symbol. The color must not be opaque so as not to hide underlying decorations.",
			"Border color of a symbol during read-access, like reading a variable.",
			"Border color of a symbol during write-access, like writing to a variable.",
			"Border color of a textual occurrence for a symbol.",
			"Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.",
			"Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.",
			"Overview ruler marker color of a textual occurrence for a symbol. The color must not be opaque so as not to hide underlying decorations."
		],
		"vs/editor/contrib/wordHighlighter/browser/wordHighlighter": [
			"Go to Next Symbol Highlight",
			"Go to Previous Symbol Highlight",
			"Trigger Symbol Highlight"
		],
		"vs/editor/contrib/wordOperations/browser/wordOperations": [
			"Delete Word"
		],
		"vs/platform/accessibilitySignal/browser/accessibilitySignalService": [
			"Error at Position",
			"Error",
			"Warning at Position",
			"Warning",
			"Error on Line",
			"Error on Line",
			"Warning on Line",
			"Warning on Line",
			"Folded Area on Line",
			"Folded",
			"Breakpoint on Line",
			"Breakpoint",
			"Inline Suggestion on Line",
			"Next Edit Suggestion on Line",
			"Next Edit Suggestion",
			"Terminal Quick Fix",
			"Quick Fix",
			"Debugger Stopped on Breakpoint",
			"Breakpoint",
			"No Inlay Hints on Line",
			"No Inlay Hints",
			"Task Completed",
			"Task Completed",
			"Task Failed",
			"Task Failed",
			"Terminal Command Failed",
			"Command Failed",
			"Terminal Command Succeeded",
			"Command Succeeded",
			"Terminal Bell",
			"Terminal Bell",
			"Notebook Cell Completed",
			"Notebook Cell Completed",
			"Notebook Cell Failed",
			"Notebook Cell Failed",
			"Diff Line Inserted",
			"Diff Line Deleted",
			"Diff Line Modified",
			"Chat Edit Modified File",
			"File Modified from Chat Edits",
			"Chat Request Sent",
			"Chat Request Sent",
			"Chat Response Received",
			"Code Action Request Triggered",
			"Code Action Request Triggered",
			"Code Action Applied",
			"Progress",
			"Progress",
			"Clear",
			"Clear",
			"Save",
			"Save",
			"Format",
			"Format",
			"Voice Recording Started",
			"Voice Recording Stopped",
			"Edits Kept",
			"Edits Kept",
			"Undo Edits",
			"Edits Undone",
			"Chat User Action Required",
			"Chat User Action Required"
		],
		"vs/platform/action/common/actionCommonCategories": [
			"View",
			"Help",
			"Test",
			"File",
			"Preferences",
			"Developer"
		],
		"vs/platform/actions/browser/menuEntryActionViewItem": [
			"{0} ({1})",
			"{0} ({1})",
			"{0}\n[{1}] {2}",
			"{1} to {0}",
			"{0} ({1})"
		],
		"vs/platform/actions/browser/toolbar": [
			"Hide",
			"Reset Menu"
		],
		"vs/platform/actions/common/menuService": [
			"Hide '{0}'",
			"Configure Keybinding"
		],
		"vs/platform/actionWidget/browser/actionList": [
			"{0} to Apply, {1} to Preview",
			"{0} to Apply",
			"{0}, Disabled Reason: {1}",
			"Action Widget"
		],
		"vs/platform/actionWidget/browser/actionWidget": [
			"Background color for toggled action items in action bar.",
			"Whether the action widget list is visible",
			"Hide action widget",
			"Select previous action",
			"Select next action",
			"Accept selected action",
			"Preview selected action"
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"Default Language Configuration Overrides",
			"Configure settings to be overridden for {0}.",
			"Configure editor settings to be overridden for a language.",
			"This setting does not support per-language configuration.",
			"Configure editor settings to be overridden for a language.",
			"This setting does not support per-language configuration.",
			"Cannot register an empty property",
			"Cannot register '{0}'. This matches property pattern '\\\\[.*\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.",
			"Cannot register '{0}'. This property is already registered.",
			"Cannot register '{0}'. The associated policy {1} is already registered with {2}."
		],
		"vs/platform/contextkey/browser/contextKeyService": [
			"A command that returns information about context keys"
		],
		"vs/platform/contextkey/common/contextkey": [
			"Empty context key expression",
			"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.",
			"'in' after 'not'.",
			"closing parenthesis ')'",
			"Unexpected token",
			"Did you forget to put && or || before the token?",
			"Unexpected end of expression",
			"Did you forget to put a context key?",
			"Expected: {0}\nReceived: '{1}'."
		],
		"vs/platform/contextkey/common/contextkeys": [
			"Whether the operating system is macOS",
			"Whether the operating system is Linux",
			"Whether the operating system is Windows",
			"Whether the platform is a web browser",
			"Whether the operating system is macOS on a non-browser platform",
			"Whether the operating system is iOS",
			"Whether the platform is a mobile web browser",
			"Quality type of VS Code",
			"Whether the application runs in simulation mode",
			"Whether keyboard focus is inside an input box"
		],
		"vs/platform/contextkey/common/scanner": [
			"Did you mean {0}?",
			"Did you mean {0} or {1}?",
			"Did you mean {0}, {1} or {2}?",
			"Did you forget to open or close the quote?",
			"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\/'."
		],
		"vs/platform/history/browser/contextScopedHistoryWidget": [
			"Whether suggestion are visible"
		],
		"vs/platform/keybinding/common/abstractKeybindingService": [
			"({0}) was pressed. Waiting for second key of chord...",
			"({0}) was pressed. Waiting for next key of chord...",
			"The key combination ({0}, {1}) is not a command.",
			"The key combination ({0}, {1}) is not a command."
		],
		"vs/platform/list/browser/listService": [
			"Workbench",
			"Maps to `Control` on Windows and Linux and to `Command` on macOS.",
			"Maps to `Alt` on Windows and Linux and to `Option` on macOS.",
			"The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.",
			"Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.",
			"Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.",
			"Controls whether clicks in the scrollbar scroll page by page.",
			"Controls tree indentation in pixels.",
			"Controls whether the tree should render indent guides.",
			"Controls whether lists and trees have smooth scrolling.",
			"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
			"Scrolling speed multiplier when pressing `Alt`.",
			"Highlight elements when searching. Further up and down navigation will traverse only the highlighted elements.",
			"Filter elements when searching.",
			"Controls the default find mode for lists and trees in the workbench.",
			"Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.",
			"Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.",
			"Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.",
			"Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.",
			"Please use 'workbench.list.defaultFindMode' and\t'workbench.list.typeNavigationMode' instead.",
			"Use fuzzy matching when searching.",
			"Use contiguous matching when searching.",
			"Controls the type of matching used when searching lists and trees in the workbench.",
			"Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.",
			"Controls whether sticky scrolling is enabled in trees.",
			"Controls the number of sticky elements displayed in the tree when {0} is enabled.",
			"Controls how type navigation works in lists and trees in the workbench. When set to `trigger`, type navigation begins once the `list.triggerTypeNavigation` command is run."
		],
		"vs/platform/markers/common/markers": [
			"Error",
			"Warning",
			"Info",
			"Errors",
			"Warnings",
			"Infos"
		],
		"vs/platform/markers/common/markerService": [
			"Problems are paused because: \"{0}\"",
			"Problems are paused because: \"{0}\" and {1} more"
		],
		"vs/platform/quickinput/browser/commandsQuickAccess": [
			"recently used",
			"similar commands",
			"commonly used",
			"other commands",
			"similar commands",
			"{0}, {1}",
			"Command '{0}' resulted in an error"
		],
		"vs/platform/quickinput/browser/helpQuickAccess": [
			"{0}, {1}"
		],
		"vs/platform/quickinput/browser/quickInput": [
			"Whether keyboard focus is inside the quick input control",
			"The alignment of the quick input",
			"The type of the currently visible quick input",
			"Whether the cursor in the quick input is at the end of the input box",
			"Back",
			"Press 'Enter' to confirm your input or 'Escape' to cancel",
			"{0}/{1}",
			"Type to narrow down results.",
			"OK",
			"{0} (Press 'Enter' to confirm or 'Escape' to cancel)"
		],
		"vs/platform/quickinput/browser/quickInputActions": [
			"Used while in the context of the quick pick. If you change one keybinding for this command, you should change all of the other keybindings (modifier variants) of this command as well.",
			"If we're in quick access mode, this will navigate to the next item. If we are not in quick access mode, this will navigate to the next separator.",
			"If we're in quick access mode, this will navigate to the previous item. If we are not in quick access mode, this will navigate to the previous separator."
		],
		"vs/platform/quickinput/browser/quickInputController": [
			"Toggle all checkboxes",
			"{0} Results",
			"{0} Selected",
			"OK",
			"Custom",
			"Back ({0})",
			"Back"
		],
		"vs/platform/quickinput/browser/quickInputList": [
			"Quick Input"
		],
		"vs/platform/quickinput/browser/quickInputUtils": [
			"Click to execute command '{0}'"
		],
		"vs/platform/quickinput/browser/tree/quickInputTreeAccessibilityProvider": [
			"Quick Tree"
		],
		"vs/platform/theme/common/colors/baseColors": [
			"Overall foreground color. This color is only used if not overridden by a component.",
			"Overall foreground for disabled elements. This color is only used if not overridden by a component.",
			"Overall foreground color for error messages. This color is only used if not overridden by a component.",
			"Foreground color for description text providing additional information, for example for a label.",
			"The default color for icons in the workbench.",
			"Overall border color for focused elements. This color is only used if not overridden by a component.",
			"An extra border around elements to separate them from others for greater contrast.",
			"An extra border around active elements to separate them from others for greater contrast.",
			"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.",
			"Foreground color for links in text.",
			"Foreground color for links in text when clicked on and on mouse hover.",
			"Color for text separators.",
			"Foreground color for preformatted text segments.",
			"Background color for preformatted text segments.",
			"Background color for block quotes in text.",
			"Border color for block quotes in text.",
			"Background color for code blocks in text."
		],
		"vs/platform/theme/common/colors/chartsColors": [
			"The foreground color used in charts.",
			"The color used for horizontal lines in charts.",
			"The red color used in chart visualizations.",
			"The blue color used in chart visualizations.",
			"The yellow color used in chart visualizations.",
			"The orange color used in chart visualizations.",
			"The green color used in chart visualizations.",
			"The purple color used in chart visualizations."
		],
		"vs/platform/theme/common/colors/editorColors": [
			"Editor background color.",
			"Editor default foreground color.",
			"Background color of sticky scroll in the editor",
			"Background color of the gutter part of sticky scroll in the editor",
			"Background color of sticky scroll on hover in the editor",
			"Border color of sticky scroll in the editor",
			" Shadow color of sticky scroll in the editor",
			"Background color of editor widgets, such as find/replace.",
			"Foreground color of editor widgets, such as find/replace.",
			"Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.",
			"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.",
			"Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.",
			"Foreground color of error squigglies in the editor.",
			"If set, color of double underlines for errors in the editor.",
			"Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.",
			"Foreground color of warning squigglies in the editor.",
			"If set, color of double underlines for warnings in the editor.",
			"Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.",
			"Foreground color of info squigglies in the editor.",
			"If set, color of double underlines for infos in the editor.",
			"Foreground color of hint squigglies in the editor.",
			"If set, color of double underlines for hints in the editor.",
			"Color of active links.",
			"Color of the editor selection.",
			"Color of the selected text for high contrast.",
			"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.",
			"Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.",
			"Border color for regions with the same content as the selection.",
			"The border color for an IME composition.",
			"Color of the current search match.",
			"Text color of the current search match.",
			"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.",
			"Foreground color of the other search matches.",
			"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.",
			"Border color of the current search match.",
			"Border color of the other search matches.",
			"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.",
			"Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.",
			"Background color of the editor hover.",
			"Foreground color of the editor hover.",
			"Border color of the editor hover.",
			"Background color of the editor hover status bar.",
			"Foreground color of inline hints",
			"Background color of inline hints",
			"Foreground color of inline hints for types",
			"Background color of inline hints for types",
			"Foreground color of inline hints for parameters",
			"Background color of inline hints for parameters",
			"The color used for the lightbulb actions icon.",
			"The color used for the lightbulb auto fix actions icon.",
			"The color used for the lightbulb AI icon.",
			"Highlight background color of a snippet tabstop.",
			"Highlight border color of a snippet tabstop.",
			"Highlight background color of the final tabstop of a snippet.",
			"Highlight border color of the final tabstop of a snippet.",
			"Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.",
			"Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.",
			"Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.",
			"Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.",
			"Background color for the margin where lines got inserted.",
			"Background color for the margin where lines got removed.",
			"Diff overview ruler foreground for inserted content.",
			"Diff overview ruler foreground for removed content.",
			"Outline color for the text that got inserted.",
			"Outline color for text that got removed.",
			"Border color between the two text editors.",
			"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.",
			"The background color of unchanged blocks in the diff editor.",
			"The foreground color of unchanged blocks in the diff editor.",
			"The background color of unchanged code in the diff editor.",
			"Shadow color of widgets such as find/replace inside the editor.",
			"Border color of widgets such as find/replace inside the editor.",
			"Toolbar background when hovering over actions using the mouse",
			"Toolbar outline when hovering over actions using the mouse",
			"Toolbar background when holding the mouse over actions",
			"Color of focused breadcrumb items.",
			"Background color of breadcrumb items.",
			"Color of focused breadcrumb items.",
			"Color of selected breadcrumb items.",
			"Background color of breadcrumb item picker.",
			"Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
			"Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
			"Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
			"Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
			"Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
			"Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
			"Border color on headers and the splitter in inline merge-conflicts.",
			"Current overview ruler foreground for inline merge-conflicts.",
			"Incoming overview ruler foreground for inline merge-conflicts.",
			"Common ancestor overview ruler foreground for inline merge-conflicts.",
			"Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.",
			"Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.",
			"The color used for the problems error icon.",
			"The color used for the problems warning icon.",
			"The color used for the problems info icon."
		],
		"vs/platform/theme/common/colors/inputColors": [
			"Input box background.",
			"Input box foreground.",
			"Input box border.",
			"Border color of activated options in input fields.",
			"Background color of activated options in input fields.",
			"Background hover color of options in input fields.",
			"Foreground color of activated options in input fields.",
			"Input box foreground color for placeholder text.",
			"Input validation background color for information severity.",
			"Input validation foreground color for information severity.",
			"Input validation border color for information severity.",
			"Input validation background color for warning severity.",
			"Input validation foreground color for warning severity.",
			"Input validation border color for warning severity.",
			"Input validation background color for error severity.",
			"Input validation foreground color for error severity.",
			"Input validation border color for error severity.",
			"Dropdown background.",
			"Dropdown list background.",
			"Dropdown foreground.",
			"Dropdown border.",
			"Button foreground color.",
			"Button separator color.",
			"Button background color.",
			"Button background color when hovering.",
			"Button border color.",
			"Secondary button foreground color.",
			"Secondary button background color.",
			"Secondary button background color when hovering.",
			"Foreground color of active radio option.",
			"Background color of active radio option.",
			"Border color of the active radio option.",
			"Foreground color of inactive radio option.",
			"Background color of inactive radio option.",
			"Border color of the inactive radio option.",
			"Background color of inactive active radio option when hovering.",
			"Background color of checkbox widget.",
			"Background color of checkbox widget when the element it's in is selected.",
			"Foreground color of checkbox widget.",
			"Border color of checkbox widget.",
			"Border color of checkbox widget when the element it's in is selected.",
			"Background of a disabled checkbox.",
			"Foreground of a disabled checkbox.",
			"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.",
			"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.",
			"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.",
			"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut."
		],
		"vs/platform/theme/common/colors/listColors": [
			"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree background when hovering over items using the mouse.",
			"List/Tree foreground when hovering over items using the mouse.",
			"List/Tree drag and drop background when moving items over other items when using the mouse.",
			"List/Tree drag and drop border color when moving items between items when using the mouse.",
			"List/Tree foreground color of the match highlights when searching inside the list/tree.",
			"List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.",
			"List/Tree foreground color for invalid items, for example an unresolved root in explorer.",
			"Foreground color of list items containing errors.",
			"Foreground color of list items containing warnings.",
			"Background color of the type filter widget in lists and trees.",
			"Outline color of the type filter widget in lists and trees.",
			"Outline color of the type filter widget in lists and trees, when there are no matches.",
			"Shadow color of the type filter widget in lists and trees.",
			"Background color of the filtered match.",
			"Border color of the filtered match.",
			"List/Tree foreground color for items that are deemphasized.",
			"Tree stroke color for the indentation guides.",
			"Tree stroke color for the indentation guides that are not active.",
			"Table border color between columns.",
			"Background color for odd table rows.",
			"Action List background color.",
			"Action List foreground color.",
			"Action List foreground color for the focused item.",
			"Action List background color for the focused item."
		],
		"vs/platform/theme/common/colors/menuColors": [
			"Border color of menus.",
			"Foreground color of menu items.",
			"Background color of menu items.",
			"Foreground color of the selected menu item in menus.",
			"Background color of the selected menu item in menus.",
			"Border color of the selected menu item in menus.",
			"Color of a separator menu item in menus."
		],
		"vs/platform/theme/common/colors/minimapColors": [
			"Minimap marker color for find matches.",
			"Minimap marker color for repeating editor selections.",
			"Minimap marker color for the editor selection.",
			"Minimap marker color for infos.",
			"Minimap marker color for warnings.",
			"Minimap marker color for errors.",
			"Minimap background color.",
			"Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.",
			"Minimap slider background color.",
			"Minimap slider background color when hovering.",
			"Minimap slider background color when clicked on."
		],
		"vs/platform/theme/common/colors/miscColors": [
			"Border color of active sashes.",
			"Badge background color. Badges are small information labels, e.g. for search results count.",
			"Badge foreground color. Badges are small information labels, e.g. for search results count.",
			"Foreground color of the warning activity badge",
			"Background color of the warning activity badge",
			"Foreground color of the error activity badge",
			"Background color of the error activity badge",
			"Scrollbar shadow to indicate that the view is scrolled.",
			"Scrollbar slider background color.",
			"Scrollbar slider background color when hovering.",
			"Scrollbar slider background color when clicked on.",
			"Background color of the progress bar that can show for long running operations.",
			"Line color for the chart.",
			"Axis color for the chart.",
			"Guide line for the chart."
		],
		"vs/platform/theme/common/colors/quickpickColors": [
			"Quick picker background color. The quick picker widget is the container for pickers like the command palette.",
			"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.",
			"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.",
			"Quick picker color for grouping labels.",
			"Quick picker color for grouping borders.",
			"Please use quickInputList.focusBackground instead",
			"Quick picker foreground color for the focused item.",
			"Quick picker icon foreground color for the focused item.",
			"Quick picker background color for the focused item."
		],
		"vs/platform/theme/common/colors/searchColors": [
			"Color of the text in the search viewlet's completion message.",
			"Color of the Search Editor query matches.",
			"Border color of the Search Editor query matches."
		],
		"vs/platform/theme/common/colorUtils": [
			"This color must be transparent or it will obscure content",
			"Use the default color."
		],
		"vs/platform/theme/common/iconRegistry": [
			"The font ID must only contain letters, numbers, underscores and dashes.",
			"The id of the font to use. If not set, the font that is defined first is used.",
			"The font character associated with the icon definition.",
			"Icon for the close action in widgets.",
			"Icon for goto previous editor location.",
			"Icon for goto next editor location."
		],
		"vs/platform/undoRedo/common/undoRedoService": [
			"The following files have been closed and modified on disk: {0}.",
			"The following files have been modified in an incompatible way: {0}.",
			"Could not undo '{0}' across all files. {1}",
			"Could not undo '{0}' across all files. {1}",
			"Could not undo '{0}' across all files because changes were made to {1}",
			"Could not undo '{0}' across all files because there is already an undo or redo operation running on {1}",
			"Could not undo '{0}' across all files because an undo or redo operation occurred in the meantime",
			"Would you like to undo '{0}' across all files?",
			"&&Undo in {0} Files",
			"Undo this &&File",
			"Could not undo '{0}' because there is already an undo or redo operation running.",
			"Would you like to undo '{0}'?",
			"&&Yes",
			"No",
			"Could not redo '{0}' across all files. {1}",
			"Could not redo '{0}' across all files. {1}",
			"Could not redo '{0}' across all files because changes were made to {1}",
			"Could not redo '{0}' across all files because there is already an undo or redo operation running on {1}",
			"Could not redo '{0}' across all files because an undo or redo operation occurred in the meantime",
			"Could not redo '{0}' because there is already an undo or redo operation running."
		],
		"vs/platform/workspace/common/workspace": [
			"Code Workspace"
		]
	}
}