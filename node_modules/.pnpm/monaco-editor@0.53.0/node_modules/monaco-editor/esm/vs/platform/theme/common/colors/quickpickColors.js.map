{"version":3,"sources":["vs/platform/theme/common/colors/quickpickColors.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,OAAO,KAAK,GAAG,MAAM,oBAAoB,CAAC;AAE1C,6BAA6B;AAC7B,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,kCAAkC,CAAC;AAC/D,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAExD,4BAA4B;AAC5B,OAAO,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,MAAM,mBAAmB,CAAC;AACnF,OAAO,EAAE,6BAA6B,EAAE,6BAA6B,EAAE,iCAAiC,EAAE,MAAM,iBAAiB,CAAC;AAGlI,MAAM,CAAC,MAAM,oBAAoB,GAAG,aAAa,CAAC,uBAAuB,EACxE,sBAAsB,EACtB,GAAG,CAAC,QAAQ,CAAC,IAAkB,EAAE,+GAA+G,CAAC,CAAC,CAAC;AAEpJ,MAAM,CAAC,MAAM,oBAAoB,GAAG,aAAa,CAAC,uBAAuB,EACxE,sBAAsB,EACtB,GAAG,CAAC,QAAQ,CAAC,IAAkB,EAAE,+GAA+G,CAAC,CAAC,CAAC;AAEpJ,MAAM,CAAC,MAAM,yBAAyB,GAAG,aAAa,CAAC,4BAA4B,EAClF,EAAE,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,KAAK,EAAE,EACvI,GAAG,CAAC,QAAQ,CAAC,IAAuB,EAAE,qHAAqH,CAAC,CAAC,CAAC;AAE/J,MAAM,CAAC,MAAM,qBAAqB,GAAG,aAAa,CAAC,wBAAwB,EAC1E,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,EAC9E,GAAG,CAAC,QAAQ,CAAC,IAAuB,EAAE,yCAAyC,CAAC,CAAC,CAAC;AAEnF,MAAM,CAAC,MAAM,iBAAiB,GAAG,aAAa,CAAC,oBAAoB,EAClE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,EAC9E,GAAG,CAAC,QAAQ,CAAC,IAAmB,EAAE,0CAA0C,CAAC,CAAC,CAAC;AAEhF,MAAM,CAAC,MAAM,wCAAwC,GAAG,aAAa,CAAC,iCAAiC,EACtG,IAAI,EAAE,EAAE,EAAE,SAAS,EACnB,GAAG,CAAC,QAAQ,CAAC,IAA6C,EAAE,mDAAmD,CAAC,CAAC,CAAC;AAEnH,MAAM,CAAC,MAAM,6BAA6B,GAAG,aAAa,CAAC,gCAAgC,EAC1F,6BAA6B,EAC7B,GAAG,CAAC,QAAQ,CAAC,IAAgC,EAAE,qDAAqD,CAAC,CAAC,CAAC;AAExG,MAAM,CAAC,MAAM,iCAAiC,GAAG,aAAa,CAAC,oCAAoC,EAClG,iCAAiC,EACjC,GAAG,CAAC,QAAQ,CAAC,IAAoC,EAAE,0DAA0D,CAAC,CAAC,CAAC;AAEjH,MAAM,CAAC,MAAM,6BAA6B,GAAG,aAAa,CAAC,gCAAgC,EAC1F,EAAE,IAAI,EAAE,KAAK,CAAC,wCAAwC,EAAE,6BAA6B,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,wCAAwC,EAAE,6BAA6B,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,EAC5M,GAAG,CAAC,QAAQ,CAAC,IAAgC,EAAE,qDAAqD,CAAC,CAAC,CAAC","file":"quickpickColors.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\n\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, oneOf } from '../colorUtils.js';\n\n// Import the colors we need\nimport { editorWidgetBackground, editorWidgetForeground } from './editorColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground } from './listColors.js';\n\n\nexport const quickInputBackground = registerColor('quickInput.background',\n\teditorWidgetBackground,\n\tnls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\n\nexport const quickInputForeground = registerColor('quickInput.foreground',\n\teditorWidgetForeground,\n\tnls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\n\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background',\n\t{ dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white },\n\tnls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\n\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground',\n\t{ dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' },\n\tnls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\n\nexport const pickerGroupBorder = registerColor('pickerGroup.border',\n\t{ dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' },\n\tnls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\n\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground',\n\tnull, '', undefined,\n\tnls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\n\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground',\n\tlistActiveSelectionForeground,\n\tnls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\n\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground',\n\tlistActiveSelectionIconForeground,\n\tnls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\n\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground',\n\t{ dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null },\n\tnls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n"]}