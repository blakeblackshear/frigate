{"version":3,"sources":["vs/platform/theme/common/colors/inputColors.ts"],"names":[],"mappings":"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","file":"inputColors.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\n\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent, lighten, darken, ColorTransformType } from '../colorUtils.js';\n\n// Import the colors we need\nimport { foreground, contrastBorder, focusBorder, iconForeground } from './baseColors.js';\nimport { editorWidgetBackground } from './editorColors.js';\n\n\n// ----- input\n\nexport const inputBackground = registerColor('input.background',\n\t{ dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white },\n\tnls.localize('inputBoxBackground', \"Input box background.\"));\n\nexport const inputForeground = registerColor('input.foreground',\n\tforeground,\n\tnls.localize('inputBoxForeground', \"Input box foreground.\"));\n\nexport const inputBorder = registerColor('input.border',\n\t{ dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('inputBoxBorder', \"Input box border.\"));\n\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder',\n\t{ dark: '#007ACC', light: '#007ACC', hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\n\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground',\n\t{ dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null },\n\tnls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\n\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground',\n\t{ dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hcDark: Color.transparent, hcLight: Color.transparent },\n\tnls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\n\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground',\n\t{ dark: Color.white, light: Color.black, hcDark: foreground, hcLight: foreground },\n\tnls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\n\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground',\n\t{ light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) },\n\tnls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\n\n\n// ----- input validation\n\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground',\n\t{ dark: '#063B49', light: '#D6ECF2', hcDark: Color.black, hcLight: Color.white },\n\tnls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\n\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground',\n\t{ dark: null, light: null, hcDark: null, hcLight: foreground },\n\tnls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\n\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder',\n\t{ dark: '#007acc', light: '#007acc', hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\n\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground',\n\t{ dark: '#352A05', light: '#F6F5D2', hcDark: Color.black, hcLight: Color.white },\n\tnls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\n\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground',\n\t{ dark: null, light: null, hcDark: null, hcLight: foreground },\n\tnls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\n\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder',\n\t{ dark: '#B89500', light: '#B89500', hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\n\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground',\n\t{ dark: '#5A1D1D', light: '#F2DEDE', hcDark: Color.black, hcLight: Color.white },\n\tnls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\n\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground',\n\t{ dark: null, light: null, hcDark: null, hcLight: foreground },\n\tnls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\n\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder',\n\t{ dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\n\n\n// ----- select\n\nexport const selectBackground = registerColor('dropdown.background',\n\t{ dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white },\n\tnls.localize('dropdownBackground', \"Dropdown background.\"));\n\nexport const selectListBackground = registerColor('dropdown.listBackground',\n\t{ dark: null, light: null, hcDark: Color.black, hcLight: Color.white },\n\tnls.localize('dropdownListBackground', \"Dropdown list background.\"));\n\nexport const selectForeground = registerColor('dropdown.foreground',\n\t{ dark: '#F0F0F0', light: foreground, hcDark: Color.white, hcLight: foreground },\n\tnls.localize('dropdownForeground', \"Dropdown foreground.\"));\n\nexport const selectBorder = registerColor('dropdown.border',\n\t{ dark: selectBackground, light: '#CECECE', hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('dropdownBorder', \"Dropdown border.\"));\n\n\n// ------ button\n\nexport const buttonForeground = registerColor('button.foreground',\n\tColor.white,\n\tnls.localize('buttonForeground', \"Button foreground color.\"));\n\nexport const buttonSeparator = registerColor('button.separator',\n\ttransparent(buttonForeground, .4),\n\tnls.localize('buttonSeparator', \"Button separator color.\"));\n\nexport const buttonBackground = registerColor('button.background',\n\t{ dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' },\n\tnls.localize('buttonBackground', \"Button background color.\"));\n\nexport const buttonHoverBackground = registerColor('button.hoverBackground',\n\t{ dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hcDark: buttonBackground, hcLight: buttonBackground },\n\tnls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\n\nexport const buttonBorder = registerColor('button.border',\n\tcontrastBorder,\n\tnls.localize('buttonBorder', \"Button border color.\"));\n\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground',\n\t{ dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: foreground },\n\tnls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\n\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground',\n\t{ dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: Color.white },\n\tnls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\n\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground',\n\t{ dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null },\n\tnls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\n\n// ------ radio\n\nexport const radioActiveForeground = registerColor('radio.activeForeground',\n\tinputActiveOptionForeground,\n\tnls.localize('radioActiveForeground', \"Foreground color of active radio option.\"));\n\nexport const radioActiveBackground = registerColor('radio.activeBackground',\n\tinputActiveOptionBackground,\n\tnls.localize('radioBackground', \"Background color of active radio option.\"));\n\nexport const radioActiveBorder = registerColor('radio.activeBorder',\n\tinputActiveOptionBorder,\n\tnls.localize('radioActiveBorder', \"Border color of the active radio option.\"));\n\nexport const radioInactiveForeground = registerColor('radio.inactiveForeground',\n\tnull,\n\tnls.localize('radioInactiveForeground', \"Foreground color of inactive radio option.\"));\n\nexport const radioInactiveBackground = registerColor('radio.inactiveBackground',\n\tnull,\n\tnls.localize('radioInactiveBackground', \"Background color of inactive radio option.\"));\n\nexport const radioInactiveBorder = registerColor('radio.inactiveBorder',\n\t{ light: transparent(radioActiveForeground, .2), dark: transparent(radioActiveForeground, .2), hcDark: transparent(radioActiveForeground, .4), hcLight: transparent(radioActiveForeground, .2) },\n\tnls.localize('radioInactiveBorder', \"Border color of the inactive radio option.\"));\n\nexport const radioInactiveHoverBackground = registerColor('radio.inactiveHoverBackground',\n\tinputActiveOptionHoverBackground,\n\tnls.localize('radioHoverBackground', \"Background color of inactive active radio option when hovering.\"));\n\n// ------ checkbox\n\nexport const checkboxBackground = registerColor('checkbox.background',\n\tselectBackground,\n\tnls.localize('checkbox.background', \"Background color of checkbox widget.\"));\n\nexport const checkboxSelectBackground = registerColor('checkbox.selectBackground',\n\teditorWidgetBackground,\n\tnls.localize('checkbox.select.background', \"Background color of checkbox widget when the element it's in is selected.\"));\n\nexport const checkboxForeground = registerColor('checkbox.foreground',\n\tselectForeground,\n\tnls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\n\nexport const checkboxBorder = registerColor('checkbox.border',\n\tselectBorder,\n\tnls.localize('checkbox.border', \"Border color of checkbox widget.\"));\n\nexport const checkboxSelectBorder = registerColor('checkbox.selectBorder',\n\ticonForeground,\n\tnls.localize('checkbox.select.border', \"Border color of checkbox widget when the element it's in is selected.\"));\n\nexport const checkboxDisabledBackground = registerColor('checkbox.disabled.background',\n\t{ op: ColorTransformType.Mix, color: checkboxBackground, with: checkboxForeground, ratio: 0.33 },\n\tnls.localize('checkbox.disabled.background', \"Background of a disabled checkbox.\"));\n\nexport const checkboxDisabledForeground = registerColor('checkbox.disabled.foreground',\n\t{ op: ColorTransformType.Mix, color: checkboxForeground, with: checkboxBackground, ratio: 0.33 },\n\tnls.localize('checkbox.disabled.foreground', \"Foreground of a disabled checkbox.\"));\n\n\n// ------ keybinding label\n\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background',\n\t{ dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hcDark: Color.transparent, hcLight: Color.transparent },\n\tnls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\n\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground',\n\t{ dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hcDark: Color.white, hcLight: foreground },\n\tnls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\n\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border',\n\t{ dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: contrastBorder },\n\tnls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\n\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder',\n\t{ dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: foreground },\n\tnls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n"]}