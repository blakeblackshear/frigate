{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/contextview/browser/contextMenuService.ts","vs/platform/contextview/browser/contextMenuService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;AAGhG,OAAO,EAAE,kBAAkB,EAAE,MAAM,8BAA8B,CAAC;AAClE,OAAO,EAAW,SAAS,EAAE,MAAM,iCAAiC,CAAC;AACrE,OAAO,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAC;AACxD,OAAO,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAC;AAC/D,OAAO,EAAE,yBAAyB,EAAE,MAAM,kDAAkD,CAAC;AAC7F,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,iCAAiC,CAAC;AACvE,OAAO,EAAE,kBAAkB,EAAE,MAAM,uCAAuC,CAAC;AAC3E,OAAO,EAAE,kBAAkB,EAAE,MAAM,uCAAuC,CAAC;AAC3E,OAAO,EAAE,oBAAoB,EAAE,MAAM,2CAA2C,CAAC;AACjF,OAAO,EAAE,iBAAiB,EAAE,MAAM,qCAAqC,CAAC;AACxE,OAAO,EAAE,kBAAkB,EAA8B,MAAM,yBAAyB,CAAC;AACzF,OAAO,EAAiD,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAE/F,IAAM,kBAAkB,GAAxB,MAAM,kBAAmB,SAAQ,UAAU;IAKjD,IAAY,kBAAkB;QAC7B,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC/B,IAAI,CAAC,mBAAmB,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACrJ,CAAC;QAED,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACjC,CAAC;IAQD,YACoB,gBAAoD,EACjD,mBAA0D,EAC3D,kBAAwD,EACzD,iBAAsD,EAC5D,WAA0C,EACpC,iBAAsD;QAE1E,KAAK,EAAE,CAAC;QAP4B,qBAAgB,GAAhB,gBAAgB,CAAmB;QAChC,wBAAmB,GAAnB,mBAAmB,CAAsB;QAC1C,uBAAkB,GAAlB,kBAAkB,CAAqB;QACxC,sBAAiB,GAAjB,iBAAiB,CAAoB;QAC3C,gBAAW,GAAX,WAAW,CAAc;QACnB,sBAAiB,GAAjB,iBAAiB,CAAoB;QArBnE,wBAAmB,GAAmC,SAAS,CAAC;QASvD,0BAAqB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,OAAO,EAAQ,CAAC,CAAC;QACrE,yBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;QAEhD,0BAAqB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,OAAO,EAAQ,CAAC,CAAC;QACrE,yBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;IAWjE,CAAC;IAED,SAAS,CAAC,OAAmC;QAC5C,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,cAAc;IAEd,eAAe,CAAC,QAAyD;QAExE,QAAQ,GAAG,uBAAuB,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEjG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;YACvC,GAAG,QAAQ;YACX,MAAM,EAAE,CAAC,SAAS,EAAE,EAAE;gBACrB,QAAQ,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC;gBAE7B,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;YACnC,CAAC;SACD,CAAC,CAAC;QACH,kBAAkB,CAAC,WAAW,EAAE,CAAC,cAAc,EAAE,CAAC;QAClD,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;CACD,CAAA;AAnDY,kBAAkB;IAoB5B,WAAA,iBAAiB,CAAA;IACjB,WAAA,oBAAoB,CAAA;IACpB,WAAA,mBAAmB,CAAA;IACnB,WAAA,kBAAkB,CAAA;IAClB,WAAA,YAAY,CAAA;IACZ,WAAA,kBAAkB,CAAA;GAzBR,kBAAkB,CAmD9B;;AAED,MAAM,KAAW,uBAAuB,CA2BvC;AA3BD,WAAiB,uBAAuB;IAEvC,SAAS,EAAE,CAAC,KAAsD;QACjE,OAAO,KAAK,IAA+B,KAAM,CAAC,MAAM,YAAY,MAAM,CAAC;IAC5E,CAAC;IAED,SAAgB,SAAS,CAAC,QAAyD,EAAE,WAAyB,EAAE,uBAA2C;QAC1J,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;YACnB,OAAO,QAAQ,CAAC;QACjB,CAAC;QACD,MAAM,EAAE,MAAM,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,GAAG,QAAQ,CAAC;QAClE,OAAO;YACN,GAAG,QAAQ;YACX,UAAU,EAAE,GAAG,EAAE;gBAChB,IAAI,MAAM,GAAc,EAAE,CAAC;gBAC3B,IAAI,MAAM,EAAE,CAAC;oBACZ,MAAM,IAAI,GAAG,WAAW,CAAC,cAAc,CAAC,MAAM,EAAE,iBAAiB,IAAI,uBAAuB,EAAE,iBAAiB,CAAC,CAAC;oBACjH,MAAM,GAAG,yBAAyB,CAAC,IAAI,CAAC,CAAC;gBAC1C,CAAC;gBACD,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;oBAC1B,OAAO,MAAM,CAAC;gBACf,CAAC;qBAAM,CAAC;oBACP,OAAO,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,MAAM,CAAC,CAAC;gBACtD,CAAC;YACF,CAAC;SACD,CAAC;IACH,CAAC;IApBe,iCAAS,YAoBxB,CAAA;AACF,CAAC,EA3BgB,uBAAuB,KAAvB,uBAAuB,QA2BvC","file":"contextMenuService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IContextMenuDelegate } from '../../../base/browser/contextmenu.js';\nimport { ModifierKeyEmitter } from '../../../base/browser/dom.js';\nimport { IAction, Separator } from '../../../base/common/actions.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { getFlatContextMenuActions } from '../../actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuId } from '../../actions/common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { ContextMenuHandler, IContextMenuHandlerOptions } from './contextMenuHandler.js';\nimport { IContextMenuMenuDelegate, IContextMenuService, IContextViewService } from './contextView.js';\n\nexport class ContextMenuService extends Disposable implements IContextMenuService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _contextMenuHandler: ContextMenuHandler | undefined = undefined;\n\tprivate get contextMenuHandler(): ContextMenuHandler {\n\t\tif (!this._contextMenuHandler) {\n\t\t\tthis._contextMenuHandler = new ContextMenuHandler(this.contextViewService, this.telemetryService, this.notificationService, this.keybindingService);\n\t\t}\n\n\t\treturn this._contextMenuHandler;\n\t}\n\n\tprivate readonly _onDidShowContextMenu = this._store.add(new Emitter<void>());\n\treadonly onDidShowContextMenu = this._onDidShowContextMenu.event;\n\n\tprivate readonly _onDidHideContextMenu = this._store.add(new Emitter<void>());\n\treadonly onDidHideContextMenu = this._onDidHideContextMenu.event;\n\n\tconstructor(\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t}\n\n\tconfigure(options: IContextMenuHandlerOptions): void {\n\t\tthis.contextMenuHandler.configure(options);\n\t}\n\n\t// ContextMenu\n\n\tshowContextMenu(delegate: IContextMenuDelegate | IContextMenuMenuDelegate): void {\n\n\t\tdelegate = ContextMenuMenuDelegate.transform(delegate, this.menuService, this.contextKeyService);\n\n\t\tthis.contextMenuHandler.showContextMenu({\n\t\t\t...delegate,\n\t\t\tonHide: (didCancel) => {\n\t\t\t\tdelegate.onHide?.(didCancel);\n\n\t\t\t\tthis._onDidHideContextMenu.fire();\n\t\t\t}\n\t\t});\n\t\tModifierKeyEmitter.getInstance().resetKeyStatus();\n\t\tthis._onDidShowContextMenu.fire();\n\t}\n}\n\nexport namespace ContextMenuMenuDelegate {\n\n\tfunction is(thing: IContextMenuDelegate | IContextMenuMenuDelegate): thing is IContextMenuMenuDelegate {\n\t\treturn thing && (<IContextMenuMenuDelegate>thing).menuId instanceof MenuId;\n\t}\n\n\texport function transform(delegate: IContextMenuDelegate | IContextMenuMenuDelegate, menuService: IMenuService, globalContextKeyService: IContextKeyService): IContextMenuDelegate {\n\t\tif (!is(delegate)) {\n\t\t\treturn delegate;\n\t\t}\n\t\tconst { menuId, menuActionOptions, contextKeyService } = delegate;\n\t\treturn {\n\t\t\t...delegate,\n\t\t\tgetActions: () => {\n\t\t\t\tlet target: IAction[] = [];\n\t\t\t\tif (menuId) {\n\t\t\t\t\tconst menu = menuService.getMenuActions(menuId, contextKeyService ?? globalContextKeyService, menuActionOptions);\n\t\t\t\t\ttarget = getFlatContextMenuActions(menu);\n\t\t\t\t}\n\t\t\t\tif (!delegate.getActions) {\n\t\t\t\t\treturn target;\n\t\t\t\t} else {\n\t\t\t\t\treturn Separator.join(delegate.getActions(), target);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IContextMenuDelegate } from '../../../base/browser/contextmenu.js';\nimport { ModifierKeyEmitter } from '../../../base/browser/dom.js';\nimport { IAction, Separator } from '../../../base/common/actions.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { getFlatContextMenuActions } from '../../actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuId } from '../../actions/common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { ContextMenuHandler, IContextMenuHandlerOptions } from './contextMenuHandler.js';\nimport { IContextMenuMenuDelegate, IContextMenuService, IContextViewService } from './contextView.js';\n\nexport class ContextMenuService extends Disposable implements IContextMenuService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _contextMenuHandler: ContextMenuHandler | undefined = undefined;\n\tprivate get contextMenuHandler(): ContextMenuHandler {\n\t\tif (!this._contextMenuHandler) {\n\t\t\tthis._contextMenuHandler = new ContextMenuHandler(this.contextViewService, this.telemetryService, this.notificationService, this.keybindingService);\n\t\t}\n\n\t\treturn this._contextMenuHandler;\n\t}\n\n\tprivate readonly _onDidShowContextMenu = this._store.add(new Emitter<void>());\n\treadonly onDidShowContextMenu = this._onDidShowContextMenu.event;\n\n\tprivate readonly _onDidHideContextMenu = this._store.add(new Emitter<void>());\n\treadonly onDidHideContextMenu = this._onDidHideContextMenu.event;\n\n\tconstructor(\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t}\n\n\tconfigure(options: IContextMenuHandlerOptions): void {\n\t\tthis.contextMenuHandler.configure(options);\n\t}\n\n\t// ContextMenu\n\n\tshowContextMenu(delegate: IContextMenuDelegate | IContextMenuMenuDelegate): void {\n\n\t\tdelegate = ContextMenuMenuDelegate.transform(delegate, this.menuService, this.contextKeyService);\n\n\t\tthis.contextMenuHandler.showContextMenu({\n\t\t\t...delegate,\n\t\t\tonHide: (didCancel) => {\n\t\t\t\tdelegate.onHide?.(didCancel);\n\n\t\t\t\tthis._onDidHideContextMenu.fire();\n\t\t\t}\n\t\t});\n\t\tModifierKeyEmitter.getInstance().resetKeyStatus();\n\t\tthis._onDidShowContextMenu.fire();\n\t}\n}\n\nexport namespace ContextMenuMenuDelegate {\n\n\tfunction is(thing: IContextMenuDelegate | IContextMenuMenuDelegate): thing is IContextMenuMenuDelegate {\n\t\treturn thing && (<IContextMenuMenuDelegate>thing).menuId instanceof MenuId;\n\t}\n\n\texport function transform(delegate: IContextMenuDelegate | IContextMenuMenuDelegate, menuService: IMenuService, globalContextKeyService: IContextKeyService): IContextMenuDelegate {\n\t\tif (!is(delegate)) {\n\t\t\treturn delegate;\n\t\t}\n\t\tconst { menuId, menuActionOptions, contextKeyService } = delegate;\n\t\treturn {\n\t\t\t...delegate,\n\t\t\tgetActions: () => {\n\t\t\t\tlet target: IAction[] = [];\n\t\t\t\tif (menuId) {\n\t\t\t\t\tconst menu = menuService.getMenuActions(menuId, contextKeyService ?? globalContextKeyService, menuActionOptions);\n\t\t\t\t\ttarget = getFlatContextMenuActions(menu);\n\t\t\t\t}\n\t\t\t\tif (!delegate.getActions) {\n\t\t\t\t\treturn target;\n\t\t\t\t} else {\n\t\t\t\t\treturn Separator.join(delegate.getActions(), target);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n"]}