{"version":3,"sources":["vs/platform/theme/common/colors/miscColors.ts"],"names":[],"mappings":"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","file":"miscColors.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\n\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n\n// Import the colors we need\nimport { contrastBorder, focusBorder } from './baseColors.js';\n\n\n// ----- sash\n\nexport const sashHoverBorder = registerColor('sash.hoverBorder',\n\tfocusBorder,\n\tnls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n\n\n// ----- badge\n\nexport const badgeBackground = registerColor('badge.background',\n\t{ dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' },\n\tnls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\n\nexport const badgeForeground = registerColor('badge.foreground',\n\t{ dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white },\n\tnls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\n\nexport const activityWarningBadgeForeground = registerColor('activityWarningBadge.foreground',\n\t{ dark: Color.black.lighten(0.2), light: Color.white, hcDark: null, hcLight: Color.black.lighten(0.2) },\n\tnls.localize('activityWarningBadge.foreground', 'Foreground color of the warning activity badge'));\n\nexport const activityWarningBadgeBackground = registerColor('activityWarningBadge.background',\n\t{ dark: '#CCA700', light: '#BF8803', hcDark: null, hcLight: '#CCA700' },\n\tnls.localize('activityWarningBadge.background', 'Background color of the warning activity badge'));\n\nexport const activityErrorBadgeForeground = registerColor('activityErrorBadge.foreground',\n\t{ dark: Color.black.lighten(0.2), light: Color.white, hcDark: null, hcLight: Color.black.lighten(0.2) },\n\tnls.localize('activityErrorBadge.foreground', 'Foreground color of the error activity badge'));\n\nexport const activityErrorBadgeBackground = registerColor('activityErrorBadge.background',\n\t{ dark: '#F14C4C', light: '#E51400', hcDark: null, hcLight: '#F14C4C' },\n\tnls.localize('activityErrorBadge.background', 'Background color of the error activity badge'));\n\n\n// ----- scrollbar\n\nexport const scrollbarShadow = registerColor('scrollbar.shadow',\n\t{ dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null },\n\tnls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\n\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background',\n\t{ dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) },\n\tnls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\n\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground',\n\t{ dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) },\n\tnls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\n\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground',\n\t{ dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\n\n\n// ----- progress bar\n\nexport const progressBarBackground = registerColor('progressBar.background',\n\t{ dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\n\n// ----- chart\n\nexport const chartLine = registerColor('chart.line',\n\t{ dark: '#236B8E', light: '#236B8E', hcDark: '#236B8E', hcLight: '#236B8E' },\n\tnls.localize('chartLine', \"Line color for the chart.\"));\n\nexport const chartAxis = registerColor('chart.axis',\n\t{ dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('chartAxis', \"Axis color for the chart.\"));\n\nexport const chartGuide = registerColor('chart.guide',\n\t{ dark: Color.fromHex('#BFBFBF').transparent(0.2), light: Color.fromHex('#000000').transparent(0.2), hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('chartGuide', \"Guide line for the chart.\"));\n"]}