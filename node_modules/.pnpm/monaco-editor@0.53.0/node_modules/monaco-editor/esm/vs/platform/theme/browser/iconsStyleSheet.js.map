{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/theme/browser/iconsStyleSheet.ts","vs/platform/theme/browser/iconsStyleSheet.ts"],"names":[],"mappings":"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","file":"iconsStyleSheet.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as css from '../../../base/browser/cssValue.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { DisposableStore, IDisposable } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { getIconRegistry, IconContribution, IconFontDefinition } from '../common/iconRegistry.js';\nimport { IProductIconTheme, IThemeService } from '../common/themeService.js';\n\nexport interface IIconsStyleSheet extends IDisposable {\n\tgetCSS(): css.CssFragment;\n\treadonly onDidChange: Event<void>;\n}\n\nexport function getIconsStyleSheet(themeService: IThemeService | undefined): IIconsStyleSheet {\n\tconst disposable = new DisposableStore();\n\n\tconst onDidChangeEmmiter = disposable.add(new Emitter<void>());\n\tconst iconRegistry = getIconRegistry();\n\tdisposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n\tif (themeService) {\n\t\tdisposable.add(themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire()));\n\t}\n\n\treturn {\n\t\tdispose: () => disposable.dispose(),\n\t\tonDidChange: onDidChangeEmmiter.event,\n\t\tgetCSS(): css.CssFragment {\n\t\t\tconst productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n\t\t\tconst usedFontIds: { [id: string]: IconFontDefinition } = {};\n\n\t\t\tconst rules = new css.Builder();\n\t\t\tconst rootAttribs = new css.Builder();\n\t\t\tfor (const contribution of iconRegistry.getIcons()) {\n\t\t\t\tconst definition = productIconTheme.getIcon(contribution);\n\t\t\t\tif (!definition) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst fontContribution = definition.font;\n\t\t\t\tconst fontFamilyVar = css.inline`--vscode-icon-${css.className(contribution.id)}-font-family`;\n\t\t\t\tconst contentVar = css.inline`--vscode-icon-${css.className(contribution.id)}-content`;\n\t\t\t\tif (fontContribution) {\n\t\t\t\t\tusedFontIds[fontContribution.id] = fontContribution.definition;\n\t\t\t\t\trootAttribs.push(\n\t\t\t\t\t\tcss.inline`${fontFamilyVar}: ${css.stringValue(fontContribution.id)};`,\n\t\t\t\t\t\tcss.inline`${contentVar}: ${css.stringValue(definition.fontCharacter)};`,\n\t\t\t\t\t);\n\t\t\t\t\trules.push(css.inline`.codicon-${css.className(contribution.id)}:before { content: ${css.stringValue(definition.fontCharacter)}; font-family: ${css.stringValue(fontContribution.id)}; }`);\n\t\t\t\t} else {\n\t\t\t\t\trootAttribs.push(css.inline`${contentVar}: ${css.stringValue(definition.fontCharacter)}; ${fontFamilyVar}: 'codicon';`);\n\t\t\t\t\trules.push(css.inline`.codicon-${css.className(contribution.id)}:before { content: ${css.stringValue(definition.fontCharacter)}; }`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const id in usedFontIds) {\n\t\t\t\tconst definition = usedFontIds[id];\n\t\t\t\tconst fontWeight = definition.weight ? css.inline`font-weight: ${css.identValue(definition.weight)};` : css.inline``;\n\t\t\t\tconst fontStyle = definition.style ? css.inline`font-style: ${css.identValue(definition.style)};` : css.inline``;\n\n\t\t\t\tconst src = new css.Builder();\n\t\t\t\tfor (const l of definition.src) {\n\t\t\t\t\tsrc.push(css.inline`${css.asCSSUrl(l.location)} format(${css.stringValue(l.format)})`);\n\t\t\t\t}\n\t\t\t\trules.push(css.inline`@font-face { src: ${src.join(', ')}; font-family: ${css.stringValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n\t\t\t}\n\n\t\t\trules.push(css.inline`:root { ${rootAttribs.join(' ')} }`);\n\n\t\t\treturn rules.join('\\n');\n\t\t}\n\t};\n}\n\nexport class UnthemedProductIconTheme implements IProductIconTheme {\n\tgetIcon(contribution: IconContribution) {\n\t\tconst iconRegistry = getIconRegistry();\n\t\tlet definition = contribution.defaults;\n\t\twhile (ThemeIcon.isThemeIcon(definition)) {\n\t\t\tconst c = iconRegistry.getIcon(definition.id);\n\t\t\tif (!c) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tdefinition = c.defaults;\n\t\t}\n\t\treturn definition;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as css from '../../../base/browser/cssValue.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { DisposableStore, IDisposable } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { getIconRegistry, IconContribution, IconFontDefinition } from '../common/iconRegistry.js';\nimport { IProductIconTheme, IThemeService } from '../common/themeService.js';\n\nexport interface IIconsStyleSheet extends IDisposable {\n\tgetCSS(): css.CssFragment;\n\treadonly onDidChange: Event<void>;\n}\n\nexport function getIconsStyleSheet(themeService: IThemeService | undefined): IIconsStyleSheet {\n\tconst disposable = new DisposableStore();\n\n\tconst onDidChangeEmmiter = disposable.add(new Emitter<void>());\n\tconst iconRegistry = getIconRegistry();\n\tdisposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n\tif (themeService) {\n\t\tdisposable.add(themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire()));\n\t}\n\n\treturn {\n\t\tdispose: () => disposable.dispose(),\n\t\tonDidChange: onDidChangeEmmiter.event,\n\t\tgetCSS(): css.CssFragment {\n\t\t\tconst productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n\t\t\tconst usedFontIds: { [id: string]: IconFontDefinition } = {};\n\n\t\t\tconst rules = new css.Builder();\n\t\t\tconst rootAttribs = new css.Builder();\n\t\t\tfor (const contribution of iconRegistry.getIcons()) {\n\t\t\t\tconst definition = productIconTheme.getIcon(contribution);\n\t\t\t\tif (!definition) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst fontContribution = definition.font;\n\t\t\t\tconst fontFamilyVar = css.inline`--vscode-icon-${css.className(contribution.id)}-font-family`;\n\t\t\t\tconst contentVar = css.inline`--vscode-icon-${css.className(contribution.id)}-content`;\n\t\t\t\tif (fontContribution) {\n\t\t\t\t\tusedFontIds[fontContribution.id] = fontContribution.definition;\n\t\t\t\t\trootAttribs.push(\n\t\t\t\t\t\tcss.inline`${fontFamilyVar}: ${css.stringValue(fontContribution.id)};`,\n\t\t\t\t\t\tcss.inline`${contentVar}: ${css.stringValue(definition.fontCharacter)};`,\n\t\t\t\t\t);\n\t\t\t\t\trules.push(css.inline`.codicon-${css.className(contribution.id)}:before { content: ${css.stringValue(definition.fontCharacter)}; font-family: ${css.stringValue(fontContribution.id)}; }`);\n\t\t\t\t} else {\n\t\t\t\t\trootAttribs.push(css.inline`${contentVar}: ${css.stringValue(definition.fontCharacter)}; ${fontFamilyVar}: 'codicon';`);\n\t\t\t\t\trules.push(css.inline`.codicon-${css.className(contribution.id)}:before { content: ${css.stringValue(definition.fontCharacter)}; }`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const id in usedFontIds) {\n\t\t\t\tconst definition = usedFontIds[id];\n\t\t\t\tconst fontWeight = definition.weight ? css.inline`font-weight: ${css.identValue(definition.weight)};` : css.inline``;\n\t\t\t\tconst fontStyle = definition.style ? css.inline`font-style: ${css.identValue(definition.style)};` : css.inline``;\n\n\t\t\t\tconst src = new css.Builder();\n\t\t\t\tfor (const l of definition.src) {\n\t\t\t\t\tsrc.push(css.inline`${css.asCSSUrl(l.location)} format(${css.stringValue(l.format)})`);\n\t\t\t\t}\n\t\t\t\trules.push(css.inline`@font-face { src: ${src.join(', ')}; font-family: ${css.stringValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n\t\t\t}\n\n\t\t\trules.push(css.inline`:root { ${rootAttribs.join(' ')} }`);\n\n\t\t\treturn rules.join('\\n');\n\t\t}\n\t};\n}\n\nexport class UnthemedProductIconTheme implements IProductIconTheme {\n\tgetIcon(contribution: IconContribution) {\n\t\tconst iconRegistry = getIconRegistry();\n\t\tlet definition = contribution.defaults;\n\t\twhile (ThemeIcon.isThemeIcon(definition)) {\n\t\t\tconst c = iconRegistry.getIcon(definition.id);\n\t\t\tif (!c) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tdefinition = c.defaults;\n\t\t}\n\t\treturn definition;\n\t}\n}\n"]}