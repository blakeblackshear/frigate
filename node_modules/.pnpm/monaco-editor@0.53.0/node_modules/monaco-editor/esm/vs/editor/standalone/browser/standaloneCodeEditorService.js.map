{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/standalone/browser/standaloneCodeEditorService.ts","vs/editor/standalone/browser/standaloneCodeEditorService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;AAEhG,OAAO,EAAE,kBAAkB,EAAE,MAAM,8BAA8B,CAAC;AAClE,OAAO,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAG1D,OAAO,EAAE,yBAAyB,EAAE,MAAM,qDAAqD,CAAC;AAChG,OAAO,EAAE,kBAAkB,EAAE,MAAM,6CAA6C,CAAC;AAIjF,OAAO,EAAe,kBAAkB,EAAE,MAAM,mDAAmD,CAAC;AAEpG,OAAO,EAAqB,iBAAiB,EAAE,MAAM,sDAAsD,CAAC;AAC5G,OAAO,EAAE,aAAa,EAAE,MAAM,gDAAgD,CAAC;AAExE,IAAM,2BAA2B,GAAjC,MAAM,2BAA4B,SAAQ,yBAAyB;IAKzE,YACqB,iBAAqC,EAC1C,YAA2B;QAE1C,KAAK,CAAC,YAAY,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,aAAa,GAAG,iBAAiB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACxE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAE9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,6BAA6B,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE;YACrF,IAAI,CAAC,MAAM,EAAE,CAAC;gBACb,OAAO,IAAI,CAAC;YACb,CAAC;YACD,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,gBAAgB;QACvB,IAAI,aAAa,GAAG,KAAK,CAAC;QAC1B,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC;YAC7C,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;gBAC5B,aAAa,GAAG,IAAI,CAAC;gBACrB,MAAM;YACP,CAAC;QACF,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACvC,CAAC;IAEM,mBAAmB,CAAC,gBAAoC;QAC9D,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;IAC3C,CAAC;IAEM,mBAAmB;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAC/B,CAAC;IAGO,YAAY,CAAC,MAAmB,EAAE,KAA+B;QACxE,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,EAAE,CAAC;YACZ,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;gBAEpB,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;gBACrC,IAAI,MAAM,KAAK,OAAO,CAAC,IAAI,IAAI,MAAM,KAAK,OAAO,CAAC,KAAK,EAAE,CAAC;oBACzD,8CAA8C;oBAC9C,kBAAkB,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAC9C,OAAO,MAAM,CAAC;gBACf,CAAC;YACF,CAAC;YACD,OAAO,IAAI,CAAC;QACb,CAAC;QAED,MAAM,SAAS,GAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC3E,IAAI,SAAS,EAAE,CAAC;YACf,IAAI,OAAO,SAAS,CAAC,aAAa,KAAK,QAAQ,IAAI,OAAO,SAAS,CAAC,SAAS,KAAK,QAAQ,EAAE,CAAC;gBAC5F,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBAC/B,MAAM,CAAC,mBAAmB,CAAC,SAAS,+BAAuB,CAAC;YAC7D,CAAC;iBAAM,CAAC;gBACP,MAAM,GAAG,GAAG;oBACX,UAAU,EAAE,SAAS,CAAC,eAAe;oBACrC,MAAM,EAAE,SAAS,CAAC,WAAW;iBAC7B,CAAC;gBACF,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACxB,MAAM,CAAC,sBAAsB,CAAC,GAAG,+BAAuB,CAAC;YAC1D,CAAC;QACF,CAAC;QAED,OAAO,MAAM,CAAC;IACf,CAAC;IAEO,SAAS,CAAC,MAAmB,EAAE,QAAa;QACnD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAChC,IAAI,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC3D,OAAO,IAAI,CAAC;QACb,CAAC;QAED,OAAO,KAAK,CAAC;IACd,CAAC;CACD,CAAA;AApFY,2BAA2B;IAMrC,WAAA,kBAAkB,CAAA;IAClB,WAAA,aAAa,CAAA;GAPH,2BAA2B,CAoFvC;;AAED,iBAAiB,CAAC,kBAAkB,EAAE,2BAA2B,kCAA0B,CAAC","file":"standaloneCodeEditorService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { windowOpenNoOpener } from '../../../base/browser/dom.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditor } from '../../browser/editorBrowser.js';\nimport { AbstractCodeEditorService } from '../../browser/services/abstractCodeEditorService.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { IRange } from '../../common/core/range.js';\nimport { ScrollType } from '../../common/editorCommon.js';\nimport { ITextModel } from '../../common/model.js';\nimport { IContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { ITextResourceEditorInput } from '../../../platform/editor/common/editor.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\n\nexport class StandaloneCodeEditorService extends AbstractCodeEditorService {\n\n\tprivate readonly _editorIsOpen: IContextKey<boolean>;\n\tprivate _activeCodeEditor: ICodeEditor | null;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tsuper(themeService);\n\t\tthis._register(this.onCodeEditorAdd(() => this._checkContextKey()));\n\t\tthis._register(this.onCodeEditorRemove(() => this._checkContextKey()));\n\t\tthis._editorIsOpen = contextKeyService.createKey('editorIsOpen', false);\n\t\tthis._activeCodeEditor = null;\n\n\t\tthis._register(this.registerCodeEditorOpenHandler(async (input, source, sideBySide) => {\n\t\t\tif (!source) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn this.doOpenEditor(source, input);\n\t\t}));\n\t}\n\n\tprivate _checkContextKey(): void {\n\t\tlet hasCodeEditor = false;\n\t\tfor (const editor of this.listCodeEditors()) {\n\t\t\tif (!editor.isSimpleWidget) {\n\t\t\t\thasCodeEditor = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._editorIsOpen.set(hasCodeEditor);\n\t}\n\n\tpublic setActiveCodeEditor(activeCodeEditor: ICodeEditor | null): void {\n\t\tthis._activeCodeEditor = activeCodeEditor;\n\t}\n\n\tpublic getActiveCodeEditor(): ICodeEditor | null {\n\t\treturn this._activeCodeEditor;\n\t}\n\n\n\tprivate doOpenEditor(editor: ICodeEditor, input: ITextResourceEditorInput): ICodeEditor | null {\n\t\tconst model = this.findModel(editor, input.resource);\n\t\tif (!model) {\n\t\t\tif (input.resource) {\n\n\t\t\t\tconst schema = input.resource.scheme;\n\t\t\t\tif (schema === Schemas.http || schema === Schemas.https) {\n\t\t\t\t\t// This is a fully qualified http or https URL\n\t\t\t\t\twindowOpenNoOpener(input.resource.toString());\n\t\t\t\t\treturn editor;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst selection = <IRange>(input.options ? input.options.selection : null);\n\t\tif (selection) {\n\t\t\tif (typeof selection.endLineNumber === 'number' && typeof selection.endColumn === 'number') {\n\t\t\t\teditor.setSelection(selection);\n\t\t\t\teditor.revealRangeInCenter(selection, ScrollType.Immediate);\n\t\t\t} else {\n\t\t\t\tconst pos = {\n\t\t\t\t\tlineNumber: selection.startLineNumber,\n\t\t\t\t\tcolumn: selection.startColumn\n\t\t\t\t};\n\t\t\t\teditor.setPosition(pos);\n\t\t\t\teditor.revealPositionInCenter(pos, ScrollType.Immediate);\n\t\t\t}\n\t\t}\n\n\t\treturn editor;\n\t}\n\n\tprivate findModel(editor: ICodeEditor, resource: URI): ITextModel | null {\n\t\tconst model = editor.getModel();\n\t\tif (model && model.uri.toString() !== resource.toString()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn model;\n\t}\n}\n\nregisterSingleton(ICodeEditorService, StandaloneCodeEditorService, InstantiationType.Eager);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { windowOpenNoOpener } from '../../../base/browser/dom.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditor } from '../../browser/editorBrowser.js';\nimport { AbstractCodeEditorService } from '../../browser/services/abstractCodeEditorService.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { IRange } from '../../common/core/range.js';\nimport { ScrollType } from '../../common/editorCommon.js';\nimport { ITextModel } from '../../common/model.js';\nimport { IContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { ITextResourceEditorInput } from '../../../platform/editor/common/editor.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\n\nexport class StandaloneCodeEditorService extends AbstractCodeEditorService {\n\n\tprivate readonly _editorIsOpen: IContextKey<boolean>;\n\tprivate _activeCodeEditor: ICodeEditor | null;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tsuper(themeService);\n\t\tthis._register(this.onCodeEditorAdd(() => this._checkContextKey()));\n\t\tthis._register(this.onCodeEditorRemove(() => this._checkContextKey()));\n\t\tthis._editorIsOpen = contextKeyService.createKey('editorIsOpen', false);\n\t\tthis._activeCodeEditor = null;\n\n\t\tthis._register(this.registerCodeEditorOpenHandler(async (input, source, sideBySide) => {\n\t\t\tif (!source) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn this.doOpenEditor(source, input);\n\t\t}));\n\t}\n\n\tprivate _checkContextKey(): void {\n\t\tlet hasCodeEditor = false;\n\t\tfor (const editor of this.listCodeEditors()) {\n\t\t\tif (!editor.isSimpleWidget) {\n\t\t\t\thasCodeEditor = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._editorIsOpen.set(hasCodeEditor);\n\t}\n\n\tpublic setActiveCodeEditor(activeCodeEditor: ICodeEditor | null): void {\n\t\tthis._activeCodeEditor = activeCodeEditor;\n\t}\n\n\tpublic getActiveCodeEditor(): ICodeEditor | null {\n\t\treturn this._activeCodeEditor;\n\t}\n\n\n\tprivate doOpenEditor(editor: ICodeEditor, input: ITextResourceEditorInput): ICodeEditor | null {\n\t\tconst model = this.findModel(editor, input.resource);\n\t\tif (!model) {\n\t\t\tif (input.resource) {\n\n\t\t\t\tconst schema = input.resource.scheme;\n\t\t\t\tif (schema === Schemas.http || schema === Schemas.https) {\n\t\t\t\t\t// This is a fully qualified http or https URL\n\t\t\t\t\twindowOpenNoOpener(input.resource.toString());\n\t\t\t\t\treturn editor;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst selection = <IRange>(input.options ? input.options.selection : null);\n\t\tif (selection) {\n\t\t\tif (typeof selection.endLineNumber === 'number' && typeof selection.endColumn === 'number') {\n\t\t\t\teditor.setSelection(selection);\n\t\t\t\teditor.revealRangeInCenter(selection, ScrollType.Immediate);\n\t\t\t} else {\n\t\t\t\tconst pos = {\n\t\t\t\t\tlineNumber: selection.startLineNumber,\n\t\t\t\t\tcolumn: selection.startColumn\n\t\t\t\t};\n\t\t\t\teditor.setPosition(pos);\n\t\t\t\teditor.revealPositionInCenter(pos, ScrollType.Immediate);\n\t\t\t}\n\t\t}\n\n\t\treturn editor;\n\t}\n\n\tprivate findModel(editor: ICodeEditor, resource: URI): ITextModel | null {\n\t\tconst model = editor.getModel();\n\t\tif (model && model.uri.toString() !== resource.toString()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn model;\n\t}\n}\n\nregisterSingleton(ICodeEditorService, StandaloneCodeEditorService, InstantiationType.Eager);\n"]}