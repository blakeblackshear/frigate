{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/sectionHeaders/browser/sectionHeaders.ts","vs/editor/contrib/sectionHeaders/browser/sectionHeaders.ts"],"names":[],"mappings":"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","file":"sectionHeaders.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorOption, IEditorMinimapOptions } from '../../../common/config/editorOptions.js';\nimport { IEditorContribution, IEditorDecorationsCollection } from '../../../common/editorCommon.js';\nimport { StandardTokenType } from '../../../common/encodedTokenAttributes.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelDeltaDecoration, MinimapPosition, MinimapSectionHeaderStyle, TrackedRangeStickiness } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { FindSectionHeaderOptions, SectionHeader } from '../../../common/services/findSectionHeaders.js';\n\nexport class SectionHeaderDetector extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID: string = 'editor.sectionHeaderDetector';\n\n\tprivate options: FindSectionHeaderOptions | undefined;\n\tprivate decorations: IEditorDecorationsCollection;\n\tprivate computeSectionHeaders: RunOnceScheduler;\n\tprivate computePromise: CancelablePromise<SectionHeader[]> | null;\n\tprivate currentOccurrences: { [decorationId: string]: SectionHeaderOccurrence };\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@ILanguageConfigurationService private readonly languageConfigurationService: ILanguageConfigurationService,\n\t\t@IEditorWorkerService private readonly editorWorkerService: IEditorWorkerService,\n\t) {\n\t\tsuper();\n\t\tthis.decorations = this.editor.createDecorationsCollection();\n\n\t\tthis.options = this.createOptions(editor.getOption(EditorOption.minimap));\n\t\tthis.computePromise = null;\n\t\tthis.currentOccurrences = {};\n\n\t\tthis._register(editor.onDidChangeModel((e) => {\n\t\t\tthis.currentOccurrences = {};\n\t\t\tthis.options = this.createOptions(editor.getOption(EditorOption.minimap));\n\t\t\tthis.stop();\n\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t}));\n\n\t\tthis._register(editor.onDidChangeModelLanguage((e) => {\n\t\t\tthis.currentOccurrences = {};\n\t\t\tthis.options = this.createOptions(editor.getOption(EditorOption.minimap));\n\t\t\tthis.stop();\n\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t}));\n\n\t\tthis._register(languageConfigurationService.onDidChange((e) => {\n\t\t\tconst editorLanguageId = this.editor.getModel()?.getLanguageId();\n\t\t\tif (editorLanguageId && e.affects(editorLanguageId)) {\n\t\t\t\tthis.currentOccurrences = {};\n\t\t\t\tthis.options = this.createOptions(editor.getOption(EditorOption.minimap));\n\t\t\t\tthis.stop();\n\t\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(editor.onDidChangeConfiguration(e => {\n\t\t\tif (this.options && !e.hasChanged(EditorOption.minimap)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.options = this.createOptions(editor.getOption(EditorOption.minimap));\n\n\t\t\t// Remove any links (for the getting disabled case)\n\t\t\tthis.updateDecorations([]);\n\n\t\t\t// Stop any computation (for the getting disabled case)\n\t\t\tthis.stop();\n\n\t\t\t// Start computing (for the getting enabled case)\n\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t}));\n\n\t\tthis._register(this.editor.onDidChangeModelContent(e => {\n\t\t\tthis.computeSectionHeaders.schedule();\n\t\t}));\n\n\t\tthis._register(editor.onDidChangeModelTokens((e) => {\n\t\t\tif (!this.computeSectionHeaders.isScheduled()) {\n\t\t\t\tthis.computeSectionHeaders.schedule(1000);\n\t\t\t}\n\t\t}));\n\n\t\tthis.computeSectionHeaders = this._register(new RunOnceScheduler(() => {\n\t\t\tthis.findSectionHeaders();\n\t\t}, 250));\n\n\t\tthis.computeSectionHeaders.schedule(0);\n\t}\n\n\tprivate createOptions(minimap: Readonly<Required<IEditorMinimapOptions>>): FindSectionHeaderOptions | undefined {\n\t\tif (!minimap || !this.editor.hasModel()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst languageId = this.editor.getModel().getLanguageId();\n\t\tif (!languageId) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst commentsConfiguration = this.languageConfigurationService.getLanguageConfiguration(languageId).comments;\n\t\tconst foldingRules = this.languageConfigurationService.getLanguageConfiguration(languageId).foldingRules;\n\n\t\tif (!commentsConfiguration && !foldingRules?.markers) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tfoldingRules,\n\t\t\tmarkSectionHeaderRegex: minimap.markSectionHeaderRegex,\n\t\t\tfindMarkSectionHeaders: minimap.showMarkSectionHeaders,\n\t\t\tfindRegionSectionHeaders: minimap.showRegionSectionHeaders,\n\t\t};\n\t}\n\n\tprivate findSectionHeaders() {\n\t\tif (!this.editor.hasModel()\n\t\t\t|| (!this.options?.findMarkSectionHeaders && !this.options?.findRegionSectionHeaders)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (model.isDisposed() || model.isTooLargeForSyncing()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelVersionId = model.getVersionId();\n\t\tthis.editorWorkerService.findSectionHeaders(model.uri, this.options)\n\t\t\t.then((sectionHeaders) => {\n\t\t\t\tif (model.isDisposed() || model.getVersionId() !== modelVersionId) {\n\t\t\t\t\t// model changed in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.updateDecorations(sectionHeaders);\n\t\t\t});\n\t}\n\n\tprivate updateDecorations(sectionHeaders: SectionHeader[]): void {\n\n\t\tconst model = this.editor.getModel();\n\t\tif (model) {\n\t\t\t// Remove all section headers that should be in comments and are not in comments\n\t\t\tsectionHeaders = sectionHeaders.filter((sectionHeader) => {\n\t\t\t\tif (!sectionHeader.shouldBeInComments) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tconst validRange = model.validateRange(sectionHeader.range);\n\t\t\t\tconst tokens = model.tokenization.getLineTokens(validRange.startLineNumber);\n\t\t\t\tconst idx = tokens.findTokenIndexAtOffset(validRange.startColumn - 1);\n\t\t\t\tconst tokenType = tokens.getStandardTokenType(idx);\n\t\t\t\tconst languageId = tokens.getLanguageId(idx);\n\t\t\t\treturn (languageId === model.getLanguageId() && tokenType === StandardTokenType.Comment);\n\t\t\t});\n\t\t}\n\n\t\tconst oldDecorations = Object.values(this.currentOccurrences).map(occurrence => occurrence.decorationId);\n\t\tconst newDecorations = sectionHeaders.map(sectionHeader => decoration(sectionHeader));\n\n\t\tthis.editor.changeDecorations((changeAccessor) => {\n\t\t\tconst decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n\n\t\t\tthis.currentOccurrences = {};\n\t\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\t\tconst occurrence = { sectionHeader: sectionHeaders[i], decorationId: decorations[i] };\n\t\t\t\tthis.currentOccurrences[occurrence.decorationId] = occurrence;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate stop(): void {\n\t\tthis.computeSectionHeaders.cancel();\n\t\tif (this.computePromise) {\n\t\t\tthis.computePromise.cancel();\n\t\t\tthis.computePromise = null;\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.stop();\n\t\tthis.decorations.clear();\n\t}\n\n}\n\ninterface SectionHeaderOccurrence {\n\treadonly decorationId: string;\n}\n\nfunction decoration(sectionHeader: SectionHeader): IModelDeltaDecoration {\n\treturn {\n\t\trange: sectionHeader.range,\n\t\toptions: ModelDecorationOptions.createDynamic({\n\t\t\tdescription: 'section-header',\n\t\t\tstickiness: TrackedRangeStickiness.GrowsOnlyWhenTypingAfter,\n\t\t\tcollapseOnReplaceEdit: true,\n\t\t\tminimap: {\n\t\t\t\tcolor: undefined,\n\t\t\t\tposition: MinimapPosition.Inline,\n\t\t\t\tsectionHeaderStyle: sectionHeader.hasSeparatorLine ? MinimapSectionHeaderStyle.Underlined : MinimapSectionHeaderStyle.Normal,\n\t\t\t\tsectionHeaderText: sectionHeader.text,\n\t\t\t},\n\t\t})\n\t};\n}\n\nregisterEditorContribution(SectionHeaderDetector.ID, SectionHeaderDetector, EditorContributionInstantiation.AfterFirstRender);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorOption, IEditorMinimapOptions } from '../../../common/config/editorOptions.js';\nimport { IEditorContribution, IEditorDecorationsCollection } from '../../../common/editorCommon.js';\nimport { StandardTokenType } from '../../../common/encodedTokenAttributes.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelDeltaDecoration, MinimapPosition, MinimapSectionHeaderStyle, TrackedRangeStickiness } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { FindSectionHeaderOptions, SectionHeader } from '../../../common/services/findSectionHeaders.js';\n\nexport class SectionHeaderDetector extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID: string = 'editor.sectionHeaderDetector';\n\n\tprivate options: FindSectionHeaderOptions | undefined;\n\tprivate decorations: IEditorDecorationsCollection;\n\tprivate computeSectionHeaders: RunOnceScheduler;\n\tprivate computePromise: CancelablePromise<SectionHeader[]> | null;\n\tprivate currentOccurrences: { [decorationId: string]: SectionHeaderOccurrence };\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@ILanguageConfigurationService private readonly languageConfigurationService: ILanguageConfigurationService,\n\t\t@IEditorWorkerService private readonly editorWorkerService: IEditorWorkerService,\n\t) {\n\t\tsuper();\n\t\tthis.decorations = this.editor.createDecorationsCollection();\n\n\t\tthis.options = this.createOptions(editor.getOption(EditorOption.minimap));\n\t\tthis.computePromise = null;\n\t\tthis.currentOccurrences = {};\n\n\t\tthis._register(editor.onDidChangeModel((e) => {\n\t\t\tthis.currentOccurrences = {};\n\t\t\tthis.options = this.createOptions(editor.getOption(EditorOption.minimap));\n\t\t\tthis.stop();\n\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t}));\n\n\t\tthis._register(editor.onDidChangeModelLanguage((e) => {\n\t\t\tthis.currentOccurrences = {};\n\t\t\tthis.options = this.createOptions(editor.getOption(EditorOption.minimap));\n\t\t\tthis.stop();\n\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t}));\n\n\t\tthis._register(languageConfigurationService.onDidChange((e) => {\n\t\t\tconst editorLanguageId = this.editor.getModel()?.getLanguageId();\n\t\t\tif (editorLanguageId && e.affects(editorLanguageId)) {\n\t\t\t\tthis.currentOccurrences = {};\n\t\t\t\tthis.options = this.createOptions(editor.getOption(EditorOption.minimap));\n\t\t\t\tthis.stop();\n\t\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(editor.onDidChangeConfiguration(e => {\n\t\t\tif (this.options && !e.hasChanged(EditorOption.minimap)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.options = this.createOptions(editor.getOption(EditorOption.minimap));\n\n\t\t\t// Remove any links (for the getting disabled case)\n\t\t\tthis.updateDecorations([]);\n\n\t\t\t// Stop any computation (for the getting disabled case)\n\t\t\tthis.stop();\n\n\t\t\t// Start computing (for the getting enabled case)\n\t\t\tthis.computeSectionHeaders.schedule(0);\n\t\t}));\n\n\t\tthis._register(this.editor.onDidChangeModelContent(e => {\n\t\t\tthis.computeSectionHeaders.schedule();\n\t\t}));\n\n\t\tthis._register(editor.onDidChangeModelTokens((e) => {\n\t\t\tif (!this.computeSectionHeaders.isScheduled()) {\n\t\t\t\tthis.computeSectionHeaders.schedule(1000);\n\t\t\t}\n\t\t}));\n\n\t\tthis.computeSectionHeaders = this._register(new RunOnceScheduler(() => {\n\t\t\tthis.findSectionHeaders();\n\t\t}, 250));\n\n\t\tthis.computeSectionHeaders.schedule(0);\n\t}\n\n\tprivate createOptions(minimap: Readonly<Required<IEditorMinimapOptions>>): FindSectionHeaderOptions | undefined {\n\t\tif (!minimap || !this.editor.hasModel()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst languageId = this.editor.getModel().getLanguageId();\n\t\tif (!languageId) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst commentsConfiguration = this.languageConfigurationService.getLanguageConfiguration(languageId).comments;\n\t\tconst foldingRules = this.languageConfigurationService.getLanguageConfiguration(languageId).foldingRules;\n\n\t\tif (!commentsConfiguration && !foldingRules?.markers) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tfoldingRules,\n\t\t\tmarkSectionHeaderRegex: minimap.markSectionHeaderRegex,\n\t\t\tfindMarkSectionHeaders: minimap.showMarkSectionHeaders,\n\t\t\tfindRegionSectionHeaders: minimap.showRegionSectionHeaders,\n\t\t};\n\t}\n\n\tprivate findSectionHeaders() {\n\t\tif (!this.editor.hasModel()\n\t\t\t|| (!this.options?.findMarkSectionHeaders && !this.options?.findRegionSectionHeaders)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (model.isDisposed() || model.isTooLargeForSyncing()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelVersionId = model.getVersionId();\n\t\tthis.editorWorkerService.findSectionHeaders(model.uri, this.options)\n\t\t\t.then((sectionHeaders) => {\n\t\t\t\tif (model.isDisposed() || model.getVersionId() !== modelVersionId) {\n\t\t\t\t\t// model changed in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.updateDecorations(sectionHeaders);\n\t\t\t});\n\t}\n\n\tprivate updateDecorations(sectionHeaders: SectionHeader[]): void {\n\n\t\tconst model = this.editor.getModel();\n\t\tif (model) {\n\t\t\t// Remove all section headers that should be in comments and are not in comments\n\t\t\tsectionHeaders = sectionHeaders.filter((sectionHeader) => {\n\t\t\t\tif (!sectionHeader.shouldBeInComments) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tconst validRange = model.validateRange(sectionHeader.range);\n\t\t\t\tconst tokens = model.tokenization.getLineTokens(validRange.startLineNumber);\n\t\t\t\tconst idx = tokens.findTokenIndexAtOffset(validRange.startColumn - 1);\n\t\t\t\tconst tokenType = tokens.getStandardTokenType(idx);\n\t\t\t\tconst languageId = tokens.getLanguageId(idx);\n\t\t\t\treturn (languageId === model.getLanguageId() && tokenType === StandardTokenType.Comment);\n\t\t\t});\n\t\t}\n\n\t\tconst oldDecorations = Object.values(this.currentOccurrences).map(occurrence => occurrence.decorationId);\n\t\tconst newDecorations = sectionHeaders.map(sectionHeader => decoration(sectionHeader));\n\n\t\tthis.editor.changeDecorations((changeAccessor) => {\n\t\t\tconst decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n\n\t\t\tthis.currentOccurrences = {};\n\t\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\t\tconst occurrence = { sectionHeader: sectionHeaders[i], decorationId: decorations[i] };\n\t\t\t\tthis.currentOccurrences[occurrence.decorationId] = occurrence;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate stop(): void {\n\t\tthis.computeSectionHeaders.cancel();\n\t\tif (this.computePromise) {\n\t\t\tthis.computePromise.cancel();\n\t\t\tthis.computePromise = null;\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.stop();\n\t\tthis.decorations.clear();\n\t}\n\n}\n\ninterface SectionHeaderOccurrence {\n\treadonly decorationId: string;\n}\n\nfunction decoration(sectionHeader: SectionHeader): IModelDeltaDecoration {\n\treturn {\n\t\trange: sectionHeader.range,\n\t\toptions: ModelDecorationOptions.createDynamic({\n\t\t\tdescription: 'section-header',\n\t\t\tstickiness: TrackedRangeStickiness.GrowsOnlyWhenTypingAfter,\n\t\t\tcollapseOnReplaceEdit: true,\n\t\t\tminimap: {\n\t\t\t\tcolor: undefined,\n\t\t\t\tposition: MinimapPosition.Inline,\n\t\t\t\tsectionHeaderStyle: sectionHeader.hasSeparatorLine ? MinimapSectionHeaderStyle.Underlined : MinimapSectionHeaderStyle.Normal,\n\t\t\t\tsectionHeaderText: sectionHeader.text,\n\t\t\t},\n\t\t})\n\t};\n}\n\nregisterEditorContribution(SectionHeaderDetector.ID, SectionHeaderDetector, EditorContributionInstantiation.AfterFirstRender);\n"]}