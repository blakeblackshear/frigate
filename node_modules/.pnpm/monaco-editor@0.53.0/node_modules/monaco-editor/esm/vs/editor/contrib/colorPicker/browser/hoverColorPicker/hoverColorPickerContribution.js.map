{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/colorPicker/browser/hoverColorPicker/hoverColorPickerContribution.ts","vs/editor/contrib/colorPicker/browser/hoverColorPicker/hoverColorPickerContribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,OAAO,EAAE,UAAU,EAAE,MAAM,yCAAyC,CAAC;AAGrE,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AAEzD,OAAO,EAAE,sBAAsB,EAAE,MAAM,kDAAkD,CAAC;AAE1F,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAE3D,MAAM,OAAO,4BAA6B,SAAQ,UAAU;aAEpC,OAAE,GAAW,kCAAkC,CAAC,GAAC,KAAK;IAE7E,YAA6B,OAAoB;QAEhD,KAAK,EAAE,CAAC;QAFoB,YAAO,GAAP,OAAO,CAAa;QAGhD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC;IAEQ,OAAO;QACf,KAAK,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEO,WAAW,CAAC,UAA6B;QAEhD,MAAM,0BAA0B,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,mDAAyC,CAAC;QACnG,IAAI,0BAA0B,KAAK,OAAO,IAAI,0BAA0B,KAAK,eAAe,EAAE,CAAC;YAC9F,OAAO;QACR,CAAC;QACD,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE,CAAC;YACrC,OAAO;QACR,CAAC;QACD,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAyB,sBAAsB,CAAC,EAAE,CAAC,CAAC;QACxG,IAAI,CAAC,eAAe,EAAE,CAAC;YACtB,OAAO;QACR,CAAC;QACD,IAAI,eAAe,CAAC,oBAAoB,EAAE,CAAC;YAC1C,OAAO;QACR,CAAC;QACD,MAAM,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,WAAW,EAAE,CAAC;YAClB,OAAO;QACR,CAAC;QACD,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,eAAe,EAAE,WAAW,CAAC,WAAW,GAAG,CAAC,EAAE,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACxI,eAAe,CAAC,gBAAgB,CAAC,KAAK,oEAAoD,KAAK,CAAC,CAAC;IAClG,CAAC","file":"hoverColorPickerContribution.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditor, IEditorMouseEvent } from '../../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { IEditorContribution } from '../../../../common/editorCommon.js';\nimport { ContentHoverController } from '../../../hover/browser/contentHoverController.js';\nimport { HoverStartMode, HoverStartSource } from '../../../hover/browser/hoverOperation.js';\nimport { isOnColorDecorator } from './hoverColorPicker.js';\n\nexport class HoverColorPickerContribution extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID: string = 'editor.contrib.colorContribution'; // ms\n\n\tconstructor(private readonly _editor: ICodeEditor,\n\t) {\n\t\tsuper();\n\t\tthis._register(_editor.onMouseDown((e) => this.onMouseDown(e)));\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate onMouseDown(mouseEvent: IEditorMouseEvent) {\n\n\t\tconst colorDecoratorsActivatedOn = this._editor.getOption(EditorOption.colorDecoratorsActivatedOn);\n\t\tif (colorDecoratorsActivatedOn !== 'click' && colorDecoratorsActivatedOn !== 'clickAndHover') {\n\t\t\treturn;\n\t\t}\n\t\tif (!isOnColorDecorator(mouseEvent)) {\n\t\t\treturn;\n\t\t}\n\t\tconst hoverController = this._editor.getContribution<ContentHoverController>(ContentHoverController.ID);\n\t\tif (!hoverController) {\n\t\t\treturn;\n\t\t}\n\t\tif (hoverController.isColorPickerVisible) {\n\t\t\treturn;\n\t\t}\n\t\tconst targetRange = mouseEvent.target.range;\n\t\tif (!targetRange) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = new Range(targetRange.startLineNumber, targetRange.startColumn + 1, targetRange.endLineNumber, targetRange.endColumn + 1);\n\t\thoverController.showContentHover(range, HoverStartMode.Immediate, HoverStartSource.Click, false);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditor, IEditorMouseEvent } from '../../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { IEditorContribution } from '../../../../common/editorCommon.js';\nimport { ContentHoverController } from '../../../hover/browser/contentHoverController.js';\nimport { HoverStartMode, HoverStartSource } from '../../../hover/browser/hoverOperation.js';\nimport { isOnColorDecorator } from './hoverColorPicker.js';\n\nexport class HoverColorPickerContribution extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID: string = 'editor.contrib.colorContribution'; // ms\n\n\tconstructor(private readonly _editor: ICodeEditor,\n\t) {\n\t\tsuper();\n\t\tthis._register(_editor.onMouseDown((e) => this.onMouseDown(e)));\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate onMouseDown(mouseEvent: IEditorMouseEvent) {\n\n\t\tconst colorDecoratorsActivatedOn = this._editor.getOption(EditorOption.colorDecoratorsActivatedOn);\n\t\tif (colorDecoratorsActivatedOn !== 'click' && colorDecoratorsActivatedOn !== 'clickAndHover') {\n\t\t\treturn;\n\t\t}\n\t\tif (!isOnColorDecorator(mouseEvent)) {\n\t\t\treturn;\n\t\t}\n\t\tconst hoverController = this._editor.getContribution<ContentHoverController>(ContentHoverController.ID);\n\t\tif (!hoverController) {\n\t\t\treturn;\n\t\t}\n\t\tif (hoverController.isColorPickerVisible) {\n\t\t\treturn;\n\t\t}\n\t\tconst targetRange = mouseEvent.target.range;\n\t\tif (!targetRange) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = new Range(targetRange.startLineNumber, targetRange.startColumn + 1, targetRange.endLineNumber, targetRange.endColumn + 1);\n\t\thoverController.showContentHover(range, HoverStartMode.Immediate, HoverStartSource.Click, false);\n\t}\n}\n"]}