{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/widget/diffEditor/utils.ts","vs/editor/browser/widget/diffEditor/utils.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAGhG,OAAO,EAAE,QAAQ,EAAE,MAAM,uCAAuC,CAAC;AACjE,OAAO,EAAE,uBAAuB,EAAE,MAAM,yCAAyC,CAAC;AAClF,OAAO,EAAE,UAAU,EAAE,eAAe,EAA2B,YAAY,EAAE,MAAM,sCAAsC,CAAC;AAC1H,OAAO,EAA2D,OAAO,EAAE,oBAAoB,EAAE,WAAW,EAAE,gBAAgB,EAAE,eAAe,EAAE,WAAW,EAAE,MAAM,uCAAuC,CAAC;AAC5M,OAAO,EAAE,mBAAmB,EAAE,MAAM,qCAAqC,CAAC;AAE1E,OAAO,EAAE,QAAQ,EAAE,MAAM,kCAAkC,CAAC;AAC5D,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AAGtD,OAAO,EAAE,UAAU,EAAE,MAAM,yCAAyC,CAAC;AAErE,MAAM,UAAU,WAAW,CAAI,IAAkB,EAAE,IAAkB,EAAE,WAA+B,EAAE,OAA4B;IACnI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACvB,OAAO,IAAI,CAAC;IACb,CAAC;IACD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACvB,OAAO,IAAI,CAAC;IACb,CAAC;IAED,MAAM,MAAM,GAAQ,EAAE,CAAC;IACvB,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC3C,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;QAE/B,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,EAAE,CAAC;QACL,CAAC;aAAM,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,EAAE,CAAC;QACL,CAAC;aAAM,CAAC;YACP,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YACjC,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;QACL,CAAC;IACF,CAAC;IACD,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,EAAE,CAAC;IACL,CAAC;IACD,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,EAAE,CAAC;IACL,CAAC;IACD,OAAO,MAAM,CAAC;AACf,CAAC;AAED,oBAAoB;AACpB,MAAM,UAAU,0BAA0B,CAAC,MAAmB,EAAE,WAAiD;IAChH,MAAM,CAAC,GAAG,IAAI,eAAe,EAAE,CAAC;IAChC,MAAM,qBAAqB,GAAG,MAAM,CAAC,2BAA2B,EAAE,CAAC;IACnE,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,0BAA0B,WAAW,CAAC,SAAS,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE;QAClG,MAAM,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnC,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,GAAG,CAAC;QACL,OAAO,EAAE,GAAG,EAAE;YACb,qBAAqB,CAAC,KAAK,EAAE,CAAC;QAC/B,CAAC;KACD,CAAC,CAAC;IACH,OAAO,CAAC,CAAC;AACV,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAC,MAAmB,EAAE,KAAkB;IAC5E,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC1B,OAAO,YAAY,CAAC,GAAG,EAAE;QACxB,KAAK,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,MAAmB,EAAE,KAAkB;IAC7E,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACtB,OAAO,YAAY,CAAC,GAAG,EAAE;QACxB,KAAK,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,OAAO,6BAA8B,SAAQ,UAAU;IAI5D,IAAW,KAAK,KAA0B,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAG/D,IAAW,MAAM,KAA0B,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAGjE,IAAW,eAAe,KAAc,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAEvE,YAAY,OAA2B,EAAE,SAAiC;QACzE,KAAK,EAAE,CAAC;QAJD,qBAAgB,GAAY,KAAK,CAAC;QAMzC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzE,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC,CAAC;QAE3E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE;YACzE,6DAA6D;YAC7D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;YACzD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAEM,OAAO,CAAC,SAAsB;QACpC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC7C,CAAC;IAEM,kBAAkB,CAAC,eAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QACxC,IAAI,eAAe,EAAE,CAAC;YACrB,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC;QAC3C,CAAC;aAAM,CAAC;YACP,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC;QAC1C,CAAC;IACF,CAAC;CACD;AAED,MAAM,UAAU,kBAAkB,CAAC,YAAoB,EAAE,IAA4C,EAAE,KAAsB;IAC5H,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC3B,IAAI,QAAQ,GAAG,SAAS,CAAC;IACzB,IAAI,MAAM,GAAG,SAAS,CAAC;IACvB,MAAM,MAAM,GAAG,eAAe,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;IAE3D,IAAI,gBAAgB,GAAW,CAAC,CAAC,CAAC;IAClC,MAAM,UAAU,GAAG,GAAG,CAAC;IACvB,IAAI,cAAc,GAAuB,SAAS,CAAC;IAEnD,KAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC;QAC9B,aAAa,EAAE;YACd,mBAAmB,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;YAC/C,YAAY,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;gBACxB,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;oBACzB,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC;gBACrC,CAAC;gBACD,OAAO,IAAI,CAAC;YACb,CAAC;SACD;KACD,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAChB,gCAAgC;QAChC,IAAI,cAAc,KAAK,SAAS,EAAE,CAAC;YAClC,YAAY,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;YAClD,cAAc,GAAG,SAAS,CAAC;QAC5B,CAAC;QAED,QAAQ,GAAG,MAAM,CAAC;QAClB,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAE7D,MAAM,EAAE,CAAC;IACV,CAAC,CAAC,CAAC,CAAC;IAEJ,SAAS,MAAM;QACd,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,gBAAgB,CAAC;QAC/C,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,GAAG,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;QAEvF,IAAI,QAAQ,GAAG,UAAU,EAAE,CAAC;YAC3B,cAAc,GAAG,YAAY,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC;aAAM,CAAC;YACP,MAAM,GAAG,SAAS,CAAC;QACpB,CAAC;QAED,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC/B,CAAC;IAED,OAAO,MAAM,CAAC;AACf,CAAC;AAED,SAAS,WAAW,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;IAC9D,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAClE,CAAC;AAED,MAAM,OAAgB,qBAAsB,SAAQ,UAAU;IAC7D,YACC,MAAmB,EACnB,QAA6B,EAC7B,WAAwB;QAExB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,SAAS,CAAC,IAAI,oBAAoB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,EAAE;YACtC,MAAM,EAAE,QAAQ,CAAC,YAAY;YAC7B,GAAG,EAAE,QAAQ,CAAC,SAAS;SACvB,CAAC,CAAC,CAAC;IACL,CAAC;CACD;AAUD,MAAM,OAAO,mBAAmB;IAW/B,IAAW,eAAe,KAAa,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAI5E,YACkB,gBAAqC,EACtC,UAAkB;QADjB,qBAAgB,GAAhB,gBAAgB,CAAqB;QACtC,eAAU,GAAV,UAAU,CAAQ;QAElC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,eAAe,CAAqB,IAAI,EAAE,SAAS,CAAC,CAAC;QACvE,IAAI,CAAC,aAAa,GAAG,eAAe,CAAqB,IAAI,EAAE,SAAS,CAAC,CAAC;QAC1E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;QACvC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,CAAC,GAAW,EAAE,EAAE;YACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QACrC,CAAC,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG,CAAC,MAAc,EAAE,EAAE;YAC1C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC3C,CAAC,CAAC;IACH,CAAC;CAKD;AAGD,MAAM,OAAO,oBAAoB;aACjB,aAAQ,GAAG,CAAH,AAAI,CAAC;IAS5B,YACkB,OAAoB,EACpB,WAAwB;QADxB,YAAO,GAAP,OAAO,CAAa;QACpB,gBAAW,GAAX,WAAW,CAAa;QAVzB,qBAAgB,GAAG,wBAAwB,oBAAoB,CAAC,QAAQ,EAAE,EAAE,CAAC;QAE7E,mBAAc,GAAmB;YACjD,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB;YAClC,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW;YAClC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI;SACvB,CAAC;QAMD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACpD,CAAC;IAED,OAAO;QACN,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACvD,CAAC;;AAYF,MAAM,UAAU,UAAU,CAAC,OAAoB,EAAE,KAAkH;IAClK,OAAO,OAAO,CAAC,MAAM,CAAC,EAAE;QACvB,8BAA8B;QAC9B,KAAK,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9C,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,MAAM,IAAI,GAAG,EAAE,CAAC;gBACrD,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAQ,CAAC;YAC/B,CAAC;YACD,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;gBAC7B,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;YAClB,CAAC;YACD,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;YACxD,OAAO,CAAC,KAAK,CAAC,GAAU,CAAC,GAAG,GAAU,CAAC;QACxC,CAAC;IACF,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,MAAmB,EAAE,SAA6C,EAAE,aAAsD,EAAE,OAAqB;IAC/K,MAAM,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;IACpC,MAAM,eAAe,GAAa,EAAE,CAAC;IAErC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;QAC5C,kCAAkC;QAClC,MAAM,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE5C,MAAM,qBAAqB,GAAG,IAAI,GAAG,EAA+B,CAAC;QACrE,MAAM,+BAA+B,GAAG,IAAI,GAAG,EAAgC,CAAC;QAEhF,wBAAwB;QACxB,IAAI,aAAa,EAAE,CAAC;YAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAAC,CAAC;QAC3C,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE;YAC1B,KAAK,MAAM,EAAE,IAAI,eAAe,EAAE,CAAC;gBAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;gBAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;YAAC,CAAC;YAC5E,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC;YAE3B,KAAK,MAAM,CAAC,IAAI,YAAY,EAAE,CAAC;gBAC9B,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;oBACjB,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBACjB,CAAC;gBACD,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACzB,OAAO,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;gBACjB,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAClC,CAAC;QACF,CAAC,CAAC,CAAC;QACH,IAAI,aAAa,EAAE,CAAC;YAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAAC,CAAC;QAE5C,wBAAwB;QACxB,KAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC;YAC9B,aAAa,EAAE;gBACd,mBAAmB;oBAClB,OAAO,EAAE,OAAO,EAAE,EAAc,EAAE,CAAC;gBACpC,CAAC;gBACD,YAAY,CAAC,OAAO,EAAE,aAAa;oBAClC,MAAM,EAAE,GAAG,+BAA+B,CAAC,GAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;oBAC1E,IAAI,EAAE,KAAK,SAAS,EAAE,CAAC;wBAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAAC,CAAC;oBACzD,OAAO,IAAI,CAAC;gBACb,CAAC;aACD;SACD,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,EAAE;YAC5B,wCAAwC;YACxC,KAAK,MAAM,EAAE,IAAI,YAAY,EAAE,CAAC;gBAC/B,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;oBACjB,+BAA+B,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,qBAAqB,CAAC,GAAG,CAAC,EAAE,CAAE,CAAC,CAAC;oBACjF,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC1B,CAAC;YACF,CAAC;YACD,IAAI,aAAa,EAAE,CAAC;gBAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAAC,CAAC;YAC3C,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,MAAM,EAAE,IAAI,aAAa,CAAC,OAAO,EAAE,CAAC;gBAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/F,IAAI,aAAa,EAAE,CAAC;gBAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC;IAEJ,KAAK,CAAC,GAAG,CAAC;QACT,OAAO;YACN,IAAI,aAAa,EAAE,CAAC;gBAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAAC,CAAC;YAC3C,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,MAAM,EAAE,IAAI,eAAe,EAAE,CAAC;gBAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzF,OAAO,EAAE,KAAK,EAAE,CAAC;YACjB,IAAI,aAAa,EAAE,CAAC;gBAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAAC,CAAC;QAC7C,CAAC;KACD,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC;AACd,CAAC;AAED,MAAM,OAAO,iCAAkC,SAAQ,uBAAuB;IAC7D,OAAO;QACtB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;CACD;AAED,MAAM,UAAU,iBAAiB,CAAC,aAAuB,EAAE,QAAoC;IAC9F,MAAM,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,IAAI,aAAa,CAAC,UAAU,CAAC,CAAC;IAChG,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,iCAAiC;QACjC,OAAO,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,OAAO,CAAC,QAAQ,CAAC,sBAAsB,IAAI,aAAa,CAAC,UAAU,EAAE,CAAC;QACzE,MAAM,aAAa,GAAG,aAAa,CAAC,UAAU,GAAG,OAAO,CAAC,QAAQ,CAAC,sBAAsB,GAAG,OAAO,CAAC,QAAQ,CAAC,sBAAsB,CAAC;QACnI,OAAO,KAAK,CAAC,aAAa,CAAC,IAAI,QAAQ,CAAC,aAAa,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAC3B,4BAA4B;QAC5B,OAAO,KAAK,CAAC,aAAa,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,MAAM,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC;IAC5H,IAAI,CAAC,YAAY,EAAE,CAAC;QACnB,MAAM,aAAa,GAAG,aAAa,CAAC,UAAU,GAAG,OAAO,CAAC,QAAQ,CAAC,eAAe,GAAG,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC;QACrH,OAAO,KAAK,CAAC,aAAa,CAAC,IAAI,QAAQ,CAAC,aAAa,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,IAAI,YAAY,CAAC,aAAa,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE,CAAC;QAChE,OAAO,YAAY,CAAC,aAAa,CAAC;IACnC,CAAC;SAAM,CAAC;QACP,MAAM,CAAC,GAAG,sBAAsB,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,EAAE,EAAE,aAAa,CAAC,CAAC;QAC7F,OAAO,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;IAC1F,CAAC;AACF,CAAC;AAED,SAAS,sBAAsB,CAAC,SAAmB,EAAE,SAAmB;IACvE,IAAI,SAAS,CAAC,UAAU,KAAK,SAAS,CAAC,UAAU,EAAE,CAAC;QACnD,OAAO,IAAI,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;IAC/D,CAAC;SAAM,CAAC;QACP,OAAO,IAAI,UAAU,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC1F,CAAC;AACF,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAI,GAAQ,EAAE,MAAgD;IAC/F,IAAI,IAAmB,CAAC;IACxB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;QACvB,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACjC,IAAI,GAAG,GAAG,CAAC;QACX,OAAO,MAAM,CAAC;IACf,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,OAAgB,UAAU;IACxB,MAAM,CAAC,MAAM,CAAwB,KAAQ,EAAE,aAAiC,SAAS;QAC/F,OAAO,IAAI,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;IACrD,CAAC;IAEM,MAAM,CAAC,oBAAoB,CAAwB,KAAQ,EAAE,UAAuB,EAAE,aAAiC,SAAS;QACtI,MAAM,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;QACpC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACtB,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjB,OAAO,IAAI,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;IACrD,CAAC;CAOD;AAED,MAAM,cAAkB,SAAQ,UAAa;IAK5C,YAC0B,MAAS,EACjB,WAAwB,EACxB,WAA+B;QAEhD,KAAK,EAAE,CAAC;QAJiB,WAAM,GAAN,MAAM,CAAG;QACjB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAoB;QAPzC,cAAS,GAAG,CAAC,CAAC;QACd,gBAAW,GAAG,KAAK,CAAC;QACX,YAAO,GAAa,EAAE,CAAC;QASvC,IAAI,WAAW,EAAE,CAAC;YACjB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC7B,CAAC;IACF,CAAC;IAEO,SAAS,CAAC,UAA8B;QAC/C,IAAI,UAAU,EAAE,CAAC;YAChB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,CAAC;IACF,CAAC;IAEM,YAAY,CAAC,UAA+B;QAClD,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,UAAU,EAAE,CAAC;YAChB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC5B,CAAC;QACD,OAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC/C,CAAC;IAEM,OAAO;QACb,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YAAC,OAAO;QAAC,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;IAEM,iBAAiB,CAAC,UAA+B;QACvD,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC5B,CAAC;QAED,IAAI,UAAU,EAAE,CAAC;YAChB,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAC7C,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC7B,CAAC;QACF,CAAC;IACF,CAAC;CACD;AAED,MAAM,gBAAoB,SAAQ,UAAa;IAE9C,YACkB,KAAwB,EACxB,WAA+B;QAEhD,KAAK,EAAE,CAAC;QAHS,UAAK,GAAL,KAAK,CAAmB;QACxB,gBAAW,GAAX,WAAW,CAAoB;QAHzC,gBAAW,GAAG,KAAK,CAAC;IAM5B,CAAC;IAED,IAAW,MAAM,KAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAE7C,YAAY,CAAC,UAA+B;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAEM,OAAO;QACb,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YAAC,OAAO;QAAC,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAChD,CAAC;CACD","file":"utils.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDimension } from '../../../../base/browser/dom.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, IDisposable, IReference, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { IObservable, IObservableWithChange, ISettableObservable, autorun, autorunHandleChanges, autorunOpts, autorunWithStore, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { ElementSizeObserver } from '../../config/elementSizeObserver.js';\nimport { ICodeEditor, IOverlayWidget, IViewZone } from '../../editorBrowser.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { DetailedLineRangeMapping } from '../../../common/diff/rangeMapping.js';\nimport { IModelDeltaDecoration } from '../../../common/model.js';\nimport { TextLength } from '../../../common/core/text/textLength.js';\n\nexport function joinCombine<T>(arr1: readonly T[], arr2: readonly T[], keySelector: (val: T) => number, combine: (v1: T, v2: T) => T): readonly T[] {\n\tif (arr1.length === 0) {\n\t\treturn arr2;\n\t}\n\tif (arr2.length === 0) {\n\t\treturn arr1;\n\t}\n\n\tconst result: T[] = [];\n\tlet i = 0;\n\tlet j = 0;\n\twhile (i < arr1.length && j < arr2.length) {\n\t\tconst val1 = arr1[i];\n\t\tconst val2 = arr2[j];\n\t\tconst key1 = keySelector(val1);\n\t\tconst key2 = keySelector(val2);\n\n\t\tif (key1 < key2) {\n\t\t\tresult.push(val1);\n\t\t\ti++;\n\t\t} else if (key1 > key2) {\n\t\t\tresult.push(val2);\n\t\t\tj++;\n\t\t} else {\n\t\t\tresult.push(combine(val1, val2));\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < arr1.length) {\n\t\tresult.push(arr1[i]);\n\t\ti++;\n\t}\n\twhile (j < arr2.length) {\n\t\tresult.push(arr2[j]);\n\t\tj++;\n\t}\n\treturn result;\n}\n\n// TODO make utility\nexport function applyObservableDecorations(editor: ICodeEditor, decorations: IObservable<IModelDeltaDecoration[]>): IDisposable {\n\tconst d = new DisposableStore();\n\tconst decorationsCollection = editor.createDecorationsCollection();\n\td.add(autorunOpts({ debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n\t\tconst d = decorations.read(reader);\n\t\tdecorationsCollection.set(d);\n\t}));\n\td.add({\n\t\tdispose: () => {\n\t\t\tdecorationsCollection.clear();\n\t\t}\n\t});\n\treturn d;\n}\n\nexport function appendRemoveOnDispose(parent: HTMLElement, child: HTMLElement) {\n\tparent.appendChild(child);\n\treturn toDisposable(() => {\n\t\tchild.remove();\n\t});\n}\n\nexport function prependRemoveOnDispose(parent: HTMLElement, child: HTMLElement) {\n\tparent.prepend(child);\n\treturn toDisposable(() => {\n\t\tchild.remove();\n\t});\n}\n\nexport class ObservableElementSizeObserver extends Disposable {\n\tprivate readonly elementSizeObserver: ElementSizeObserver;\n\n\tprivate readonly _width: ISettableObservable<number>;\n\tpublic get width(): IObservable<number> { return this._width; }\n\n\tprivate readonly _height: ISettableObservable<number>;\n\tpublic get height(): IObservable<number> { return this._height; }\n\n\tprivate _automaticLayout: boolean = false;\n\tpublic get automaticLayout(): boolean { return this._automaticLayout; }\n\n\tconstructor(element: HTMLElement | null, dimension: IDimension | undefined) {\n\t\tsuper();\n\n\t\tthis.elementSizeObserver = this._register(new ElementSizeObserver(element, dimension));\n\t\tthis._width = observableValue(this, this.elementSizeObserver.getWidth());\n\t\tthis._height = observableValue(this, this.elementSizeObserver.getHeight());\n\n\t\tthis._register(this.elementSizeObserver.onDidChange(e => transaction(tx => {\n\t\t\t/** @description Set width/height from elementSizeObserver */\n\t\t\tthis._width.set(this.elementSizeObserver.getWidth(), tx);\n\t\t\tthis._height.set(this.elementSizeObserver.getHeight(), tx);\n\t\t})));\n\t}\n\n\tpublic observe(dimension?: IDimension): void {\n\t\tthis.elementSizeObserver.observe(dimension);\n\t}\n\n\tpublic setAutomaticLayout(automaticLayout: boolean): void {\n\t\tthis._automaticLayout = automaticLayout;\n\t\tif (automaticLayout) {\n\t\t\tthis.elementSizeObserver.startObserving();\n\t\t} else {\n\t\t\tthis.elementSizeObserver.stopObserving();\n\t\t}\n\t}\n}\n\nexport function animatedObservable(targetWindow: Window, base: IObservableWithChange<number, boolean>, store: DisposableStore): IObservable<number> {\n\tlet targetVal = base.get();\n\tlet startVal = targetVal;\n\tlet curVal = targetVal;\n\tconst result = observableValue('animatedValue', targetVal);\n\n\tlet animationStartMs: number = -1;\n\tconst durationMs = 300;\n\tlet animationFrame: number | undefined = undefined;\n\n\tstore.add(autorunHandleChanges({\n\t\tchangeTracker: {\n\t\t\tcreateChangeSummary: () => ({ animate: false }),\n\t\t\thandleChange: (ctx, s) => {\n\t\t\t\tif (ctx.didChange(base)) {\n\t\t\t\t\ts.animate = s.animate || ctx.change;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}, (reader, s) => {\n\t\t/** @description update value */\n\t\tif (animationFrame !== undefined) {\n\t\t\ttargetWindow.cancelAnimationFrame(animationFrame);\n\t\t\tanimationFrame = undefined;\n\t\t}\n\n\t\tstartVal = curVal;\n\t\ttargetVal = base.read(reader);\n\t\tanimationStartMs = Date.now() - (s.animate ? 0 : durationMs);\n\n\t\tupdate();\n\t}));\n\n\tfunction update() {\n\t\tconst passedMs = Date.now() - animationStartMs;\n\t\tcurVal = Math.floor(easeOutExpo(passedMs, startVal, targetVal - startVal, durationMs));\n\n\t\tif (passedMs < durationMs) {\n\t\t\tanimationFrame = targetWindow.requestAnimationFrame(update);\n\t\t} else {\n\t\t\tcurVal = targetVal;\n\t\t}\n\n\t\tresult.set(curVal, undefined);\n\t}\n\n\treturn result;\n}\n\nfunction easeOutExpo(t: number, b: number, c: number, d: number): number {\n\treturn t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\n\nexport abstract class ViewZoneOverlayWidget extends Disposable {\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tviewZone: PlaceholderViewZone,\n\t\thtmlElement: HTMLElement,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(new ManagedOverlayWidget(editor, htmlElement));\n\t\tthis._register(applyStyle(htmlElement, {\n\t\t\theight: viewZone.actualHeight,\n\t\t\ttop: viewZone.actualTop,\n\t\t}));\n\t}\n}\n\nexport interface IObservableViewZone extends IViewZone {\n\t// Causes the view zone to relayout.\n\tonChange?: IObservable<unknown>;\n\n\t// Tells a view zone its id.\n\tsetZoneId?(zoneId: string): void;\n}\n\nexport class PlaceholderViewZone implements IObservableViewZone {\n\tpublic readonly domNode;\n\n\tprivate readonly _actualTop;\n\tprivate readonly _actualHeight;\n\n\tpublic readonly actualTop: IObservable<number | undefined>;\n\tpublic readonly actualHeight: IObservable<number | undefined>;\n\n\tpublic readonly showInHiddenAreas;\n\n\tpublic get afterLineNumber(): number { return this._afterLineNumber.get(); }\n\n\tpublic readonly onChange?: IObservable<unknown>;\n\n\tconstructor(\n\t\tprivate readonly _afterLineNumber: IObservable<number>,\n\t\tpublic readonly heightInPx: number,\n\t) {\n\t\tthis.domNode = document.createElement('div');\n\t\tthis._actualTop = observableValue<number | undefined>(this, undefined);\n\t\tthis._actualHeight = observableValue<number | undefined>(this, undefined);\n\t\tthis.actualTop = this._actualTop;\n\t\tthis.actualHeight = this._actualHeight;\n\t\tthis.showInHiddenAreas = true;\n\t\tthis.onChange = this._afterLineNumber;\n\t\tthis.onDomNodeTop = (top: number) => {\n\t\t\tthis._actualTop.set(top, undefined);\n\t\t};\n\t\tthis.onComputedHeight = (height: number) => {\n\t\t\tthis._actualHeight.set(height, undefined);\n\t\t};\n\t}\n\n\tonDomNodeTop;\n\n\tonComputedHeight;\n}\n\n\nexport class ManagedOverlayWidget implements IDisposable {\n\tprivate static _counter = 0;\n\tprivate readonly _overlayWidgetId = `managedOverlayWidget-${ManagedOverlayWidget._counter++}`;\n\n\tprivate readonly _overlayWidget: IOverlayWidget = {\n\t\tgetId: () => this._overlayWidgetId,\n\t\tgetDomNode: () => this._domElement,\n\t\tgetPosition: () => null\n\t};\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _domElement: HTMLElement,\n\t) {\n\t\tthis._editor.addOverlayWidget(this._overlayWidget);\n\t}\n\n\tdispose(): void {\n\t\tthis._editor.removeOverlayWidget(this._overlayWidget);\n\t}\n}\n\nexport interface CSSStyle {\n\theight: number | string;\n\twidth: number | string;\n\ttop: number | string;\n\tvisibility: 'visible' | 'hidden' | 'collapse';\n\tdisplay: 'block' | 'inline' | 'inline-block' | 'flex' | 'none';\n\tpaddingRight: number | string;\n}\n\nexport function applyStyle(domNode: HTMLElement, style: Partial<{ [TKey in keyof CSSStyle]: CSSStyle[TKey] | IObservable<CSSStyle[TKey] | undefined> | undefined }>) {\n\treturn autorun(reader => {\n\t\t/** @description applyStyle */\n\t\tfor (let [key, val] of Object.entries(style)) {\n\t\t\tif (val && typeof val === 'object' && 'read' in val) {\n\t\t\t\tval = val.read(reader) as any;\n\t\t\t}\n\t\t\tif (typeof val === 'number') {\n\t\t\t\tval = `${val}px`;\n\t\t\t}\n\t\t\tkey = key.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n\t\t\tdomNode.style[key as any] = val as any;\n\t\t}\n\t});\n}\n\nexport function applyViewZones(editor: ICodeEditor, viewZones: IObservable<IObservableViewZone[]>, setIsUpdating?: (isUpdatingViewZones: boolean) => void, zoneIds?: Set<string>): IDisposable {\n\tconst store = new DisposableStore();\n\tconst lastViewZoneIds: string[] = [];\n\n\tstore.add(autorunWithStore((reader, store) => {\n\t\t/** @description applyViewZones */\n\t\tconst curViewZones = viewZones.read(reader);\n\n\t\tconst viewZonIdsPerViewZone = new Map<IObservableViewZone, string>();\n\t\tconst viewZoneIdPerOnChangeObservable = new Map<IObservable<unknown>, string>();\n\n\t\t// Add/remove view zones\n\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\teditor.changeViewZones(a => {\n\t\t\tfor (const id of lastViewZoneIds) { a.removeZone(id); zoneIds?.delete(id); }\n\t\t\tlastViewZoneIds.length = 0;\n\n\t\t\tfor (const z of curViewZones) {\n\t\t\t\tconst id = a.addZone(z);\n\t\t\t\tif (z.setZoneId) {\n\t\t\t\t\tz.setZoneId(id);\n\t\t\t\t}\n\t\t\t\tlastViewZoneIds.push(id);\n\t\t\t\tzoneIds?.add(id);\n\t\t\t\tviewZonIdsPerViewZone.set(z, id);\n\t\t\t}\n\t\t});\n\t\tif (setIsUpdating) { setIsUpdating(false); }\n\n\t\t// Layout zone on change\n\t\tstore.add(autorunHandleChanges({\n\t\t\tchangeTracker: {\n\t\t\t\tcreateChangeSummary() {\n\t\t\t\t\treturn { zoneIds: [] as string[] };\n\t\t\t\t},\n\t\t\t\thandleChange(context, changeSummary) {\n\t\t\t\t\tconst id = viewZoneIdPerOnChangeObservable.get(context.changedObservable);\n\t\t\t\t\tif (id !== undefined) { changeSummary.zoneIds.push(id); }\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t}\n\t\t}, (reader, changeSummary) => {\n\t\t\t/** @description layoutZone on change */\n\t\t\tfor (const vz of curViewZones) {\n\t\t\t\tif (vz.onChange) {\n\t\t\t\t\tviewZoneIdPerOnChangeObservable.set(vz.onChange, viewZonIdsPerViewZone.get(vz)!);\n\t\t\t\t\tvz.onChange.read(reader);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\t\teditor.changeViewZones(a => { for (const id of changeSummary.zoneIds) { a.layoutZone(id); } });\n\t\t\tif (setIsUpdating) { setIsUpdating(false); }\n\t\t}));\n\t}));\n\n\tstore.add({\n\t\tdispose() {\n\t\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\t\teditor.changeViewZones(a => { for (const id of lastViewZoneIds) { a.removeZone(id); } });\n\t\t\tzoneIds?.clear();\n\t\t\tif (setIsUpdating) { setIsUpdating(false); }\n\t\t}\n\t});\n\n\treturn store;\n}\n\nexport class DisposableCancellationTokenSource extends CancellationTokenSource {\n\tpublic override dispose() {\n\t\tsuper.dispose(true);\n\t}\n}\n\nexport function translatePosition(posInOriginal: Position, mappings: DetailedLineRangeMapping[]): Range {\n\tconst mapping = findLast(mappings, m => m.original.startLineNumber <= posInOriginal.lineNumber);\n\tif (!mapping) {\n\t\t// No changes before the position\n\t\treturn Range.fromPositions(posInOriginal);\n\t}\n\n\tif (mapping.original.endLineNumberExclusive <= posInOriginal.lineNumber) {\n\t\tconst newLineNumber = posInOriginal.lineNumber - mapping.original.endLineNumberExclusive + mapping.modified.endLineNumberExclusive;\n\t\treturn Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n\t}\n\n\tif (!mapping.innerChanges) {\n\t\t// Only for legacy algorithm\n\t\treturn Range.fromPositions(new Position(mapping.modified.startLineNumber, 1));\n\t}\n\n\tconst innerMapping = findLast(mapping.innerChanges, m => m.originalRange.getStartPosition().isBeforeOrEqual(posInOriginal));\n\tif (!innerMapping) {\n\t\tconst newLineNumber = posInOriginal.lineNumber - mapping.original.startLineNumber + mapping.modified.startLineNumber;\n\t\treturn Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n\t}\n\n\tif (innerMapping.originalRange.containsPosition(posInOriginal)) {\n\t\treturn innerMapping.modifiedRange;\n\t} else {\n\t\tconst l = lengthBetweenPositions(innerMapping.originalRange.getEndPosition(), posInOriginal);\n\t\treturn Range.fromPositions(l.addToPosition(innerMapping.modifiedRange.getEndPosition()));\n\t}\n}\n\nfunction lengthBetweenPositions(position1: Position, position2: Position): TextLength {\n\tif (position1.lineNumber === position2.lineNumber) {\n\t\treturn new TextLength(0, position2.column - position1.column);\n\t} else {\n\t\treturn new TextLength(position2.lineNumber - position1.lineNumber, position2.column - 1);\n\t}\n}\n\nexport function filterWithPrevious<T>(arr: T[], filter: (cur: T, prev: T | undefined) => boolean): T[] {\n\tlet prev: T | undefined;\n\treturn arr.filter(cur => {\n\t\tconst result = filter(cur, prev);\n\t\tprev = cur;\n\t\treturn result;\n\t});\n}\n\nexport abstract class RefCounted<T> implements IDisposable, IReference<T> {\n\tpublic static create<T extends IDisposable>(value: T, debugOwner: object | undefined = undefined): RefCounted<T> {\n\t\treturn new BaseRefCounted(value, value, debugOwner);\n\t}\n\n\tpublic static createWithDisposable<T extends IDisposable>(value: T, disposable: IDisposable, debugOwner: object | undefined = undefined): RefCounted<T> {\n\t\tconst store = new DisposableStore();\n\t\tstore.add(disposable);\n\t\tstore.add(value);\n\t\treturn new BaseRefCounted(value, store, debugOwner);\n\t}\n\n\tpublic abstract createNewRef(debugOwner?: object | undefined): RefCounted<T>;\n\n\tpublic abstract dispose(): void;\n\n\tpublic abstract get object(): T;\n}\n\nclass BaseRefCounted<T> extends RefCounted<T> {\n\tprivate _refCount = 1;\n\tprivate _isDisposed = false;\n\tprivate readonly _owners: object[] = [];\n\n\tconstructor(\n\t\tpublic override readonly object: T,\n\t\tprivate readonly _disposable: IDisposable,\n\t\tprivate readonly _debugOwner: object | undefined,\n\t) {\n\t\tsuper();\n\n\t\tif (_debugOwner) {\n\t\t\tthis._addOwner(_debugOwner);\n\t\t}\n\t}\n\n\tprivate _addOwner(debugOwner: object | undefined) {\n\t\tif (debugOwner) {\n\t\t\tthis._owners.push(debugOwner);\n\t\t}\n\t}\n\n\tpublic createNewRef(debugOwner?: object | undefined): RefCounted<T> {\n\t\tthis._refCount++;\n\t\tif (debugOwner) {\n\t\t\tthis._addOwner(debugOwner);\n\t\t}\n\t\treturn new ClonedRefCounted(this, debugOwner);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) { return; }\n\t\tthis._isDisposed = true;\n\t\tthis._decreaseRefCount(this._debugOwner);\n\t}\n\n\tpublic _decreaseRefCount(debugOwner?: object | undefined): void {\n\t\tthis._refCount--;\n\t\tif (this._refCount === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\n\t\tif (debugOwner) {\n\t\t\tconst idx = this._owners.indexOf(debugOwner);\n\t\t\tif (idx !== -1) {\n\t\t\t\tthis._owners.splice(idx, 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ClonedRefCounted<T> extends RefCounted<T> {\n\tprivate _isDisposed = false;\n\tconstructor(\n\t\tprivate readonly _base: BaseRefCounted<T>,\n\t\tprivate readonly _debugOwner: object | undefined,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic get object(): T { return this._base.object; }\n\n\tpublic createNewRef(debugOwner?: object | undefined): RefCounted<T> {\n\t\treturn this._base.createNewRef(debugOwner);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) { return; }\n\t\tthis._isDisposed = true;\n\t\tthis._base._decreaseRefCount(this._debugOwner);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDimension } from '../../../../base/browser/dom.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, IDisposable, IReference, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { IObservable, IObservableWithChange, ISettableObservable, autorun, autorunHandleChanges, autorunOpts, autorunWithStore, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { ElementSizeObserver } from '../../config/elementSizeObserver.js';\nimport { ICodeEditor, IOverlayWidget, IViewZone } from '../../editorBrowser.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { DetailedLineRangeMapping } from '../../../common/diff/rangeMapping.js';\nimport { IModelDeltaDecoration } from '../../../common/model.js';\nimport { TextLength } from '../../../common/core/text/textLength.js';\n\nexport function joinCombine<T>(arr1: readonly T[], arr2: readonly T[], keySelector: (val: T) => number, combine: (v1: T, v2: T) => T): readonly T[] {\n\tif (arr1.length === 0) {\n\t\treturn arr2;\n\t}\n\tif (arr2.length === 0) {\n\t\treturn arr1;\n\t}\n\n\tconst result: T[] = [];\n\tlet i = 0;\n\tlet j = 0;\n\twhile (i < arr1.length && j < arr2.length) {\n\t\tconst val1 = arr1[i];\n\t\tconst val2 = arr2[j];\n\t\tconst key1 = keySelector(val1);\n\t\tconst key2 = keySelector(val2);\n\n\t\tif (key1 < key2) {\n\t\t\tresult.push(val1);\n\t\t\ti++;\n\t\t} else if (key1 > key2) {\n\t\t\tresult.push(val2);\n\t\t\tj++;\n\t\t} else {\n\t\t\tresult.push(combine(val1, val2));\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < arr1.length) {\n\t\tresult.push(arr1[i]);\n\t\ti++;\n\t}\n\twhile (j < arr2.length) {\n\t\tresult.push(arr2[j]);\n\t\tj++;\n\t}\n\treturn result;\n}\n\n// TODO make utility\nexport function applyObservableDecorations(editor: ICodeEditor, decorations: IObservable<IModelDeltaDecoration[]>): IDisposable {\n\tconst d = new DisposableStore();\n\tconst decorationsCollection = editor.createDecorationsCollection();\n\td.add(autorunOpts({ debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n\t\tconst d = decorations.read(reader);\n\t\tdecorationsCollection.set(d);\n\t}));\n\td.add({\n\t\tdispose: () => {\n\t\t\tdecorationsCollection.clear();\n\t\t}\n\t});\n\treturn d;\n}\n\nexport function appendRemoveOnDispose(parent: HTMLElement, child: HTMLElement) {\n\tparent.appendChild(child);\n\treturn toDisposable(() => {\n\t\tchild.remove();\n\t});\n}\n\nexport function prependRemoveOnDispose(parent: HTMLElement, child: HTMLElement) {\n\tparent.prepend(child);\n\treturn toDisposable(() => {\n\t\tchild.remove();\n\t});\n}\n\nexport class ObservableElementSizeObserver extends Disposable {\n\tprivate readonly elementSizeObserver: ElementSizeObserver;\n\n\tprivate readonly _width: ISettableObservable<number>;\n\tpublic get width(): IObservable<number> { return this._width; }\n\n\tprivate readonly _height: ISettableObservable<number>;\n\tpublic get height(): IObservable<number> { return this._height; }\n\n\tprivate _automaticLayout: boolean = false;\n\tpublic get automaticLayout(): boolean { return this._automaticLayout; }\n\n\tconstructor(element: HTMLElement | null, dimension: IDimension | undefined) {\n\t\tsuper();\n\n\t\tthis.elementSizeObserver = this._register(new ElementSizeObserver(element, dimension));\n\t\tthis._width = observableValue(this, this.elementSizeObserver.getWidth());\n\t\tthis._height = observableValue(this, this.elementSizeObserver.getHeight());\n\n\t\tthis._register(this.elementSizeObserver.onDidChange(e => transaction(tx => {\n\t\t\t/** @description Set width/height from elementSizeObserver */\n\t\t\tthis._width.set(this.elementSizeObserver.getWidth(), tx);\n\t\t\tthis._height.set(this.elementSizeObserver.getHeight(), tx);\n\t\t})));\n\t}\n\n\tpublic observe(dimension?: IDimension): void {\n\t\tthis.elementSizeObserver.observe(dimension);\n\t}\n\n\tpublic setAutomaticLayout(automaticLayout: boolean): void {\n\t\tthis._automaticLayout = automaticLayout;\n\t\tif (automaticLayout) {\n\t\t\tthis.elementSizeObserver.startObserving();\n\t\t} else {\n\t\t\tthis.elementSizeObserver.stopObserving();\n\t\t}\n\t}\n}\n\nexport function animatedObservable(targetWindow: Window, base: IObservableWithChange<number, boolean>, store: DisposableStore): IObservable<number> {\n\tlet targetVal = base.get();\n\tlet startVal = targetVal;\n\tlet curVal = targetVal;\n\tconst result = observableValue('animatedValue', targetVal);\n\n\tlet animationStartMs: number = -1;\n\tconst durationMs = 300;\n\tlet animationFrame: number | undefined = undefined;\n\n\tstore.add(autorunHandleChanges({\n\t\tchangeTracker: {\n\t\t\tcreateChangeSummary: () => ({ animate: false }),\n\t\t\thandleChange: (ctx, s) => {\n\t\t\t\tif (ctx.didChange(base)) {\n\t\t\t\t\ts.animate = s.animate || ctx.change;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}, (reader, s) => {\n\t\t/** @description update value */\n\t\tif (animationFrame !== undefined) {\n\t\t\ttargetWindow.cancelAnimationFrame(animationFrame);\n\t\t\tanimationFrame = undefined;\n\t\t}\n\n\t\tstartVal = curVal;\n\t\ttargetVal = base.read(reader);\n\t\tanimationStartMs = Date.now() - (s.animate ? 0 : durationMs);\n\n\t\tupdate();\n\t}));\n\n\tfunction update() {\n\t\tconst passedMs = Date.now() - animationStartMs;\n\t\tcurVal = Math.floor(easeOutExpo(passedMs, startVal, targetVal - startVal, durationMs));\n\n\t\tif (passedMs < durationMs) {\n\t\t\tanimationFrame = targetWindow.requestAnimationFrame(update);\n\t\t} else {\n\t\t\tcurVal = targetVal;\n\t\t}\n\n\t\tresult.set(curVal, undefined);\n\t}\n\n\treturn result;\n}\n\nfunction easeOutExpo(t: number, b: number, c: number, d: number): number {\n\treturn t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\n\nexport abstract class ViewZoneOverlayWidget extends Disposable {\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tviewZone: PlaceholderViewZone,\n\t\thtmlElement: HTMLElement,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(new ManagedOverlayWidget(editor, htmlElement));\n\t\tthis._register(applyStyle(htmlElement, {\n\t\t\theight: viewZone.actualHeight,\n\t\t\ttop: viewZone.actualTop,\n\t\t}));\n\t}\n}\n\nexport interface IObservableViewZone extends IViewZone {\n\t// Causes the view zone to relayout.\n\tonChange?: IObservable<unknown>;\n\n\t// Tells a view zone its id.\n\tsetZoneId?(zoneId: string): void;\n}\n\nexport class PlaceholderViewZone implements IObservableViewZone {\n\tpublic readonly domNode;\n\n\tprivate readonly _actualTop;\n\tprivate readonly _actualHeight;\n\n\tpublic readonly actualTop: IObservable<number | undefined>;\n\tpublic readonly actualHeight: IObservable<number | undefined>;\n\n\tpublic readonly showInHiddenAreas;\n\n\tpublic get afterLineNumber(): number { return this._afterLineNumber.get(); }\n\n\tpublic readonly onChange?: IObservable<unknown>;\n\n\tconstructor(\n\t\tprivate readonly _afterLineNumber: IObservable<number>,\n\t\tpublic readonly heightInPx: number,\n\t) {\n\t\tthis.domNode = document.createElement('div');\n\t\tthis._actualTop = observableValue<number | undefined>(this, undefined);\n\t\tthis._actualHeight = observableValue<number | undefined>(this, undefined);\n\t\tthis.actualTop = this._actualTop;\n\t\tthis.actualHeight = this._actualHeight;\n\t\tthis.showInHiddenAreas = true;\n\t\tthis.onChange = this._afterLineNumber;\n\t\tthis.onDomNodeTop = (top: number) => {\n\t\t\tthis._actualTop.set(top, undefined);\n\t\t};\n\t\tthis.onComputedHeight = (height: number) => {\n\t\t\tthis._actualHeight.set(height, undefined);\n\t\t};\n\t}\n\n\tonDomNodeTop;\n\n\tonComputedHeight;\n}\n\n\nexport class ManagedOverlayWidget implements IDisposable {\n\tprivate static _counter = 0;\n\tprivate readonly _overlayWidgetId = `managedOverlayWidget-${ManagedOverlayWidget._counter++}`;\n\n\tprivate readonly _overlayWidget: IOverlayWidget = {\n\t\tgetId: () => this._overlayWidgetId,\n\t\tgetDomNode: () => this._domElement,\n\t\tgetPosition: () => null\n\t};\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _domElement: HTMLElement,\n\t) {\n\t\tthis._editor.addOverlayWidget(this._overlayWidget);\n\t}\n\n\tdispose(): void {\n\t\tthis._editor.removeOverlayWidget(this._overlayWidget);\n\t}\n}\n\nexport interface CSSStyle {\n\theight: number | string;\n\twidth: number | string;\n\ttop: number | string;\n\tvisibility: 'visible' | 'hidden' | 'collapse';\n\tdisplay: 'block' | 'inline' | 'inline-block' | 'flex' | 'none';\n\tpaddingRight: number | string;\n}\n\nexport function applyStyle(domNode: HTMLElement, style: Partial<{ [TKey in keyof CSSStyle]: CSSStyle[TKey] | IObservable<CSSStyle[TKey] | undefined> | undefined }>) {\n\treturn autorun(reader => {\n\t\t/** @description applyStyle */\n\t\tfor (let [key, val] of Object.entries(style)) {\n\t\t\tif (val && typeof val === 'object' && 'read' in val) {\n\t\t\t\tval = val.read(reader) as any;\n\t\t\t}\n\t\t\tif (typeof val === 'number') {\n\t\t\t\tval = `${val}px`;\n\t\t\t}\n\t\t\tkey = key.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n\t\t\tdomNode.style[key as any] = val as any;\n\t\t}\n\t});\n}\n\nexport function applyViewZones(editor: ICodeEditor, viewZones: IObservable<IObservableViewZone[]>, setIsUpdating?: (isUpdatingViewZones: boolean) => void, zoneIds?: Set<string>): IDisposable {\n\tconst store = new DisposableStore();\n\tconst lastViewZoneIds: string[] = [];\n\n\tstore.add(autorunWithStore((reader, store) => {\n\t\t/** @description applyViewZones */\n\t\tconst curViewZones = viewZones.read(reader);\n\n\t\tconst viewZonIdsPerViewZone = new Map<IObservableViewZone, string>();\n\t\tconst viewZoneIdPerOnChangeObservable = new Map<IObservable<unknown>, string>();\n\n\t\t// Add/remove view zones\n\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\teditor.changeViewZones(a => {\n\t\t\tfor (const id of lastViewZoneIds) { a.removeZone(id); zoneIds?.delete(id); }\n\t\t\tlastViewZoneIds.length = 0;\n\n\t\t\tfor (const z of curViewZones) {\n\t\t\t\tconst id = a.addZone(z);\n\t\t\t\tif (z.setZoneId) {\n\t\t\t\t\tz.setZoneId(id);\n\t\t\t\t}\n\t\t\t\tlastViewZoneIds.push(id);\n\t\t\t\tzoneIds?.add(id);\n\t\t\t\tviewZonIdsPerViewZone.set(z, id);\n\t\t\t}\n\t\t});\n\t\tif (setIsUpdating) { setIsUpdating(false); }\n\n\t\t// Layout zone on change\n\t\tstore.add(autorunHandleChanges({\n\t\t\tchangeTracker: {\n\t\t\t\tcreateChangeSummary() {\n\t\t\t\t\treturn { zoneIds: [] as string[] };\n\t\t\t\t},\n\t\t\t\thandleChange(context, changeSummary) {\n\t\t\t\t\tconst id = viewZoneIdPerOnChangeObservable.get(context.changedObservable);\n\t\t\t\t\tif (id !== undefined) { changeSummary.zoneIds.push(id); }\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t}\n\t\t}, (reader, changeSummary) => {\n\t\t\t/** @description layoutZone on change */\n\t\t\tfor (const vz of curViewZones) {\n\t\t\t\tif (vz.onChange) {\n\t\t\t\t\tviewZoneIdPerOnChangeObservable.set(vz.onChange, viewZonIdsPerViewZone.get(vz)!);\n\t\t\t\t\tvz.onChange.read(reader);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\t\teditor.changeViewZones(a => { for (const id of changeSummary.zoneIds) { a.layoutZone(id); } });\n\t\t\tif (setIsUpdating) { setIsUpdating(false); }\n\t\t}));\n\t}));\n\n\tstore.add({\n\t\tdispose() {\n\t\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\t\teditor.changeViewZones(a => { for (const id of lastViewZoneIds) { a.removeZone(id); } });\n\t\t\tzoneIds?.clear();\n\t\t\tif (setIsUpdating) { setIsUpdating(false); }\n\t\t}\n\t});\n\n\treturn store;\n}\n\nexport class DisposableCancellationTokenSource extends CancellationTokenSource {\n\tpublic override dispose() {\n\t\tsuper.dispose(true);\n\t}\n}\n\nexport function translatePosition(posInOriginal: Position, mappings: DetailedLineRangeMapping[]): Range {\n\tconst mapping = findLast(mappings, m => m.original.startLineNumber <= posInOriginal.lineNumber);\n\tif (!mapping) {\n\t\t// No changes before the position\n\t\treturn Range.fromPositions(posInOriginal);\n\t}\n\n\tif (mapping.original.endLineNumberExclusive <= posInOriginal.lineNumber) {\n\t\tconst newLineNumber = posInOriginal.lineNumber - mapping.original.endLineNumberExclusive + mapping.modified.endLineNumberExclusive;\n\t\treturn Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n\t}\n\n\tif (!mapping.innerChanges) {\n\t\t// Only for legacy algorithm\n\t\treturn Range.fromPositions(new Position(mapping.modified.startLineNumber, 1));\n\t}\n\n\tconst innerMapping = findLast(mapping.innerChanges, m => m.originalRange.getStartPosition().isBeforeOrEqual(posInOriginal));\n\tif (!innerMapping) {\n\t\tconst newLineNumber = posInOriginal.lineNumber - mapping.original.startLineNumber + mapping.modified.startLineNumber;\n\t\treturn Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n\t}\n\n\tif (innerMapping.originalRange.containsPosition(posInOriginal)) {\n\t\treturn innerMapping.modifiedRange;\n\t} else {\n\t\tconst l = lengthBetweenPositions(innerMapping.originalRange.getEndPosition(), posInOriginal);\n\t\treturn Range.fromPositions(l.addToPosition(innerMapping.modifiedRange.getEndPosition()));\n\t}\n}\n\nfunction lengthBetweenPositions(position1: Position, position2: Position): TextLength {\n\tif (position1.lineNumber === position2.lineNumber) {\n\t\treturn new TextLength(0, position2.column - position1.column);\n\t} else {\n\t\treturn new TextLength(position2.lineNumber - position1.lineNumber, position2.column - 1);\n\t}\n}\n\nexport function filterWithPrevious<T>(arr: T[], filter: (cur: T, prev: T | undefined) => boolean): T[] {\n\tlet prev: T | undefined;\n\treturn arr.filter(cur => {\n\t\tconst result = filter(cur, prev);\n\t\tprev = cur;\n\t\treturn result;\n\t});\n}\n\nexport abstract class RefCounted<T> implements IDisposable, IReference<T> {\n\tpublic static create<T extends IDisposable>(value: T, debugOwner: object | undefined = undefined): RefCounted<T> {\n\t\treturn new BaseRefCounted(value, value, debugOwner);\n\t}\n\n\tpublic static createWithDisposable<T extends IDisposable>(value: T, disposable: IDisposable, debugOwner: object | undefined = undefined): RefCounted<T> {\n\t\tconst store = new DisposableStore();\n\t\tstore.add(disposable);\n\t\tstore.add(value);\n\t\treturn new BaseRefCounted(value, store, debugOwner);\n\t}\n\n\tpublic abstract createNewRef(debugOwner?: object | undefined): RefCounted<T>;\n\n\tpublic abstract dispose(): void;\n\n\tpublic abstract get object(): T;\n}\n\nclass BaseRefCounted<T> extends RefCounted<T> {\n\tprivate _refCount = 1;\n\tprivate _isDisposed = false;\n\tprivate readonly _owners: object[] = [];\n\n\tconstructor(\n\t\tpublic override readonly object: T,\n\t\tprivate readonly _disposable: IDisposable,\n\t\tprivate readonly _debugOwner: object | undefined,\n\t) {\n\t\tsuper();\n\n\t\tif (_debugOwner) {\n\t\t\tthis._addOwner(_debugOwner);\n\t\t}\n\t}\n\n\tprivate _addOwner(debugOwner: object | undefined) {\n\t\tif (debugOwner) {\n\t\t\tthis._owners.push(debugOwner);\n\t\t}\n\t}\n\n\tpublic createNewRef(debugOwner?: object | undefined): RefCounted<T> {\n\t\tthis._refCount++;\n\t\tif (debugOwner) {\n\t\t\tthis._addOwner(debugOwner);\n\t\t}\n\t\treturn new ClonedRefCounted(this, debugOwner);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) { return; }\n\t\tthis._isDisposed = true;\n\t\tthis._decreaseRefCount(this._debugOwner);\n\t}\n\n\tpublic _decreaseRefCount(debugOwner?: object | undefined): void {\n\t\tthis._refCount--;\n\t\tif (this._refCount === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\n\t\tif (debugOwner) {\n\t\t\tconst idx = this._owners.indexOf(debugOwner);\n\t\t\tif (idx !== -1) {\n\t\t\t\tthis._owners.splice(idx, 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ClonedRefCounted<T> extends RefCounted<T> {\n\tprivate _isDisposed = false;\n\tconstructor(\n\t\tprivate readonly _base: BaseRefCounted<T>,\n\t\tprivate readonly _debugOwner: object | undefined,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic get object(): T { return this._base.object; }\n\n\tpublic createNewRef(debugOwner?: object | undefined): RefCounted<T> {\n\t\treturn this._base.createNewRef(debugOwner);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) { return; }\n\t\tthis._isDisposed = true;\n\t\tthis._base._decreaseRefCount(this._debugOwner);\n\t}\n}\n"]}