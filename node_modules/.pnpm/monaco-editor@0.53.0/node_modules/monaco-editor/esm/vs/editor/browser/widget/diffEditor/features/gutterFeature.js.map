{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/widget/diffEditor/features/gutterFeature.ts","vs/editor/browser/widget/diffEditor/features/gutterFeature.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;AAEhG,OAAO,EAAE,SAAS,EAAE,qBAAqB,EAAE,CAAC,EAAE,MAAM,oCAAoC,CAAC;AAKzF,OAAO,EAAE,UAAU,EAAE,MAAM,yCAAyC,CAAC;AACrE,OAAO,EAAe,OAAO,EAAE,gBAAgB,EAAE,OAAO,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,eAAe,EAAE,MAAM,0CAA0C,CAAC;AAEvL,OAAO,EAAsB,oBAAoB,EAAE,MAAM,oDAAoD,CAAC;AAC9G,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,mDAAmD,CAAC;AACzF,OAAO,EAAE,kBAAkB,EAAE,MAAM,yDAAyD,CAAC;AAC7F,OAAO,EAAE,sBAAsB,EAAE,MAAM,gDAAgD,CAAC;AACxF,OAAO,EAAE,qBAAqB,EAAE,MAAM,+DAA+D,CAAC;AAEtG,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,6CAA6C,CAAC;AACtF,OAAO,EAAE,WAAW,EAAE,MAAM,+CAA+C,CAAC;AAC5E,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,2CAA2C,CAAC;AACrE,OAAO,EAAE,wBAAwB,EAAE,MAAM,yCAAyC,CAAC;AACnF,OAAO,EAAE,aAAa,EAAE,MAAM,2CAA2C,CAAC;AAC1E,OAAO,EAAE,uBAAuB,EAAE,MAAM,gCAAgC,CAAC;AAEzE,OAAO,EAAE,cAAc,EAAc,MAAM,iCAAiC,CAAC;AAG7E,OAAO,EAAE,qBAAqB,EAAE,UAAU,EAAE,sBAAsB,EAAE,MAAM,aAAa,CAAC;AACxF,OAAO,EAAE,YAAY,EAAoC,MAAM,0BAA0B,CAAC;AAE1F,MAAM,QAAQ,GAAY,EAAE,CAAC;AAC7B,MAAM,KAAK,GAAG,EAAE,CAAC;AAEV,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,UAAU;IAU/C,YACC,cAA8B,EACb,UAAwD,EACxD,QAA2B,EAC3B,QAA2B,EAC3B,WAAuB,EACvB,eAAyD,EAClC,qBAA4C,EAC/C,kBAAsC,EAC5C,YAA0B;QAEzD,KAAK,EAAE,CAAC;QATS,eAAU,GAAV,UAAU,CAA8C;QACxD,aAAQ,GAAR,QAAQ,CAAmB;QAC3B,aAAQ,GAAR,QAAQ,CAAmB;QAC3B,gBAAW,GAAX,WAAW,CAAY;QACvB,oBAAe,GAAf,eAAe,CAA0C;QAClC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC/C,uBAAkB,GAAlB,kBAAkB,CAAoB;QAC5C,iBAAY,GAAZ,YAAY,CAAc;QAGzD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACjH,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;QACjG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACvH,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,mBAAmB,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACrH,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE;YAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,KAAK,EAAE,CAAC;gBACZ,OAAO,SAAS,CAAC;YAClB,CAAC;YACD,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC;YAEnD,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACjE,IAAI,CAAC,cAAc,EAAE,CAAC;gBAAC,OAAO,SAAS,CAAC;YAAC,CAAC;YAE1C,OAAO,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7F,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE;YAC9C,iCAAiC;YACjC,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3C,MAAM,IAAI,GAAG,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACtC,mGAAmG;YACnG,IAAI,CAAC,IAAI,EAAE,CAAC;gBAAC,OAAO,QAAQ,CAAC;YAAC,CAAC;YAE/B,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACjE,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC;gBAAC,OAAO,QAAQ,CAAC;YAAC,CAAC;YAE5D,MAAM,mBAAmB,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnG,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CACjD,CAAC,CAAC,gBAAgB,CAAC,YAAY,IAAI,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAC9F,CAAC;YACF,MAAM,MAAM,GAAG,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBAC/C,OAAO;gBACP,aAAa,EAAE,OAAO,CAAC,gBAAgB,CAAC,YAAa,CAAC,MAAM,CAC3D,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CACpE;aACD,CAAC,CAAC,CAAC;YACJ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC;gBAAC,OAAO,QAAQ,CAAC;YAAC,CAAC;YAChG,OAAO,MAAM,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAE3E,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE;YACtE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7G,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;YAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7C,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,cAAc,CAChD,cAAc,EACd,IAAI,CAAC,WAAW,CAAC,UAAU,EAC3B,IAAI,CAAC,QAAQ,CAAC,uBAAuB,EACrC,IAAI,CAAC,eAAe,EACpB,iBAAiB,CAChB,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,EAC9D,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,CACvD,EACD,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAClC,CAAC;QACH,CAAC,CAAC,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE9C,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;YAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,KAAK,EAAE,CAAC;gBACZ,OAAO,EAAE,CAAC;YACX,CAAC;YACD,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAAC,OAAO,EAAE,CAAC;YAAC,CAAC;YAE1B,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC1B,MAAM,CAAC,GAAG,wBAAwB,CAAC,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAC9F,OAAO;oBACN,IAAI,cAAc,CACjB,CAAC,EACD,IAAI,EACJ,MAAM,CAAC,0BAA0B,EACjC,SAAS,EACT,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EACxB,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CACxB;iBAAC,CAAC;YACL,CAAC;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEnD,OAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,cAAc,CAChD,CAAC,CAAC,gBAAgB,CAAC,8BAA8B,EAAE,EACnD,CAAC,CAAC,gBAAgB,KAAK,WAAW,EAAE,gBAAgB,EACpD,MAAM,CAAC,qBAAqB,EAC5B,SAAS,EACT,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EACxB,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CACxB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,IAAI,YAAY,CAAiB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YAC3F,0BAA0B,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;YACvE,UAAU,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE;gBAC5B,OAAO,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YACnF,CAAC;SACD,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,WAAW,EAAE,CAAC,CAAmB,EAAE,EAAE;YACzG,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,kCAAwB,CAAC,gBAAgB,EAAE,CAAC;gBAC/E,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC;YAC7D,CAAC;QACF,CAAC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC;IAEM,kBAAkB,CAAC,OAAiC;QAC1D,MAAM,CAAC,GAAG,OAAO,CAAC,YAAY,IAAI,EAAE,CAAC;QACrC,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAG,CAAC,CAAC;QACvE,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAG,CAAC,CAAC;QAEvE,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACnC,OAAO,KAAK,CAAC;IACd,CAAC;IAMD,MAAM,CAAC,IAAY;QAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;IAC/C,CAAC;CACD,CAAA;AAzJY,gBAAgB;IAiB1B,WAAA,qBAAqB,CAAA;IACrB,WAAA,kBAAkB,CAAA;IAClB,WAAA,YAAY,CAAA;GAnBF,gBAAgB,CAyJ5B;;AAED,MAAM,cAAc;IACnB,YACiB,OAAiC,EACjC,UAAmB,EACnB,MAAc,EACd,aAAoC,EACpC,WAAgB,EAChB,WAAgB;QALhB,YAAO,GAAP,OAAO,CAA0B;QACjC,eAAU,GAAV,UAAU,CAAS;QACnB,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAuB;QACpC,gBAAW,GAAX,WAAW,CAAK;QAChB,gBAAW,GAAX,WAAW,CAAK;IAEjC,CAAC;IACD,IAAI,EAAE,KAAa,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC7D,IAAI,KAAK,KAAgB,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;CAC9E;AAGD,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,UAAU;IAQnC,YACkB,KAAkC,EACnD,MAAmB,EACnB,MAAwB,EACD,oBAA2C;QAElE,KAAK,EAAE,CAAC;QALS,UAAK,GAAL,KAAK,CAA6B;QAMnD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE;YAClF,CAAC,CAAC,2BAA2B,EAAE,EAAE,EAAE,EAAE,CAAC;YACtC,CAAC,CAAC,qBAAqB,EAAE,EAAE,EAAE,EAAE,CAAC;SAChC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACjE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzD,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAEhC,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,cAAc,CACvE,sBAAsB,EACtB,SAAS,EACT,EAAE,YAAY,EAAE,IAAI,EAAE,EACtB,EAAE,QAAQ,EAAE,EAAE,aAAa,6BAAqB,EAAE,EAAE,CACpD,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC/B,qCAAqC;YACrC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAC3D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;YAC/D,UAAU,CAAC,GAAG,EAAE;gBACf,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;YAC7D,CAAC,EAAE,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC;QAGJ,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACjD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;YACzC,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBAChI,WAAW,qCAA6B;gBACxC,aAAa;gBACb,cAAc,EAAE;oBACf,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC;iBAC1C;gBACD,gBAAgB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAClE,kBAAkB,mCAA2B;gBAC7C,YAAY,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,uBAAuB,CAAC,GAAG,EAAE;oBACxD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;oBAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,OAAO;wBACN,OAAO;wBACP,2BAA2B,EAAE,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC;wBAC/D,WAAW,EAAE,IAAI,CAAC,WAAW;wBAC7B,WAAW,EAAE,IAAI,CAAC,WAAW;qBACmB,CAAC;gBACnD,CAAC,CAAC,CAAC;gBACH,WAAW,EAAE;oBACZ,iBAAiB,EAAE,IAAI;iBACvB;aACD,CAAC,CAAC,CAAC;YACJ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,oBAAoB,CAAC,GAAG,EAAE;gBACrC,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;oBACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAe,CAAC,CAAC;gBACxD,CAAC;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAKD,MAAM,CAAC,SAAsB,EAAE,SAAsB;QACpD,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAEhC,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,KAAK,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC;QAC/G,0BAA0B;QAC1B,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC;QAEjD,MAAM,YAAY,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;QAE3D,MAAM,MAAM,GAAG,UAAU,CAAC;QAE1B,IAAI,oBAAoB,GAAG,SAAS,CAAC,KAAK,GAAG,YAAY,CAAC;QAE1D,MAAM,sBAAsB,GAAG,WAAW,CAAC,SAAS,CACnD,MAAM,EACN,SAAS,CAAC,YAAY,GAAG,MAAM,GAAG,UAAU,CAC5C,CAAC;QAEF,MAAM,oBAAoB,GAAG,WAAW,CAAC,SAAS,CACjD,SAAS,CAAC,KAAK,GAAG,MAAM,EACxB,SAAS,CAAC,YAAY,GAAG,UAAU,GAAG,MAAM,CAC5C,CAAC;QAEF,IAAI,oBAAoB,IAAI,sBAAsB,IAAI,oBAAoB,CAAC,KAAK,GAAG,oBAAoB,CAAC,YAAY,EAAE,CAAC;YACtH,oBAAoB,GAAG,sBAAuB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAC1E,oBAAoB,GAAG,oBAAqB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACzE,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,oBAAoB,GAAG,SAAS,CAAC,KAAK,IAAI,CAAC;IAClF,CAAC;CACD,CAAA;AAhHK,WAAW;IAYd,WAAA,qBAAqB,CAAA;GAZlB,WAAW,CAgHhB","file":"gutterFeature.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventType, addDisposableListener, h } from '../../../../../base/browser/dom.js';\nimport { IMouseWheelEvent } from '../../../../../base/browser/mouseEvent.js';\nimport { ActionsOrientation } from '../../../../../base/browser/ui/actionbar/actionbar.js';\nimport { HoverPosition } from '../../../../../base/browser/ui/hover/hoverWidget.js';\nimport { IBoundarySashes } from '../../../../../base/browser/ui/sash/sash.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, autorun, autorunWithStore, derived, derivedDisposable, derivedWithSetter, observableFromEvent, observableValue } from '../../../../../base/common/observable.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { HiddenItemStrategy, MenuWorkbenchToolBar } from '../../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { WorkbenchHoverDelegate } from '../../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { LineRange, LineRangeSet } from '../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../common/core/ranges/offsetRange.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextEdit } from '../../../../common/core/edits/textEdit.js';\nimport { DetailedLineRangeMapping } from '../../../../common/diff/rangeMapping.js';\nimport { TextModelText } from '../../../../common/model/textModelText.js';\nimport { ActionRunnerWithContext } from '../../multiDiffEditor/utils.js';\nimport { DiffEditorEditors } from '../components/diffEditorEditors.js';\nimport { DiffEditorSash, SashLayout } from '../components/diffEditorSash.js';\nimport { DiffEditorOptions } from '../diffEditorOptions.js';\nimport { DiffEditorViewModel } from '../diffEditorViewModel.js';\nimport { appendRemoveOnDispose, applyStyle, prependRemoveOnDispose } from '../utils.js';\nimport { EditorGutter, IGutterItemInfo, IGutterItemView } from '../utils/editorGutter.js';\n\nconst emptyArr: never[] = [];\nconst width = 35;\n\nexport class DiffEditorGutter extends Disposable {\n\tprivate readonly _menu;\n\tprivate readonly _actions;\n\tprivate readonly _hasActions;\n\tprivate readonly _showSash;\n\n\tpublic readonly width;\n\n\tprivate readonly elements;\n\n\tconstructor(\n\t\tdiffEditorRoot: HTMLDivElement,\n\t\tprivate readonly _diffModel: IObservable<DiffEditorViewModel | undefined>,\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t\tprivate readonly _options: DiffEditorOptions,\n\t\tprivate readonly _sashLayout: SashLayout,\n\t\tprivate readonly _boundarySashes: IObservable<IBoundarySashes | undefined>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t) {\n\t\tsuper();\n\t\tthis._menu = this._register(this._menuService.createMenu(MenuId.DiffEditorHunkToolbar, this._contextKeyService));\n\t\tthis._actions = observableFromEvent(this, this._menu.onDidChange, () => this._menu.getActions());\n\t\tthis._hasActions = this._actions.map(a => a.length > 0);\n\t\tthis._showSash = derived(this, reader => this._options.renderSideBySide.read(reader) && this._hasActions.read(reader));\n\t\tthis.width = derived(this, reader => this._hasActions.read(reader) ? width : 0);\n\t\tthis.elements = h('div.gutter@gutter', { style: { position: 'absolute', height: '100%', width: width + 'px' } }, []);\n\t\tthis._currentDiff = derived(this, (reader) => {\n\t\t\tconst model = this._diffModel.read(reader);\n\t\t\tif (!model) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst mappings = model.diff.read(reader)?.mappings;\n\n\t\t\tconst cursorPosition = this._editors.modifiedCursor.read(reader);\n\t\t\tif (!cursorPosition) { return undefined; }\n\n\t\t\treturn mappings?.find(m => m.lineRangeMapping.modified.contains(cursorPosition.lineNumber));\n\t\t});\n\t\tthis._selectedDiffs = derived(this, (reader) => {\n\t\t\t/** @description selectedDiffs */\n\t\t\tconst model = this._diffModel.read(reader);\n\t\t\tconst diff = model?.diff.read(reader);\n\t\t\t// Return `emptyArr` because it is a constant. [] is always a new array and would trigger a change.\n\t\t\tif (!diff) { return emptyArr; }\n\n\t\t\tconst selections = this._editors.modifiedSelections.read(reader);\n\t\t\tif (selections.every(s => s.isEmpty())) { return emptyArr; }\n\n\t\t\tconst selectedLineNumbers = new LineRangeSet(selections.map(s => LineRange.fromRangeInclusive(s)));\n\n\t\t\tconst selectedMappings = diff.mappings.filter(m =>\n\t\t\t\tm.lineRangeMapping.innerChanges && selectedLineNumbers.intersects(m.lineRangeMapping.modified)\n\t\t\t);\n\t\t\tconst result = selectedMappings.map(mapping => ({\n\t\t\t\tmapping,\n\t\t\t\trangeMappings: mapping.lineRangeMapping.innerChanges!.filter(\n\t\t\t\t\tc => selections.some(s => Range.areIntersecting(c.modifiedRange, s))\n\t\t\t\t)\n\t\t\t}));\n\t\t\tif (result.length === 0 || result.every(r => r.rangeMappings.length === 0)) { return emptyArr; }\n\t\t\treturn result;\n\t\t});\n\n\t\tthis._register(prependRemoveOnDispose(diffEditorRoot, this.elements.root));\n\n\t\tthis._register(addDisposableListener(this.elements.root, 'click', () => {\n\t\t\tthis._editors.modified.focus();\n\t\t}));\n\n\t\tthis._register(applyStyle(this.elements.root, { display: this._hasActions.map(a => a ? 'block' : 'none') }));\n\n\t\tderivedDisposable(this, reader => {\n\t\t\tconst showSash = this._showSash.read(reader);\n\t\t\treturn !showSash ? undefined : new DiffEditorSash(\n\t\t\t\tdiffEditorRoot,\n\t\t\t\tthis._sashLayout.dimensions,\n\t\t\t\tthis._options.enableSplitViewResizing,\n\t\t\t\tthis._boundarySashes,\n\t\t\t\tderivedWithSetter(\n\t\t\t\t\tthis, reader => this._sashLayout.sashLeft.read(reader) - width,\n\t\t\t\t\t(v, tx) => this._sashLayout.sashLeft.set(v + width, tx)\n\t\t\t\t),\n\t\t\t\t() => this._sashLayout.resetSash(),\n\t\t\t);\n\t\t}).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst gutterItems = derived(this, reader => {\n\t\t\tconst model = this._diffModel.read(reader);\n\t\t\tif (!model) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst diffs = model.diff.read(reader);\n\t\t\tif (!diffs) { return []; }\n\n\t\t\tconst selection = this._selectedDiffs.read(reader);\n\t\t\tif (selection.length > 0) {\n\t\t\t\tconst m = DetailedLineRangeMapping.fromRangeMappings(selection.flatMap(s => s.rangeMappings));\n\t\t\t\treturn [\n\t\t\t\t\tnew DiffGutterItem(\n\t\t\t\t\t\tm,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tMenuId.DiffEditorSelectionToolbar,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tmodel.model.original.uri,\n\t\t\t\t\t\tmodel.model.modified.uri,\n\t\t\t\t\t)];\n\t\t\t}\n\n\t\t\tconst currentDiff = this._currentDiff.read(reader);\n\n\t\t\treturn diffs.mappings.map(m => new DiffGutterItem(\n\t\t\t\tm.lineRangeMapping.withInnerChangesFromLineRanges(),\n\t\t\t\tm.lineRangeMapping === currentDiff?.lineRangeMapping,\n\t\t\t\tMenuId.DiffEditorHunkToolbar,\n\t\t\t\tundefined,\n\t\t\t\tmodel.model.original.uri,\n\t\t\t\tmodel.model.modified.uri,\n\t\t\t));\n\t\t});\n\n\t\tthis._register(new EditorGutter<DiffGutterItem>(this._editors.modified, this.elements.root, {\n\t\t\tgetIntersectingGutterItems: (range, reader) => gutterItems.read(reader),\n\t\t\tcreateView: (item, target) => {\n\t\t\t\treturn this._instantiationService.createInstance(DiffToolBar, item, target, this);\n\t\t\t},\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.elements.gutter, EventType.MOUSE_WHEEL, (e: IMouseWheelEvent) => {\n\t\t\tif (this._editors.modified.getOption(EditorOption.scrollbar).handleMouseWheel) {\n\t\t\t\tthis._editors.modified.delegateScrollFromMouseWheelEvent(e);\n\t\t\t}\n\t\t}, { passive: false }));\n\t}\n\n\tpublic computeStagedValue(mapping: DetailedLineRangeMapping): string {\n\t\tconst c = mapping.innerChanges ?? [];\n\t\tconst modified = new TextModelText(this._editors.modifiedModel.get()!);\n\t\tconst original = new TextModelText(this._editors.original.getModel()!);\n\n\t\tconst edit = new TextEdit(c.map(c => c.toTextEdit(modified)));\n\t\tconst value = edit.apply(original);\n\t\treturn value;\n\t}\n\n\tprivate readonly _currentDiff;\n\n\tprivate readonly _selectedDiffs;\n\n\tlayout(left: number) {\n\t\tthis.elements.gutter.style.left = left + 'px';\n\t}\n}\n\nclass DiffGutterItem implements IGutterItemInfo {\n\tconstructor(\n\t\tpublic readonly mapping: DetailedLineRangeMapping,\n\t\tpublic readonly showAlways: boolean,\n\t\tpublic readonly menuId: MenuId,\n\t\tpublic readonly rangeOverride: LineRange | undefined,\n\t\tpublic readonly originalUri: URI,\n\t\tpublic readonly modifiedUri: URI,\n\t) {\n\t}\n\tget id(): string { return this.mapping.modified.toString(); }\n\tget range(): LineRange { return this.rangeOverride ?? this.mapping.modified; }\n}\n\n\nclass DiffToolBar extends Disposable implements IGutterItemView {\n\tprivate readonly _elements;\n\n\tprivate readonly _showAlways;\n\tprivate readonly _menuId;\n\n\tprivate readonly _isSmall;\n\n\tconstructor(\n\t\tprivate readonly _item: IObservable<DiffGutterItem>,\n\t\ttarget: HTMLElement,\n\t\tgutter: DiffEditorGutter,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._elements = h('div.gutterItem', { style: { height: '20px', width: '34px' } }, [\n\t\t\th('div.background@background', {}, []),\n\t\t\th('div.buttons@buttons', {}, []),\n\t\t]);\n\t\tthis._showAlways = this._item.map(this, item => item.showAlways);\n\t\tthis._menuId = this._item.map(this, item => item.menuId);\n\t\tthis._isSmall = observableValue(this, false);\n\t\tthis._lastItemRange = undefined;\n\t\tthis._lastViewRange = undefined;\n\n\t\tconst hoverDelegate = this._register(instantiationService.createInstance(\n\t\t\tWorkbenchHoverDelegate,\n\t\t\t'element',\n\t\t\t{ instantHover: true },\n\t\t\t{ position: { hoverPosition: HoverPosition.RIGHT } }\n\t\t));\n\n\t\tthis._register(appendRemoveOnDispose(target, this._elements.root));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update showAlways */\n\t\t\tconst showAlways = this._showAlways.read(reader);\n\t\t\tthis._elements.root.classList.toggle('noTransition', true);\n\t\t\tthis._elements.root.classList.toggle('showAlways', showAlways);\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._elements.root.classList.toggle('noTransition', false);\n\t\t\t}, 0);\n\t\t}));\n\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tthis._elements.buttons.replaceChildren();\n\t\t\tconst i = store.add(instantiationService.createInstance(MenuWorkbenchToolBar, this._elements.buttons, this._menuId.read(reader), {\n\t\t\t\torientation: ActionsOrientation.VERTICAL,\n\t\t\t\thoverDelegate,\n\t\t\t\ttoolbarOptions: {\n\t\t\t\t\tprimaryGroup: g => g.startsWith('primary'),\n\t\t\t\t},\n\t\t\t\toverflowBehavior: { maxItems: this._isSmall.read(reader) ? 1 : 3 },\n\t\t\t\thiddenItemStrategy: HiddenItemStrategy.Ignore,\n\t\t\t\tactionRunner: store.add(new ActionRunnerWithContext(() => {\n\t\t\t\t\tconst item = this._item.get();\n\t\t\t\t\tconst mapping = item.mapping;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmapping,\n\t\t\t\t\t\toriginalWithModifiedChanges: gutter.computeStagedValue(mapping),\n\t\t\t\t\t\toriginalUri: item.originalUri,\n\t\t\t\t\t\tmodifiedUri: item.modifiedUri,\n\t\t\t\t\t} satisfies DiffEditorSelectionHunkToolbarContext;\n\t\t\t\t})),\n\t\t\t\tmenuOptions: {\n\t\t\t\t\tshouldForwardArgs: true,\n\t\t\t\t},\n\t\t\t}));\n\t\t\tstore.add(i.onDidChangeMenuItems(() => {\n\t\t\t\tif (this._lastItemRange) {\n\t\t\t\t\tthis.layout(this._lastItemRange, this._lastViewRange!);\n\t\t\t\t}\n\t\t\t}));\n\t\t}));\n\t}\n\n\tprivate _lastItemRange: OffsetRange | undefined;\n\tprivate _lastViewRange: OffsetRange | undefined;\n\n\tlayout(itemRange: OffsetRange, viewRange: OffsetRange): void {\n\t\tthis._lastItemRange = itemRange;\n\t\tthis._lastViewRange = viewRange;\n\n\t\tlet itemHeight = this._elements.buttons.clientHeight;\n\t\tthis._isSmall.set(this._item.get().mapping.original.startLineNumber === 1 && itemRange.length < 30, undefined);\n\t\t// Item might have changed\n\t\titemHeight = this._elements.buttons.clientHeight;\n\n\t\tconst middleHeight = itemRange.length / 2 - itemHeight / 2;\n\n\t\tconst margin = itemHeight;\n\n\t\tlet effectiveCheckboxTop = itemRange.start + middleHeight;\n\n\t\tconst preferredViewPortRange = OffsetRange.tryCreate(\n\t\t\tmargin,\n\t\t\tviewRange.endExclusive - margin - itemHeight\n\t\t);\n\n\t\tconst preferredParentRange = OffsetRange.tryCreate(\n\t\t\titemRange.start + margin,\n\t\t\titemRange.endExclusive - itemHeight - margin\n\t\t);\n\n\t\tif (preferredParentRange && preferredViewPortRange && preferredParentRange.start < preferredParentRange.endExclusive) {\n\t\t\teffectiveCheckboxTop = preferredViewPortRange!.clip(effectiveCheckboxTop);\n\t\t\teffectiveCheckboxTop = preferredParentRange!.clip(effectiveCheckboxTop);\n\t\t}\n\n\t\tthis._elements.buttons.style.top = `${effectiveCheckboxTop - itemRange.start}px`;\n\t}\n}\n\nexport interface DiffEditorSelectionHunkToolbarContext {\n\tmapping: DetailedLineRangeMapping;\n\n\t/**\n\t * The original text with the selected modified changes applied.\n\t*/\n\toriginalWithModifiedChanges: string;\n\n\tmodifiedUri: URI;\n\toriginalUri: URI;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventType, addDisposableListener, h } from '../../../../../base/browser/dom.js';\nimport { IMouseWheelEvent } from '../../../../../base/browser/mouseEvent.js';\nimport { ActionsOrientation } from '../../../../../base/browser/ui/actionbar/actionbar.js';\nimport { HoverPosition } from '../../../../../base/browser/ui/hover/hoverWidget.js';\nimport { IBoundarySashes } from '../../../../../base/browser/ui/sash/sash.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, autorun, autorunWithStore, derived, derivedDisposable, derivedWithSetter, observableFromEvent, observableValue } from '../../../../../base/common/observable.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { HiddenItemStrategy, MenuWorkbenchToolBar } from '../../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { WorkbenchHoverDelegate } from '../../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { LineRange, LineRangeSet } from '../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../common/core/ranges/offsetRange.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextEdit } from '../../../../common/core/edits/textEdit.js';\nimport { DetailedLineRangeMapping } from '../../../../common/diff/rangeMapping.js';\nimport { TextModelText } from '../../../../common/model/textModelText.js';\nimport { ActionRunnerWithContext } from '../../multiDiffEditor/utils.js';\nimport { DiffEditorEditors } from '../components/diffEditorEditors.js';\nimport { DiffEditorSash, SashLayout } from '../components/diffEditorSash.js';\nimport { DiffEditorOptions } from '../diffEditorOptions.js';\nimport { DiffEditorViewModel } from '../diffEditorViewModel.js';\nimport { appendRemoveOnDispose, applyStyle, prependRemoveOnDispose } from '../utils.js';\nimport { EditorGutter, IGutterItemInfo, IGutterItemView } from '../utils/editorGutter.js';\n\nconst emptyArr: never[] = [];\nconst width = 35;\n\nexport class DiffEditorGutter extends Disposable {\n\tprivate readonly _menu;\n\tprivate readonly _actions;\n\tprivate readonly _hasActions;\n\tprivate readonly _showSash;\n\n\tpublic readonly width;\n\n\tprivate readonly elements;\n\n\tconstructor(\n\t\tdiffEditorRoot: HTMLDivElement,\n\t\tprivate readonly _diffModel: IObservable<DiffEditorViewModel | undefined>,\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t\tprivate readonly _options: DiffEditorOptions,\n\t\tprivate readonly _sashLayout: SashLayout,\n\t\tprivate readonly _boundarySashes: IObservable<IBoundarySashes | undefined>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t) {\n\t\tsuper();\n\t\tthis._menu = this._register(this._menuService.createMenu(MenuId.DiffEditorHunkToolbar, this._contextKeyService));\n\t\tthis._actions = observableFromEvent(this, this._menu.onDidChange, () => this._menu.getActions());\n\t\tthis._hasActions = this._actions.map(a => a.length > 0);\n\t\tthis._showSash = derived(this, reader => this._options.renderSideBySide.read(reader) && this._hasActions.read(reader));\n\t\tthis.width = derived(this, reader => this._hasActions.read(reader) ? width : 0);\n\t\tthis.elements = h('div.gutter@gutter', { style: { position: 'absolute', height: '100%', width: width + 'px' } }, []);\n\t\tthis._currentDiff = derived(this, (reader) => {\n\t\t\tconst model = this._diffModel.read(reader);\n\t\t\tif (!model) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst mappings = model.diff.read(reader)?.mappings;\n\n\t\t\tconst cursorPosition = this._editors.modifiedCursor.read(reader);\n\t\t\tif (!cursorPosition) { return undefined; }\n\n\t\t\treturn mappings?.find(m => m.lineRangeMapping.modified.contains(cursorPosition.lineNumber));\n\t\t});\n\t\tthis._selectedDiffs = derived(this, (reader) => {\n\t\t\t/** @description selectedDiffs */\n\t\t\tconst model = this._diffModel.read(reader);\n\t\t\tconst diff = model?.diff.read(reader);\n\t\t\t// Return `emptyArr` because it is a constant. [] is always a new array and would trigger a change.\n\t\t\tif (!diff) { return emptyArr; }\n\n\t\t\tconst selections = this._editors.modifiedSelections.read(reader);\n\t\t\tif (selections.every(s => s.isEmpty())) { return emptyArr; }\n\n\t\t\tconst selectedLineNumbers = new LineRangeSet(selections.map(s => LineRange.fromRangeInclusive(s)));\n\n\t\t\tconst selectedMappings = diff.mappings.filter(m =>\n\t\t\t\tm.lineRangeMapping.innerChanges && selectedLineNumbers.intersects(m.lineRangeMapping.modified)\n\t\t\t);\n\t\t\tconst result = selectedMappings.map(mapping => ({\n\t\t\t\tmapping,\n\t\t\t\trangeMappings: mapping.lineRangeMapping.innerChanges!.filter(\n\t\t\t\t\tc => selections.some(s => Range.areIntersecting(c.modifiedRange, s))\n\t\t\t\t)\n\t\t\t}));\n\t\t\tif (result.length === 0 || result.every(r => r.rangeMappings.length === 0)) { return emptyArr; }\n\t\t\treturn result;\n\t\t});\n\n\t\tthis._register(prependRemoveOnDispose(diffEditorRoot, this.elements.root));\n\n\t\tthis._register(addDisposableListener(this.elements.root, 'click', () => {\n\t\t\tthis._editors.modified.focus();\n\t\t}));\n\n\t\tthis._register(applyStyle(this.elements.root, { display: this._hasActions.map(a => a ? 'block' : 'none') }));\n\n\t\tderivedDisposable(this, reader => {\n\t\t\tconst showSash = this._showSash.read(reader);\n\t\t\treturn !showSash ? undefined : new DiffEditorSash(\n\t\t\t\tdiffEditorRoot,\n\t\t\t\tthis._sashLayout.dimensions,\n\t\t\t\tthis._options.enableSplitViewResizing,\n\t\t\t\tthis._boundarySashes,\n\t\t\t\tderivedWithSetter(\n\t\t\t\t\tthis, reader => this._sashLayout.sashLeft.read(reader) - width,\n\t\t\t\t\t(v, tx) => this._sashLayout.sashLeft.set(v + width, tx)\n\t\t\t\t),\n\t\t\t\t() => this._sashLayout.resetSash(),\n\t\t\t);\n\t\t}).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst gutterItems = derived(this, reader => {\n\t\t\tconst model = this._diffModel.read(reader);\n\t\t\tif (!model) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst diffs = model.diff.read(reader);\n\t\t\tif (!diffs) { return []; }\n\n\t\t\tconst selection = this._selectedDiffs.read(reader);\n\t\t\tif (selection.length > 0) {\n\t\t\t\tconst m = DetailedLineRangeMapping.fromRangeMappings(selection.flatMap(s => s.rangeMappings));\n\t\t\t\treturn [\n\t\t\t\t\tnew DiffGutterItem(\n\t\t\t\t\t\tm,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tMenuId.DiffEditorSelectionToolbar,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tmodel.model.original.uri,\n\t\t\t\t\t\tmodel.model.modified.uri,\n\t\t\t\t\t)];\n\t\t\t}\n\n\t\t\tconst currentDiff = this._currentDiff.read(reader);\n\n\t\t\treturn diffs.mappings.map(m => new DiffGutterItem(\n\t\t\t\tm.lineRangeMapping.withInnerChangesFromLineRanges(),\n\t\t\t\tm.lineRangeMapping === currentDiff?.lineRangeMapping,\n\t\t\t\tMenuId.DiffEditorHunkToolbar,\n\t\t\t\tundefined,\n\t\t\t\tmodel.model.original.uri,\n\t\t\t\tmodel.model.modified.uri,\n\t\t\t));\n\t\t});\n\n\t\tthis._register(new EditorGutter<DiffGutterItem>(this._editors.modified, this.elements.root, {\n\t\t\tgetIntersectingGutterItems: (range, reader) => gutterItems.read(reader),\n\t\t\tcreateView: (item, target) => {\n\t\t\t\treturn this._instantiationService.createInstance(DiffToolBar, item, target, this);\n\t\t\t},\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.elements.gutter, EventType.MOUSE_WHEEL, (e: IMouseWheelEvent) => {\n\t\t\tif (this._editors.modified.getOption(EditorOption.scrollbar).handleMouseWheel) {\n\t\t\t\tthis._editors.modified.delegateScrollFromMouseWheelEvent(e);\n\t\t\t}\n\t\t}, { passive: false }));\n\t}\n\n\tpublic computeStagedValue(mapping: DetailedLineRangeMapping): string {\n\t\tconst c = mapping.innerChanges ?? [];\n\t\tconst modified = new TextModelText(this._editors.modifiedModel.get()!);\n\t\tconst original = new TextModelText(this._editors.original.getModel()!);\n\n\t\tconst edit = new TextEdit(c.map(c => c.toTextEdit(modified)));\n\t\tconst value = edit.apply(original);\n\t\treturn value;\n\t}\n\n\tprivate readonly _currentDiff;\n\n\tprivate readonly _selectedDiffs;\n\n\tlayout(left: number) {\n\t\tthis.elements.gutter.style.left = left + 'px';\n\t}\n}\n\nclass DiffGutterItem implements IGutterItemInfo {\n\tconstructor(\n\t\tpublic readonly mapping: DetailedLineRangeMapping,\n\t\tpublic readonly showAlways: boolean,\n\t\tpublic readonly menuId: MenuId,\n\t\tpublic readonly rangeOverride: LineRange | undefined,\n\t\tpublic readonly originalUri: URI,\n\t\tpublic readonly modifiedUri: URI,\n\t) {\n\t}\n\tget id(): string { return this.mapping.modified.toString(); }\n\tget range(): LineRange { return this.rangeOverride ?? this.mapping.modified; }\n}\n\n\nclass DiffToolBar extends Disposable implements IGutterItemView {\n\tprivate readonly _elements;\n\n\tprivate readonly _showAlways;\n\tprivate readonly _menuId;\n\n\tprivate readonly _isSmall;\n\n\tconstructor(\n\t\tprivate readonly _item: IObservable<DiffGutterItem>,\n\t\ttarget: HTMLElement,\n\t\tgutter: DiffEditorGutter,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._elements = h('div.gutterItem', { style: { height: '20px', width: '34px' } }, [\n\t\t\th('div.background@background', {}, []),\n\t\t\th('div.buttons@buttons', {}, []),\n\t\t]);\n\t\tthis._showAlways = this._item.map(this, item => item.showAlways);\n\t\tthis._menuId = this._item.map(this, item => item.menuId);\n\t\tthis._isSmall = observableValue(this, false);\n\t\tthis._lastItemRange = undefined;\n\t\tthis._lastViewRange = undefined;\n\n\t\tconst hoverDelegate = this._register(instantiationService.createInstance(\n\t\t\tWorkbenchHoverDelegate,\n\t\t\t'element',\n\t\t\t{ instantHover: true },\n\t\t\t{ position: { hoverPosition: HoverPosition.RIGHT } }\n\t\t));\n\n\t\tthis._register(appendRemoveOnDispose(target, this._elements.root));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update showAlways */\n\t\t\tconst showAlways = this._showAlways.read(reader);\n\t\t\tthis._elements.root.classList.toggle('noTransition', true);\n\t\t\tthis._elements.root.classList.toggle('showAlways', showAlways);\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._elements.root.classList.toggle('noTransition', false);\n\t\t\t}, 0);\n\t\t}));\n\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tthis._elements.buttons.replaceChildren();\n\t\t\tconst i = store.add(instantiationService.createInstance(MenuWorkbenchToolBar, this._elements.buttons, this._menuId.read(reader), {\n\t\t\t\torientation: ActionsOrientation.VERTICAL,\n\t\t\t\thoverDelegate,\n\t\t\t\ttoolbarOptions: {\n\t\t\t\t\tprimaryGroup: g => g.startsWith('primary'),\n\t\t\t\t},\n\t\t\t\toverflowBehavior: { maxItems: this._isSmall.read(reader) ? 1 : 3 },\n\t\t\t\thiddenItemStrategy: HiddenItemStrategy.Ignore,\n\t\t\t\tactionRunner: store.add(new ActionRunnerWithContext(() => {\n\t\t\t\t\tconst item = this._item.get();\n\t\t\t\t\tconst mapping = item.mapping;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmapping,\n\t\t\t\t\t\toriginalWithModifiedChanges: gutter.computeStagedValue(mapping),\n\t\t\t\t\t\toriginalUri: item.originalUri,\n\t\t\t\t\t\tmodifiedUri: item.modifiedUri,\n\t\t\t\t\t} satisfies DiffEditorSelectionHunkToolbarContext;\n\t\t\t\t})),\n\t\t\t\tmenuOptions: {\n\t\t\t\t\tshouldForwardArgs: true,\n\t\t\t\t},\n\t\t\t}));\n\t\t\tstore.add(i.onDidChangeMenuItems(() => {\n\t\t\t\tif (this._lastItemRange) {\n\t\t\t\t\tthis.layout(this._lastItemRange, this._lastViewRange!);\n\t\t\t\t}\n\t\t\t}));\n\t\t}));\n\t}\n\n\tprivate _lastItemRange: OffsetRange | undefined;\n\tprivate _lastViewRange: OffsetRange | undefined;\n\n\tlayout(itemRange: OffsetRange, viewRange: OffsetRange): void {\n\t\tthis._lastItemRange = itemRange;\n\t\tthis._lastViewRange = viewRange;\n\n\t\tlet itemHeight = this._elements.buttons.clientHeight;\n\t\tthis._isSmall.set(this._item.get().mapping.original.startLineNumber === 1 && itemRange.length < 30, undefined);\n\t\t// Item might have changed\n\t\titemHeight = this._elements.buttons.clientHeight;\n\n\t\tconst middleHeight = itemRange.length / 2 - itemHeight / 2;\n\n\t\tconst margin = itemHeight;\n\n\t\tlet effectiveCheckboxTop = itemRange.start + middleHeight;\n\n\t\tconst preferredViewPortRange = OffsetRange.tryCreate(\n\t\t\tmargin,\n\t\t\tviewRange.endExclusive - margin - itemHeight\n\t\t);\n\n\t\tconst preferredParentRange = OffsetRange.tryCreate(\n\t\t\titemRange.start + margin,\n\t\t\titemRange.endExclusive - itemHeight - margin\n\t\t);\n\n\t\tif (preferredParentRange && preferredViewPortRange && preferredParentRange.start < preferredParentRange.endExclusive) {\n\t\t\teffectiveCheckboxTop = preferredViewPortRange!.clip(effectiveCheckboxTop);\n\t\t\teffectiveCheckboxTop = preferredParentRange!.clip(effectiveCheckboxTop);\n\t\t}\n\n\t\tthis._elements.buttons.style.top = `${effectiveCheckboxTop - itemRange.start}px`;\n\t}\n}\n\nexport interface DiffEditorSelectionHunkToolbarContext {\n\tmapping: DetailedLineRangeMapping;\n\n\t/**\n\t * The original text with the selected modified changes applied.\n\t*/\n\toriginalWithModifiedChanges: string;\n\n\tmodifiedUri: URI;\n\toriginalUri: URI;\n}\n"]}