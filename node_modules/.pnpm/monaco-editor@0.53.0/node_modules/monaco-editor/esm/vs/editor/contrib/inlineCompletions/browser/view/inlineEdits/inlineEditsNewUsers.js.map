{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsNewUsers.ts","vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsNewUsers.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;AAEhG,OAAO,EAAE,OAAO,EAAE,MAAM,wCAAwC,CAAC;AACjE,OAAO,EAAE,kBAAkB,EAAE,MAAM,yCAAyC,CAAC;AAC7E,OAAO,EAAE,UAAU,EAAE,eAAe,EAAe,iBAAiB,EAAE,MAAM,4CAA4C,CAAC;AACzH,OAAO,EAAE,OAAO,EAAE,gBAAgB,EAAE,OAAO,EAAe,eAAe,EAAE,WAAW,EAAE,gCAAgC,EAAE,MAAM,6CAA6C,CAAC;AAC9K,OAAO,EAAE,qBAAqB,EAAE,MAAM,kEAAkE,CAAC;AACzG,OAAO,EAAE,eAAe,EAA+B,MAAM,sDAAsD,CAAC;AAKpH,IAAK,QAIJ;AAJD,WAAK,QAAQ;IACZ,mCAAuB,CAAA;IACvB,qCAAyB,CAAA;IACzB,6BAAiB,CAAA;AAClB,CAAC,EAJI,QAAQ,KAAR,QAAQ,QAIZ;AAEM,IAAM,+BAA+B,GAArC,MAAM,+BAAgC,SAAQ,UAAU;IAkB9D,YACkB,KAA+C,EAC/C,MAAiD,EACjD,UAA+D,EAC/D,cAAwC,EACxC,eAAiD,EAC3C,qBAA6D;QAEpF,KAAK,EAAE,CAAC;QAPS,UAAK,GAAL,KAAK,CAA0C;QAC/C,WAAM,GAAN,MAAM,CAA2C;QACjD,eAAU,GAAV,UAAU,CAAqD;QAC/D,mBAAc,GAAd,cAAc,CAA0B;QACvB,oBAAe,GAAf,eAAe,CAAiB;QAC1B,0BAAqB,GAArB,qBAAqB,CAAuB;QAtBpE,iBAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,iBAAiB,EAAE,CAAC,CAAC;QAEvD,eAAU,GAAG,eAAe,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE,KAAK,CAAC,CAAC;QAE3D,wBAAmB,GAAG,OAAO,CAAqB,MAAM,CAAC,EAAE;YAC3E,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAAC,OAAO,SAAS,CAAC;YAAC,CAAC;YAEjC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;gBAAC,OAAO,SAAS,CAAC;YAAC,CAAC;YAExD,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;gBAAC,OAAO,SAAS,CAAC;YAAC,CAAC;YAE1E,OAAO,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC;QACtD,CAAC,CAAC,CAAC;QAYF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC;QAE/C,gDAAgD;QAChD,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAExD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACtC,CAAC;IAEO,sBAAsB;QAC7B,IAAI,IAAI,CAAC,cAAc,EAAE,KAAK,QAAQ,CAAC,MAAM,EAAE,CAAC;YAC/C,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,MAAM,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;QAE9C,IAAI,sBAAsB,GAAG,KAAK,CAAC;QACnC,IAAI,yBAAyB,GAAG,KAAK,CAAC;QACtC,IAAI,2BAA2B,GAAG,CAAC,CAAC;QACpC,IAAI,4BAA4B,GAAG,CAAC,CAAC;QAErC,gCAAgC;QAChC,eAAe,CAAC,GAAG,CAAC,gCAAgC,CAAC,IAAI,CAAC,mBAAmB,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE;YACzG,IAAI,EAAE,KAAK,SAAS,EAAE,CAAC;gBAAC,OAAO;YAAC,CAAC;YACjC,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAErC,uBAAuB;YACvB,QAAQ,QAAQ,EAAE,CAAC;gBAClB,KAAK,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;oBACzB,IAAI,2BAA2B,EAAE,IAAI,CAAC,IAAI,sBAAsB,EAAE,CAAC;wBAClE,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC;wBAC/B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBAC/B,CAAC;oBACD,MAAM;gBACP,CAAC;gBACD,KAAK,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC1B,IAAI,4BAA4B,EAAE,IAAI,CAAC,IAAI,yBAAyB,EAAE,CAAC;wBACtE,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;wBAC3B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBAC/B,CAAC;oBACD,MAAM;gBACP,CAAC;YACF,CAAC;YAED,YAAY;YACZ,QAAQ,QAAQ,EAAE,CAAC;gBAClB,KAAK,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;oBACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC9D,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,gBAAgB,EAAE,CAAC;wBAChD,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;oBACpB,CAAC;oBACD,MAAM;gBACP,CAAC;gBACD,KAAK,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC1B,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,gBAAgB,EAAE,CAAC;oBAC1C,MAAM;gBACP,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACpC,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;gBAChD,IAAI,IAAI,CAAC,cAAc,EAAE,KAAK,QAAQ,CAAC,MAAM,EAAE,CAAC;oBAC/C,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;gBACxC,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,mDAAmD;QACnD,eAAe,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACtD,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,SAAS,EAAE,CAAC;gBAAC,OAAO;YAAC,CAAC;YAC3B,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE;gBACtE,IAAI,SAAS,EAAE,CAAC;oBACf,sBAAsB,GAAG,IAAI,CAAC;gBAC/B,CAAC;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;QAEJ,qDAAqD;QACrD,eAAe,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACtD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,CAAC,IAAI,EAAE,CAAC;gBAAC,OAAO;YAAC,CAAC;YACtB,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE;gBAC/B,yBAAyB,GAAG,IAAI,CAAC;YAClC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;QAEJ,OAAO,eAAe,CAAC;IACxB,CAAC;IAEO,cAAc;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oCAAoC,qCAA4B,QAAQ,CAAC,SAAS,CAAa,CAAC;IACjI,CAAC;IAEO,cAAc,CAAC,KAAe;QACrC,QAAQ,KAAK,EAAE,CAAC;YACf,KAAK,QAAQ,CAAC,SAAS;gBACtB,MAAM,IAAI,kBAAkB,CAAC,0CAA0C,CAAC,CAAC;YAC1E,KAAK,QAAQ,CAAC,UAAU;gBACvB,MAAM;YACP,KAAK,QAAQ,CAAC,MAAM;gBACnB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;gBAC1B,MAAM;QACR,CAAC;QAED,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,gEAA+C,CAAC;IACvH,CAAC;IAEO,uBAAuB;QAC9B,iDAAiD;QACjD,MAAM,kBAAkB,GAAG,mDAAmD,CAAC;QAC/E,IAAI,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,CAAC;YAC7D,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,oCAAoC,oCAA2B,CAAC;QAC7F,CAAC;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE;YAC1E,IAAI,CAAC,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,CAAC;gBAC3G,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,oCAAoC,oCAA2B,CAAC;gBAC5F,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACzD,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC;IACnB,CAAC;CACD,CAAA;AAxJY,+BAA+B;IAuBzC,WAAA,eAAe,CAAA;IACf,WAAA,qBAAqB,CAAA;GAxBX,+BAA+B,CAwJ3C","file":"inlineEditsNewUsers.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from '../../../../../../base/common/async.js';\nimport { BugIndicatingError } from '../../../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, IObservable, observableValue, runOnChange, runOnChangeWithCancellationToken } from '../../../../../../base/common/observable.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../../../platform/storage/common/storage.js';\nimport { InlineEditsGutterIndicator } from './components/gutterIndicatorView.js';\nimport { IInlineEditHost, IInlineEditModel } from './inlineEditsViewInterface.js';\nimport { InlineEditsCollapsedView } from './inlineEditsViews/inlineEditsCollapsedView.js';\n\nenum UserKind {\n\tFirstTime = 'firstTime',\n\tSecondTime = 'secondTime',\n\tActive = 'active'\n}\n\nexport class InlineEditsOnboardingExperience extends Disposable {\n\n\tprivate readonly _disposables = this._register(new MutableDisposable());\n\n\tprivate readonly _setupDone = observableValue({ name: 'setupDone' }, false);\n\n\tprivate readonly _activeCompletionId = derived<string | undefined>(reader => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\n\t\tif (!this._setupDone.read(reader)) { return undefined; }\n\n\t\tconst indicator = this._indicator.read(reader);\n\t\tif (!indicator || !indicator.isVisible.read(reader)) { return undefined; }\n\n\t\treturn model.inlineEdit.inlineCompletion.identity.id;\n\t});\n\n\tconstructor(\n\t\tprivate readonly _host: IObservable<IInlineEditHost | undefined>,\n\t\tprivate readonly _model: IObservable<IInlineEditModel | undefined>,\n\t\tprivate readonly _indicator: IObservable<InlineEditsGutterIndicator | undefined>,\n\t\tprivate readonly _collapsedView: InlineEditsCollapsedView,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this._initializeDebugSetting());\n\n\t\t// Setup the onboarding experience for new users\n\t\tthis._disposables.value = this.setupNewUserExperience();\n\n\t\tthis._setupDone.set(true, undefined);\n\t}\n\n\tprivate setupNewUserExperience(): IDisposable | undefined {\n\t\tif (this.getNewUserType() === UserKind.Active) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst disposableStore = new DisposableStore();\n\n\t\tlet userHasHoveredOverIcon = false;\n\t\tlet inlineEditHasBeenAccepted = false;\n\t\tlet firstTimeUserAnimationCount = 0;\n\t\tlet secondTimeUserAnimationCount = 0;\n\n\t\t// pulse animation for new users\n\t\tdisposableStore.add(runOnChangeWithCancellationToken(this._activeCompletionId, async (id, _, __, token) => {\n\t\t\tif (id === undefined) { return; }\n\t\t\tlet userType = this.getNewUserType();\n\n\t\t\t// User Kind Transition\n\t\t\tswitch (userType) {\n\t\t\t\tcase UserKind.FirstTime: {\n\t\t\t\t\tif (firstTimeUserAnimationCount++ >= 5 || userHasHoveredOverIcon) {\n\t\t\t\t\t\tuserType = UserKind.SecondTime;\n\t\t\t\t\t\tthis.setNewUserType(userType);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase UserKind.SecondTime: {\n\t\t\t\t\tif (secondTimeUserAnimationCount++ >= 3 && inlineEditHasBeenAccepted) {\n\t\t\t\t\t\tuserType = UserKind.Active;\n\t\t\t\t\t\tthis.setNewUserType(userType);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Animation\n\t\t\tswitch (userType) {\n\t\t\t\tcase UserKind.FirstTime: {\n\t\t\t\t\tfor (let i = 0; i < 3 && !token.isCancellationRequested; i++) {\n\t\t\t\t\t\tawait this._indicator.get()?.triggerAnimation();\n\t\t\t\t\t\tawait timeout(500);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase UserKind.SecondTime: {\n\t\t\t\t\tthis._indicator.get()?.triggerAnimation();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tdisposableStore.add(autorun(reader => {\n\t\t\tif (this._collapsedView.isVisible.read(reader)) {\n\t\t\t\tif (this.getNewUserType() !== UserKind.Active) {\n\t\t\t\t\tthis._collapsedView.triggerAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Remember when the user has hovered over the icon\n\t\tdisposableStore.add(autorunWithStore((reader, store) => {\n\t\t\tconst indicator = this._indicator.read(reader);\n\t\t\tif (!indicator) { return; }\n\t\t\tstore.add(runOnChange(indicator.isHoveredOverIcon, async (isHovered) => {\n\t\t\t\tif (isHovered) {\n\t\t\t\t\tuserHasHoveredOverIcon = true;\n\t\t\t\t}\n\t\t\t}));\n\t\t}));\n\n\t\t// Remember when the user has accepted an inline edit\n\t\tdisposableStore.add(autorunWithStore((reader, store) => {\n\t\t\tconst host = this._host.read(reader);\n\t\t\tif (!host) { return; }\n\t\t\tstore.add(host.onDidAccept(() => {\n\t\t\t\tinlineEditHasBeenAccepted = true;\n\t\t\t}));\n\t\t}));\n\n\t\treturn disposableStore;\n\t}\n\n\tprivate getNewUserType(): UserKind {\n\t\treturn this._storageService.get('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION, UserKind.FirstTime) as UserKind;\n\t}\n\n\tprivate setNewUserType(value: UserKind): void {\n\t\tswitch (value) {\n\t\t\tcase UserKind.FirstTime:\n\t\t\t\tthrow new BugIndicatingError('UserKind should not be set to first time');\n\t\t\tcase UserKind.SecondTime:\n\t\t\t\tbreak;\n\t\t\tcase UserKind.Active:\n\t\t\t\tthis._disposables.clear();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._storageService.store('inlineEditsGutterIndicatorUserKind', value, StorageScope.APPLICATION, StorageTarget.USER);\n\t}\n\n\tprivate _initializeDebugSetting(): IDisposable {\n\t\t// Debug setting to reset the new user experience\n\t\tconst hiddenDebugSetting = 'editor.inlineSuggest.edits.resetNewUserExperience';\n\t\tif (this._configurationService.getValue(hiddenDebugSetting)) {\n\t\t\tthis._storageService.remove('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION);\n\t\t}\n\n\t\tconst disposable = this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(hiddenDebugSetting) && this._configurationService.getValue(hiddenDebugSetting)) {\n\t\t\t\tthis._storageService.remove('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION);\n\t\t\t\tthis._disposables.value = this.setupNewUserExperience();\n\t\t\t}\n\t\t});\n\n\t\treturn disposable;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from '../../../../../../base/common/async.js';\nimport { BugIndicatingError } from '../../../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, IObservable, observableValue, runOnChange, runOnChangeWithCancellationToken } from '../../../../../../base/common/observable.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../../../platform/storage/common/storage.js';\nimport { InlineEditsGutterIndicator } from './components/gutterIndicatorView.js';\nimport { IInlineEditHost, IInlineEditModel } from './inlineEditsViewInterface.js';\nimport { InlineEditsCollapsedView } from './inlineEditsViews/inlineEditsCollapsedView.js';\n\nenum UserKind {\n\tFirstTime = 'firstTime',\n\tSecondTime = 'secondTime',\n\tActive = 'active'\n}\n\nexport class InlineEditsOnboardingExperience extends Disposable {\n\n\tprivate readonly _disposables = this._register(new MutableDisposable());\n\n\tprivate readonly _setupDone = observableValue({ name: 'setupDone' }, false);\n\n\tprivate readonly _activeCompletionId = derived<string | undefined>(reader => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\n\t\tif (!this._setupDone.read(reader)) { return undefined; }\n\n\t\tconst indicator = this._indicator.read(reader);\n\t\tif (!indicator || !indicator.isVisible.read(reader)) { return undefined; }\n\n\t\treturn model.inlineEdit.inlineCompletion.identity.id;\n\t});\n\n\tconstructor(\n\t\tprivate readonly _host: IObservable<IInlineEditHost | undefined>,\n\t\tprivate readonly _model: IObservable<IInlineEditModel | undefined>,\n\t\tprivate readonly _indicator: IObservable<InlineEditsGutterIndicator | undefined>,\n\t\tprivate readonly _collapsedView: InlineEditsCollapsedView,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this._initializeDebugSetting());\n\n\t\t// Setup the onboarding experience for new users\n\t\tthis._disposables.value = this.setupNewUserExperience();\n\n\t\tthis._setupDone.set(true, undefined);\n\t}\n\n\tprivate setupNewUserExperience(): IDisposable | undefined {\n\t\tif (this.getNewUserType() === UserKind.Active) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst disposableStore = new DisposableStore();\n\n\t\tlet userHasHoveredOverIcon = false;\n\t\tlet inlineEditHasBeenAccepted = false;\n\t\tlet firstTimeUserAnimationCount = 0;\n\t\tlet secondTimeUserAnimationCount = 0;\n\n\t\t// pulse animation for new users\n\t\tdisposableStore.add(runOnChangeWithCancellationToken(this._activeCompletionId, async (id, _, __, token) => {\n\t\t\tif (id === undefined) { return; }\n\t\t\tlet userType = this.getNewUserType();\n\n\t\t\t// User Kind Transition\n\t\t\tswitch (userType) {\n\t\t\t\tcase UserKind.FirstTime: {\n\t\t\t\t\tif (firstTimeUserAnimationCount++ >= 5 || userHasHoveredOverIcon) {\n\t\t\t\t\t\tuserType = UserKind.SecondTime;\n\t\t\t\t\t\tthis.setNewUserType(userType);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase UserKind.SecondTime: {\n\t\t\t\t\tif (secondTimeUserAnimationCount++ >= 3 && inlineEditHasBeenAccepted) {\n\t\t\t\t\t\tuserType = UserKind.Active;\n\t\t\t\t\t\tthis.setNewUserType(userType);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Animation\n\t\t\tswitch (userType) {\n\t\t\t\tcase UserKind.FirstTime: {\n\t\t\t\t\tfor (let i = 0; i < 3 && !token.isCancellationRequested; i++) {\n\t\t\t\t\t\tawait this._indicator.get()?.triggerAnimation();\n\t\t\t\t\t\tawait timeout(500);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase UserKind.SecondTime: {\n\t\t\t\t\tthis._indicator.get()?.triggerAnimation();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tdisposableStore.add(autorun(reader => {\n\t\t\tif (this._collapsedView.isVisible.read(reader)) {\n\t\t\t\tif (this.getNewUserType() !== UserKind.Active) {\n\t\t\t\t\tthis._collapsedView.triggerAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Remember when the user has hovered over the icon\n\t\tdisposableStore.add(autorunWithStore((reader, store) => {\n\t\t\tconst indicator = this._indicator.read(reader);\n\t\t\tif (!indicator) { return; }\n\t\t\tstore.add(runOnChange(indicator.isHoveredOverIcon, async (isHovered) => {\n\t\t\t\tif (isHovered) {\n\t\t\t\t\tuserHasHoveredOverIcon = true;\n\t\t\t\t}\n\t\t\t}));\n\t\t}));\n\n\t\t// Remember when the user has accepted an inline edit\n\t\tdisposableStore.add(autorunWithStore((reader, store) => {\n\t\t\tconst host = this._host.read(reader);\n\t\t\tif (!host) { return; }\n\t\t\tstore.add(host.onDidAccept(() => {\n\t\t\t\tinlineEditHasBeenAccepted = true;\n\t\t\t}));\n\t\t}));\n\n\t\treturn disposableStore;\n\t}\n\n\tprivate getNewUserType(): UserKind {\n\t\treturn this._storageService.get('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION, UserKind.FirstTime) as UserKind;\n\t}\n\n\tprivate setNewUserType(value: UserKind): void {\n\t\tswitch (value) {\n\t\t\tcase UserKind.FirstTime:\n\t\t\t\tthrow new BugIndicatingError('UserKind should not be set to first time');\n\t\t\tcase UserKind.SecondTime:\n\t\t\t\tbreak;\n\t\t\tcase UserKind.Active:\n\t\t\t\tthis._disposables.clear();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._storageService.store('inlineEditsGutterIndicatorUserKind', value, StorageScope.APPLICATION, StorageTarget.USER);\n\t}\n\n\tprivate _initializeDebugSetting(): IDisposable {\n\t\t// Debug setting to reset the new user experience\n\t\tconst hiddenDebugSetting = 'editor.inlineSuggest.edits.resetNewUserExperience';\n\t\tif (this._configurationService.getValue(hiddenDebugSetting)) {\n\t\t\tthis._storageService.remove('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION);\n\t\t}\n\n\t\tconst disposable = this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(hiddenDebugSetting) && this._configurationService.getValue(hiddenDebugSetting)) {\n\t\t\t\tthis._storageService.remove('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION);\n\t\t\t\tthis._disposables.value = this.setupNewUserExperience();\n\t\t\t}\n\t\t});\n\n\t\treturn disposable;\n\t}\n}\n"]}