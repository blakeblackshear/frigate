{"version":3,"sources":["vs/editor/browser/controller/editContext/textArea/textAreaEditContext.ts"],"names":[],"mappings":"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","file":"textAreaEditContext.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './textAreaEditContext.css';\nimport * as nls from '../../../../../nls.js';\nimport * as browser from '../../../../../base/browser/browser.js';\nimport { FastDomNode, createFastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { IKeyboardEvent } from '../../../../../base/browser/keyboardEvent.js';\nimport * as platform from '../../../../../base/common/platform.js';\nimport * as strings from '../../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../../config/domFontInfo.js';\nimport { ViewController } from '../../../view/viewController.js';\nimport { PartFingerprint, PartFingerprints } from '../../../view/viewPart.js';\nimport { LineNumbersOverlay } from '../../../viewParts/lineNumbers/lineNumbers.js';\nimport { Margin } from '../../../viewParts/margin/margin.js';\nimport { RenderLineNumbersType, EditorOption, IComputedEditorOptions, EditorOptions } from '../../../../common/config/editorOptions.js';\nimport { FontInfo } from '../../../../common/config/fontInfo.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { ScrollType } from '../../../../common/editorCommon.js';\nimport { EndOfLinePreference } from '../../../../common/model.js';\nimport { RenderingContext, RestrictedRenderingContext, HorizontalPosition, LineVisibleRanges } from '../../../view/renderingContext.js';\nimport { ViewContext } from '../../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../../common/viewEvents.js';\nimport { AccessibilitySupport } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { IEditorAriaOptions } from '../../../editorBrowser.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { TokenizationRegistry } from '../../../../common/languages.js';\nimport { ColorId, ITokenPresentation } from '../../../../common/encodedTokenAttributes.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { IME } from '../../../../../base/common/ime.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { AbstractEditContext } from '../editContext.js';\nimport { ICompositionData, IPasteData, ITextAreaInputHost, TextAreaInput, TextAreaWrapper } from './textAreaEditContextInput.js';\nimport { ariaLabelForScreenReaderContent, newlinecount, SimplePagedScreenReaderStrategy } from '../screenReaderUtils.js';\nimport { ClipboardDataToCopy, getDataToCopy } from '../clipboardUtils.js';\nimport { _debugComposition, ITypeData, TextAreaState } from './textAreaEditContextState.js';\nimport { getMapForWordSeparators, WordCharacterClass } from '../../../../common/core/wordCharacterClassifier.js';\n\nexport interface IVisibleRangeProvider {\n\tvisibleRangeForPosition(position: Position): HorizontalPosition | null;\n\tlinesVisibleRangesForRange(range: Range, includeNewLines: boolean): LineVisibleRanges[] | null;\n}\n\nclass VisibleTextAreaData {\n\t_visibleTextAreaBrand: void = undefined;\n\n\tpublic startPosition: Position | null = null;\n\tpublic endPosition: Position | null = null;\n\n\tpublic visibleTextareaStart: HorizontalPosition | null = null;\n\tpublic visibleTextareaEnd: HorizontalPosition | null = null;\n\n\t/**\n\t * When doing composition, the currently composed text might be split up into\n\t * multiple tokens, then merged again into a single token, etc. Here we attempt\n\t * to keep the presentation of the <textarea> stable by using the previous used\n\t * style if multiple tokens come into play. This avoids flickering.\n\t */\n\tprivate _previousPresentation: ITokenPresentation | null = null;\n\n\tconstructor(\n\t\tprivate readonly _context: ViewContext,\n\t\tpublic readonly modelLineNumber: number,\n\t\tpublic readonly distanceToModelLineStart: number,\n\t\tpublic readonly widthOfHiddenLineTextBefore: number,\n\t\tpublic readonly distanceToModelLineEnd: number,\n\t) {\n\t}\n\n\tprepareRender(visibleRangeProvider: IVisibleRangeProvider): void {\n\t\tconst startModelPosition = new Position(this.modelLineNumber, this.distanceToModelLineStart + 1);\n\t\tconst endModelPosition = new Position(this.modelLineNumber, this._context.viewModel.model.getLineMaxColumn(this.modelLineNumber) - this.distanceToModelLineEnd);\n\n\t\tthis.startPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(startModelPosition);\n\t\tthis.endPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(endModelPosition);\n\n\t\tif (this.startPosition.lineNumber === this.endPosition.lineNumber) {\n\t\t\tthis.visibleTextareaStart = visibleRangeProvider.visibleRangeForPosition(this.startPosition);\n\t\t\tthis.visibleTextareaEnd = visibleRangeProvider.visibleRangeForPosition(this.endPosition);\n\t\t} else {\n\t\t\t// TODO: what if the view positions are not on the same line?\n\t\t\tthis.visibleTextareaStart = null;\n\t\t\tthis.visibleTextareaEnd = null;\n\t\t}\n\t}\n\n\tdefinePresentation(tokenPresentation: ITokenPresentation | null): ITokenPresentation {\n\t\tif (!this._previousPresentation) {\n\t\t\t// To avoid flickering, once set, always reuse a presentation throughout the entire IME session\n\t\t\tif (tokenPresentation) {\n\t\t\t\tthis._previousPresentation = tokenPresentation;\n\t\t\t} else {\n\t\t\t\tthis._previousPresentation = {\n\t\t\t\t\tforeground: ColorId.DefaultForeground,\n\t\t\t\t\titalic: false,\n\t\t\t\t\tbold: false,\n\t\t\t\t\tunderline: false,\n\t\t\t\t\tstrikethrough: false,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn this._previousPresentation;\n\t}\n}\n\nconst canUseZeroSizeTextarea = (browser.isFirefox);\n\nexport class TextAreaEditContext extends AbstractEditContext {\n\n\tprivate readonly _viewController: ViewController;\n\tprivate readonly _visibleRangeProvider: IVisibleRangeProvider;\n\tprivate _scrollLeft: number;\n\tprivate _scrollTop: number;\n\n\tprivate _accessibilitySupport!: AccessibilitySupport;\n\tprivate _accessibilityPageSize!: number;\n\tprivate _textAreaWrapping!: boolean;\n\tprivate _textAreaWidth!: number;\n\tprivate _contentLeft: number;\n\tprivate _contentWidth: number;\n\tprivate _contentHeight: number;\n\tprivate _fontInfo: FontInfo;\n\tprivate _emptySelectionClipboard: boolean;\n\tprivate _copyWithSyntaxHighlighting: boolean;\n\n\t/**\n\t * Defined only when the text area is visible (composition case).\n\t */\n\tprivate _visibleTextArea: VisibleTextAreaData | null;\n\tprivate _selections: Selection[];\n\tprivate _modelSelections: Selection[];\n\n\t/**\n\t * The position at which the textarea was rendered.\n\t * This is useful for hit-testing and determining the mouse position.\n\t */\n\tprivate _lastRenderPosition: Position | null;\n\n\tpublic readonly textArea: FastDomNode<HTMLTextAreaElement>;\n\tpublic readonly textAreaCover: FastDomNode<HTMLElement>;\n\tprivate readonly _textAreaInput: TextAreaInput;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\toverflowGuardContainer: FastDomNode<HTMLElement>,\n\t\tviewController: ViewController,\n\t\tvisibleRangeProvider: IVisibleRangeProvider,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper(context);\n\n\t\tthis._viewController = viewController;\n\t\tthis._visibleRangeProvider = visibleRangeProvider;\n\t\tthis._scrollLeft = 0;\n\t\tthis._scrollTop = 0;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._setAccessibilityOptions(options);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentHeight = layoutInfo.height;\n\t\tthis._fontInfo = options.get(EditorOption.fontInfo);\n\t\tthis._emptySelectionClipboard = options.get(EditorOption.emptySelectionClipboard);\n\t\tthis._copyWithSyntaxHighlighting = options.get(EditorOption.copyWithSyntaxHighlighting);\n\n\t\tthis._visibleTextArea = null;\n\t\tthis._selections = [new Selection(1, 1, 1, 1)];\n\t\tthis._modelSelections = [new Selection(1, 1, 1, 1)];\n\t\tthis._lastRenderPosition = null;\n\n\t\t// Text Area (The focus will always be in the textarea when the cursor is blinking)\n\t\tthis.textArea = createFastDomNode(document.createElement('textarea'));\n\t\tPartFingerprints.write(this.textArea, PartFingerprint.TextArea);\n\t\tthis.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\tthis.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n\t\tthis.textArea.setAttribute('autocorrect', 'off');\n\t\tthis.textArea.setAttribute('autocapitalize', 'off');\n\t\tthis.textArea.setAttribute('autocomplete', 'off');\n\t\tthis.textArea.setAttribute('spellcheck', 'false');\n\t\tthis.textArea.setAttribute('aria-label', ariaLabelForScreenReaderContent(options, this._keybindingService));\n\t\tthis.textArea.setAttribute('aria-required', options.get(EditorOption.ariaRequired) ? 'true' : 'false');\n\t\tthis.textArea.setAttribute('tabindex', String(options.get(EditorOption.tabIndex)));\n\t\tthis.textArea.setAttribute('role', 'textbox');\n\t\tthis.textArea.setAttribute('aria-roledescription', nls.localize('editor', \"editor\"));\n\t\tthis.textArea.setAttribute('aria-multiline', 'true');\n\t\tthis.textArea.setAttribute('aria-autocomplete', options.get(EditorOption.readOnly) ? 'none' : 'both');\n\n\t\tthis._ensureReadOnlyAttribute();\n\n\t\tthis.textAreaCover = createFastDomNode(document.createElement('div'));\n\t\tthis.textAreaCover.setPosition('absolute');\n\n\t\toverflowGuardContainer.appendChild(this.textArea);\n\t\toverflowGuardContainer.appendChild(this.textAreaCover);\n\n\t\tconst simplePagedScreenReaderStrategy = new SimplePagedScreenReaderStrategy();\n\t\tconst textAreaInputHost: ITextAreaInputHost = {\n\t\t\tgetDataToCopy: (): ClipboardDataToCopy => {\n\t\t\t\treturn getDataToCopy(this._context.viewModel, this._modelSelections, this._emptySelectionClipboard, this._copyWithSyntaxHighlighting);\n\t\t\t},\n\t\t\tgetScreenReaderContent: (): TextAreaState => {\n\t\t\t\tif (this._accessibilitySupport === AccessibilitySupport.Disabled) {\n\t\t\t\t\t// We know for a fact that a screen reader is not attached\n\t\t\t\t\t// On OSX, we write the character before the cursor to allow for \"long-press\" composition\n\t\t\t\t\t// Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints\n\t\t\t\t\tconst selection = this._selections[0];\n\t\t\t\t\tif (platform.isMacintosh && selection.isEmpty()) {\n\t\t\t\t\t\tconst position = selection.getStartPosition();\n\n\t\t\t\t\t\tlet textBefore = this._getWordBeforePosition(position);\n\t\t\t\t\t\tif (textBefore.length === 0) {\n\t\t\t\t\t\t\ttextBefore = this._getCharacterBeforePosition(position);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (textBefore.length > 0) {\n\t\t\t\t\t\t\treturn new TextAreaState(textBefore, textBefore.length, textBefore.length, Range.fromPositions(position), 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// on macOS, write current selection into textarea will allow system text services pick selected text,\n\t\t\t\t\t// but we still want to limit the amount of text given Chromium handles very poorly text even of a few\n\t\t\t\t\t// thousand chars\n\t\t\t\t\t// (https://github.com/microsoft/vscode/issues/27799)\n\t\t\t\t\tconst LIMIT_CHARS = 500;\n\t\t\t\t\tif (platform.isMacintosh && !selection.isEmpty() && this._context.viewModel.getValueLengthInRange(selection, EndOfLinePreference.TextDefined) < LIMIT_CHARS) {\n\t\t\t\t\t\tconst text = this._context.viewModel.getValueInRange(selection, EndOfLinePreference.TextDefined);\n\t\t\t\t\t\treturn new TextAreaState(text, 0, text.length, selection, 0);\n\t\t\t\t\t}\n\n\t\t\t\t\t// on Safari, document.execCommand('cut') and document.execCommand('copy') will just not work\n\t\t\t\t\t// if the textarea has no content selected. So if there is an editor selection, ensure something\n\t\t\t\t\t// is selected in the textarea.\n\t\t\t\t\tif (browser.isSafari && !selection.isEmpty()) {\n\t\t\t\t\t\tconst placeholderText = 'vscode-placeholder';\n\t\t\t\t\t\treturn new TextAreaState(placeholderText, 0, placeholderText.length, null, undefined);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn TextAreaState.EMPTY;\n\t\t\t\t}\n\n\t\t\t\tif (browser.isAndroid) {\n\t\t\t\t\t// when tapping in the editor on a word, Android enters composition mode.\n\t\t\t\t\t// in the `compositionstart` event we cannot clear the textarea, because\n\t\t\t\t\t// it then forgets to ever send a `compositionend`.\n\t\t\t\t\t// we therefore only write the current word in the textarea\n\t\t\t\t\tconst selection = this._selections[0];\n\t\t\t\t\tif (selection.isEmpty()) {\n\t\t\t\t\t\tconst position = selection.getStartPosition();\n\t\t\t\t\t\tconst [wordAtPosition, positionOffsetInWord] = this._getAndroidWordAtPosition(position);\n\t\t\t\t\t\tif (wordAtPosition.length > 0) {\n\t\t\t\t\t\t\treturn new TextAreaState(wordAtPosition, positionOffsetInWord, positionOffsetInWord, Range.fromPositions(position), 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn TextAreaState.EMPTY;\n\t\t\t\t}\n\n\t\t\t\tconst screenReaderContentState = simplePagedScreenReaderStrategy.fromEditorSelection(this._context.viewModel, this._selections[0], this._accessibilityPageSize, this._accessibilitySupport === AccessibilitySupport.Unknown);\n\t\t\t\treturn TextAreaState.fromScreenReaderContentState(screenReaderContentState);\n\t\t\t},\n\n\t\t\tdeduceModelPosition: (viewAnchorPosition: Position, deltaOffset: number, lineFeedCnt: number): Position => {\n\t\t\t\treturn this._context.viewModel.deduceModelPositionRelativeToViewPosition(viewAnchorPosition, deltaOffset, lineFeedCnt);\n\t\t\t}\n\t\t};\n\n\t\tconst textAreaWrapper = this._register(new TextAreaWrapper(this.textArea.domNode));\n\t\tthis._textAreaInput = this._register(this._instantiationService.createInstance(TextAreaInput, textAreaInputHost, textAreaWrapper, platform.OS, {\n\t\t\tisAndroid: browser.isAndroid,\n\t\t\tisChrome: browser.isChrome,\n\t\t\tisFirefox: browser.isFirefox,\n\t\t\tisSafari: browser.isSafari,\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onKeyDown((e: IKeyboardEvent) => {\n\t\t\tthis._viewController.emitKeyDown(e);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onKeyUp((e: IKeyboardEvent) => {\n\t\t\tthis._viewController.emitKeyUp(e);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onPaste((e: IPasteData) => {\n\t\t\tlet pasteOnNewLine = false;\n\t\t\tlet multicursorText: string[] | null = null;\n\t\t\tlet mode: string | null = null;\n\t\t\tif (e.metadata) {\n\t\t\t\tpasteOnNewLine = (this._emptySelectionClipboard && !!e.metadata.isFromEmptySelection);\n\t\t\t\tmulticursorText = (typeof e.metadata.multicursorText !== 'undefined' ? e.metadata.multicursorText : null);\n\t\t\t\tmode = e.metadata.mode;\n\t\t\t}\n\t\t\tthis._viewController.paste(e.text, pasteOnNewLine, multicursorText, mode);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCut(() => {\n\t\t\tthis._viewController.cut();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onType((e: ITypeData) => {\n\t\t\tif (e.replacePrevCharCnt || e.replaceNextCharCnt || e.positionDelta) {\n\t\t\t\t// must be handled through the new command\n\t\t\t\tif (_debugComposition) {\n\t\t\t\t\tconsole.log(` => compositionType: <<${e.text}>>, ${e.replacePrevCharCnt}, ${e.replaceNextCharCnt}, ${e.positionDelta}`);\n\t\t\t\t}\n\t\t\t\tthis._viewController.compositionType(e.text, e.replacePrevCharCnt, e.replaceNextCharCnt, e.positionDelta);\n\t\t\t} else {\n\t\t\t\tif (_debugComposition) {\n\t\t\t\t\tconsole.log(` => type: <<${e.text}>>`);\n\t\t\t\t}\n\t\t\t\tthis._viewController.type(e.text);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onSelectionChangeRequest((modelSelection: Selection) => {\n\t\t\tthis._viewController.setSelection(modelSelection);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCompositionStart((e) => {\n\n\t\t\t// The textarea might contain some content when composition starts.\n\t\t\t//\n\t\t\t// When we make the textarea visible, it always has a height of 1 line,\n\t\t\t// so we don't need to worry too much about content on lines above or below\n\t\t\t// the selection.\n\t\t\t//\n\t\t\t// However, the text on the current line needs to be made visible because\n\t\t\t// some IME methods allow to move to other glyphs on the current line\n\t\t\t// (by pressing arrow keys).\n\t\t\t//\n\t\t\t// (1) The textarea might contain only some parts of the current line,\n\t\t\t// like the word before the selection. Also, the content inside the textarea\n\t\t\t// can grow or shrink as composition occurs. We therefore anchor the textarea\n\t\t\t// in terms of distance to a certain line start and line end.\n\t\t\t//\n\t\t\t// (2) Also, we should not make \\t characters visible, because their rendering\n\t\t\t// inside the <textarea> will not align nicely with our rendering. We therefore\n\t\t\t// will hide (if necessary) some of the leading text on the current line.\n\n\t\t\tconst ta = this.textArea.domNode;\n\t\t\tconst modelSelection = this._modelSelections[0];\n\n\t\t\tconst { distanceToModelLineStart, widthOfHiddenTextBefore } = (() => {\n\t\t\t\t// Find the text that is on the current line before the selection\n\t\t\t\tconst textBeforeSelection = ta.value.substring(0, Math.min(ta.selectionStart, ta.selectionEnd));\n\t\t\t\tconst lineFeedOffset1 = textBeforeSelection.lastIndexOf('\\n');\n\t\t\t\tconst lineTextBeforeSelection = textBeforeSelection.substring(lineFeedOffset1 + 1);\n\n\t\t\t\t// We now search to see if we should hide some part of it (if it contains \\t)\n\t\t\t\tconst tabOffset1 = lineTextBeforeSelection.lastIndexOf('\\t');\n\t\t\t\tconst desiredVisibleBeforeCharCount = lineTextBeforeSelection.length - tabOffset1 - 1;\n\t\t\t\tconst startModelPosition = modelSelection.getStartPosition();\n\t\t\t\tconst visibleBeforeCharCount = Math.min(startModelPosition.column - 1, desiredVisibleBeforeCharCount);\n\t\t\t\tconst distanceToModelLineStart = startModelPosition.column - 1 - visibleBeforeCharCount;\n\t\t\t\tconst hiddenLineTextBefore = lineTextBeforeSelection.substring(0, lineTextBeforeSelection.length - visibleBeforeCharCount);\n\t\t\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\t\t\tconst widthOfHiddenTextBefore = measureText(this.textArea.domNode.ownerDocument, hiddenLineTextBefore, this._fontInfo, tabSize);\n\n\t\t\t\treturn { distanceToModelLineStart, widthOfHiddenTextBefore };\n\t\t\t})();\n\n\t\t\tconst { distanceToModelLineEnd } = (() => {\n\t\t\t\t// Find the text that is on the current line after the selection\n\t\t\t\tconst textAfterSelection = ta.value.substring(Math.max(ta.selectionStart, ta.selectionEnd));\n\t\t\t\tconst lineFeedOffset2 = textAfterSelection.indexOf('\\n');\n\t\t\t\tconst lineTextAfterSelection = lineFeedOffset2 === -1 ? textAfterSelection : textAfterSelection.substring(0, lineFeedOffset2);\n\n\t\t\t\tconst tabOffset2 = lineTextAfterSelection.indexOf('\\t');\n\t\t\t\tconst desiredVisibleAfterCharCount = (tabOffset2 === -1 ? lineTextAfterSelection.length : lineTextAfterSelection.length - tabOffset2 - 1);\n\t\t\t\tconst endModelPosition = modelSelection.getEndPosition();\n\t\t\t\tconst visibleAfterCharCount = Math.min(this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column, desiredVisibleAfterCharCount);\n\t\t\t\tconst distanceToModelLineEnd = this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column - visibleAfterCharCount;\n\n\t\t\t\treturn { distanceToModelLineEnd };\n\t\t\t})();\n\n\t\t\t// Scroll to reveal the location in the editor where composition occurs\n\t\t\tthis._context.viewModel.revealRange(\n\t\t\t\t'keyboard',\n\t\t\t\ttrue,\n\t\t\t\tRange.fromPositions(this._selections[0].getStartPosition()),\n\t\t\t\tviewEvents.VerticalRevealType.Simple,\n\t\t\t\tScrollType.Immediate\n\t\t\t);\n\n\t\t\tthis._visibleTextArea = new VisibleTextAreaData(\n\t\t\t\tthis._context,\n\t\t\t\tmodelSelection.startLineNumber,\n\t\t\t\tdistanceToModelLineStart,\n\t\t\t\twidthOfHiddenTextBefore,\n\t\t\t\tdistanceToModelLineEnd,\n\t\t\t);\n\n\t\t\t// We turn off wrapping if the <textarea> becomes visible for composition\n\t\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\n\t\t\tthis._visibleTextArea.prepareRender(this._visibleRangeProvider);\n\t\t\tthis._render();\n\n\t\t\t// Show the textarea\n\t\t\tthis.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ime-input`);\n\n\t\t\tthis._viewController.compositionStart();\n\t\t\tthis._context.viewModel.onCompositionStart();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCompositionUpdate((e: ICompositionData) => {\n\t\t\tif (!this._visibleTextArea) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._visibleTextArea.prepareRender(this._visibleRangeProvider);\n\t\t\tthis._render();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCompositionEnd(() => {\n\n\t\t\tthis._visibleTextArea = null;\n\n\t\t\t// We turn on wrapping as necessary if the <textarea> hides after composition\n\t\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\n\t\t\tthis._render();\n\n\t\t\tthis.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n\t\t\tthis._viewController.compositionEnd();\n\t\t\tthis._context.viewModel.onCompositionEnd();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onFocus(() => {\n\t\t\tthis._context.viewModel.setHasFocus(true);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onBlur(() => {\n\t\t\tthis._context.viewModel.setHasFocus(false);\n\t\t}));\n\n\t\tthis._register(IME.onDidChange(() => {\n\t\t\tthis._ensureReadOnlyAttribute();\n\t\t}));\n\t}\n\n\tpublic get domNode() {\n\t\treturn this.textArea;\n\t}\n\n\tpublic writeScreenReaderContent(reason: string): void {\n\t\tthis._textAreaInput.writeNativeTextAreaContent(reason);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.textArea.domNode.remove();\n\t\tthis.textAreaCover.domNode.remove();\n\t}\n\n\tprivate _getAndroidWordAtPosition(position: Position): [string, number] {\n\t\tconst ANDROID_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\",.<>/?';\n\t\tconst lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n\t\tconst wordSeparators = getMapForWordSeparators(ANDROID_WORD_SEPARATORS, []);\n\n\t\tlet goingLeft = true;\n\t\tlet startColumn = position.column;\n\t\tlet goingRight = true;\n\t\tlet endColumn = position.column;\n\t\tlet distance = 0;\n\t\twhile (distance < 50 && (goingLeft || goingRight)) {\n\t\t\tif (goingLeft && startColumn <= 1) {\n\t\t\t\tgoingLeft = false;\n\t\t\t}\n\t\t\tif (goingLeft) {\n\t\t\t\tconst charCode = lineContent.charCodeAt(startColumn - 2);\n\t\t\t\tconst charClass = wordSeparators.get(charCode);\n\t\t\t\tif (charClass !== WordCharacterClass.Regular) {\n\t\t\t\t\tgoingLeft = false;\n\t\t\t\t} else {\n\t\t\t\t\tstartColumn--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (goingRight && endColumn > lineContent.length) {\n\t\t\t\tgoingRight = false;\n\t\t\t}\n\t\t\tif (goingRight) {\n\t\t\t\tconst charCode = lineContent.charCodeAt(endColumn - 1);\n\t\t\t\tconst charClass = wordSeparators.get(charCode);\n\t\t\t\tif (charClass !== WordCharacterClass.Regular) {\n\t\t\t\t\tgoingRight = false;\n\t\t\t\t} else {\n\t\t\t\t\tendColumn++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdistance++;\n\t\t}\n\n\t\treturn [lineContent.substring(startColumn - 1, endColumn - 1), position.column - startColumn];\n\t}\n\n\tprivate _getWordBeforePosition(position: Position): string {\n\t\tconst lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n\t\tconst wordSeparators = getMapForWordSeparators(this._context.configuration.options.get(EditorOption.wordSeparators), []);\n\n\t\tlet column = position.column;\n\t\tlet distance = 0;\n\t\twhile (column > 1) {\n\t\t\tconst charCode = lineContent.charCodeAt(column - 2);\n\t\t\tconst charClass = wordSeparators.get(charCode);\n\t\t\tif (charClass !== WordCharacterClass.Regular || distance > 50) {\n\t\t\t\treturn lineContent.substring(column - 1, position.column - 1);\n\t\t\t}\n\t\t\tdistance++;\n\t\t\tcolumn--;\n\t\t}\n\t\treturn lineContent.substring(0, position.column - 1);\n\t}\n\n\tprivate _getCharacterBeforePosition(position: Position): string {\n\t\tif (position.column > 1) {\n\t\t\tconst lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n\t\t\tconst charBefore = lineContent.charAt(position.column - 2);\n\t\t\tif (!strings.isHighSurrogate(charBefore.charCodeAt(0))) {\n\t\t\t\treturn charBefore;\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t}\n\n\tprivate _setAccessibilityOptions(options: IComputedEditorOptions): void {\n\t\tthis._accessibilitySupport = options.get(EditorOption.accessibilitySupport);\n\t\tconst accessibilityPageSize = options.get(EditorOption.accessibilityPageSize);\n\t\tif (this._accessibilitySupport === AccessibilitySupport.Enabled && accessibilityPageSize === EditorOptions.accessibilityPageSize.defaultValue) {\n\t\t\t// If a screen reader is attached and the default value is not set we should automatically increase the page size to 500 for a better experience\n\t\t\tthis._accessibilityPageSize = 500;\n\t\t} else {\n\t\t\tthis._accessibilityPageSize = accessibilityPageSize;\n\t\t}\n\n\t\t// When wrapping is enabled and a screen reader might be attached,\n\t\t// we will size the textarea to match the width used for wrapping points computation (see `domLineBreaksComputer.ts`).\n\t\t// This is because screen readers will read the text in the textarea and we'd like that the\n\t\t// wrapping points in the textarea match the wrapping points in the editor.\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst wrappingColumn = layoutInfo.wrappingColumn;\n\t\tif (wrappingColumn !== -1 && this._accessibilitySupport !== AccessibilitySupport.Disabled) {\n\t\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\t\tthis._textAreaWrapping = true;\n\t\t\tthis._textAreaWidth = Math.round(wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\t} else {\n\t\t\tthis._textAreaWrapping = false;\n\t\t\tthis._textAreaWidth = (canUseZeroSizeTextarea ? 0 : 1);\n\t\t}\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._setAccessibilityOptions(options);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentHeight = layoutInfo.height;\n\t\tthis._fontInfo = options.get(EditorOption.fontInfo);\n\t\tthis._emptySelectionClipboard = options.get(EditorOption.emptySelectionClipboard);\n\t\tthis._copyWithSyntaxHighlighting = options.get(EditorOption.copyWithSyntaxHighlighting);\n\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\tthis.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n\t\tthis.textArea.setAttribute('aria-label', ariaLabelForScreenReaderContent(options, this._keybindingService));\n\t\tthis.textArea.setAttribute('aria-required', options.get(EditorOption.ariaRequired) ? 'true' : 'false');\n\t\tthis.textArea.setAttribute('tabindex', String(options.get(EditorOption.tabIndex)));\n\n\t\tif (e.hasChanged(EditorOption.domReadOnly) || e.hasChanged(EditorOption.readOnly)) {\n\t\t\tthis._ensureReadOnlyAttribute();\n\t\t}\n\n\t\tif (e.hasChanged(EditorOption.accessibilitySupport)) {\n\t\t\tthis._textAreaInput.writeNativeTextAreaContent('strategy changed');\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections.slice(0);\n\t\tthis._modelSelections = e.modelSelections.slice(0);\n\t\t// We must update the <textarea> synchronously, otherwise long press IME on macos breaks.\n\t\t// See https://github.com/microsoft/vscode/issues/165821\n\t\tthis._textAreaInput.writeNativeTextAreaContent('selection changed');\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tthis._scrollLeft = e.scrollLeft;\n\t\tthis._scrollTop = e.scrollTop;\n\t\treturn true;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\t// --- begin view API\n\n\tpublic isFocused(): boolean {\n\t\treturn this._textAreaInput.isFocused();\n\t}\n\n\tpublic focus(): void {\n\t\tthis._textAreaInput.focusTextArea();\n\t}\n\n\tpublic refreshFocusState() {\n\t\tthis._textAreaInput.refreshFocusState();\n\t}\n\n\tpublic getLastRenderData(): Position | null {\n\t\treturn this._lastRenderPosition;\n\t}\n\n\tpublic setAriaOptions(options: IEditorAriaOptions): void {\n\t\tif (options.activeDescendant) {\n\t\t\tthis.textArea.setAttribute('aria-haspopup', 'true');\n\t\t\tthis.textArea.setAttribute('aria-autocomplete', 'list');\n\t\t\tthis.textArea.setAttribute('aria-activedescendant', options.activeDescendant);\n\t\t} else {\n\t\t\tthis.textArea.setAttribute('aria-haspopup', 'false');\n\t\t\tthis.textArea.setAttribute('aria-autocomplete', 'both');\n\t\t\tthis.textArea.removeAttribute('aria-activedescendant');\n\t\t}\n\t\tif (options.role) {\n\t\t\tthis.textArea.setAttribute('role', options.role);\n\t\t}\n\t}\n\n\t// --- end view API\n\n\tprivate _ensureReadOnlyAttribute(): void {\n\t\tconst options = this._context.configuration.options;\n\t\t// When someone requests to disable IME, we set the \"readonly\" attribute on the <textarea>.\n\t\t// This will prevent composition.\n\t\tconst useReadOnly = !IME.enabled || (options.get(EditorOption.domReadOnly) && options.get(EditorOption.readOnly));\n\t\tif (useReadOnly) {\n\t\t\tthis.textArea.setAttribute('readonly', 'true');\n\t\t} else {\n\t\t\tthis.textArea.removeAttribute('readonly');\n\t\t}\n\t}\n\n\tprivate _primaryCursorPosition: Position = new Position(1, 1);\n\tprivate _primaryCursorVisibleRange: HorizontalPosition | null = null;\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._primaryCursorPosition = new Position(this._selections[0].positionLineNumber, this._selections[0].positionColumn);\n\t\tthis._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primaryCursorPosition);\n\t\tthis._visibleTextArea?.prepareRender(ctx);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._textAreaInput.writeNativeTextAreaContent('render');\n\t\tthis._render();\n\t}\n\n\tprivate _render(): void {\n\t\tif (this._visibleTextArea) {\n\t\t\t// The text area is visible for composition reasons\n\n\t\t\tconst visibleStart = this._visibleTextArea.visibleTextareaStart;\n\t\t\tconst visibleEnd = this._visibleTextArea.visibleTextareaEnd;\n\t\t\tconst startPosition = this._visibleTextArea.startPosition;\n\t\t\tconst endPosition = this._visibleTextArea.endPosition;\n\t\t\tif (startPosition && endPosition && visibleStart && visibleEnd && visibleEnd.left >= this._scrollLeft && visibleStart.left <= this._scrollLeft + this._contentWidth) {\n\t\t\t\tconst top = (this._context.viewLayout.getVerticalOffsetForLineNumber(this._primaryCursorPosition.lineNumber) - this._scrollTop);\n\t\t\t\tconst lineCount = newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n\n\t\t\t\tlet scrollLeft = this._visibleTextArea.widthOfHiddenLineTextBefore;\n\t\t\t\tlet left = (this._contentLeft + visibleStart.left - this._scrollLeft);\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/141725#issuecomment-1050670841\n\t\t\t\t// Here we are adding +1 to avoid flickering that might be caused by having a width that is too small.\n\t\t\t\t// This could be caused by rounding errors that might only show up with certain font families.\n\t\t\t\t// In other words, a pixel might be lost when doing something like\n\t\t\t\t//      `Math.round(end) - Math.round(start)`\n\t\t\t\t// vs\n\t\t\t\t//      `Math.round(end - start)`\n\t\t\t\tlet width = visibleEnd.left - visibleStart.left + 1;\n\t\t\t\tif (left < this._contentLeft) {\n\t\t\t\t\t// the textarea would be rendered on top of the margin,\n\t\t\t\t\t// so reduce its width. We use the same technique as\n\t\t\t\t\t// for hiding text before\n\t\t\t\t\tconst delta = (this._contentLeft - left);\n\t\t\t\t\tleft += delta;\n\t\t\t\t\tscrollLeft += delta;\n\t\t\t\t\twidth -= delta;\n\t\t\t\t}\n\t\t\t\tif (width > this._contentWidth) {\n\t\t\t\t\t// the textarea would be wider than the content width,\n\t\t\t\t\t// so reduce its width.\n\t\t\t\t\twidth = this._contentWidth;\n\t\t\t\t}\n\n\t\t\t\t// Try to render the textarea with the color/font style to match the text under it\n\t\t\t\tconst lineHeight = this._context.viewLayout.getLineHeightForLineNumber(startPosition.lineNumber);\n\t\t\t\tconst fontSize = this._context.viewModel.getFontSizeAtPosition(this._primaryCursorPosition);\n\t\t\t\tconst viewLineData = this._context.viewModel.getViewLineData(startPosition.lineNumber);\n\t\t\t\tconst startTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(startPosition.column - 1);\n\t\t\t\tconst endTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(endPosition.column - 1);\n\t\t\t\tconst textareaSpansSingleToken = (startTokenIndex === endTokenIndex);\n\t\t\t\tconst presentation = this._visibleTextArea.definePresentation(\n\t\t\t\t\t(textareaSpansSingleToken ? viewLineData.tokens.getPresentation(startTokenIndex) : null)\n\t\t\t\t);\n\n\t\t\t\tthis.textArea.domNode.scrollTop = lineCount * lineHeight;\n\t\t\t\tthis.textArea.domNode.scrollLeft = scrollLeft;\n\n\t\t\t\tthis._doRender({\n\t\t\t\t\tlastRenderPosition: null,\n\t\t\t\t\ttop: top,\n\t\t\t\t\tleft: left,\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: lineHeight,\n\t\t\t\t\tuseCover: false,\n\t\t\t\t\tcolor: (TokenizationRegistry.getColorMap() || [])[presentation.foreground],\n\t\t\t\t\titalic: presentation.italic,\n\t\t\t\t\tbold: presentation.bold,\n\t\t\t\t\tunderline: presentation.underline,\n\t\t\t\t\tstrikethrough: presentation.strikethrough,\n\t\t\t\t\tfontSize\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._primaryCursorVisibleRange) {\n\t\t\t// The primary cursor is outside the viewport => place textarea to the top left\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\tconst left = this._contentLeft + this._primaryCursorVisibleRange.left - this._scrollLeft;\n\t\tif (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\n\t\t\t// cursor is outside the viewport\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\tconst top = this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber) - this._scrollTop;\n\t\tif (top < 0 || top > this._contentHeight) {\n\t\t\t// cursor is outside the viewport\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\t// The primary cursor is in the viewport (at least vertically) => place textarea on the cursor\n\n\t\tif (platform.isMacintosh || this._accessibilitySupport === AccessibilitySupport.Enabled) {\n\t\t\t// For the popup emoji input, we will make the text area as high as the line height\n\t\t\t// We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers\n\t\t\tconst lineNumber = this._primaryCursorPosition.lineNumber;\n\t\t\tconst lineHeight = this._context.viewLayout.getLineHeightForLineNumber(lineNumber);\n\t\t\tthis._doRender({\n\t\t\t\tlastRenderPosition: this._primaryCursorPosition,\n\t\t\t\ttop,\n\t\t\t\tleft: this._textAreaWrapping ? this._contentLeft : left,\n\t\t\t\twidth: this._textAreaWidth,\n\t\t\t\theight: lineHeight,\n\t\t\t\tuseCover: false\n\t\t\t});\n\t\t\t// In case the textarea contains a word, we're going to try to align the textarea's cursor\n\t\t\t// with our cursor by scrolling the textarea as much as possible\n\t\t\tthis.textArea.domNode.scrollLeft = this._primaryCursorVisibleRange.left;\n\t\t\tconst lineCount = this._textAreaInput.textAreaState.newlineCountBeforeSelection ?? newlinecount(this.textArea.domNode.value.substring(0, this.textArea.domNode.selectionStart));\n\t\t\tthis.textArea.domNode.scrollTop = lineCount * lineHeight;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._doRender({\n\t\t\tlastRenderPosition: this._primaryCursorPosition,\n\t\t\ttop: top,\n\t\t\tleft: this._textAreaWrapping ? this._contentLeft : left,\n\t\t\twidth: this._textAreaWidth,\n\t\t\theight: (canUseZeroSizeTextarea ? 0 : 1),\n\t\t\tuseCover: false\n\t\t});\n\t}\n\n\tprivate _renderAtTopLeft(): void {\n\t\t// (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)\n\t\t// specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.\n\t\tthis._doRender({\n\t\t\tlastRenderPosition: null,\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\twidth: this._textAreaWidth,\n\t\t\theight: (canUseZeroSizeTextarea ? 0 : 1),\n\t\t\tuseCover: true\n\t\t});\n\t}\n\n\tprivate _doRender(renderData: IRenderData): void {\n\t\tthis._lastRenderPosition = renderData.lastRenderPosition;\n\n\t\tconst ta = this.textArea;\n\t\tconst tac = this.textAreaCover;\n\n\t\tapplyFontInfo(ta, this._fontInfo);\n\t\tta.setTop(renderData.top);\n\t\tta.setLeft(renderData.left);\n\t\tta.setWidth(renderData.width);\n\t\tta.setHeight(renderData.height);\n\t\tta.setLineHeight(renderData.height);\n\n\t\tta.setFontSize(renderData.fontSize ?? this._fontInfo.fontSize);\n\t\tta.setColor(renderData.color ? Color.Format.CSS.formatHex(renderData.color) : '');\n\t\tta.setFontStyle(renderData.italic ? 'italic' : '');\n\t\tif (renderData.bold) {\n\t\t\t// fontWeight is also set by `applyFontInfo`, so only overwrite it if necessary\n\t\t\tta.setFontWeight('bold');\n\t\t}\n\t\tta.setTextDecoration(`${renderData.underline ? ' underline' : ''}${renderData.strikethrough ? ' line-through' : ''}`);\n\n\t\ttac.setTop(renderData.useCover ? renderData.top : 0);\n\t\ttac.setLeft(renderData.useCover ? renderData.left : 0);\n\t\ttac.setWidth(renderData.useCover ? renderData.width : 0);\n\t\ttac.setHeight(renderData.useCover ? renderData.height : 0);\n\n\t\tconst options = this._context.configuration.options;\n\n\t\tif (options.get(EditorOption.glyphMargin)) {\n\t\t\ttac.setClassName('monaco-editor-background textAreaCover ' + Margin.OUTER_CLASS_NAME);\n\t\t} else {\n\t\t\tif (options.get(EditorOption.lineNumbers).renderType !== RenderLineNumbersType.Off) {\n\t\t\t\ttac.setClassName('monaco-editor-background textAreaCover ' + LineNumbersOverlay.CLASS_NAME);\n\t\t\t} else {\n\t\t\t\ttac.setClassName('monaco-editor-background textAreaCover');\n\t\t\t}\n\t\t}\n\t}\n}\n\ninterface IRenderData {\n\tlastRenderPosition: Position | null;\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\theight: number;\n\tuseCover: boolean;\n\n\tfontSize?: string | null;\n\tcolor?: Color | null;\n\titalic?: boolean;\n\tbold?: boolean;\n\tunderline?: boolean;\n\tstrikethrough?: boolean;\n}\n\nfunction measureText(targetDocument: Document, text: string, fontInfo: FontInfo, tabSize: number): number {\n\tif (text.length === 0) {\n\t\treturn 0;\n\t}\n\n\tconst container = targetDocument.createElement('div');\n\tcontainer.style.position = 'absolute';\n\tcontainer.style.top = '-50000px';\n\tcontainer.style.width = '50000px';\n\n\tconst regularDomNode = targetDocument.createElement('span');\n\tapplyFontInfo(regularDomNode, fontInfo);\n\tregularDomNode.style.whiteSpace = 'pre'; // just like the textarea\n\tregularDomNode.style.tabSize = `${tabSize * fontInfo.spaceWidth}px`; // just like the textarea\n\tregularDomNode.append(text);\n\tcontainer.appendChild(regularDomNode);\n\n\ttargetDocument.body.appendChild(container);\n\n\tconst res = regularDomNode.offsetWidth;\n\n\tcontainer.remove();\n\n\treturn res;\n}\n"]}