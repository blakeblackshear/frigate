{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/standalone/browser/quickAccess/standaloneGotoLineQuickAccess.ts","vs/editor/standalone/browser/quickAccess/standaloneGotoLineQuickAccess.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;AAEhG,OAAO,EAAE,mCAAmC,EAAE,MAAM,6DAA6D,CAAC;AAClH,OAAO,EAAE,QAAQ,EAAE,MAAM,kDAAkD,CAAC;AAC5E,OAAO,EAAwB,UAAU,EAAE,MAAM,uDAAuD,CAAC;AACzG,OAAO,EAAE,kBAAkB,EAAE,MAAM,gDAAgD,CAAC;AACpF,OAAO,EAAE,WAAW,EAAE,MAAM,sCAAsC,CAAC;AACnE,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AACzD,OAAO,EAAE,YAAY,EAAE,oBAAoB,EAAoB,MAAM,sCAAsC,CAAC;AAC5G,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AAGzE,OAAO,EAAE,kBAAkB,EAAE,MAAM,sDAAsD,CAAC;AAEnF,IAAM,qCAAqC,GAA3C,MAAM,qCAAsC,SAAQ,mCAAmC;IAI7F,YAAgC,aAAkD;QACjF,KAAK,EAAE,CAAC;QADwC,kBAAa,GAAb,aAAa,CAAoB;QAF/D,uCAAkC,GAAG,KAAK,CAAC,IAAI,CAAC;IAInE,CAAC;IAED,IAAc,uBAAuB;QACpC,OAAO,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,IAAI,SAAS,CAAC;IAC/D,CAAC;CACD,CAAA;AAXY,qCAAqC;IAIpC,WAAA,kBAAkB,CAAA;GAJnB,qCAAqC,CAWjD;;AAED,MAAM,OAAO,cAAe,SAAQ,YAAY;aAE/B,OAAE,GAAG,wBAAwB,CAAC;IAE9C;QACC,KAAK,CAAC;YACL,EAAE,EAAE,cAAc,CAAC,EAAE;YACrB,KAAK,EAAE,WAAW,CAAC,mBAAmB;YACtC,KAAK,EAAE,sBAAsB;YAC7B,YAAY,EAAE,SAAS;YACvB,MAAM,EAAE;gBACP,MAAM,EAAE,iBAAiB,CAAC,KAAK;gBAC/B,OAAO,EAAE,iDAA6B;gBACtC,GAAG,EAAE,EAAE,OAAO,EAAE,gDAA6B,EAAE;gBAC/C,MAAM,0CAAgC;aACtC;SACD,CAAC,CAAC;IACJ,CAAC;IAED,GAAG,CAAC,QAA0B;QAC7B,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,qCAAqC,CAAC,MAAM,CAAC,CAAC;IACjG,CAAC;;AAGF,oBAAoB,CAAC,cAAc,CAAC,CAAC;AAErC,QAAQ,CAAC,EAAE,CAAuB,UAAU,CAAC,WAAW,CAAC,CAAC,2BAA2B,CAAC;IACrF,IAAI,EAAE,qCAAqC;IAC3C,MAAM,EAAE,qCAAqC,CAAC,MAAM;IACpD,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,WAAW,CAAC,mBAAmB,EAAE,SAAS,EAAE,cAAc,CAAC,EAAE,EAAE,CAAC;CAC7F,CAAC,CAAC","file":"standaloneGotoLineQuickAccess.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AbstractGotoLineQuickAccessProvider } from '../../../contrib/quickAccess/browser/gotoLineQuickAccess.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IQuickAccessRegistry, Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { GoToLineNLS } from '../../../common/standaloneStrings.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { EditorAction, registerEditorAction, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { KeyMod, KeyCode } from '../../../../base/common/keyCodes.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\n\nexport class StandaloneGotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\n\n\tprotected readonly onDidActiveTextEditorControlChange = Event.None;\n\n\tconstructor(@ICodeEditorService private readonly editorService: ICodeEditorService) {\n\t\tsuper();\n\t}\n\n\tprotected get activeTextEditorControl() {\n\t\treturn this.editorService.getFocusedCodeEditor() ?? undefined;\n\t}\n}\n\nexport class GotoLineAction extends EditorAction {\n\n\tstatic readonly ID = 'editor.action.gotoLine';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoLineAction.ID,\n\t\t\tlabel: GoToLineNLS.gotoLineActionLabel,\n\t\t\talias: 'Go to Line/Column...',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyG,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyG },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IQuickInputService).quickAccess.show(StandaloneGotoLineQuickAccessProvider.PREFIX);\n\t}\n}\n\nregisterEditorAction(GotoLineAction);\n\nRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\tctor: StandaloneGotoLineQuickAccessProvider,\n\tprefix: StandaloneGotoLineQuickAccessProvider.PREFIX,\n\thelpEntries: [{ description: GoToLineNLS.gotoLineActionLabel, commandId: GotoLineAction.ID }]\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AbstractGotoLineQuickAccessProvider } from '../../../contrib/quickAccess/browser/gotoLineQuickAccess.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IQuickAccessRegistry, Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { GoToLineNLS } from '../../../common/standaloneStrings.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { EditorAction, registerEditorAction, ServicesAccessor } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { KeyMod, KeyCode } from '../../../../base/common/keyCodes.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\n\nexport class StandaloneGotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\n\n\tprotected readonly onDidActiveTextEditorControlChange = Event.None;\n\n\tconstructor(@ICodeEditorService private readonly editorService: ICodeEditorService) {\n\t\tsuper();\n\t}\n\n\tprotected get activeTextEditorControl() {\n\t\treturn this.editorService.getFocusedCodeEditor() ?? undefined;\n\t}\n}\n\nexport class GotoLineAction extends EditorAction {\n\n\tstatic readonly ID = 'editor.action.gotoLine';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoLineAction.ID,\n\t\t\tlabel: GoToLineNLS.gotoLineActionLabel,\n\t\t\talias: 'Go to Line/Column...',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyG,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyG },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IQuickInputService).quickAccess.show(StandaloneGotoLineQuickAccessProvider.PREFIX);\n\t}\n}\n\nregisterEditorAction(GotoLineAction);\n\nRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\tctor: StandaloneGotoLineQuickAccessProvider,\n\tprefix: StandaloneGotoLineQuickAccessProvider.PREFIX,\n\thelpEntries: [{ description: GoToLineNLS.gotoLineActionLabel, commandId: GotoLineAction.ID }]\n});\n"]}