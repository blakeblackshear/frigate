{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/find/browser/findDecorations.ts","vs/editor/contrib/find/browser/findDecorations.ts"],"names":[],"mappings":"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","file":"findDecorations.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { IActiveCodeEditor } from '../../../browser/editorBrowser.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { FindMatch, IModelDecorationsChangeAccessor, IModelDeltaDecoration, MinimapPosition, OverviewRulerLane, TrackedRangeStickiness } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n\nexport class FindDecorations implements IDisposable {\n\n\tprivate readonly _editor: IActiveCodeEditor;\n\tprivate _decorations: string[];\n\tprivate _overviewRulerApproximateDecorations: string[];\n\tprivate _findScopeDecorationIds: string[];\n\tprivate _rangeHighlightDecorationId: string | null;\n\tprivate _highlightedDecorationId: string | null;\n\tprivate _startPosition: Position;\n\n\tconstructor(editor: IActiveCodeEditor) {\n\t\tthis._editor = editor;\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationIds = [];\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t\tthis._startPosition = this._editor.getPosition();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._editor.removeDecorations(this._allDecorations());\n\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationIds = [];\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationIds = [];\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this._decorations.length;\n\t}\n\n\t/** @deprecated use getFindScopes to support multiple selections */\n\tpublic getFindScope(): Range | null {\n\t\tif (this._findScopeDecorationIds[0]) {\n\t\t\treturn this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getFindScopes(): Range[] | null {\n\t\tif (this._findScopeDecorationIds.length) {\n\t\t\tconst scopes = this._findScopeDecorationIds.map(findScopeDecorationId =>\n\t\t\t\tthis._editor.getModel().getDecorationRange(findScopeDecorationId)\n\t\t\t).filter(element => !!element);\n\t\t\tif (scopes.length) {\n\t\t\t\treturn scopes as Range[];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getStartPosition(): Position {\n\t\treturn this._startPosition;\n\t}\n\n\tpublic setStartPosition(newStartPosition: Position): void {\n\t\tthis._startPosition = newStartPosition;\n\t\tthis.setCurrentFindMatch(null);\n\t}\n\n\tprivate _getDecorationIndex(decorationId: string): number {\n\t\tconst index = this._decorations.indexOf(decorationId);\n\t\tif (index >= 0) {\n\t\t\treturn index + 1;\n\t\t}\n\t\treturn 1;\n\t}\n\n\tpublic getDecorationRangeAt(index: number): Range | null {\n\t\tconst decorationId = index < this._decorations.length ? this._decorations[index] : null;\n\t\tif (decorationId) {\n\t\t\treturn this._editor.getModel().getDecorationRange(decorationId);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getCurrentMatchesPosition(desiredRange: Range): number {\n\t\tconst candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n\t\tfor (const candidate of candidates) {\n\t\t\tconst candidateOpts = candidate.options;\n\t\t\tif (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n\t\t\t\treturn this._getDecorationIndex(candidate.id);\n\t\t\t}\n\t\t}\n\t\t// We don't know the current match position, so returns zero to show '?' in find widget\n\t\treturn 0;\n\t}\n\n\tpublic setCurrentFindMatch(nextMatch: Range | null): number {\n\t\tlet newCurrentDecorationId: string | null = null;\n\t\tlet matchPosition = 0;\n\t\tif (nextMatch) {\n\t\t\tfor (let i = 0, len = this._decorations.length; i < len; i++) {\n\t\t\t\tconst range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n\t\t\t\tif (nextMatch.equalsRange(range)) {\n\t\t\t\t\tnewCurrentDecorationId = this._decorations[i];\n\t\t\t\t\tmatchPosition = (i + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n\t\t\tthis._editor.changeDecorations((changeAccessor: IModelDecorationsChangeAccessor) => {\n\t\t\t\tif (this._highlightedDecorationId !== null) {\n\t\t\t\t\tchangeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n\t\t\t\t\tthis._highlightedDecorationId = null;\n\t\t\t\t}\n\t\t\t\tif (newCurrentDecorationId !== null) {\n\t\t\t\t\tthis._highlightedDecorationId = newCurrentDecorationId;\n\t\t\t\t\tchangeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n\t\t\t\t}\n\t\t\t\tif (this._rangeHighlightDecorationId !== null) {\n\t\t\t\t\tchangeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n\t\t\t\t\tthis._rangeHighlightDecorationId = null;\n\t\t\t\t}\n\t\t\t\tif (newCurrentDecorationId !== null) {\n\t\t\t\t\tlet rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId)!;\n\t\t\t\t\tif (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n\t\t\t\t\t\tconst lineBeforeEnd = rng.endLineNumber - 1;\n\t\t\t\t\t\tconst lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n\t\t\t\t\t\trng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n\t\t\t\t\t}\n\t\t\t\t\tthis._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn matchPosition;\n\t}\n\n\tpublic set(findMatches: FindMatch[], findScopes: Range[] | null): void {\n\t\tthis._editor.changeDecorations((accessor) => {\n\n\t\t\tlet findMatchesOptions: ModelDecorationOptions = FindDecorations._FIND_MATCH_DECORATION;\n\t\t\tconst newOverviewRulerApproximateDecorations: IModelDeltaDecoration[] = [];\n\n\t\t\tif (findMatches.length > 1000) {\n\t\t\t\t// we go into a mode where the overview ruler gets \"approximate\" decorations\n\t\t\t\t// the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n\t\t\t\tfindMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n\n\t\t\t\t// approximate a distance in lines where matches should be merged\n\t\t\t\tconst lineCount = this._editor.getModel().getLineCount();\n\t\t\t\tconst height = this._editor.getLayoutInfo().height;\n\t\t\t\tconst approxPixelsPerLine = height / lineCount;\n\t\t\t\tconst mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n\n\t\t\t\t// merge decorations as much as possible\n\t\t\t\tlet prevStartLineNumber = findMatches[0].range.startLineNumber;\n\t\t\t\tlet prevEndLineNumber = findMatches[0].range.endLineNumber;\n\t\t\t\tfor (let i = 1, len = findMatches.length; i < len; i++) {\n\t\t\t\t\tconst range = findMatches[i].range;\n\t\t\t\t\tif (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n\t\t\t\t\t\tif (range.endLineNumber > prevEndLineNumber) {\n\t\t\t\t\t\t\tprevEndLineNumber = range.endLineNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewOverviewRulerApproximateDecorations.push({\n\t\t\t\t\t\t\trange: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n\t\t\t\t\t\t\toptions: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n\t\t\t\t\t\t});\n\t\t\t\t\t\tprevStartLineNumber = range.startLineNumber;\n\t\t\t\t\t\tprevEndLineNumber = range.endLineNumber;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnewOverviewRulerApproximateDecorations.push({\n\t\t\t\t\trange: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n\t\t\t\t\toptions: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Find matches\n\t\t\tconst newFindMatchesDecorations: IModelDeltaDecoration[] = new Array<IModelDeltaDecoration>(findMatches.length);\n\t\t\tfor (let i = 0, len = findMatches.length; i < len; i++) {\n\t\t\t\tnewFindMatchesDecorations[i] = {\n\t\t\t\t\trange: findMatches[i].range,\n\t\t\t\t\toptions: findMatchesOptions\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n\n\t\t\t// Overview ruler approximate decorations\n\t\t\tthis._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n\n\t\t\t// Range highlight\n\t\t\tif (this._rangeHighlightDecorationId) {\n\t\t\t\taccessor.removeDecoration(this._rangeHighlightDecorationId);\n\t\t\t\tthis._rangeHighlightDecorationId = null;\n\t\t\t}\n\n\t\t\t// Find scope\n\t\t\tif (this._findScopeDecorationIds.length) {\n\t\t\t\tthis._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\n\t\t\t\tthis._findScopeDecorationIds = [];\n\t\t\t}\n\t\t\tif (findScopes?.length) {\n\t\t\t\tthis._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic matchBeforePosition(position: Position): Range | null {\n\t\tif (this._decorations.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = this._decorations.length - 1; i >= 0; i--) {\n\t\t\tconst decorationId = this._decorations[i];\n\t\t\tconst r = this._editor.getModel().getDecorationRange(decorationId);\n\t\t\tif (!r || r.endLineNumber > position.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (r.endLineNumber < position.lineNumber) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\tif (r.endColumn > position.column) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\n\t\treturn this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n\t}\n\n\tpublic matchAfterPosition(position: Position): Range | null {\n\t\tif (this._decorations.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = 0, len = this._decorations.length; i < len; i++) {\n\t\t\tconst decorationId = this._decorations[i];\n\t\t\tconst r = this._editor.getModel().getDecorationRange(decorationId);\n\t\t\tif (!r || r.startLineNumber < position.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (r.startLineNumber > position.lineNumber) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\tif (r.startColumn < position.column) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\n\t\treturn this._editor.getModel().getDecorationRange(this._decorations[0]);\n\t}\n\n\tprivate _allDecorations(): string[] {\n\t\tlet result: string[] = [];\n\t\tresult = result.concat(this._decorations);\n\t\tresult = result.concat(this._overviewRulerApproximateDecorations);\n\t\tif (this._findScopeDecorationIds.length) {\n\t\t\tresult.push(...this._findScopeDecorationIds);\n\t\t}\n\t\tif (this._rangeHighlightDecorationId) {\n\t\t\tresult.push(this._rangeHighlightDecorationId);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static readonly _CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'current-find-match',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tzIndex: 13,\n\t\tclassName: 'currentFindMatch',\n\t\tinlineClassName: 'currentFindMatchInline',\n\t\tshowIfCollapsed: true,\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t},\n\t\tminimap: {\n\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\tposition: MinimapPosition.Inline\n\t\t}\n\t});\n\n\tpublic static readonly _FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'find-match',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tzIndex: 10,\n\t\tclassName: 'findMatch',\n\t\tinlineClassName: 'findMatchInline',\n\t\tshowIfCollapsed: true,\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t},\n\t\tminimap: {\n\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\tposition: MinimapPosition.Inline\n\t\t}\n\t});\n\n\tpublic static readonly _FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'find-match-no-overview',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'findMatch',\n\t\tshowIfCollapsed: true\n\t});\n\n\tprivate static readonly _FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'find-match-only-overview',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t}\n\t});\n\n\tprivate static readonly _RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'find-range-highlight',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'rangeHighlight',\n\t\tisWholeLine: true\n\t});\n\n\tprivate static readonly _FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'find-scope',\n\t\tclassName: 'findScope',\n\t\tisWholeLine: true\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { IActiveCodeEditor } from '../../../browser/editorBrowser.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { FindMatch, IModelDecorationsChangeAccessor, IModelDeltaDecoration, MinimapPosition, OverviewRulerLane, TrackedRangeStickiness } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n\nexport class FindDecorations implements IDisposable {\n\n\tprivate readonly _editor: IActiveCodeEditor;\n\tprivate _decorations: string[];\n\tprivate _overviewRulerApproximateDecorations: string[];\n\tprivate _findScopeDecorationIds: string[];\n\tprivate _rangeHighlightDecorationId: string | null;\n\tprivate _highlightedDecorationId: string | null;\n\tprivate _startPosition: Position;\n\n\tconstructor(editor: IActiveCodeEditor) {\n\t\tthis._editor = editor;\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationIds = [];\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t\tthis._startPosition = this._editor.getPosition();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._editor.removeDecorations(this._allDecorations());\n\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationIds = [];\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationIds = [];\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this._decorations.length;\n\t}\n\n\t/** @deprecated use getFindScopes to support multiple selections */\n\tpublic getFindScope(): Range | null {\n\t\tif (this._findScopeDecorationIds[0]) {\n\t\t\treturn this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getFindScopes(): Range[] | null {\n\t\tif (this._findScopeDecorationIds.length) {\n\t\t\tconst scopes = this._findScopeDecorationIds.map(findScopeDecorationId =>\n\t\t\t\tthis._editor.getModel().getDecorationRange(findScopeDecorationId)\n\t\t\t).filter(element => !!element);\n\t\t\tif (scopes.length) {\n\t\t\t\treturn scopes as Range[];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getStartPosition(): Position {\n\t\treturn this._startPosition;\n\t}\n\n\tpublic setStartPosition(newStartPosition: Position): void {\n\t\tthis._startPosition = newStartPosition;\n\t\tthis.setCurrentFindMatch(null);\n\t}\n\n\tprivate _getDecorationIndex(decorationId: string): number {\n\t\tconst index = this._decorations.indexOf(decorationId);\n\t\tif (index >= 0) {\n\t\t\treturn index + 1;\n\t\t}\n\t\treturn 1;\n\t}\n\n\tpublic getDecorationRangeAt(index: number): Range | null {\n\t\tconst decorationId = index < this._decorations.length ? this._decorations[index] : null;\n\t\tif (decorationId) {\n\t\t\treturn this._editor.getModel().getDecorationRange(decorationId);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getCurrentMatchesPosition(desiredRange: Range): number {\n\t\tconst candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n\t\tfor (const candidate of candidates) {\n\t\t\tconst candidateOpts = candidate.options;\n\t\t\tif (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n\t\t\t\treturn this._getDecorationIndex(candidate.id);\n\t\t\t}\n\t\t}\n\t\t// We don't know the current match position, so returns zero to show '?' in find widget\n\t\treturn 0;\n\t}\n\n\tpublic setCurrentFindMatch(nextMatch: Range | null): number {\n\t\tlet newCurrentDecorationId: string | null = null;\n\t\tlet matchPosition = 0;\n\t\tif (nextMatch) {\n\t\t\tfor (let i = 0, len = this._decorations.length; i < len; i++) {\n\t\t\t\tconst range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n\t\t\t\tif (nextMatch.equalsRange(range)) {\n\t\t\t\t\tnewCurrentDecorationId = this._decorations[i];\n\t\t\t\t\tmatchPosition = (i + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n\t\t\tthis._editor.changeDecorations((changeAccessor: IModelDecorationsChangeAccessor) => {\n\t\t\t\tif (this._highlightedDecorationId !== null) {\n\t\t\t\t\tchangeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n\t\t\t\t\tthis._highlightedDecorationId = null;\n\t\t\t\t}\n\t\t\t\tif (newCurrentDecorationId !== null) {\n\t\t\t\t\tthis._highlightedDecorationId = newCurrentDecorationId;\n\t\t\t\t\tchangeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n\t\t\t\t}\n\t\t\t\tif (this._rangeHighlightDecorationId !== null) {\n\t\t\t\t\tchangeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n\t\t\t\t\tthis._rangeHighlightDecorationId = null;\n\t\t\t\t}\n\t\t\t\tif (newCurrentDecorationId !== null) {\n\t\t\t\t\tlet rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId)!;\n\t\t\t\t\tif (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n\t\t\t\t\t\tconst lineBeforeEnd = rng.endLineNumber - 1;\n\t\t\t\t\t\tconst lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n\t\t\t\t\t\trng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n\t\t\t\t\t}\n\t\t\t\t\tthis._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn matchPosition;\n\t}\n\n\tpublic set(findMatches: FindMatch[], findScopes: Range[] | null): void {\n\t\tthis._editor.changeDecorations((accessor) => {\n\n\t\t\tlet findMatchesOptions: ModelDecorationOptions = FindDecorations._FIND_MATCH_DECORATION;\n\t\t\tconst newOverviewRulerApproximateDecorations: IModelDeltaDecoration[] = [];\n\n\t\t\tif (findMatches.length > 1000) {\n\t\t\t\t// we go into a mode where the overview ruler gets \"approximate\" decorations\n\t\t\t\t// the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n\t\t\t\tfindMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n\n\t\t\t\t// approximate a distance in lines where matches should be merged\n\t\t\t\tconst lineCount = this._editor.getModel().getLineCount();\n\t\t\t\tconst height = this._editor.getLayoutInfo().height;\n\t\t\t\tconst approxPixelsPerLine = height / lineCount;\n\t\t\t\tconst mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n\n\t\t\t\t// merge decorations as much as possible\n\t\t\t\tlet prevStartLineNumber = findMatches[0].range.startLineNumber;\n\t\t\t\tlet prevEndLineNumber = findMatches[0].range.endLineNumber;\n\t\t\t\tfor (let i = 1, len = findMatches.length; i < len; i++) {\n\t\t\t\t\tconst range = findMatches[i].range;\n\t\t\t\t\tif (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n\t\t\t\t\t\tif (range.endLineNumber > prevEndLineNumber) {\n\t\t\t\t\t\t\tprevEndLineNumber = range.endLineNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewOverviewRulerApproximateDecorations.push({\n\t\t\t\t\t\t\trange: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n\t\t\t\t\t\t\toptions: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n\t\t\t\t\t\t});\n\t\t\t\t\t\tprevStartLineNumber = range.startLineNumber;\n\t\t\t\t\t\tprevEndLineNumber = range.endLineNumber;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnewOverviewRulerApproximateDecorations.push({\n\t\t\t\t\trange: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n\t\t\t\t\toptions: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Find matches\n\t\t\tconst newFindMatchesDecorations: IModelDeltaDecoration[] = new Array<IModelDeltaDecoration>(findMatches.length);\n\t\t\tfor (let i = 0, len = findMatches.length; i < len; i++) {\n\t\t\t\tnewFindMatchesDecorations[i] = {\n\t\t\t\t\trange: findMatches[i].range,\n\t\t\t\t\toptions: findMatchesOptions\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n\n\t\t\t// Overview ruler approximate decorations\n\t\t\tthis._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n\n\t\t\t// Range highlight\n\t\t\tif (this._rangeHighlightDecorationId) {\n\t\t\t\taccessor.removeDecoration(this._rangeHighlightDecorationId);\n\t\t\t\tthis._rangeHighlightDecorationId = null;\n\t\t\t}\n\n\t\t\t// Find scope\n\t\t\tif (this._findScopeDecorationIds.length) {\n\t\t\t\tthis._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\n\t\t\t\tthis._findScopeDecorationIds = [];\n\t\t\t}\n\t\t\tif (findScopes?.length) {\n\t\t\t\tthis._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic matchBeforePosition(position: Position): Range | null {\n\t\tif (this._decorations.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = this._decorations.length - 1; i >= 0; i--) {\n\t\t\tconst decorationId = this._decorations[i];\n\t\t\tconst r = this._editor.getModel().getDecorationRange(decorationId);\n\t\t\tif (!r || r.endLineNumber > position.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (r.endLineNumber < position.lineNumber) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\tif (r.endColumn > position.column) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\n\t\treturn this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n\t}\n\n\tpublic matchAfterPosition(position: Position): Range | null {\n\t\tif (this._decorations.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = 0, len = this._decorations.length; i < len; i++) {\n\t\t\tconst decorationId = this._decorations[i];\n\t\t\tconst r = this._editor.getModel().getDecorationRange(decorationId);\n\t\t\tif (!r || r.startLineNumber < position.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (r.startLineNumber > position.lineNumber) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\tif (r.startColumn < position.column) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\n\t\treturn this._editor.getModel().getDecorationRange(this._decorations[0]);\n\t}\n\n\tprivate _allDecorations(): string[] {\n\t\tlet result: string[] = [];\n\t\tresult = result.concat(this._decorations);\n\t\tresult = result.concat(this._overviewRulerApproximateDecorations);\n\t\tif (this._findScopeDecorationIds.length) {\n\t\t\tresult.push(...this._findScopeDecorationIds);\n\t\t}\n\t\tif (this._rangeHighlightDecorationId) {\n\t\t\tresult.push(this._rangeHighlightDecorationId);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static readonly _CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'current-find-match',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tzIndex: 13,\n\t\tclassName: 'currentFindMatch',\n\t\tinlineClassName: 'currentFindMatchInline',\n\t\tshowIfCollapsed: true,\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t},\n\t\tminimap: {\n\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\tposition: MinimapPosition.Inline\n\t\t}\n\t});\n\n\tpublic static readonly _FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'find-match',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tzIndex: 10,\n\t\tclassName: 'findMatch',\n\t\tinlineClassName: 'findMatchInline',\n\t\tshowIfCollapsed: true,\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t},\n\t\tminimap: {\n\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\tposition: MinimapPosition.Inline\n\t\t}\n\t});\n\n\tpublic static readonly _FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'find-match-no-overview',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'findMatch',\n\t\tshowIfCollapsed: true\n\t});\n\n\tprivate static readonly _FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'find-match-only-overview',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t}\n\t});\n\n\tprivate static readonly _RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'find-range-highlight',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'rangeHighlight',\n\t\tisWholeLine: true\n\t});\n\n\tprivate static readonly _FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n\t\tdescription: 'find-scope',\n\t\tclassName: 'findScope',\n\t\tisWholeLine: true\n\t});\n}\n"]}