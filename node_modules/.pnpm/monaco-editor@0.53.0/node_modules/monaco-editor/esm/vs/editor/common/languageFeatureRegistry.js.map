{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/languageFeatureRegistry.ts","vs/editor/common/languageFeatureRegistry.ts"],"names":[],"mappings":"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","file":"languageFeatureRegistry.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '../../base/common/event.js';\nimport { IDisposable, toDisposable } from '../../base/common/lifecycle.js';\nimport { ITextModel, shouldSynchronizeModel } from './model.js';\nimport { LanguageFilter, LanguageSelector, score } from './languageSelector.js';\nimport { URI } from '../../base/common/uri.js';\n\ninterface Entry<T> {\n\treadonly selector: LanguageSelector;\n\treadonly provider: T;\n\t_score: number;\n\treadonly _time: number;\n}\n\nfunction isExclusive(selector: LanguageSelector): boolean {\n\tif (typeof selector === 'string') {\n\t\treturn false;\n\t} else if (Array.isArray(selector)) {\n\t\treturn selector.every(isExclusive);\n\t} else {\n\t\treturn !!(selector as LanguageFilter).exclusive; // TODO: microsoft/TypeScript#42768\n\t}\n}\n\nexport interface NotebookInfo {\n\treadonly uri: URI;\n\treadonly type: string;\n}\n\nexport interface NotebookInfoResolver {\n\t(uri: URI): NotebookInfo | undefined;\n}\n\nclass MatchCandidate {\n\tconstructor(\n\t\treadonly uri: URI,\n\t\treadonly languageId: string,\n\t\treadonly notebookUri: URI | undefined,\n\t\treadonly notebookType: string | undefined,\n\t\treadonly recursive: boolean,\n\t) { }\n\n\tequals(other: MatchCandidate): boolean {\n\t\treturn this.notebookType === other.notebookType\n\t\t\t&& this.languageId === other.languageId\n\t\t\t&& this.uri.toString() === other.uri.toString()\n\t\t\t&& this.notebookUri?.toString() === other.notebookUri?.toString()\n\t\t\t&& this.recursive === other.recursive;\n\t}\n}\n\nexport class LanguageFeatureRegistry<T> {\n\n\tprivate _clock: number = 0;\n\tprivate readonly _entries: Entry<T>[] = [];\n\n\tprivate readonly _onDidChange = new Emitter<number>();\n\tget onDidChange() { return this._onDidChange.event; }\n\n\tconstructor(private readonly _notebookInfoResolver?: NotebookInfoResolver) { }\n\n\tregister(selector: LanguageSelector, provider: T): IDisposable {\n\n\t\tlet entry: Entry<T> | undefined = {\n\t\t\tselector,\n\t\t\tprovider,\n\t\t\t_score: -1,\n\t\t\t_time: this._clock++\n\t\t};\n\n\t\tthis._entries.push(entry);\n\t\tthis._lastCandidate = undefined;\n\t\tthis._onDidChange.fire(this._entries.length);\n\n\t\treturn toDisposable(() => {\n\t\t\tif (entry) {\n\t\t\t\tconst idx = this._entries.indexOf(entry);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis._entries.splice(idx, 1);\n\t\t\t\t\tthis._lastCandidate = undefined;\n\t\t\t\t\tthis._onDidChange.fire(this._entries.length);\n\t\t\t\t\tentry = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\thas(model: ITextModel): boolean {\n\t\treturn this.all(model).length > 0;\n\t}\n\n\tall(model: ITextModel): T[] {\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis._updateScores(model, false);\n\t\tconst result: T[] = [];\n\n\t\t// from registry\n\t\tfor (const entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tresult.push(entry.provider);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tordered(model: ITextModel, recursive = false): T[] {\n\t\tconst result: T[] = [];\n\t\tthis._orderedForEach(model, recursive, entry => result.push(entry.provider));\n\t\treturn result;\n\t}\n\n\torderedGroups(model: ITextModel): T[][] {\n\t\tconst result: T[][] = [];\n\t\tlet lastBucket: T[];\n\t\tlet lastBucketScore: number;\n\n\t\tthis._orderedForEach(model, false, entry => {\n\t\t\tif (lastBucket && lastBucketScore === entry._score) {\n\t\t\t\tlastBucket.push(entry.provider);\n\t\t\t} else {\n\t\t\t\tlastBucketScore = entry._score;\n\t\t\t\tlastBucket = [entry.provider];\n\t\t\t\tresult.push(lastBucket);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate _orderedForEach(model: ITextModel, recursive: boolean, callback: (provider: Entry<T>) => void): void {\n\n\t\tthis._updateScores(model, recursive);\n\n\t\tfor (const entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tcallback(entry);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _lastCandidate: MatchCandidate | undefined;\n\n\tprivate _updateScores(model: ITextModel, recursive: boolean): void {\n\n\t\tconst notebookInfo = this._notebookInfoResolver?.(model.uri);\n\n\t\t// use the uri (scheme, pattern) of the notebook info iff we have one\n\t\t// otherwise it's the model's/document's uri\n\t\tconst candidate = notebookInfo\n\t\t\t? new MatchCandidate(model.uri, model.getLanguageId(), notebookInfo.uri, notebookInfo.type, recursive)\n\t\t\t: new MatchCandidate(model.uri, model.getLanguageId(), undefined, undefined, recursive);\n\n\t\tif (this._lastCandidate?.equals(candidate)) {\n\t\t\t// nothing has changed\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lastCandidate = candidate;\n\n\t\tfor (const entry of this._entries) {\n\t\t\tentry._score = score(entry.selector, candidate.uri, candidate.languageId, shouldSynchronizeModel(model), candidate.notebookUri, candidate.notebookType);\n\n\t\t\tif (isExclusive(entry.selector) && entry._score > 0) {\n\t\t\t\tif (recursive) {\n\t\t\t\t\tentry._score = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// support for one exclusive selector that overwrites\n\t\t\t\t\t// any other selector\n\t\t\t\t\tfor (const entry of this._entries) {\n\t\t\t\t\t\tentry._score = 0;\n\t\t\t\t\t}\n\t\t\t\t\tentry._score = 1000;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// needs sorting\n\t\tthis._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n\t}\n\n\tprivate static _compareByScoreAndTime(a: Entry<unknown>, b: Entry<unknown>): number {\n\t\tif (a._score < b._score) {\n\t\t\treturn 1;\n\t\t} else if (a._score > b._score) {\n\t\t\treturn -1;\n\t\t}\n\n\t\t// De-prioritize built-in providers\n\t\tif (isBuiltinSelector(a.selector) && !isBuiltinSelector(b.selector)) {\n\t\t\treturn 1;\n\t\t} else if (!isBuiltinSelector(a.selector) && isBuiltinSelector(b.selector)) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (a._time < b._time) {\n\t\t\treturn 1;\n\t\t} else if (a._time > b._time) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\nfunction isBuiltinSelector(selector: LanguageSelector): boolean {\n\tif (typeof selector === 'string') {\n\t\treturn false;\n\t}\n\n\tif (Array.isArray(selector)) {\n\t\treturn selector.some(isBuiltinSelector);\n\t}\n\n\treturn Boolean((selector as LanguageFilter).isBuiltin);\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '../../base/common/event.js';\nimport { IDisposable, toDisposable } from '../../base/common/lifecycle.js';\nimport { ITextModel, shouldSynchronizeModel } from './model.js';\nimport { LanguageFilter, LanguageSelector, score } from './languageSelector.js';\nimport { URI } from '../../base/common/uri.js';\n\ninterface Entry<T> {\n\treadonly selector: LanguageSelector;\n\treadonly provider: T;\n\t_score: number;\n\treadonly _time: number;\n}\n\nfunction isExclusive(selector: LanguageSelector): boolean {\n\tif (typeof selector === 'string') {\n\t\treturn false;\n\t} else if (Array.isArray(selector)) {\n\t\treturn selector.every(isExclusive);\n\t} else {\n\t\treturn !!(selector as LanguageFilter).exclusive; // TODO: microsoft/TypeScript#42768\n\t}\n}\n\nexport interface NotebookInfo {\n\treadonly uri: URI;\n\treadonly type: string;\n}\n\nexport interface NotebookInfoResolver {\n\t(uri: URI): NotebookInfo | undefined;\n}\n\nclass MatchCandidate {\n\tconstructor(\n\t\treadonly uri: URI,\n\t\treadonly languageId: string,\n\t\treadonly notebookUri: URI | undefined,\n\t\treadonly notebookType: string | undefined,\n\t\treadonly recursive: boolean,\n\t) { }\n\n\tequals(other: MatchCandidate): boolean {\n\t\treturn this.notebookType === other.notebookType\n\t\t\t&& this.languageId === other.languageId\n\t\t\t&& this.uri.toString() === other.uri.toString()\n\t\t\t&& this.notebookUri?.toString() === other.notebookUri?.toString()\n\t\t\t&& this.recursive === other.recursive;\n\t}\n}\n\nexport class LanguageFeatureRegistry<T> {\n\n\tprivate _clock: number = 0;\n\tprivate readonly _entries: Entry<T>[] = [];\n\n\tprivate readonly _onDidChange = new Emitter<number>();\n\tget onDidChange() { return this._onDidChange.event; }\n\n\tconstructor(private readonly _notebookInfoResolver?: NotebookInfoResolver) { }\n\n\tregister(selector: LanguageSelector, provider: T): IDisposable {\n\n\t\tlet entry: Entry<T> | undefined = {\n\t\t\tselector,\n\t\t\tprovider,\n\t\t\t_score: -1,\n\t\t\t_time: this._clock++\n\t\t};\n\n\t\tthis._entries.push(entry);\n\t\tthis._lastCandidate = undefined;\n\t\tthis._onDidChange.fire(this._entries.length);\n\n\t\treturn toDisposable(() => {\n\t\t\tif (entry) {\n\t\t\t\tconst idx = this._entries.indexOf(entry);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis._entries.splice(idx, 1);\n\t\t\t\t\tthis._lastCandidate = undefined;\n\t\t\t\t\tthis._onDidChange.fire(this._entries.length);\n\t\t\t\t\tentry = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\thas(model: ITextModel): boolean {\n\t\treturn this.all(model).length > 0;\n\t}\n\n\tall(model: ITextModel): T[] {\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis._updateScores(model, false);\n\t\tconst result: T[] = [];\n\n\t\t// from registry\n\t\tfor (const entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tresult.push(entry.provider);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tordered(model: ITextModel, recursive = false): T[] {\n\t\tconst result: T[] = [];\n\t\tthis._orderedForEach(model, recursive, entry => result.push(entry.provider));\n\t\treturn result;\n\t}\n\n\torderedGroups(model: ITextModel): T[][] {\n\t\tconst result: T[][] = [];\n\t\tlet lastBucket: T[];\n\t\tlet lastBucketScore: number;\n\n\t\tthis._orderedForEach(model, false, entry => {\n\t\t\tif (lastBucket && lastBucketScore === entry._score) {\n\t\t\t\tlastBucket.push(entry.provider);\n\t\t\t} else {\n\t\t\t\tlastBucketScore = entry._score;\n\t\t\t\tlastBucket = [entry.provider];\n\t\t\t\tresult.push(lastBucket);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate _orderedForEach(model: ITextModel, recursive: boolean, callback: (provider: Entry<T>) => void): void {\n\n\t\tthis._updateScores(model, recursive);\n\n\t\tfor (const entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tcallback(entry);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _lastCandidate: MatchCandidate | undefined;\n\n\tprivate _updateScores(model: ITextModel, recursive: boolean): void {\n\n\t\tconst notebookInfo = this._notebookInfoResolver?.(model.uri);\n\n\t\t// use the uri (scheme, pattern) of the notebook info iff we have one\n\t\t// otherwise it's the model's/document's uri\n\t\tconst candidate = notebookInfo\n\t\t\t? new MatchCandidate(model.uri, model.getLanguageId(), notebookInfo.uri, notebookInfo.type, recursive)\n\t\t\t: new MatchCandidate(model.uri, model.getLanguageId(), undefined, undefined, recursive);\n\n\t\tif (this._lastCandidate?.equals(candidate)) {\n\t\t\t// nothing has changed\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lastCandidate = candidate;\n\n\t\tfor (const entry of this._entries) {\n\t\t\tentry._score = score(entry.selector, candidate.uri, candidate.languageId, shouldSynchronizeModel(model), candidate.notebookUri, candidate.notebookType);\n\n\t\t\tif (isExclusive(entry.selector) && entry._score > 0) {\n\t\t\t\tif (recursive) {\n\t\t\t\t\tentry._score = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// support for one exclusive selector that overwrites\n\t\t\t\t\t// any other selector\n\t\t\t\t\tfor (const entry of this._entries) {\n\t\t\t\t\t\tentry._score = 0;\n\t\t\t\t\t}\n\t\t\t\t\tentry._score = 1000;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// needs sorting\n\t\tthis._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n\t}\n\n\tprivate static _compareByScoreAndTime(a: Entry<unknown>, b: Entry<unknown>): number {\n\t\tif (a._score < b._score) {\n\t\t\treturn 1;\n\t\t} else if (a._score > b._score) {\n\t\t\treturn -1;\n\t\t}\n\n\t\t// De-prioritize built-in providers\n\t\tif (isBuiltinSelector(a.selector) && !isBuiltinSelector(b.selector)) {\n\t\t\treturn 1;\n\t\t} else if (!isBuiltinSelector(a.selector) && isBuiltinSelector(b.selector)) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (a._time < b._time) {\n\t\t\treturn 1;\n\t\t} else if (a._time > b._time) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\nfunction isBuiltinSelector(selector: LanguageSelector): boolean {\n\tif (typeof selector === 'string') {\n\t\treturn false;\n\t}\n\n\tif (Array.isArray(selector)) {\n\t\treturn selector.some(isBuiltinSelector);\n\t}\n\n\treturn Boolean((selector as LanguageFilter).isBuiltin);\n}\n\n"]}