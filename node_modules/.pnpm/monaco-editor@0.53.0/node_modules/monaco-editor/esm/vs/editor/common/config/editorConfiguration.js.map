{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/config/editorConfiguration.ts","vs/editor/common/config/editorConfiguration.ts"],"names":[],"mappings":"AAAA;;;gGAGgG","file":"editorConfiguration.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { ConfigurationChangedEvent, IComputedEditorOptions, IEditorOptions } from './editorOptions.js';\nimport { IDimension } from '../core/2d/dimension.js';\nimport { MenuId } from '../../../platform/actions/common/actions.js';\n\nexport interface IEditorConfiguration extends IDisposable {\n\t/**\n\t * Is this a simple widget (not a real code editor)?\n\t */\n\treadonly isSimpleWidget: boolean;\n\t/**\n\t * The context menu id for the editor.\n\t */\n\treadonly contextMenuId: MenuId;\n\t/**\n\t * Computed editor options.\n\t */\n\treadonly options: IComputedEditorOptions;\n\t/**\n\t * The `options` have changed (quick event)\n\t */\n\tonDidChangeFast: Event<ConfigurationChangedEvent>;\n\t/**\n\t * The `options` have changed (slow event)\n\t */\n\tonDidChange: Event<ConfigurationChangedEvent>;\n\t/**\n\t * Get the raw options as they were passed in to the editor\n\t * and merged with all calls to `updateOptions`.\n\t */\n\tgetRawOptions(): IEditorOptions;\n\t/**\n\t * Update the options with new partial options. All previous\n\t * options will be kept and only present keys will be overwritten.\n\t */\n\tupdateOptions(newOptions: Readonly<IEditorOptions>): void;\n\t/**\n\t * Recompute options with new reference element dimensions.\n\t */\n\tobserveContainer(dimension?: IDimension): void;\n\t/**\n\t * Set if the current model is dominated by long lines.\n\t */\n\tsetIsDominatedByLongLines(isDominatedByLongLines: boolean): void;\n\t/**\n\t * Set the current model line count.\n\t */\n\tsetModelLineCount(modelLineCount: number): void;\n\t/**\n\t * Set the current view model line count.\n\t */\n\tsetViewLineCount(viewLineCount: number): void;\n\t/**\n\t * Set reserved height above.\n\t */\n\tsetReservedHeight(reservedHeight: number): void;\n\t/**\n\t * Set the number of decoration lanes to be rendered in the glyph margin.\n\t */\n\tsetGlyphMarginDecorationLaneCount(decorationLaneCount: number): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { ConfigurationChangedEvent, IComputedEditorOptions, IEditorOptions } from './editorOptions.js';\nimport { IDimension } from '../core/2d/dimension.js';\nimport { MenuId } from '../../../platform/actions/common/actions.js';\n\nexport interface IEditorConfiguration extends IDisposable {\n\t/**\n\t * Is this a simple widget (not a real code editor)?\n\t */\n\treadonly isSimpleWidget: boolean;\n\t/**\n\t * The context menu id for the editor.\n\t */\n\treadonly contextMenuId: MenuId;\n\t/**\n\t * Computed editor options.\n\t */\n\treadonly options: IComputedEditorOptions;\n\t/**\n\t * The `options` have changed (quick event)\n\t */\n\tonDidChangeFast: Event<ConfigurationChangedEvent>;\n\t/**\n\t * The `options` have changed (slow event)\n\t */\n\tonDidChange: Event<ConfigurationChangedEvent>;\n\t/**\n\t * Get the raw options as they were passed in to the editor\n\t * and merged with all calls to `updateOptions`.\n\t */\n\tgetRawOptions(): IEditorOptions;\n\t/**\n\t * Update the options with new partial options. All previous\n\t * options will be kept and only present keys will be overwritten.\n\t */\n\tupdateOptions(newOptions: Readonly<IEditorOptions>): void;\n\t/**\n\t * Recompute options with new reference element dimensions.\n\t */\n\tobserveContainer(dimension?: IDimension): void;\n\t/**\n\t * Set if the current model is dominated by long lines.\n\t */\n\tsetIsDominatedByLongLines(isDominatedByLongLines: boolean): void;\n\t/**\n\t * Set the current model line count.\n\t */\n\tsetModelLineCount(modelLineCount: number): void;\n\t/**\n\t * Set the current view model line count.\n\t */\n\tsetViewLineCount(viewLineCount: number): void;\n\t/**\n\t * Set reserved height above.\n\t */\n\tsetReservedHeight(reservedHeight: number): void;\n\t/**\n\t * Set the number of decoration lanes to be rendered in the glyph margin.\n\t */\n\tsetGlyphMarginDecorationLaneCount(decorationLaneCount: number): void;\n}\n"]}