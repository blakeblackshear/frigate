{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsCollapsedView.ts","vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsCollapsedView.ts"],"names":[],"mappings":"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","file":"inlineEditsCollapsedView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { constObservable, derived, IObservable } from '../../../../../../../base/common/observable.js';\nimport { IAccessibilityService } from '../../../../../../../platform/accessibility/common/accessibility.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { singleTextRemoveCommonPrefix } from '../../../model/singleTextEditHelpers.js';\nimport { IInlineEditsView } from '../inlineEditsViewInterface.js';\nimport { InlineEditWithChanges } from '../inlineEditWithChanges.js';\nimport { inlineEditIndicatorPrimaryBorder } from '../theme.js';\nimport { getEditorValidOverlayRect, PathBuilder, rectToProps } from '../utils/utils.js';\n\nexport class InlineEditsCollapsedView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\tprivate readonly _iconRef = n.ref<SVGElement>();\n\n\treadonly isVisible: IObservable<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEditWithChanges | undefined>,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst firstEdit = this._edit.map(inlineEdit => inlineEdit?.edit.replacements[0] ?? null);\n\n\t\tconst startPosition = firstEdit.map(edit => edit ? singleTextRemoveCommonPrefix(edit, this._editor.getModel()!).range.getStartPosition() : null);\n\t\tconst observedStartPoint = this._editorObs.observePosition(startPosition, this._store);\n\t\tconst startPoint = derived<Point | null>(reader => {\n\t\t\tconst point = observedStartPoint.read(reader);\n\t\t\tif (!point) { return null; }\n\n\t\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\tconst scrollLeft = this._editorObs.scrollLeft.read(reader);\n\t\t\treturn new Point(contentLeft + point.x - scrollLeft, point.y);\n\t\t});\n\n\t\tconst overlayElement = n.div({\n\t\t\tclass: 'inline-edits-collapsed-view',\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t\ttop: '0px',\n\t\t\t\tleft: '0px',\n\t\t\t\tdisplay: 'block',\n\t\t\t},\n\t\t}, [\n\t\t\t[this.getCollapsedIndicator(startPoint)],\n\t\t]).keepUpdated(this._store).element;\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: overlayElement,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: constObservable(0),\n\t\t}));\n\n\t\tthis.isVisible = this._edit.map((inlineEdit, reader) => !!inlineEdit && startPoint.read(reader) !== null);\n\t}\n\n\tpublic triggerAnimation(): Promise<Animation> {\n\t\tif (this._accessibilityService.isMotionReduced()) {\n\t\t\treturn new Animation(null, null).finished;\n\t\t}\n\n\t\t// PULSE ANIMATION:\n\t\tconst animation = this._iconRef.element.animate([\n\t\t\t{ offset: 0.00, transform: 'translateY(-3px)', },\n\t\t\t{ offset: 0.20, transform: 'translateY(1px)', },\n\t\t\t{ offset: 0.36, transform: 'translateY(-1px)', },\n\t\t\t{ offset: 0.52, transform: 'translateY(1px)', },\n\t\t\t{ offset: 0.68, transform: 'translateY(-1px)', },\n\t\t\t{ offset: 0.84, transform: 'translateY(1px)', },\n\t\t\t{ offset: 1.00, transform: 'translateY(0px)', },\n\t\t], { duration: 2000 });\n\n\t\treturn animation.finished;\n\t}\n\n\tprivate getCollapsedIndicator(startPoint: IObservable<Point | null>) {\n\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft;\n\t\tconst startPointTranslated = startPoint.map((p, reader) => p ? p.deltaX(-contentLeft.read(reader)) : null);\n\t\tconst iconPath = this.createIconPath(startPointTranslated);\n\n\t\treturn n.svg({\n\t\t\tclass: 'collapsedView',\n\t\t\tref: this._iconRef,\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\t...rectToProps((r) => getEditorValidOverlayRect(this._editorObs).read(r)),\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tpointerEvents: 'none',\n\t\t\t}\n\t\t}, [\n\t\t\tn.svgElem('path', {\n\t\t\t\tclass: 'collapsedViewPath',\n\t\t\t\td: iconPath,\n\t\t\t\tfill: asCssVariable(inlineEditIndicatorPrimaryBorder),\n\t\t\t}),\n\t\t]);\n\t}\n\n\tprivate createIconPath(indicatorPoint: IObservable<Point | null>): IObservable<string> {\n\t\tconst width = 6;\n\t\tconst triangleHeight = 3;\n\t\tconst baseHeight = 1;\n\n\t\treturn indicatorPoint.map(point => {\n\t\t\tif (!point) { return new PathBuilder().build(); }\n\t\t\tconst baseTopLeft = point.deltaX(-width / 2).deltaY(-baseHeight);\n\t\t\tconst baseTopRight = baseTopLeft.deltaX(width);\n\t\t\tconst baseBottomLeft = baseTopLeft.deltaY(baseHeight);\n\t\t\tconst baseBottomRight = baseTopRight.deltaY(baseHeight);\n\t\t\tconst triangleBottomCenter = baseBottomLeft.deltaX(width / 2).deltaY(triangleHeight);\n\t\t\treturn new PathBuilder()\n\t\t\t\t.moveTo(baseTopLeft)\n\t\t\t\t.lineTo(baseTopRight)\n\t\t\t\t.lineTo(baseBottomRight)\n\t\t\t\t.lineTo(triangleBottomCenter)\n\t\t\t\t.lineTo(baseBottomLeft)\n\t\t\t\t.lineTo(baseTopLeft)\n\t\t\t\t.build();\n\t\t});\n\t}\n\n\treadonly isHovered = constObservable(false);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { constObservable, derived, IObservable } from '../../../../../../../base/common/observable.js';\nimport { IAccessibilityService } from '../../../../../../../platform/accessibility/common/accessibility.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { singleTextRemoveCommonPrefix } from '../../../model/singleTextEditHelpers.js';\nimport { IInlineEditsView } from '../inlineEditsViewInterface.js';\nimport { InlineEditWithChanges } from '../inlineEditWithChanges.js';\nimport { inlineEditIndicatorPrimaryBorder } from '../theme.js';\nimport { getEditorValidOverlayRect, PathBuilder, rectToProps } from '../utils/utils.js';\n\nexport class InlineEditsCollapsedView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\tprivate readonly _iconRef = n.ref<SVGElement>();\n\n\treadonly isVisible: IObservable<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEditWithChanges | undefined>,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst firstEdit = this._edit.map(inlineEdit => inlineEdit?.edit.replacements[0] ?? null);\n\n\t\tconst startPosition = firstEdit.map(edit => edit ? singleTextRemoveCommonPrefix(edit, this._editor.getModel()!).range.getStartPosition() : null);\n\t\tconst observedStartPoint = this._editorObs.observePosition(startPosition, this._store);\n\t\tconst startPoint = derived<Point | null>(reader => {\n\t\t\tconst point = observedStartPoint.read(reader);\n\t\t\tif (!point) { return null; }\n\n\t\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\tconst scrollLeft = this._editorObs.scrollLeft.read(reader);\n\t\t\treturn new Point(contentLeft + point.x - scrollLeft, point.y);\n\t\t});\n\n\t\tconst overlayElement = n.div({\n\t\t\tclass: 'inline-edits-collapsed-view',\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t\ttop: '0px',\n\t\t\t\tleft: '0px',\n\t\t\t\tdisplay: 'block',\n\t\t\t},\n\t\t}, [\n\t\t\t[this.getCollapsedIndicator(startPoint)],\n\t\t]).keepUpdated(this._store).element;\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: overlayElement,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: constObservable(0),\n\t\t}));\n\n\t\tthis.isVisible = this._edit.map((inlineEdit, reader) => !!inlineEdit && startPoint.read(reader) !== null);\n\t}\n\n\tpublic triggerAnimation(): Promise<Animation> {\n\t\tif (this._accessibilityService.isMotionReduced()) {\n\t\t\treturn new Animation(null, null).finished;\n\t\t}\n\n\t\t// PULSE ANIMATION:\n\t\tconst animation = this._iconRef.element.animate([\n\t\t\t{ offset: 0.00, transform: 'translateY(-3px)', },\n\t\t\t{ offset: 0.20, transform: 'translateY(1px)', },\n\t\t\t{ offset: 0.36, transform: 'translateY(-1px)', },\n\t\t\t{ offset: 0.52, transform: 'translateY(1px)', },\n\t\t\t{ offset: 0.68, transform: 'translateY(-1px)', },\n\t\t\t{ offset: 0.84, transform: 'translateY(1px)', },\n\t\t\t{ offset: 1.00, transform: 'translateY(0px)', },\n\t\t], { duration: 2000 });\n\n\t\treturn animation.finished;\n\t}\n\n\tprivate getCollapsedIndicator(startPoint: IObservable<Point | null>) {\n\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft;\n\t\tconst startPointTranslated = startPoint.map((p, reader) => p ? p.deltaX(-contentLeft.read(reader)) : null);\n\t\tconst iconPath = this.createIconPath(startPointTranslated);\n\n\t\treturn n.svg({\n\t\t\tclass: 'collapsedView',\n\t\t\tref: this._iconRef,\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\t...rectToProps((r) => getEditorValidOverlayRect(this._editorObs).read(r)),\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tpointerEvents: 'none',\n\t\t\t}\n\t\t}, [\n\t\t\tn.svgElem('path', {\n\t\t\t\tclass: 'collapsedViewPath',\n\t\t\t\td: iconPath,\n\t\t\t\tfill: asCssVariable(inlineEditIndicatorPrimaryBorder),\n\t\t\t}),\n\t\t]);\n\t}\n\n\tprivate createIconPath(indicatorPoint: IObservable<Point | null>): IObservable<string> {\n\t\tconst width = 6;\n\t\tconst triangleHeight = 3;\n\t\tconst baseHeight = 1;\n\n\t\treturn indicatorPoint.map(point => {\n\t\t\tif (!point) { return new PathBuilder().build(); }\n\t\t\tconst baseTopLeft = point.deltaX(-width / 2).deltaY(-baseHeight);\n\t\t\tconst baseTopRight = baseTopLeft.deltaX(width);\n\t\t\tconst baseBottomLeft = baseTopLeft.deltaY(baseHeight);\n\t\t\tconst baseBottomRight = baseTopRight.deltaY(baseHeight);\n\t\t\tconst triangleBottomCenter = baseBottomLeft.deltaX(width / 2).deltaY(triangleHeight);\n\t\t\treturn new PathBuilder()\n\t\t\t\t.moveTo(baseTopLeft)\n\t\t\t\t.lineTo(baseTopRight)\n\t\t\t\t.lineTo(baseBottomRight)\n\t\t\t\t.lineTo(triangleBottomCenter)\n\t\t\t\t.lineTo(baseBottomLeft)\n\t\t\t\t.lineTo(baseTopLeft)\n\t\t\t\t.build();\n\t\t});\n\t}\n\n\treadonly isHovered = constObservable(false);\n}\n"]}