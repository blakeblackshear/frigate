{"version":3,"sources":["vs/editor/contrib/colorPicker/browser/standaloneColorPicker/standaloneColorPickerActions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAGhG,OAAO,EAAE,YAAY,EAAE,aAAa,EAAoB,MAAM,yCAAyC,CAAC;AAExG,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAE5D,OAAO,EAAE,iBAAiB,EAAE,MAAM,yCAAyC,CAAC;AAC5E,OAAO,EAAE,MAAM,EAAE,MAAM,mDAAmD,CAAC;AAC3E,OAAO,EAAE,+BAA+B,EAAE,MAAM,sCAAsC,CAAC;AAEvF,MAAM,OAAO,gCAAiC,SAAQ,aAAa;IAClE;QACC,KAAK,CAAC;YACL,EAAE,EAAE,gDAAgD;YACpD,KAAK,EAAE;gBACN,GAAG,SAAS,CAAC,GAAkC,EAAE,uCAAuC,CAAC;gBACzF,aAAa,EAAE,QAAQ,CAAC,EAAE,CAA+E,EAA5E,AAA8E,EAA5E,oCAAoC,EAAE,CAA+E,CAAC,KAAzE,EAAE,CAAC,uBAAuB,CAAC;aACvG;YACD,YAAY,EAAE,SAAS;YACvB,IAAI,EAAE;gBACL,EAAE,EAAE,EAAE,MAAM,CAAC,cAAc,EAAE;aAC7B;YACD,QAAQ,EAAE;gBACT,WAAW,EAAE,SAAS,CAAC,GAA6C,EAAE,gHAAgH,CAAC;aACvL;SACD,CAAC,CAAC;IACJ,CAAC;IACD,gBAAgB,CAAC,SAA2B,EAAE,MAAmB;QAChE,+BAA+B,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,CAAC;IAC5D,CAAC;CACD;AAED,MAAM,OAAO,yBAA0B,SAAQ,YAAY;IAC1D;QACC,KAAK,CAAC;YACL,EAAE,EAAE,+BAA+B;YACnC,KAAK,EAAE,SAAS,CAAC;gBAChB,GAAG,EAAE,iBAAiB;gBACtB,OAAO,EAAE;oBACR,oCAAoC;iBACpC;gCACD,EAAE,uBAAuB,CAAC;YAC3B,YAAY,EAAE,iBAAiB,CAAC,4BAA4B,CAAC,SAAS,CAAC,IAAI,CAAC;YAC5E,MAAM,EAAE;gBACP,OAAO,wBAAgB;gBACvB,MAAM,0CAAgC;aACtC;YACD,QAAQ,EAAE;gBACT,WAAW,EAAE,SAAS,CAAC,GAA4B,EAAE,mCAAmC,CAAC;aACzF;SACD,CAAC,CAAC;IACJ,CAAC;IACM,GAAG,CAAC,SAA2B,EAAE,MAAmB;QAC1D,+BAA+B,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC;IACrD,CAAC;CACD;AAED,MAAM,OAAO,oCAAqC,SAAQ,YAAY;IACrE;QACC,KAAK,CAAC;YACL,EAAE,EAAE,oDAAoD;YACxD,KAAK,EAAE,SAAS,CAAC;gBAChB,GAAG,EAAE,sCAAsC;gBAC3C,OAAO,EAAE;oBACR,wDAAwD;iBACxD;gCACD,EAAE,2CAA2C,CAAC;YAC/C,YAAY,EAAE,iBAAiB,CAAC,4BAA4B,CAAC,SAAS,CAAC,IAAI,CAAC;YAC5E,MAAM,EAAE;gBACP,OAAO,uBAAe;gBACtB,MAAM,0CAAgC;aACtC;YACD,QAAQ,EAAE;gBACT,WAAW,EAAE,SAAS,CAAC,GAAiD,EAAE,qEAAqE,CAAC;aAChJ;SACD,CAAC,CAAC;IACJ,CAAC;IACM,GAAG,CAAC,SAA2B,EAAE,MAAmB;QAC1D,+BAA+B,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,CAAC;IAC5D,CAAC;CACD","file":"standaloneColorPickerActions.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { EditorAction, EditorAction2, ServicesAccessor } from '../../../../browser/editorExtensions.js';\nimport { KeyCode } from '../../../../../base/common/keyCodes.js';\nimport { localize, localize2 } from '../../../../../nls.js';\nimport { KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { EditorContextKeys } from '../../../../common/editorContextKeys.js';\nimport { MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { StandaloneColorPickerController } from './standaloneColorPickerController.js';\n\nexport class ShowOrFocusStandaloneColorPicker extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.showOrFocusStandaloneColorPicker',\n\t\t\ttitle: {\n\t\t\t\t...localize2('showOrFocusStandaloneColorPicker', \"Show or Focus Standalone Color Picker\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'mishowOrFocusStandaloneColorPicker', comment: ['&& denotes a mnemonic'] }, \"&&Show or Focus Standalone Color Picker\"),\n\t\t\t},\n\t\t\tprecondition: undefined,\n\t\t\tmenu: [\n\t\t\t\t{ id: MenuId.CommandPalette },\n\t\t\t],\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2('showOrFocusStandaloneColorPickerDescription', \"Show or focus a standalone color picker which uses the default color provider. It displays hex/rgb/hsl colors.\"),\n\t\t\t}\n\t\t});\n\t}\n\trunEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\tStandaloneColorPickerController.get(editor)?.showOrFocus();\n\t}\n}\n\nexport class HideStandaloneColorPicker extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.hideColorPicker',\n\t\t\tlabel: localize2({\n\t\t\t\tkey: 'hideColorPicker',\n\t\t\t\tcomment: [\n\t\t\t\t\t'Action that hides the color picker'\n\t\t\t\t]\n\t\t\t}, \"Hide the Color Picker\"),\n\t\t\tprecondition: EditorContextKeys.standaloneColorPickerVisible.isEqualTo(true),\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2('hideColorPickerDescription', \"Hide the standalone color picker.\"),\n\t\t\t}\n\t\t});\n\t}\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tStandaloneColorPickerController.get(editor)?.hide();\n\t}\n}\n\nexport class InsertColorWithStandaloneColorPicker extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.insertColorWithStandaloneColorPicker',\n\t\t\tlabel: localize2({\n\t\t\t\tkey: 'insertColorWithStandaloneColorPicker',\n\t\t\t\tcomment: [\n\t\t\t\t\t'Action that inserts color with standalone color picker'\n\t\t\t\t]\n\t\t\t}, \"Insert Color with Standalone Color Picker\"),\n\t\t\tprecondition: EditorContextKeys.standaloneColorPickerFocused.isEqualTo(true),\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2('insertColorWithStandaloneColorPickerDescription', \"Insert hex/rgb/hsl colors with the focused standalone color picker.\"),\n\t\t\t}\n\t\t});\n\t}\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tStandaloneColorPickerController.get(editor)?.insertColor();\n\t}\n}\n"]}