{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/suggestWidgetAdapter.ts","vs/editor/contrib/inlineCompletions/browser/model/suggestWidgetAdapter.ts"],"names":[],"mappings":"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","file":"suggestWidgetAdapter.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareBy, numberComparator } from '../../../../../base/common/arrays.js';\nimport { findFirstMax } from '../../../../../base/common/arraysFind.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { CompletionItemInsertTextRule, CompletionItemKind, SelectedSuggestionInfo } from '../../../../common/languages.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { singleTextEditAugments, singleTextRemoveCommonPrefix } from './singleTextEditHelpers.js';\nimport { SnippetParser } from '../../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../../snippet/browser/snippetSession.js';\nimport { CompletionItem } from '../../../suggest/browser/suggest.js';\nimport { SuggestController } from '../../../suggest/browser/suggestController.js';\nimport { ObservableCodeEditor } from '../../../../browser/observableCodeEditor.js';\nimport { observableFromEvent } from '../../../../../base/common/observable.js';\n\nexport class SuggestWidgetAdaptor extends Disposable {\n\tprivate isSuggestWidgetVisible: boolean = false;\n\tprivate isShiftKeyPressed = false;\n\tprivate _isActive = false;\n\tprivate _currentSuggestItemInfo: SuggestItemInfo | undefined = undefined;\n\tpublic get selectedItem(): SuggestItemInfo | undefined {\n\t\treturn this._currentSuggestItemInfo;\n\t}\n\tprivate _onDidSelectedItemChange = this._register(new Emitter<void>());\n\tpublic readonly onDidSelectedItemChange: Event<void> = this._onDidSelectedItemChange.event;\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly suggestControllerPreselector: () => TextReplacement | undefined,\n\t\tprivate readonly onWillAccept: (item: SuggestItemInfo) => void,\n\t) {\n\t\tsuper();\n\n\t\t// See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n\t\tthis._register(editor.onKeyDown(e => {\n\t\t\tif (e.shiftKey && !this.isShiftKeyPressed) {\n\t\t\t\tthis.isShiftKeyPressed = true;\n\t\t\t\tthis.update(this._isActive);\n\t\t\t}\n\t\t}));\n\t\tthis._register(editor.onKeyUp(e => {\n\t\t\tif (e.shiftKey && this.isShiftKeyPressed) {\n\t\t\t\tthis.isShiftKeyPressed = false;\n\t\t\t\tthis.update(this._isActive);\n\t\t\t}\n\t\t}));\n\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tif (suggestController) {\n\t\t\tthis._register(suggestController.registerSelector({\n\t\t\t\tpriority: 100,\n\t\t\t\tselect: (model, pos, suggestItems) => {\n\t\t\t\t\tconst textModel = this.editor.getModel();\n\t\t\t\t\tif (!textModel) {\n\t\t\t\t\t\t// Should not happen\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst i = this.suggestControllerPreselector();\n\t\t\t\t\tconst itemToPreselect = i ? singleTextRemoveCommonPrefix(i, textModel) : undefined;\n\t\t\t\t\tif (!itemToPreselect) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tconst position = Position.lift(pos);\n\n\t\t\t\t\tconst candidates = suggestItems\n\t\t\t\t\t\t.map((suggestItem, index) => {\n\t\t\t\t\t\t\tconst suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n\t\t\t\t\t\t\tconst suggestItemTextEdit = singleTextRemoveCommonPrefix(suggestItemInfo.getSingleTextEdit(), textModel);\n\t\t\t\t\t\t\tconst valid = singleTextEditAugments(itemToPreselect, suggestItemTextEdit);\n\t\t\t\t\t\t\treturn { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(item => item && item.valid && item.prefixLength > 0);\n\n\t\t\t\t\tconst result = findFirstMax(\n\t\t\t\t\t\tcandidates,\n\t\t\t\t\t\tcompareBy(s => s!.prefixLength, numberComparator)\n\t\t\t\t\t);\n\t\t\t\t\treturn result ? result.index : - 1;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tlet isBoundToSuggestWidget = false;\n\t\t\tconst bindToSuggestWidget = () => {\n\t\t\t\tif (isBoundToSuggestWidget) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tisBoundToSuggestWidget = true;\n\n\t\t\t\tthis._register(suggestController.widget.value.onDidShow(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = true;\n\t\t\t\t\tthis.update(true);\n\t\t\t\t}));\n\t\t\t\tthis._register(suggestController.widget.value.onDidHide(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = false;\n\t\t\t\t\tthis.update(false);\n\t\t\t\t}));\n\t\t\t\tthis._register(suggestController.widget.value.onDidFocus(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = true;\n\t\t\t\t\tthis.update(true);\n\t\t\t\t}));\n\t\t\t};\n\n\t\t\tthis._register(Event.once(suggestController.model.onDidTrigger)(e => {\n\t\t\t\tbindToSuggestWidget();\n\t\t\t}));\n\n\t\t\tthis._register(suggestController.onWillInsertSuggestItem(e => {\n\t\t\t\tconst position = this.editor.getPosition();\n\t\t\t\tconst model = this.editor.getModel();\n\t\t\t\tif (!position || !model) { return undefined; }\n\n\t\t\t\tconst suggestItemInfo = SuggestItemInfo.fromSuggestion(\n\t\t\t\t\tsuggestController,\n\t\t\t\t\tmodel,\n\t\t\t\t\tposition,\n\t\t\t\t\te.item,\n\t\t\t\t\tthis.isShiftKeyPressed\n\t\t\t\t);\n\n\t\t\t\tthis.onWillAccept(suggestItemInfo);\n\t\t\t}));\n\t\t}\n\t\tthis.update(this._isActive);\n\t}\n\n\tprivate update(newActive: boolean): void {\n\t\tconst newInlineCompletion = this.getSuggestItemInfo();\n\n\t\tif (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n\t\t\tthis._isActive = newActive;\n\t\t\tthis._currentSuggestItemInfo = newInlineCompletion;\n\n\t\t\tthis._onDidSelectedItemChange.fire();\n\t\t}\n\t}\n\n\tprivate getSuggestItemInfo(): SuggestItemInfo | undefined {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tif (!suggestController || !this.isSuggestWidgetVisible) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst focusedItem = suggestController.widget.value.getFocusedItem();\n\t\tconst position = this.editor.getPosition();\n\t\tconst model = this.editor.getModel();\n\n\t\tif (!focusedItem || !position || !model) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn SuggestItemInfo.fromSuggestion(\n\t\t\tsuggestController,\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\tfocusedItem.item,\n\t\t\tthis.isShiftKeyPressed\n\t\t);\n\t}\n\n\tpublic stopForceRenderingAbove(): void {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tsuggestController?.stopForceRenderingAbove();\n\t}\n\n\tpublic forceRenderingAbove(): void {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tsuggestController?.forceRenderingAbove();\n\t}\n}\n\nexport class SuggestItemInfo {\n\tpublic static fromSuggestion(suggestController: SuggestController, model: ITextModel, position: Position, item: CompletionItem, toggleMode: boolean): SuggestItemInfo {\n\t\tlet { insertText } = item.completion;\n\t\tlet isSnippetText = false;\n\t\tif (item.completion.insertTextRules! & CompletionItemInsertTextRule.InsertAsSnippet) {\n\t\t\tconst snippet = new SnippetParser().parse(insertText);\n\n\t\t\tif (snippet.children.length < 100) {\n\t\t\t\t// Adjust whitespace is expensive.\n\t\t\t\tSnippetSession.adjustWhitespace(model, position, true, snippet);\n\t\t\t}\n\n\t\t\tinsertText = snippet.toString();\n\t\t\tisSnippetText = true;\n\t\t}\n\n\t\tconst info = suggestController.getOverwriteInfo(item, toggleMode);\n\n\t\treturn new SuggestItemInfo(\n\t\t\tRange.fromPositions(\n\t\t\t\tposition.delta(0, -info.overwriteBefore),\n\t\t\t\tposition.delta(0, Math.max(info.overwriteAfter, 0))\n\t\t\t),\n\t\t\tinsertText,\n\t\t\titem.completion.kind,\n\t\t\tisSnippetText,\n\t\t\titem.container.incomplete ?? false,\n\t\t);\n\t}\n\n\tprivate constructor(\n\t\tpublic readonly range: Range,\n\t\tpublic readonly insertText: string,\n\t\tpublic readonly completionItemKind: CompletionItemKind,\n\t\tpublic readonly isSnippetText: boolean,\n\t\tpublic readonly listIncomplete: boolean,\n\t) { }\n\n\tpublic equals(other: SuggestItemInfo): boolean {\n\t\treturn this.range.equalsRange(other.range)\n\t\t\t&& this.insertText === other.insertText\n\t\t\t&& this.completionItemKind === other.completionItemKind\n\t\t\t&& this.isSnippetText === other.isSnippetText;\n\t}\n\n\tpublic toSelectedSuggestionInfo(): SelectedSuggestionInfo {\n\t\treturn new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n\t}\n\n\tpublic getSingleTextEdit(): TextReplacement {\n\t\treturn new TextReplacement(this.range, this.insertText);\n\t}\n}\n\nfunction suggestItemInfoEquals(a: SuggestItemInfo | undefined, b: SuggestItemInfo | undefined): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\treturn a.equals(b);\n}\n\nexport class ObservableSuggestWidgetAdapter extends Disposable {\n\tprivate readonly _suggestWidgetAdaptor;\n\n\tpublic readonly selectedItem;\n\n\tconstructor(\n\t\tprivate readonly _editorObs: ObservableCodeEditor,\n\n\t\tprivate readonly _handleSuggestAccepted: (item: SuggestItemInfo) => void,\n\t\tprivate readonly _suggestControllerPreselector: () => TextReplacement | undefined,\n\t) {\n\t\tsuper();\n\t\tthis._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(\n\t\t\tthis._editorObs.editor,\n\t\t\t() => {\n\t\t\t\tthis._editorObs.forceUpdate();\n\t\t\t\treturn this._suggestControllerPreselector();\n\t\t\t},\n\t\t\t(item) => this._editorObs.forceUpdate(_tx => {\n\t\t\t\t/** @description InlineCompletionsController.handleSuggestAccepted */\n\t\t\t\tthis._handleSuggestAccepted(item);\n\t\t\t})\n\t\t));\n\t\tthis.selectedItem = observableFromEvent(this, cb => this._suggestWidgetAdaptor.onDidSelectedItemChange(() => {\n\t\t\tthis._editorObs.forceUpdate(_tx => cb(undefined));\n\t\t}), () => this._suggestWidgetAdaptor.selectedItem);\n\t}\n\n\tpublic stopForceRenderingAbove(): void {\n\t\tthis._suggestWidgetAdaptor.stopForceRenderingAbove();\n\t}\n\n\tpublic forceRenderingAbove(): void {\n\t\tthis._suggestWidgetAdaptor.forceRenderingAbove();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareBy, numberComparator } from '../../../../../base/common/arrays.js';\nimport { findFirstMax } from '../../../../../base/common/arraysFind.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { CompletionItemInsertTextRule, CompletionItemKind, SelectedSuggestionInfo } from '../../../../common/languages.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { singleTextEditAugments, singleTextRemoveCommonPrefix } from './singleTextEditHelpers.js';\nimport { SnippetParser } from '../../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../../snippet/browser/snippetSession.js';\nimport { CompletionItem } from '../../../suggest/browser/suggest.js';\nimport { SuggestController } from '../../../suggest/browser/suggestController.js';\nimport { ObservableCodeEditor } from '../../../../browser/observableCodeEditor.js';\nimport { observableFromEvent } from '../../../../../base/common/observable.js';\n\nexport class SuggestWidgetAdaptor extends Disposable {\n\tprivate isSuggestWidgetVisible: boolean = false;\n\tprivate isShiftKeyPressed = false;\n\tprivate _isActive = false;\n\tprivate _currentSuggestItemInfo: SuggestItemInfo | undefined = undefined;\n\tpublic get selectedItem(): SuggestItemInfo | undefined {\n\t\treturn this._currentSuggestItemInfo;\n\t}\n\tprivate _onDidSelectedItemChange = this._register(new Emitter<void>());\n\tpublic readonly onDidSelectedItemChange: Event<void> = this._onDidSelectedItemChange.event;\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly suggestControllerPreselector: () => TextReplacement | undefined,\n\t\tprivate readonly onWillAccept: (item: SuggestItemInfo) => void,\n\t) {\n\t\tsuper();\n\n\t\t// See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n\t\tthis._register(editor.onKeyDown(e => {\n\t\t\tif (e.shiftKey && !this.isShiftKeyPressed) {\n\t\t\t\tthis.isShiftKeyPressed = true;\n\t\t\t\tthis.update(this._isActive);\n\t\t\t}\n\t\t}));\n\t\tthis._register(editor.onKeyUp(e => {\n\t\t\tif (e.shiftKey && this.isShiftKeyPressed) {\n\t\t\t\tthis.isShiftKeyPressed = false;\n\t\t\t\tthis.update(this._isActive);\n\t\t\t}\n\t\t}));\n\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tif (suggestController) {\n\t\t\tthis._register(suggestController.registerSelector({\n\t\t\t\tpriority: 100,\n\t\t\t\tselect: (model, pos, suggestItems) => {\n\t\t\t\t\tconst textModel = this.editor.getModel();\n\t\t\t\t\tif (!textModel) {\n\t\t\t\t\t\t// Should not happen\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst i = this.suggestControllerPreselector();\n\t\t\t\t\tconst itemToPreselect = i ? singleTextRemoveCommonPrefix(i, textModel) : undefined;\n\t\t\t\t\tif (!itemToPreselect) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tconst position = Position.lift(pos);\n\n\t\t\t\t\tconst candidates = suggestItems\n\t\t\t\t\t\t.map((suggestItem, index) => {\n\t\t\t\t\t\t\tconst suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n\t\t\t\t\t\t\tconst suggestItemTextEdit = singleTextRemoveCommonPrefix(suggestItemInfo.getSingleTextEdit(), textModel);\n\t\t\t\t\t\t\tconst valid = singleTextEditAugments(itemToPreselect, suggestItemTextEdit);\n\t\t\t\t\t\t\treturn { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(item => item && item.valid && item.prefixLength > 0);\n\n\t\t\t\t\tconst result = findFirstMax(\n\t\t\t\t\t\tcandidates,\n\t\t\t\t\t\tcompareBy(s => s!.prefixLength, numberComparator)\n\t\t\t\t\t);\n\t\t\t\t\treturn result ? result.index : - 1;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tlet isBoundToSuggestWidget = false;\n\t\t\tconst bindToSuggestWidget = () => {\n\t\t\t\tif (isBoundToSuggestWidget) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tisBoundToSuggestWidget = true;\n\n\t\t\t\tthis._register(suggestController.widget.value.onDidShow(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = true;\n\t\t\t\t\tthis.update(true);\n\t\t\t\t}));\n\t\t\t\tthis._register(suggestController.widget.value.onDidHide(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = false;\n\t\t\t\t\tthis.update(false);\n\t\t\t\t}));\n\t\t\t\tthis._register(suggestController.widget.value.onDidFocus(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = true;\n\t\t\t\t\tthis.update(true);\n\t\t\t\t}));\n\t\t\t};\n\n\t\t\tthis._register(Event.once(suggestController.model.onDidTrigger)(e => {\n\t\t\t\tbindToSuggestWidget();\n\t\t\t}));\n\n\t\t\tthis._register(suggestController.onWillInsertSuggestItem(e => {\n\t\t\t\tconst position = this.editor.getPosition();\n\t\t\t\tconst model = this.editor.getModel();\n\t\t\t\tif (!position || !model) { return undefined; }\n\n\t\t\t\tconst suggestItemInfo = SuggestItemInfo.fromSuggestion(\n\t\t\t\t\tsuggestController,\n\t\t\t\t\tmodel,\n\t\t\t\t\tposition,\n\t\t\t\t\te.item,\n\t\t\t\t\tthis.isShiftKeyPressed\n\t\t\t\t);\n\n\t\t\t\tthis.onWillAccept(suggestItemInfo);\n\t\t\t}));\n\t\t}\n\t\tthis.update(this._isActive);\n\t}\n\n\tprivate update(newActive: boolean): void {\n\t\tconst newInlineCompletion = this.getSuggestItemInfo();\n\n\t\tif (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n\t\t\tthis._isActive = newActive;\n\t\t\tthis._currentSuggestItemInfo = newInlineCompletion;\n\n\t\t\tthis._onDidSelectedItemChange.fire();\n\t\t}\n\t}\n\n\tprivate getSuggestItemInfo(): SuggestItemInfo | undefined {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tif (!suggestController || !this.isSuggestWidgetVisible) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst focusedItem = suggestController.widget.value.getFocusedItem();\n\t\tconst position = this.editor.getPosition();\n\t\tconst model = this.editor.getModel();\n\n\t\tif (!focusedItem || !position || !model) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn SuggestItemInfo.fromSuggestion(\n\t\t\tsuggestController,\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\tfocusedItem.item,\n\t\t\tthis.isShiftKeyPressed\n\t\t);\n\t}\n\n\tpublic stopForceRenderingAbove(): void {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tsuggestController?.stopForceRenderingAbove();\n\t}\n\n\tpublic forceRenderingAbove(): void {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tsuggestController?.forceRenderingAbove();\n\t}\n}\n\nexport class SuggestItemInfo {\n\tpublic static fromSuggestion(suggestController: SuggestController, model: ITextModel, position: Position, item: CompletionItem, toggleMode: boolean): SuggestItemInfo {\n\t\tlet { insertText } = item.completion;\n\t\tlet isSnippetText = false;\n\t\tif (item.completion.insertTextRules! & CompletionItemInsertTextRule.InsertAsSnippet) {\n\t\t\tconst snippet = new SnippetParser().parse(insertText);\n\n\t\t\tif (snippet.children.length < 100) {\n\t\t\t\t// Adjust whitespace is expensive.\n\t\t\t\tSnippetSession.adjustWhitespace(model, position, true, snippet);\n\t\t\t}\n\n\t\t\tinsertText = snippet.toString();\n\t\t\tisSnippetText = true;\n\t\t}\n\n\t\tconst info = suggestController.getOverwriteInfo(item, toggleMode);\n\n\t\treturn new SuggestItemInfo(\n\t\t\tRange.fromPositions(\n\t\t\t\tposition.delta(0, -info.overwriteBefore),\n\t\t\t\tposition.delta(0, Math.max(info.overwriteAfter, 0))\n\t\t\t),\n\t\t\tinsertText,\n\t\t\titem.completion.kind,\n\t\t\tisSnippetText,\n\t\t\titem.container.incomplete ?? false,\n\t\t);\n\t}\n\n\tprivate constructor(\n\t\tpublic readonly range: Range,\n\t\tpublic readonly insertText: string,\n\t\tpublic readonly completionItemKind: CompletionItemKind,\n\t\tpublic readonly isSnippetText: boolean,\n\t\tpublic readonly listIncomplete: boolean,\n\t) { }\n\n\tpublic equals(other: SuggestItemInfo): boolean {\n\t\treturn this.range.equalsRange(other.range)\n\t\t\t&& this.insertText === other.insertText\n\t\t\t&& this.completionItemKind === other.completionItemKind\n\t\t\t&& this.isSnippetText === other.isSnippetText;\n\t}\n\n\tpublic toSelectedSuggestionInfo(): SelectedSuggestionInfo {\n\t\treturn new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n\t}\n\n\tpublic getSingleTextEdit(): TextReplacement {\n\t\treturn new TextReplacement(this.range, this.insertText);\n\t}\n}\n\nfunction suggestItemInfoEquals(a: SuggestItemInfo | undefined, b: SuggestItemInfo | undefined): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\treturn a.equals(b);\n}\n\nexport class ObservableSuggestWidgetAdapter extends Disposable {\n\tprivate readonly _suggestWidgetAdaptor;\n\n\tpublic readonly selectedItem;\n\n\tconstructor(\n\t\tprivate readonly _editorObs: ObservableCodeEditor,\n\n\t\tprivate readonly _handleSuggestAccepted: (item: SuggestItemInfo) => void,\n\t\tprivate readonly _suggestControllerPreselector: () => TextReplacement | undefined,\n\t) {\n\t\tsuper();\n\t\tthis._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(\n\t\t\tthis._editorObs.editor,\n\t\t\t() => {\n\t\t\t\tthis._editorObs.forceUpdate();\n\t\t\t\treturn this._suggestControllerPreselector();\n\t\t\t},\n\t\t\t(item) => this._editorObs.forceUpdate(_tx => {\n\t\t\t\t/** @description InlineCompletionsController.handleSuggestAccepted */\n\t\t\t\tthis._handleSuggestAccepted(item);\n\t\t\t})\n\t\t));\n\t\tthis.selectedItem = observableFromEvent(this, cb => this._suggestWidgetAdaptor.onDidSelectedItemChange(() => {\n\t\t\tthis._editorObs.forceUpdate(_tx => cb(undefined));\n\t\t}), () => this._suggestWidgetAdaptor.selectedItem);\n\t}\n\n\tpublic stopForceRenderingAbove(): void {\n\t\tthis._suggestWidgetAdaptor.stopForceRenderingAbove();\n\t}\n\n\tpublic forceRenderingAbove(): void {\n\t\tthis._suggestWidgetAdaptor.forceRenderingAbove();\n\t}\n}\n"]}