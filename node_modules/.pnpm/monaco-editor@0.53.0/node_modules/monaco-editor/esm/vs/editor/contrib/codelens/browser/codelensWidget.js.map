{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/codelens/browser/codelensWidget.ts","vs/editor/contrib/codelens/browser/codelensWidget.ts"],"names":[],"mappings":"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","file":"codelensWidget.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { renderLabelWithIcons } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { Constants } from '../../../../base/common/uint.js';\nimport './codelensWidget.css';\nimport { ContentWidgetPositionPreference, IActiveCodeEditor, IContentWidget, IContentWidgetPosition, IViewZone, IViewZoneChangeAccessor } from '../../../browser/editorBrowser.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelDecorationsChangeAccessor, IModelDeltaDecoration, ITextModel } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { CodeLens, Command } from '../../../common/languages.js';\nimport { CodeLensItem } from './codelens.js';\n\nclass CodeLensViewZone implements IViewZone {\n\n\treadonly suppressMouseDown: boolean;\n\treadonly domNode: HTMLElement;\n\n\tafterLineNumber: number;\n\t/**\n\t * We want that this view zone, which reserves space for a code lens appears\n\t * as close as possible to the next line, so we use a very large value here.\n\t */\n\treadonly afterColumn = Constants.MAX_SAFE_SMALL_INTEGER;\n\theightInPx: number;\n\n\tprivate _lastHeight?: number;\n\tprivate readonly _onHeight: () => void;\n\n\tconstructor(afterLineNumber: number, heightInPx: number, onHeight: () => void) {\n\t\tthis.afterLineNumber = afterLineNumber;\n\t\tthis.heightInPx = heightInPx;\n\n\t\tthis._onHeight = onHeight;\n\t\tthis.suppressMouseDown = true;\n\t\tthis.domNode = document.createElement('div');\n\t}\n\n\tonComputedHeight(height: number): void {\n\t\tif (this._lastHeight === undefined) {\n\t\t\tthis._lastHeight = height;\n\t\t} else if (this._lastHeight !== height) {\n\t\t\tthis._lastHeight = height;\n\t\t\tthis._onHeight();\n\t\t}\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this._lastHeight !== 0\n\t\t\t&& this.domNode.hasAttribute('monaco-visible-view-zone');\n\t}\n}\n\nclass CodeLensContentWidget implements IContentWidget {\n\n\tprivate static _idPool: number = 0;\n\n\t// Editor.IContentWidget.allowEditorOverflow\n\treadonly allowEditorOverflow: boolean = false;\n\treadonly suppressMouseDown: boolean = true;\n\n\tprivate readonly _id: string;\n\tprivate readonly _domNode: HTMLElement;\n\tprivate readonly _editor: IActiveCodeEditor;\n\tprivate readonly _commands = new Map<string, Command>();\n\n\tprivate _widgetPosition?: IContentWidgetPosition;\n\tprivate _isEmpty: boolean = true;\n\n\tconstructor(\n\t\teditor: IActiveCodeEditor,\n\t\tline: number,\n\t) {\n\t\tthis._editor = editor;\n\t\tthis._id = `codelens.widget-${(CodeLensContentWidget._idPool++)}`;\n\n\t\tthis.updatePosition(line);\n\n\t\tthis._domNode = document.createElement('span');\n\t\tthis._domNode.className = `codelens-decoration`;\n\t}\n\n\twithCommands(lenses: ReadonlyArray<CodeLens | undefined | null>, animate: boolean): void {\n\t\tthis._commands.clear();\n\n\t\tconst children: HTMLElement[] = [];\n\t\tlet hasSymbol = false;\n\t\tfor (let i = 0; i < lenses.length; i++) {\n\t\t\tconst lens = lenses[i];\n\t\t\tif (!lens) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\thasSymbol = true;\n\t\t\tif (lens.command) {\n\t\t\t\tconst title = renderLabelWithIcons(lens.command.title.trim());\n\t\t\t\tif (lens.command.id) {\n\t\t\t\t\tconst id = `c${(CodeLensContentWidget._idPool++)}`;\n\t\t\t\t\tchildren.push(dom.$('a', { id, title: lens.command.tooltip, role: 'button' }, ...title));\n\t\t\t\t\tthis._commands.set(id, lens.command);\n\t\t\t\t} else {\n\t\t\t\t\tchildren.push(dom.$('span', { title: lens.command.tooltip }, ...title));\n\t\t\t\t}\n\t\t\t\tif (i + 1 < lenses.length) {\n\t\t\t\t\tchildren.push(dom.$('span', undefined, '\\u00a0|\\u00a0'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!hasSymbol) {\n\t\t\t// symbols but no commands\n\t\t\tdom.reset(this._domNode, dom.$('span', undefined, 'no commands'));\n\n\t\t} else {\n\t\t\t// symbols and commands\n\t\t\tdom.reset(this._domNode, ...children);\n\t\t\tif (this._isEmpty && animate) {\n\t\t\t\tthis._domNode.classList.add('fadein');\n\t\t\t}\n\t\t\tthis._isEmpty = false;\n\t\t}\n\t}\n\n\tgetCommand(link: HTMLLinkElement): Command | undefined {\n\t\treturn link.parentElement === this._domNode\n\t\t\t? this._commands.get(link.id)\n\t\t\t: undefined;\n\t}\n\n\tgetId(): string {\n\t\treturn this._id;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tupdatePosition(line: number): void {\n\t\tconst column = this._editor.getModel().getLineFirstNonWhitespaceColumn(line);\n\t\tthis._widgetPosition = {\n\t\t\tposition: { lineNumber: line, column: column },\n\t\t\tpreference: [ContentWidgetPositionPreference.ABOVE]\n\t\t};\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn this._widgetPosition || null;\n\t}\n}\n\nexport interface IDecorationIdCallback {\n\t(decorationId: string): void;\n}\n\nexport class CodeLensHelper {\n\n\tprivate readonly _removeDecorations: string[];\n\tprivate readonly _addDecorations: IModelDeltaDecoration[];\n\tprivate readonly _addDecorationsCallbacks: IDecorationIdCallback[];\n\n\tconstructor() {\n\t\tthis._removeDecorations = [];\n\t\tthis._addDecorations = [];\n\t\tthis._addDecorationsCallbacks = [];\n\t}\n\n\taddDecoration(decoration: IModelDeltaDecoration, callback: IDecorationIdCallback): void {\n\t\tthis._addDecorations.push(decoration);\n\t\tthis._addDecorationsCallbacks.push(callback);\n\t}\n\n\tremoveDecoration(decorationId: string): void {\n\t\tthis._removeDecorations.push(decorationId);\n\t}\n\n\tcommit(changeAccessor: IModelDecorationsChangeAccessor): void {\n\t\tconst resultingDecorations = changeAccessor.deltaDecorations(this._removeDecorations, this._addDecorations);\n\t\tfor (let i = 0, len = resultingDecorations.length; i < len; i++) {\n\t\t\tthis._addDecorationsCallbacks[i](resultingDecorations[i]);\n\t\t}\n\t}\n}\n\nconst codeLensDecorationOptions = ModelDecorationOptions.register({\n\tcollapseOnReplaceEdit: true,\n\tdescription: 'codelens'\n});\n\nexport class CodeLensWidget {\n\n\tprivate readonly _editor: IActiveCodeEditor;\n\tprivate readonly _viewZone: CodeLensViewZone;\n\tprivate readonly _viewZoneId: string;\n\n\tprivate _contentWidget?: CodeLensContentWidget;\n\tprivate _decorationIds: string[];\n\tprivate _data: readonly CodeLensItem[];\n\tprivate _isDisposed: boolean = false;\n\n\tconstructor(\n\t\tdata: readonly CodeLensItem[],\n\t\teditor: IActiveCodeEditor,\n\t\thelper: CodeLensHelper,\n\t\tviewZoneChangeAccessor: IViewZoneChangeAccessor,\n\t\theightInPx: number,\n\t\tupdateCallback: () => void\n\t) {\n\t\tthis._editor = editor;\n\t\tthis._data = data;\n\n\t\t// create combined range, track all ranges with decorations,\n\t\t// check if there is already something to render\n\t\tthis._decorationIds = [];\n\t\tlet range: Range | undefined;\n\t\tconst lenses: CodeLens[] = [];\n\n\t\tthis._data.forEach((codeLensData, i) => {\n\n\t\t\tif (codeLensData.symbol.command) {\n\t\t\t\tlenses.push(codeLensData.symbol);\n\t\t\t}\n\n\t\t\thelper.addDecoration({\n\t\t\t\trange: codeLensData.symbol.range,\n\t\t\t\toptions: codeLensDecorationOptions\n\t\t\t}, id => this._decorationIds[i] = id);\n\n\t\t\t// the range contains all lenses on this line\n\t\t\tif (!range) {\n\t\t\t\trange = Range.lift(codeLensData.symbol.range);\n\t\t\t} else {\n\t\t\t\trange = Range.plusRange(range, codeLensData.symbol.range);\n\t\t\t}\n\t\t});\n\n\t\tthis._viewZone = new CodeLensViewZone(range!.startLineNumber - 1, heightInPx, updateCallback);\n\t\tthis._viewZoneId = viewZoneChangeAccessor.addZone(this._viewZone);\n\n\t\tif (lenses.length > 0) {\n\t\t\tthis._createContentWidgetIfNecessary();\n\t\t\tthis._contentWidget!.withCommands(lenses, false);\n\t\t}\n\t}\n\n\tprivate _createContentWidgetIfNecessary(): void {\n\t\tif (!this._contentWidget) {\n\t\t\tthis._contentWidget = new CodeLensContentWidget(this._editor, this._viewZone.afterLineNumber + 1);\n\t\t\tthis._editor.addContentWidget(this._contentWidget);\n\t\t} else {\n\t\t\tthis._editor.layoutContentWidget(this._contentWidget);\n\t\t}\n\t}\n\n\tdispose(helper: CodeLensHelper, viewZoneChangeAccessor?: IViewZoneChangeAccessor): void {\n\t\tthis._decorationIds.forEach(helper.removeDecoration, helper);\n\t\tthis._decorationIds = [];\n\t\tviewZoneChangeAccessor?.removeZone(this._viewZoneId);\n\t\tif (this._contentWidget) {\n\t\t\tthis._editor.removeContentWidget(this._contentWidget);\n\t\t\tthis._contentWidget = undefined;\n\t\t}\n\t\tthis._isDisposed = true;\n\t}\n\n\tisDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\tisValid(): boolean {\n\t\treturn this._decorationIds.some((id, i) => {\n\t\t\tconst range = this._editor.getModel().getDecorationRange(id);\n\t\t\tconst symbol = this._data[i].symbol;\n\t\t\treturn !!(range && Range.isEmpty(symbol.range) === range.isEmpty());\n\t\t});\n\t}\n\n\tupdateCodeLensSymbols(data: readonly CodeLensItem[], helper: CodeLensHelper): void {\n\t\tthis._decorationIds.forEach(helper.removeDecoration, helper);\n\t\tthis._decorationIds = [];\n\t\tthis._data = data;\n\t\tthis._data.forEach((codeLensData, i) => {\n\t\t\thelper.addDecoration({\n\t\t\t\trange: codeLensData.symbol.range,\n\t\t\t\toptions: codeLensDecorationOptions\n\t\t\t}, id => this._decorationIds[i] = id);\n\t\t});\n\t}\n\n\tupdateHeight(height: number, viewZoneChangeAccessor: IViewZoneChangeAccessor): void {\n\t\tthis._viewZone.heightInPx = height;\n\t\tviewZoneChangeAccessor.layoutZone(this._viewZoneId);\n\t\tif (this._contentWidget) {\n\t\t\tthis._editor.layoutContentWidget(this._contentWidget);\n\t\t}\n\t}\n\n\tcomputeIfNecessary(model: ITextModel): readonly CodeLensItem[] | null {\n\t\tif (!this._viewZone.isVisible()) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Read editor current state\n\t\tfor (let i = 0; i < this._decorationIds.length; i++) {\n\t\t\tconst range = model.getDecorationRange(this._decorationIds[i]);\n\t\t\tif (range) {\n\t\t\t\tthis._data[i].symbol.range = range;\n\t\t\t}\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tupdateCommands(symbols: ReadonlyArray<CodeLens | undefined | null>): void {\n\t\tthis._createContentWidgetIfNecessary();\n\t\tthis._contentWidget!.withCommands(symbols, true);\n\n\t\tfor (let i = 0; i < this._data.length; i++) {\n\t\t\tconst resolved = symbols[i];\n\t\t\tif (resolved) {\n\t\t\t\tconst { symbol } = this._data[i];\n\t\t\t\tsymbol.command = resolved.command || symbol.command;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCommand(link: HTMLLinkElement): Command | undefined {\n\t\treturn this._contentWidget?.getCommand(link);\n\t}\n\n\tgetLineNumber(): number {\n\t\tconst range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n\t\tif (range) {\n\t\t\treturn range.startLineNumber;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tupdate(viewZoneChangeAccessor: IViewZoneChangeAccessor): void {\n\t\tif (this.isValid()) {\n\t\t\tconst range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n\t\t\tif (range) {\n\t\t\t\tthis._viewZone.afterLineNumber = range.startLineNumber - 1;\n\t\t\t\tviewZoneChangeAccessor.layoutZone(this._viewZoneId);\n\n\t\t\t\tif (this._contentWidget) {\n\t\t\t\t\tthis._contentWidget.updatePosition(range.startLineNumber);\n\t\t\t\t\tthis._editor.layoutContentWidget(this._contentWidget);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { renderLabelWithIcons } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { Constants } from '../../../../base/common/uint.js';\nimport './codelensWidget.css';\nimport { ContentWidgetPositionPreference, IActiveCodeEditor, IContentWidget, IContentWidgetPosition, IViewZone, IViewZoneChangeAccessor } from '../../../browser/editorBrowser.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelDecorationsChangeAccessor, IModelDeltaDecoration, ITextModel } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { CodeLens, Command } from '../../../common/languages.js';\nimport { CodeLensItem } from './codelens.js';\n\nclass CodeLensViewZone implements IViewZone {\n\n\treadonly suppressMouseDown: boolean;\n\treadonly domNode: HTMLElement;\n\n\tafterLineNumber: number;\n\t/**\n\t * We want that this view zone, which reserves space for a code lens appears\n\t * as close as possible to the next line, so we use a very large value here.\n\t */\n\treadonly afterColumn = Constants.MAX_SAFE_SMALL_INTEGER;\n\theightInPx: number;\n\n\tprivate _lastHeight?: number;\n\tprivate readonly _onHeight: () => void;\n\n\tconstructor(afterLineNumber: number, heightInPx: number, onHeight: () => void) {\n\t\tthis.afterLineNumber = afterLineNumber;\n\t\tthis.heightInPx = heightInPx;\n\n\t\tthis._onHeight = onHeight;\n\t\tthis.suppressMouseDown = true;\n\t\tthis.domNode = document.createElement('div');\n\t}\n\n\tonComputedHeight(height: number): void {\n\t\tif (this._lastHeight === undefined) {\n\t\t\tthis._lastHeight = height;\n\t\t} else if (this._lastHeight !== height) {\n\t\t\tthis._lastHeight = height;\n\t\t\tthis._onHeight();\n\t\t}\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this._lastHeight !== 0\n\t\t\t&& this.domNode.hasAttribute('monaco-visible-view-zone');\n\t}\n}\n\nclass CodeLensContentWidget implements IContentWidget {\n\n\tprivate static _idPool: number = 0;\n\n\t// Editor.IContentWidget.allowEditorOverflow\n\treadonly allowEditorOverflow: boolean = false;\n\treadonly suppressMouseDown: boolean = true;\n\n\tprivate readonly _id: string;\n\tprivate readonly _domNode: HTMLElement;\n\tprivate readonly _editor: IActiveCodeEditor;\n\tprivate readonly _commands = new Map<string, Command>();\n\n\tprivate _widgetPosition?: IContentWidgetPosition;\n\tprivate _isEmpty: boolean = true;\n\n\tconstructor(\n\t\teditor: IActiveCodeEditor,\n\t\tline: number,\n\t) {\n\t\tthis._editor = editor;\n\t\tthis._id = `codelens.widget-${(CodeLensContentWidget._idPool++)}`;\n\n\t\tthis.updatePosition(line);\n\n\t\tthis._domNode = document.createElement('span');\n\t\tthis._domNode.className = `codelens-decoration`;\n\t}\n\n\twithCommands(lenses: ReadonlyArray<CodeLens | undefined | null>, animate: boolean): void {\n\t\tthis._commands.clear();\n\n\t\tconst children: HTMLElement[] = [];\n\t\tlet hasSymbol = false;\n\t\tfor (let i = 0; i < lenses.length; i++) {\n\t\t\tconst lens = lenses[i];\n\t\t\tif (!lens) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\thasSymbol = true;\n\t\t\tif (lens.command) {\n\t\t\t\tconst title = renderLabelWithIcons(lens.command.title.trim());\n\t\t\t\tif (lens.command.id) {\n\t\t\t\t\tconst id = `c${(CodeLensContentWidget._idPool++)}`;\n\t\t\t\t\tchildren.push(dom.$('a', { id, title: lens.command.tooltip, role: 'button' }, ...title));\n\t\t\t\t\tthis._commands.set(id, lens.command);\n\t\t\t\t} else {\n\t\t\t\t\tchildren.push(dom.$('span', { title: lens.command.tooltip }, ...title));\n\t\t\t\t}\n\t\t\t\tif (i + 1 < lenses.length) {\n\t\t\t\t\tchildren.push(dom.$('span', undefined, '\\u00a0|\\u00a0'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!hasSymbol) {\n\t\t\t// symbols but no commands\n\t\t\tdom.reset(this._domNode, dom.$('span', undefined, 'no commands'));\n\n\t\t} else {\n\t\t\t// symbols and commands\n\t\t\tdom.reset(this._domNode, ...children);\n\t\t\tif (this._isEmpty && animate) {\n\t\t\t\tthis._domNode.classList.add('fadein');\n\t\t\t}\n\t\t\tthis._isEmpty = false;\n\t\t}\n\t}\n\n\tgetCommand(link: HTMLLinkElement): Command | undefined {\n\t\treturn link.parentElement === this._domNode\n\t\t\t? this._commands.get(link.id)\n\t\t\t: undefined;\n\t}\n\n\tgetId(): string {\n\t\treturn this._id;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tupdatePosition(line: number): void {\n\t\tconst column = this._editor.getModel().getLineFirstNonWhitespaceColumn(line);\n\t\tthis._widgetPosition = {\n\t\t\tposition: { lineNumber: line, column: column },\n\t\t\tpreference: [ContentWidgetPositionPreference.ABOVE]\n\t\t};\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn this._widgetPosition || null;\n\t}\n}\n\nexport interface IDecorationIdCallback {\n\t(decorationId: string): void;\n}\n\nexport class CodeLensHelper {\n\n\tprivate readonly _removeDecorations: string[];\n\tprivate readonly _addDecorations: IModelDeltaDecoration[];\n\tprivate readonly _addDecorationsCallbacks: IDecorationIdCallback[];\n\n\tconstructor() {\n\t\tthis._removeDecorations = [];\n\t\tthis._addDecorations = [];\n\t\tthis._addDecorationsCallbacks = [];\n\t}\n\n\taddDecoration(decoration: IModelDeltaDecoration, callback: IDecorationIdCallback): void {\n\t\tthis._addDecorations.push(decoration);\n\t\tthis._addDecorationsCallbacks.push(callback);\n\t}\n\n\tremoveDecoration(decorationId: string): void {\n\t\tthis._removeDecorations.push(decorationId);\n\t}\n\n\tcommit(changeAccessor: IModelDecorationsChangeAccessor): void {\n\t\tconst resultingDecorations = changeAccessor.deltaDecorations(this._removeDecorations, this._addDecorations);\n\t\tfor (let i = 0, len = resultingDecorations.length; i < len; i++) {\n\t\t\tthis._addDecorationsCallbacks[i](resultingDecorations[i]);\n\t\t}\n\t}\n}\n\nconst codeLensDecorationOptions = ModelDecorationOptions.register({\n\tcollapseOnReplaceEdit: true,\n\tdescription: 'codelens'\n});\n\nexport class CodeLensWidget {\n\n\tprivate readonly _editor: IActiveCodeEditor;\n\tprivate readonly _viewZone: CodeLensViewZone;\n\tprivate readonly _viewZoneId: string;\n\n\tprivate _contentWidget?: CodeLensContentWidget;\n\tprivate _decorationIds: string[];\n\tprivate _data: readonly CodeLensItem[];\n\tprivate _isDisposed: boolean = false;\n\n\tconstructor(\n\t\tdata: readonly CodeLensItem[],\n\t\teditor: IActiveCodeEditor,\n\t\thelper: CodeLensHelper,\n\t\tviewZoneChangeAccessor: IViewZoneChangeAccessor,\n\t\theightInPx: number,\n\t\tupdateCallback: () => void\n\t) {\n\t\tthis._editor = editor;\n\t\tthis._data = data;\n\n\t\t// create combined range, track all ranges with decorations,\n\t\t// check if there is already something to render\n\t\tthis._decorationIds = [];\n\t\tlet range: Range | undefined;\n\t\tconst lenses: CodeLens[] = [];\n\n\t\tthis._data.forEach((codeLensData, i) => {\n\n\t\t\tif (codeLensData.symbol.command) {\n\t\t\t\tlenses.push(codeLensData.symbol);\n\t\t\t}\n\n\t\t\thelper.addDecoration({\n\t\t\t\trange: codeLensData.symbol.range,\n\t\t\t\toptions: codeLensDecorationOptions\n\t\t\t}, id => this._decorationIds[i] = id);\n\n\t\t\t// the range contains all lenses on this line\n\t\t\tif (!range) {\n\t\t\t\trange = Range.lift(codeLensData.symbol.range);\n\t\t\t} else {\n\t\t\t\trange = Range.plusRange(range, codeLensData.symbol.range);\n\t\t\t}\n\t\t});\n\n\t\tthis._viewZone = new CodeLensViewZone(range!.startLineNumber - 1, heightInPx, updateCallback);\n\t\tthis._viewZoneId = viewZoneChangeAccessor.addZone(this._viewZone);\n\n\t\tif (lenses.length > 0) {\n\t\t\tthis._createContentWidgetIfNecessary();\n\t\t\tthis._contentWidget!.withCommands(lenses, false);\n\t\t}\n\t}\n\n\tprivate _createContentWidgetIfNecessary(): void {\n\t\tif (!this._contentWidget) {\n\t\t\tthis._contentWidget = new CodeLensContentWidget(this._editor, this._viewZone.afterLineNumber + 1);\n\t\t\tthis._editor.addContentWidget(this._contentWidget);\n\t\t} else {\n\t\t\tthis._editor.layoutContentWidget(this._contentWidget);\n\t\t}\n\t}\n\n\tdispose(helper: CodeLensHelper, viewZoneChangeAccessor?: IViewZoneChangeAccessor): void {\n\t\tthis._decorationIds.forEach(helper.removeDecoration, helper);\n\t\tthis._decorationIds = [];\n\t\tviewZoneChangeAccessor?.removeZone(this._viewZoneId);\n\t\tif (this._contentWidget) {\n\t\t\tthis._editor.removeContentWidget(this._contentWidget);\n\t\t\tthis._contentWidget = undefined;\n\t\t}\n\t\tthis._isDisposed = true;\n\t}\n\n\tisDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\tisValid(): boolean {\n\t\treturn this._decorationIds.some((id, i) => {\n\t\t\tconst range = this._editor.getModel().getDecorationRange(id);\n\t\t\tconst symbol = this._data[i].symbol;\n\t\t\treturn !!(range && Range.isEmpty(symbol.range) === range.isEmpty());\n\t\t});\n\t}\n\n\tupdateCodeLensSymbols(data: readonly CodeLensItem[], helper: CodeLensHelper): void {\n\t\tthis._decorationIds.forEach(helper.removeDecoration, helper);\n\t\tthis._decorationIds = [];\n\t\tthis._data = data;\n\t\tthis._data.forEach((codeLensData, i) => {\n\t\t\thelper.addDecoration({\n\t\t\t\trange: codeLensData.symbol.range,\n\t\t\t\toptions: codeLensDecorationOptions\n\t\t\t}, id => this._decorationIds[i] = id);\n\t\t});\n\t}\n\n\tupdateHeight(height: number, viewZoneChangeAccessor: IViewZoneChangeAccessor): void {\n\t\tthis._viewZone.heightInPx = height;\n\t\tviewZoneChangeAccessor.layoutZone(this._viewZoneId);\n\t\tif (this._contentWidget) {\n\t\t\tthis._editor.layoutContentWidget(this._contentWidget);\n\t\t}\n\t}\n\n\tcomputeIfNecessary(model: ITextModel): readonly CodeLensItem[] | null {\n\t\tif (!this._viewZone.isVisible()) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Read editor current state\n\t\tfor (let i = 0; i < this._decorationIds.length; i++) {\n\t\t\tconst range = model.getDecorationRange(this._decorationIds[i]);\n\t\t\tif (range) {\n\t\t\t\tthis._data[i].symbol.range = range;\n\t\t\t}\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tupdateCommands(symbols: ReadonlyArray<CodeLens | undefined | null>): void {\n\t\tthis._createContentWidgetIfNecessary();\n\t\tthis._contentWidget!.withCommands(symbols, true);\n\n\t\tfor (let i = 0; i < this._data.length; i++) {\n\t\t\tconst resolved = symbols[i];\n\t\t\tif (resolved) {\n\t\t\t\tconst { symbol } = this._data[i];\n\t\t\t\tsymbol.command = resolved.command || symbol.command;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCommand(link: HTMLLinkElement): Command | undefined {\n\t\treturn this._contentWidget?.getCommand(link);\n\t}\n\n\tgetLineNumber(): number {\n\t\tconst range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n\t\tif (range) {\n\t\t\treturn range.startLineNumber;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tupdate(viewZoneChangeAccessor: IViewZoneChangeAccessor): void {\n\t\tif (this.isValid()) {\n\t\t\tconst range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n\t\t\tif (range) {\n\t\t\t\tthis._viewZone.afterLineNumber = range.startLineNumber - 1;\n\t\t\t\tviewZoneChangeAccessor.layoutZone(this._viewZoneId);\n\n\t\t\t\tif (this._contentWidget) {\n\t\t\t\t\tthis._contentWidget.updatePosition(range.startLineNumber);\n\t\t\t\t\tthis._editor.layoutContentWidget(this._contentWidget);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"]}