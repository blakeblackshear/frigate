{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/colorPicker/browser/colorPickerWidget.ts","vs/editor/contrib/colorPicker/browser/colorPickerWidget.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,OAAO,mBAAmB,CAAC;AAC3B,OAAO,EAAE,UAAU,EAAE,MAAM,wCAAwC,CAAC;AACpE,OAAO,KAAK,GAAG,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,MAAM,EAAE,MAAM,uCAAuC,CAAC;AAI/D,OAAO,EAAE,eAAe,EAAE,MAAM,uCAAuC,CAAC;AACxE,OAAO,EAAE,iBAAiB,EAAE,MAAM,yCAAyC,CAAC;AAG5E,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAEhB,MAAM,OAAO,iBAAkB,SAAQ,MAAM;IAM5C,YAAY,SAAe,EAAW,KAAuB,EAAU,UAAkB,EAAE,YAA2B,EAAE,IAA2B;QAClJ,KAAK,EAAE,CAAC;QAD6B,UAAK,GAAL,KAAK,CAAkB;QAAU,eAAU,GAAV,UAAU,CAAQ;QAGxF,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAElG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,qBAAqB,CAAC,CAAC;QACzC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;QACnG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;IACnG,CAAC;IAED,MAAM;QACL,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;IAED,IAAI,OAAO;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;CACD","file":"colorPickerWidget.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './colorPicker.css';\nimport { PixelRatio } from '../../../../base/browser/pixelRatio.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { ColorPickerModel } from './colorPickerModel.js';\nimport { IEditorHoverColorPickerWidget } from '../../hover/browser/hoverTypes.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ColorPickerBody } from './colorPickerParts/colorPickerBody.js';\nimport { ColorPickerHeader } from './colorPickerParts/colorPickerHeader.js';\nimport { ColorPickerWidgetType } from './colorPickerParticipantUtils.js';\n\nconst $ = dom.$;\n\nexport class ColorPickerWidget extends Widget implements IEditorHoverColorPickerWidget {\n\tprivate readonly _domNode: HTMLElement;\n\n\tbody: ColorPickerBody;\n\theader: ColorPickerHeader;\n\n\tconstructor(container: Node, readonly model: ColorPickerModel, private pixelRatio: number, themeService: IThemeService, type: ColorPickerWidgetType) {\n\t\tsuper();\n\n\t\tthis._register(PixelRatio.getInstance(dom.getWindow(container)).onDidChange(() => this.layout()));\n\n\t\tthis._domNode = $('.colorpicker-widget');\n\t\tcontainer.appendChild(this._domNode);\n\n\t\tthis.header = this._register(new ColorPickerHeader(this._domNode, this.model, themeService, type));\n\t\tthis.body = this._register(new ColorPickerBody(this._domNode, this.model, this.pixelRatio, type));\n\t}\n\n\tlayout(): void {\n\t\tthis.body.layout();\n\t}\n\n\tget domNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './colorPicker.css';\nimport { PixelRatio } from '../../../../base/browser/pixelRatio.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { ColorPickerModel } from './colorPickerModel.js';\nimport { IEditorHoverColorPickerWidget } from '../../hover/browser/hoverTypes.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ColorPickerBody } from './colorPickerParts/colorPickerBody.js';\nimport { ColorPickerHeader } from './colorPickerParts/colorPickerHeader.js';\nimport { ColorPickerWidgetType } from './colorPickerParticipantUtils.js';\n\nconst $ = dom.$;\n\nexport class ColorPickerWidget extends Widget implements IEditorHoverColorPickerWidget {\n\tprivate readonly _domNode: HTMLElement;\n\n\tbody: ColorPickerBody;\n\theader: ColorPickerHeader;\n\n\tconstructor(container: Node, readonly model: ColorPickerModel, private pixelRatio: number, themeService: IThemeService, type: ColorPickerWidgetType) {\n\t\tsuper();\n\n\t\tthis._register(PixelRatio.getInstance(dom.getWindow(container)).onDidChange(() => this.layout()));\n\n\t\tthis._domNode = $('.colorpicker-widget');\n\t\tcontainer.appendChild(this._domNode);\n\n\t\tthis.header = this._register(new ColorPickerHeader(this._domNode, this.model, themeService, type));\n\t\tthis.body = this._register(new ColorPickerBody(this._domNode, this.model, this.pixelRatio, type));\n\t}\n\n\tlayout(): void {\n\t\tthis.body.layout();\n\t}\n\n\tget domNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n}\n"]}