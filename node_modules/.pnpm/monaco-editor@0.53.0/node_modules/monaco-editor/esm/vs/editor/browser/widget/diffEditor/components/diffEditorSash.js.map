{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/widget/diffEditor/components/diffEditorSash.ts","vs/editor/browser/widget/diffEditor/components/diffEditorSash.ts"],"names":[],"mappings":"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","file":"diffEditorSash.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IBoundarySashes, ISashEvent, Orientation, Sash, SashState } from '../../../../../base/browser/ui/sash/sash.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, IReader, ISettableObservable, autorun, derivedWithSetter, observableValue } from '../../../../../base/common/observable.js';\nimport { DiffEditorOptions } from '../diffEditorOptions.js';\n\nexport class SashLayout {\n\tpublic readonly sashLeft = derivedWithSetter(this, reader => {\n\t\tconst ratio = this._sashRatio.read(reader) ?? this._options.splitViewDefaultRatio.read(reader);\n\t\treturn this._computeSashLeft(ratio, reader);\n\t}, (value, tx) => {\n\t\tconst contentWidth = this.dimensions.width.get();\n\t\tthis._sashRatio.set(value / contentWidth, tx);\n\t});\n\n\tprivate readonly _sashRatio = observableValue<number | undefined>(this, undefined);\n\n\tpublic resetSash(): void {\n\t\tthis._sashRatio.set(undefined, undefined);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _options: DiffEditorOptions,\n\t\tpublic readonly dimensions: { height: IObservable<number>; width: IObservable<number> },\n\t) {\n\t}\n\n\t/** @pure */\n\tprivate _computeSashLeft(desiredRatio: number, reader: IReader | undefined): number {\n\t\tconst contentWidth = this.dimensions.width.read(reader);\n\t\tconst midPoint = Math.floor(this._options.splitViewDefaultRatio.read(reader) * contentWidth);\n\t\tconst sashLeft = this._options.enableSplitViewResizing.read(reader) ? Math.floor(desiredRatio * contentWidth) : midPoint;\n\n\t\tconst MINIMUM_EDITOR_WIDTH = 100;\n\t\tif (contentWidth <= MINIMUM_EDITOR_WIDTH * 2) {\n\t\t\treturn midPoint;\n\t\t}\n\t\tif (sashLeft < MINIMUM_EDITOR_WIDTH) {\n\t\t\treturn MINIMUM_EDITOR_WIDTH;\n\t\t}\n\t\tif (sashLeft > contentWidth - MINIMUM_EDITOR_WIDTH) {\n\t\t\treturn contentWidth - MINIMUM_EDITOR_WIDTH;\n\t\t}\n\t\treturn sashLeft;\n\t}\n}\n\nexport class DiffEditorSash extends Disposable {\n\tprivate readonly _sash;\n\n\tprivate _startSashPosition: number | undefined;\n\n\tconstructor(\n\t\tprivate readonly _domNode: HTMLElement,\n\t\tprivate readonly _dimensions: { height: IObservable<number>; width: IObservable<number> },\n\t\tprivate readonly _enabled: IObservable<boolean>,\n\t\tprivate readonly _boundarySashes: IObservable<IBoundarySashes | undefined>,\n\t\tpublic readonly sashLeft: ISettableObservable<number>,\n\t\tprivate readonly _resetSash: () => void,\n\t) {\n\t\tsuper();\n\t\tthis._sash = this._register(new Sash(this._domNode, {\n\t\t\tgetVerticalSashTop: (_sash: Sash): number => 0,\n\t\t\tgetVerticalSashLeft: (_sash: Sash): number => this.sashLeft.get(),\n\t\t\tgetVerticalSashHeight: (_sash: Sash): number => this._dimensions.height.get(),\n\t\t}, { orientation: Orientation.VERTICAL }));\n\t\tthis._startSashPosition = undefined;\n\n\t\tthis._register(this._sash.onDidStart(() => {\n\t\t\tthis._startSashPosition = this.sashLeft.get();\n\t\t}));\n\t\tthis._register(this._sash.onDidChange((e: ISashEvent) => {\n\t\t\tthis.sashLeft.set(this._startSashPosition! + (e.currentX - e.startX), undefined);\n\t\t}));\n\t\tthis._register(this._sash.onDidEnd(() => this._sash.layout()));\n\t\tthis._register(this._sash.onDidReset(() => this._resetSash()));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst sashes = this._boundarySashes.read(reader);\n\t\t\tif (sashes) {\n\t\t\t\tthis._sash.orthogonalEndSash = sashes.bottom;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description DiffEditorSash.layoutSash */\n\t\t\tconst enabled = this._enabled.read(reader);\n\t\t\tthis._sash.state = enabled ? SashState.Enabled : SashState.Disabled;\n\t\t\tthis.sashLeft.read(reader);\n\t\t\tthis._dimensions.height.read(reader);\n\t\t\tthis._sash.layout();\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IBoundarySashes, ISashEvent, Orientation, Sash, SashState } from '../../../../../base/browser/ui/sash/sash.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, IReader, ISettableObservable, autorun, derivedWithSetter, observableValue } from '../../../../../base/common/observable.js';\nimport { DiffEditorOptions } from '../diffEditorOptions.js';\n\nexport class SashLayout {\n\tpublic readonly sashLeft = derivedWithSetter(this, reader => {\n\t\tconst ratio = this._sashRatio.read(reader) ?? this._options.splitViewDefaultRatio.read(reader);\n\t\treturn this._computeSashLeft(ratio, reader);\n\t}, (value, tx) => {\n\t\tconst contentWidth = this.dimensions.width.get();\n\t\tthis._sashRatio.set(value / contentWidth, tx);\n\t});\n\n\tprivate readonly _sashRatio = observableValue<number | undefined>(this, undefined);\n\n\tpublic resetSash(): void {\n\t\tthis._sashRatio.set(undefined, undefined);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _options: DiffEditorOptions,\n\t\tpublic readonly dimensions: { height: IObservable<number>; width: IObservable<number> },\n\t) {\n\t}\n\n\t/** @pure */\n\tprivate _computeSashLeft(desiredRatio: number, reader: IReader | undefined): number {\n\t\tconst contentWidth = this.dimensions.width.read(reader);\n\t\tconst midPoint = Math.floor(this._options.splitViewDefaultRatio.read(reader) * contentWidth);\n\t\tconst sashLeft = this._options.enableSplitViewResizing.read(reader) ? Math.floor(desiredRatio * contentWidth) : midPoint;\n\n\t\tconst MINIMUM_EDITOR_WIDTH = 100;\n\t\tif (contentWidth <= MINIMUM_EDITOR_WIDTH * 2) {\n\t\t\treturn midPoint;\n\t\t}\n\t\tif (sashLeft < MINIMUM_EDITOR_WIDTH) {\n\t\t\treturn MINIMUM_EDITOR_WIDTH;\n\t\t}\n\t\tif (sashLeft > contentWidth - MINIMUM_EDITOR_WIDTH) {\n\t\t\treturn contentWidth - MINIMUM_EDITOR_WIDTH;\n\t\t}\n\t\treturn sashLeft;\n\t}\n}\n\nexport class DiffEditorSash extends Disposable {\n\tprivate readonly _sash;\n\n\tprivate _startSashPosition: number | undefined;\n\n\tconstructor(\n\t\tprivate readonly _domNode: HTMLElement,\n\t\tprivate readonly _dimensions: { height: IObservable<number>; width: IObservable<number> },\n\t\tprivate readonly _enabled: IObservable<boolean>,\n\t\tprivate readonly _boundarySashes: IObservable<IBoundarySashes | undefined>,\n\t\tpublic readonly sashLeft: ISettableObservable<number>,\n\t\tprivate readonly _resetSash: () => void,\n\t) {\n\t\tsuper();\n\t\tthis._sash = this._register(new Sash(this._domNode, {\n\t\t\tgetVerticalSashTop: (_sash: Sash): number => 0,\n\t\t\tgetVerticalSashLeft: (_sash: Sash): number => this.sashLeft.get(),\n\t\t\tgetVerticalSashHeight: (_sash: Sash): number => this._dimensions.height.get(),\n\t\t}, { orientation: Orientation.VERTICAL }));\n\t\tthis._startSashPosition = undefined;\n\n\t\tthis._register(this._sash.onDidStart(() => {\n\t\t\tthis._startSashPosition = this.sashLeft.get();\n\t\t}));\n\t\tthis._register(this._sash.onDidChange((e: ISashEvent) => {\n\t\t\tthis.sashLeft.set(this._startSashPosition! + (e.currentX - e.startX), undefined);\n\t\t}));\n\t\tthis._register(this._sash.onDidEnd(() => this._sash.layout()));\n\t\tthis._register(this._sash.onDidReset(() => this._resetSash()));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst sashes = this._boundarySashes.read(reader);\n\t\t\tif (sashes) {\n\t\t\t\tthis._sash.orthogonalEndSash = sashes.bottom;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description DiffEditorSash.layoutSash */\n\t\t\tconst enabled = this._enabled.read(reader);\n\t\t\tthis._sash.state = enabled ? SashState.Enabled : SashState.Disabled;\n\t\t\tthis.sashLeft.read(reader);\n\t\t\tthis._dimensions.height.read(reader);\n\t\t\tthis._sash.layout();\n\t\t}));\n\t}\n}\n"]}