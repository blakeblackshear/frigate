{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/wordHighlighter/browser/textualHighlightProvider.ts","vs/editor/contrib/wordHighlighter/browser/textualHighlightProvider.ts"],"names":[],"mappings":"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","file":"textualHighlightProvider.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { USUAL_WORD_SEPARATORS } from '../../../common/core/wordHelper.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DocumentHighlight, DocumentHighlightKind, DocumentHighlightProvider, MultiDocumentHighlightProvider, ProviderResult } from '../../../common/languages.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { Position } from '../../../common/core/position.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { LanguageFilter } from '../../../common/languageSelector.js';\n\n\nclass TextualDocumentHighlightProvider implements DocumentHighlightProvider, MultiDocumentHighlightProvider {\n\n\tselector: LanguageFilter = { language: '*' };\n\n\tprovideDocumentHighlights(model: ITextModel, position: Position, token: CancellationToken): ProviderResult<DocumentHighlight[]> {\n\t\tconst result: DocumentHighlight[] = [];\n\n\t\tconst word = model.getWordAtPosition({\n\t\t\tlineNumber: position.lineNumber,\n\t\t\tcolumn: position.column\n\t\t});\n\n\t\tif (!word) {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\n\t\tif (model.isDisposed()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst matches = model.findMatches(word.word, true, false, true, USUAL_WORD_SEPARATORS, false);\n\t\treturn matches.map(m => ({\n\t\t\trange: m.range,\n\t\t\tkind: DocumentHighlightKind.Text\n\t\t}));\n\t}\n\n\tprovideMultiDocumentHighlights(primaryModel: ITextModel, position: Position, otherModels: ITextModel[], token: CancellationToken): ProviderResult<ResourceMap<DocumentHighlight[]>> {\n\n\t\tconst result = new ResourceMap<DocumentHighlight[]>();\n\n\t\tconst word = primaryModel.getWordAtPosition({\n\t\t\tlineNumber: position.lineNumber,\n\t\t\tcolumn: position.column\n\t\t});\n\t\tif (!word) {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\n\n\t\tfor (const model of [primaryModel, ...otherModels]) {\n\t\t\tif (model.isDisposed()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst matches = model.findMatches(word.word, true, false, true, USUAL_WORD_SEPARATORS, false);\n\t\t\tconst highlights = matches.map(m => ({\n\t\t\t\trange: m.range,\n\t\t\t\tkind: DocumentHighlightKind.Text\n\t\t\t}));\n\n\t\t\tif (highlights) {\n\t\t\t\tresult.set(model.uri, highlights);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n}\n\nexport class TextualMultiDocumentHighlightFeature extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\t\tthis._register(languageFeaturesService.documentHighlightProvider.register('*', new TextualDocumentHighlightProvider()));\n\t\tthis._register(languageFeaturesService.multiDocumentHighlightProvider.register('*', new TextualDocumentHighlightProvider()));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { USUAL_WORD_SEPARATORS } from '../../../common/core/wordHelper.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DocumentHighlight, DocumentHighlightKind, DocumentHighlightProvider, MultiDocumentHighlightProvider, ProviderResult } from '../../../common/languages.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { Position } from '../../../common/core/position.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { LanguageFilter } from '../../../common/languageSelector.js';\n\n\nclass TextualDocumentHighlightProvider implements DocumentHighlightProvider, MultiDocumentHighlightProvider {\n\n\tselector: LanguageFilter = { language: '*' };\n\n\tprovideDocumentHighlights(model: ITextModel, position: Position, token: CancellationToken): ProviderResult<DocumentHighlight[]> {\n\t\tconst result: DocumentHighlight[] = [];\n\n\t\tconst word = model.getWordAtPosition({\n\t\t\tlineNumber: position.lineNumber,\n\t\t\tcolumn: position.column\n\t\t});\n\n\t\tif (!word) {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\n\t\tif (model.isDisposed()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst matches = model.findMatches(word.word, true, false, true, USUAL_WORD_SEPARATORS, false);\n\t\treturn matches.map(m => ({\n\t\t\trange: m.range,\n\t\t\tkind: DocumentHighlightKind.Text\n\t\t}));\n\t}\n\n\tprovideMultiDocumentHighlights(primaryModel: ITextModel, position: Position, otherModels: ITextModel[], token: CancellationToken): ProviderResult<ResourceMap<DocumentHighlight[]>> {\n\n\t\tconst result = new ResourceMap<DocumentHighlight[]>();\n\n\t\tconst word = primaryModel.getWordAtPosition({\n\t\t\tlineNumber: position.lineNumber,\n\t\t\tcolumn: position.column\n\t\t});\n\t\tif (!word) {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\n\n\t\tfor (const model of [primaryModel, ...otherModels]) {\n\t\t\tif (model.isDisposed()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst matches = model.findMatches(word.word, true, false, true, USUAL_WORD_SEPARATORS, false);\n\t\t\tconst highlights = matches.map(m => ({\n\t\t\t\trange: m.range,\n\t\t\t\tkind: DocumentHighlightKind.Text\n\t\t\t}));\n\n\t\t\tif (highlights) {\n\t\t\t\tresult.set(model.uri, highlights);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n}\n\nexport class TextualMultiDocumentHighlightFeature extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\t\tthis._register(languageFeaturesService.documentHighlightProvider.register('*', new TextualDocumentHighlightProvider()));\n\t\tthis._register(languageFeaturesService.multiDocumentHighlightProvider.register('*', new TextualDocumentHighlightProvider()));\n\t}\n}\n"]}