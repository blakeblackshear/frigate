{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/editContext/native/screenReaderUtils.ts","vs/editor/browser/controller/editContext/native/screenReaderUtils.ts"],"names":[],"mappings":"AAAA;;;gGAGgG","file":"screenReaderUtils.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IComputedEditorOptions } from '../../../../common/config/editorOptions.js';\nimport { Selection } from '../../../../common/core/selection.js';\n\nexport interface IScreenReaderContent {\n\n\tdispose(): void;\n\n\t/**\n\t * Handle screen reader content before cutting the content\n\t */\n\tonWillCut(): void;\n\n\t/**\n\t * Handle screen reader content before pasting the content\n\t */\n\tonWillPaste(): void;\n\n\t/**\n\t * Handle focus changes\n\t */\n\tonFocusChange(newFocusValue: boolean): void;\n\n\t/**\n\t * Handle configuration changes\n\t */\n\tonConfigurationChanged(options: IComputedEditorOptions): void;\n\n\t/**\n\t * Update the screen reader content given the selection. It will update the content and set the range within the screen reader content if needed.\n\t */\n\tupdateScreenReaderContent(primarySelection: Selection): void;\n\n\t/**\n\t * Update the scroll top value of the screen reader content\n\t */\n\tupdateScrollTop(primarySelection: Selection): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IComputedEditorOptions } from '../../../../common/config/editorOptions.js';\nimport { Selection } from '../../../../common/core/selection.js';\n\nexport interface IScreenReaderContent {\n\n\tdispose(): void;\n\n\t/**\n\t * Handle screen reader content before cutting the content\n\t */\n\tonWillCut(): void;\n\n\t/**\n\t * Handle screen reader content before pasting the content\n\t */\n\tonWillPaste(): void;\n\n\t/**\n\t * Handle focus changes\n\t */\n\tonFocusChange(newFocusValue: boolean): void;\n\n\t/**\n\t * Handle configuration changes\n\t */\n\tonConfigurationChanged(options: IComputedEditorOptions): void;\n\n\t/**\n\t * Update the screen reader content given the selection. It will update the content and set the range within the screen reader content if needed.\n\t */\n\tupdateScreenReaderContent(primarySelection: Selection): void;\n\n\t/**\n\t * Update the scroll top value of the screen reader content\n\t */\n\tupdateScrollTop(primarySelection: Selection): void;\n}\n"]}