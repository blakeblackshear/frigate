{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineProgress/browser/inlineProgress.ts","vs/editor/contrib/inlineProgress/browser/inlineProgress.ts"],"names":[],"mappings":"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","file":"inlineProgress.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { disposableTimeout } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { noBreakWhitespace } from '../../../../base/common/strings.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineProgressWidget.css';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from '../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IPosition } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IEditorDecorationsCollection } from '../../../common/editorCommon.js';\nimport { TrackedRangeStickiness } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\n\nconst inlineProgressDecoration = ModelDecorationOptions.register({\n\tdescription: 'inline-progress-widget',\n\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\tshowIfCollapsed: true,\n\tafter: {\n\t\tcontent: noBreakWhitespace,\n\t\tinlineClassName: 'inline-editor-progress-decoration',\n\t\tinlineClassNameAffectsLetterSpacing: true,\n\t}\n});\n\n\nclass InlineProgressWidget extends Disposable implements IContentWidget {\n\tprivate static readonly baseId = 'editor.widget.inlineProgressWidget';\n\n\tallowEditorOverflow = false;\n\tsuppressMouseDown = true;\n\n\tprivate domNode!: HTMLElement;\n\n\tconstructor(\n\t\tprivate readonly typeId: string,\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly range: Range,\n\t\ttitle: string,\n\t\tprivate readonly delegate: InlineProgressDelegate,\n\t) {\n\t\tsuper();\n\n\t\tthis.create(title);\n\n\t\tthis.editor.addContentWidget(this);\n\t\tthis.editor.layoutContentWidget(this);\n\t}\n\n\tprivate create(title: string): void {\n\t\tthis.domNode = dom.$('.inline-progress-widget');\n\t\tthis.domNode.role = 'button';\n\t\tthis.domNode.title = title;\n\n\t\tconst iconElement = dom.$('span.icon');\n\t\tthis.domNode.append(iconElement);\n\n\t\ticonElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.loading), 'codicon-modifier-spin');\n\n\t\tconst updateSize = () => {\n\t\t\tconst lineHeight = this.editor.getOption(EditorOption.lineHeight);\n\t\t\tthis.domNode.style.height = `${lineHeight}px`;\n\t\t\tthis.domNode.style.width = `${Math.ceil(0.8 * lineHeight)}px`;\n\t\t};\n\t\tupdateSize();\n\n\t\tthis._register(this.editor.onDidChangeConfiguration(c => {\n\t\t\tif (c.hasChanged(EditorOption.fontSize) || c.hasChanged(EditorOption.lineHeight)) {\n\t\t\t\tupdateSize();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, e => {\n\t\t\tthis.delegate.cancel();\n\t\t}));\n\t}\n\n\tgetId(): string {\n\t\treturn InlineProgressWidget.baseId + '.' + this.typeId;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn {\n\t\t\tposition: { lineNumber: this.range.startLineNumber, column: this.range.startColumn },\n\t\t\tpreference: [ContentWidgetPositionPreference.EXACT]\n\t\t};\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.editor.removeContentWidget(this);\n\t}\n}\n\ninterface InlineProgressDelegate {\n\tcancel(): void;\n}\n\nexport class InlineProgressManager extends Disposable {\n\n\t/** Delay before showing the progress widget */\n\tprivate readonly _showDelay = 500; // ms\n\tprivate readonly _showPromise = this._register(new MutableDisposable());\n\n\tprivate readonly _currentDecorations: IEditorDecorationsCollection;\n\tprivate readonly _currentWidget = this._register(new MutableDisposable<InlineProgressWidget>());\n\n\tprivate _operationIdPool = 0;\n\tprivate _currentOperation?: number;\n\n\tconstructor(\n\t\tprivate readonly id: string,\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._currentDecorations = _editor.createDecorationsCollection();\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._currentDecorations.clear();\n\t}\n\n\tpublic async showWhile<R>(position: IPosition, title: string, promise: Promise<R>, delegate: InlineProgressDelegate, delayOverride?: number): Promise<R> {\n\t\tconst operationId = this._operationIdPool++;\n\t\tthis._currentOperation = operationId;\n\n\t\tthis.clear();\n\n\t\tthis._showPromise.value = disposableTimeout(() => {\n\t\t\tconst range = Range.fromPositions(position);\n\t\t\tconst decorationIds = this._currentDecorations.set([{\n\t\t\t\trange: range,\n\t\t\t\toptions: inlineProgressDecoration,\n\t\t\t}]);\n\n\t\t\tif (decorationIds.length > 0) {\n\t\t\t\tthis._currentWidget.value = this._instantiationService.createInstance(InlineProgressWidget, this.id, this._editor, range, title, delegate);\n\t\t\t}\n\t\t}, delayOverride ?? this._showDelay);\n\n\t\ttry {\n\t\t\treturn await promise;\n\t\t} finally {\n\t\t\tif (this._currentOperation === operationId) {\n\t\t\t\tthis.clear();\n\t\t\t\tthis._currentOperation = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate clear() {\n\t\tthis._showPromise.clear();\n\t\tthis._currentDecorations.clear();\n\t\tthis._currentWidget.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { disposableTimeout } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { noBreakWhitespace } from '../../../../base/common/strings.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineProgressWidget.css';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from '../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IPosition } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IEditorDecorationsCollection } from '../../../common/editorCommon.js';\nimport { TrackedRangeStickiness } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\n\nconst inlineProgressDecoration = ModelDecorationOptions.register({\n\tdescription: 'inline-progress-widget',\n\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\tshowIfCollapsed: true,\n\tafter: {\n\t\tcontent: noBreakWhitespace,\n\t\tinlineClassName: 'inline-editor-progress-decoration',\n\t\tinlineClassNameAffectsLetterSpacing: true,\n\t}\n});\n\n\nclass InlineProgressWidget extends Disposable implements IContentWidget {\n\tprivate static readonly baseId = 'editor.widget.inlineProgressWidget';\n\n\tallowEditorOverflow = false;\n\tsuppressMouseDown = true;\n\n\tprivate domNode!: HTMLElement;\n\n\tconstructor(\n\t\tprivate readonly typeId: string,\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly range: Range,\n\t\ttitle: string,\n\t\tprivate readonly delegate: InlineProgressDelegate,\n\t) {\n\t\tsuper();\n\n\t\tthis.create(title);\n\n\t\tthis.editor.addContentWidget(this);\n\t\tthis.editor.layoutContentWidget(this);\n\t}\n\n\tprivate create(title: string): void {\n\t\tthis.domNode = dom.$('.inline-progress-widget');\n\t\tthis.domNode.role = 'button';\n\t\tthis.domNode.title = title;\n\n\t\tconst iconElement = dom.$('span.icon');\n\t\tthis.domNode.append(iconElement);\n\n\t\ticonElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.loading), 'codicon-modifier-spin');\n\n\t\tconst updateSize = () => {\n\t\t\tconst lineHeight = this.editor.getOption(EditorOption.lineHeight);\n\t\t\tthis.domNode.style.height = `${lineHeight}px`;\n\t\t\tthis.domNode.style.width = `${Math.ceil(0.8 * lineHeight)}px`;\n\t\t};\n\t\tupdateSize();\n\n\t\tthis._register(this.editor.onDidChangeConfiguration(c => {\n\t\t\tif (c.hasChanged(EditorOption.fontSize) || c.hasChanged(EditorOption.lineHeight)) {\n\t\t\t\tupdateSize();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, e => {\n\t\t\tthis.delegate.cancel();\n\t\t}));\n\t}\n\n\tgetId(): string {\n\t\treturn InlineProgressWidget.baseId + '.' + this.typeId;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn {\n\t\t\tposition: { lineNumber: this.range.startLineNumber, column: this.range.startColumn },\n\t\t\tpreference: [ContentWidgetPositionPreference.EXACT]\n\t\t};\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.editor.removeContentWidget(this);\n\t}\n}\n\ninterface InlineProgressDelegate {\n\tcancel(): void;\n}\n\nexport class InlineProgressManager extends Disposable {\n\n\t/** Delay before showing the progress widget */\n\tprivate readonly _showDelay = 500; // ms\n\tprivate readonly _showPromise = this._register(new MutableDisposable());\n\n\tprivate readonly _currentDecorations: IEditorDecorationsCollection;\n\tprivate readonly _currentWidget = this._register(new MutableDisposable<InlineProgressWidget>());\n\n\tprivate _operationIdPool = 0;\n\tprivate _currentOperation?: number;\n\n\tconstructor(\n\t\tprivate readonly id: string,\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._currentDecorations = _editor.createDecorationsCollection();\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._currentDecorations.clear();\n\t}\n\n\tpublic async showWhile<R>(position: IPosition, title: string, promise: Promise<R>, delegate: InlineProgressDelegate, delayOverride?: number): Promise<R> {\n\t\tconst operationId = this._operationIdPool++;\n\t\tthis._currentOperation = operationId;\n\n\t\tthis.clear();\n\n\t\tthis._showPromise.value = disposableTimeout(() => {\n\t\t\tconst range = Range.fromPositions(position);\n\t\t\tconst decorationIds = this._currentDecorations.set([{\n\t\t\t\trange: range,\n\t\t\t\toptions: inlineProgressDecoration,\n\t\t\t}]);\n\n\t\t\tif (decorationIds.length > 0) {\n\t\t\t\tthis._currentWidget.value = this._instantiationService.createInstance(InlineProgressWidget, this.id, this._editor, range, title, delegate);\n\t\t\t}\n\t\t}, delayOverride ?? this._showDelay);\n\n\t\ttry {\n\t\t\treturn await promise;\n\t\t} finally {\n\t\t\tif (this._currentOperation === operationId) {\n\t\t\t\tthis.clear();\n\t\t\t\tthis._currentOperation = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate clear() {\n\t\tthis._showPromise.clear();\n\t\tthis._currentDecorations.clear();\n\t\tthis._currentWidget.clear();\n\t}\n}\n"]}