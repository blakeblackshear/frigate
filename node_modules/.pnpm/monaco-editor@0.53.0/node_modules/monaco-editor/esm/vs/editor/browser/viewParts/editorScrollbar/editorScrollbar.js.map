{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.ts","vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.ts"],"names":[],"mappings":"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","file":"editorScrollbar.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IOverviewRulerLayoutInfo, SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { ScrollableElementChangeOptions, ScrollableElementCreationOptions } from '../../../../base/browser/ui/scrollbar/scrollableElementOptions.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { INewScrollPosition, ScrollType } from '../../../common/editorCommon.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IMouseWheelEvent } from '../../../../base/browser/mouseEvent.js';\n\n/**\n * The editor scrollbar built on VS Code's scrollable element that sits beside\n * the minimap.\n */\nexport class EditorScrollbar extends ViewPart {\n\n\tprivate readonly scrollbar: SmoothScrollableElement;\n\tprivate readonly scrollbarDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tlinesContent: FastDomNode<HTMLElement>,\n\t\tviewDomNode: FastDomNode<HTMLElement>,\n\t\toverflowGuardDomNode: FastDomNode<HTMLElement>\n\t) {\n\t\tsuper(context);\n\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tconst mouseWheelScrollSensitivity = options.get(EditorOption.mouseWheelScrollSensitivity);\n\t\tconst fastScrollSensitivity = options.get(EditorOption.fastScrollSensitivity);\n\t\tconst scrollPredominantAxis = options.get(EditorOption.scrollPredominantAxis);\n\t\tconst inertialScroll = options.get(EditorOption.inertialScroll);\n\n\t\tconst scrollbarOptions: ScrollableElementCreationOptions = {\n\t\t\tlistenOnDomNode: viewDomNode.domNode,\n\t\t\tclassName: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n\t\t\tuseShadows: false,\n\t\t\tlazyRender: true,\n\n\t\t\tvertical: scrollbar.vertical,\n\t\t\thorizontal: scrollbar.horizontal,\n\t\t\tverticalHasArrows: scrollbar.verticalHasArrows,\n\t\t\thorizontalHasArrows: scrollbar.horizontalHasArrows,\n\t\t\tverticalScrollbarSize: scrollbar.verticalScrollbarSize,\n\t\t\tverticalSliderSize: scrollbar.verticalSliderSize,\n\t\t\thorizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n\t\t\thorizontalSliderSize: scrollbar.horizontalSliderSize,\n\t\t\thandleMouseWheel: scrollbar.handleMouseWheel,\n\t\t\talwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n\t\t\tarrowSize: scrollbar.arrowSize,\n\t\t\tmouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n\t\t\tfastScrollSensitivity: fastScrollSensitivity,\n\t\t\tscrollPredominantAxis: scrollPredominantAxis,\n\t\t\tscrollByPage: scrollbar.scrollByPage,\n\t\t\tinertialScroll: inertialScroll,\n\t\t};\n\n\t\tthis.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.getScrollable()));\n\t\tPartFingerprints.write(this.scrollbar.getDomNode(), PartFingerprint.ScrollableElement);\n\n\t\tthis.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n\t\tthis.scrollbarDomNode.setPosition('absolute');\n\t\tthis._setLayout();\n\n\t\t// When having a zone widget that calls .focus() on one of its dom elements,\n\t\t// the browser will try desperately to reveal that dom node, unexpectedly\n\t\t// changing the .scrollTop of this.linesContent\n\n\t\tconst onBrowserDesperateReveal = (domNode: HTMLElement, lookAtScrollTop: boolean, lookAtScrollLeft: boolean) => {\n\t\t\tconst newScrollPosition: INewScrollPosition = {};\n\n\t\t\tif (lookAtScrollTop) {\n\t\t\t\tconst deltaTop = domNode.scrollTop;\n\t\t\t\tif (deltaTop) {\n\t\t\t\t\tnewScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n\t\t\t\t\tdomNode.scrollTop = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lookAtScrollLeft) {\n\t\t\t\tconst deltaLeft = domNode.scrollLeft;\n\t\t\t\tif (deltaLeft) {\n\t\t\t\t\tnewScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n\t\t\t\t\tdomNode.scrollLeft = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, ScrollType.Immediate);\n\t\t};\n\n\t\t// I've seen this happen both on the view dom node & on the lines content dom node.\n\t\tthis._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n\t\tthis._register(dom.addDisposableListener(linesContent.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n\t\tthis._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n\t\tthis._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setLayout(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n\n\t\tconst minimap = options.get(EditorOption.minimap);\n\t\tconst side = minimap.side;\n\t\tif (side === 'right') {\n\t\t\tthis.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimap.minimapWidth);\n\t\t} else {\n\t\t\tthis.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n\t\t}\n\t\tthis.scrollbarDomNode.setHeight(layoutInfo.height);\n\t}\n\n\tpublic getOverviewRulerLayoutInfo(): IOverviewRulerLayoutInfo {\n\t\treturn this.scrollbar.getOverviewRulerLayoutInfo();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this.scrollbarDomNode;\n\t}\n\n\tpublic delegateVerticalScrollbarPointerDown(browserEvent: PointerEvent): void {\n\t\tthis.scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n\t}\n\n\tpublic delegateScrollFromMouseWheelEvent(browserEvent: IMouseWheelEvent) {\n\t\tthis.scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tif (\n\t\t\te.hasChanged(EditorOption.scrollbar)\n\t\t\t|| e.hasChanged(EditorOption.mouseWheelScrollSensitivity)\n\t\t\t|| e.hasChanged(EditorOption.fastScrollSensitivity)\n\t\t) {\n\t\t\tconst options = this._context.configuration.options;\n\t\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\t\tconst mouseWheelScrollSensitivity = options.get(EditorOption.mouseWheelScrollSensitivity);\n\t\t\tconst fastScrollSensitivity = options.get(EditorOption.fastScrollSensitivity);\n\t\t\tconst scrollPredominantAxis = options.get(EditorOption.scrollPredominantAxis);\n\t\t\tconst newOpts: ScrollableElementChangeOptions = {\n\t\t\t\tvertical: scrollbar.vertical,\n\t\t\t\thorizontal: scrollbar.horizontal,\n\t\t\t\tverticalScrollbarSize: scrollbar.verticalScrollbarSize,\n\t\t\t\thorizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n\t\t\t\tscrollByPage: scrollbar.scrollByPage,\n\t\t\t\thandleMouseWheel: scrollbar.handleMouseWheel,\n\t\t\t\tmouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n\t\t\t\tfastScrollSensitivity: fastScrollSensitivity,\n\t\t\t\tscrollPredominantAxis: scrollPredominantAxis\n\t\t\t};\n\t\t\tthis.scrollbar.updateOptions(newOpts);\n\t\t}\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\tthis._setLayout();\n\t\t}\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\tthis.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to do\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis.scrollbar.renderNow();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IOverviewRulerLayoutInfo, SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { ScrollableElementChangeOptions, ScrollableElementCreationOptions } from '../../../../base/browser/ui/scrollbar/scrollableElementOptions.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { INewScrollPosition, ScrollType } from '../../../common/editorCommon.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IMouseWheelEvent } from '../../../../base/browser/mouseEvent.js';\n\n/**\n * The editor scrollbar built on VS Code's scrollable element that sits beside\n * the minimap.\n */\nexport class EditorScrollbar extends ViewPart {\n\n\tprivate readonly scrollbar: SmoothScrollableElement;\n\tprivate readonly scrollbarDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tlinesContent: FastDomNode<HTMLElement>,\n\t\tviewDomNode: FastDomNode<HTMLElement>,\n\t\toverflowGuardDomNode: FastDomNode<HTMLElement>\n\t) {\n\t\tsuper(context);\n\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tconst mouseWheelScrollSensitivity = options.get(EditorOption.mouseWheelScrollSensitivity);\n\t\tconst fastScrollSensitivity = options.get(EditorOption.fastScrollSensitivity);\n\t\tconst scrollPredominantAxis = options.get(EditorOption.scrollPredominantAxis);\n\t\tconst inertialScroll = options.get(EditorOption.inertialScroll);\n\n\t\tconst scrollbarOptions: ScrollableElementCreationOptions = {\n\t\t\tlistenOnDomNode: viewDomNode.domNode,\n\t\t\tclassName: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n\t\t\tuseShadows: false,\n\t\t\tlazyRender: true,\n\n\t\t\tvertical: scrollbar.vertical,\n\t\t\thorizontal: scrollbar.horizontal,\n\t\t\tverticalHasArrows: scrollbar.verticalHasArrows,\n\t\t\thorizontalHasArrows: scrollbar.horizontalHasArrows,\n\t\t\tverticalScrollbarSize: scrollbar.verticalScrollbarSize,\n\t\t\tverticalSliderSize: scrollbar.verticalSliderSize,\n\t\t\thorizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n\t\t\thorizontalSliderSize: scrollbar.horizontalSliderSize,\n\t\t\thandleMouseWheel: scrollbar.handleMouseWheel,\n\t\t\talwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n\t\t\tarrowSize: scrollbar.arrowSize,\n\t\t\tmouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n\t\t\tfastScrollSensitivity: fastScrollSensitivity,\n\t\t\tscrollPredominantAxis: scrollPredominantAxis,\n\t\t\tscrollByPage: scrollbar.scrollByPage,\n\t\t\tinertialScroll: inertialScroll,\n\t\t};\n\n\t\tthis.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.getScrollable()));\n\t\tPartFingerprints.write(this.scrollbar.getDomNode(), PartFingerprint.ScrollableElement);\n\n\t\tthis.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n\t\tthis.scrollbarDomNode.setPosition('absolute');\n\t\tthis._setLayout();\n\n\t\t// When having a zone widget that calls .focus() on one of its dom elements,\n\t\t// the browser will try desperately to reveal that dom node, unexpectedly\n\t\t// changing the .scrollTop of this.linesContent\n\n\t\tconst onBrowserDesperateReveal = (domNode: HTMLElement, lookAtScrollTop: boolean, lookAtScrollLeft: boolean) => {\n\t\t\tconst newScrollPosition: INewScrollPosition = {};\n\n\t\t\tif (lookAtScrollTop) {\n\t\t\t\tconst deltaTop = domNode.scrollTop;\n\t\t\t\tif (deltaTop) {\n\t\t\t\t\tnewScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n\t\t\t\t\tdomNode.scrollTop = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lookAtScrollLeft) {\n\t\t\t\tconst deltaLeft = domNode.scrollLeft;\n\t\t\t\tif (deltaLeft) {\n\t\t\t\t\tnewScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n\t\t\t\t\tdomNode.scrollLeft = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, ScrollType.Immediate);\n\t\t};\n\n\t\t// I've seen this happen both on the view dom node & on the lines content dom node.\n\t\tthis._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n\t\tthis._register(dom.addDisposableListener(linesContent.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n\t\tthis._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n\t\tthis._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setLayout(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n\n\t\tconst minimap = options.get(EditorOption.minimap);\n\t\tconst side = minimap.side;\n\t\tif (side === 'right') {\n\t\t\tthis.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimap.minimapWidth);\n\t\t} else {\n\t\t\tthis.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n\t\t}\n\t\tthis.scrollbarDomNode.setHeight(layoutInfo.height);\n\t}\n\n\tpublic getOverviewRulerLayoutInfo(): IOverviewRulerLayoutInfo {\n\t\treturn this.scrollbar.getOverviewRulerLayoutInfo();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this.scrollbarDomNode;\n\t}\n\n\tpublic delegateVerticalScrollbarPointerDown(browserEvent: PointerEvent): void {\n\t\tthis.scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n\t}\n\n\tpublic delegateScrollFromMouseWheelEvent(browserEvent: IMouseWheelEvent) {\n\t\tthis.scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tif (\n\t\t\te.hasChanged(EditorOption.scrollbar)\n\t\t\t|| e.hasChanged(EditorOption.mouseWheelScrollSensitivity)\n\t\t\t|| e.hasChanged(EditorOption.fastScrollSensitivity)\n\t\t) {\n\t\t\tconst options = this._context.configuration.options;\n\t\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\t\tconst mouseWheelScrollSensitivity = options.get(EditorOption.mouseWheelScrollSensitivity);\n\t\t\tconst fastScrollSensitivity = options.get(EditorOption.fastScrollSensitivity);\n\t\t\tconst scrollPredominantAxis = options.get(EditorOption.scrollPredominantAxis);\n\t\t\tconst newOpts: ScrollableElementChangeOptions = {\n\t\t\t\tvertical: scrollbar.vertical,\n\t\t\t\thorizontal: scrollbar.horizontal,\n\t\t\t\tverticalScrollbarSize: scrollbar.verticalScrollbarSize,\n\t\t\t\thorizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n\t\t\t\tscrollByPage: scrollbar.scrollByPage,\n\t\t\t\thandleMouseWheel: scrollbar.handleMouseWheel,\n\t\t\t\tmouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n\t\t\t\tfastScrollSensitivity: fastScrollSensitivity,\n\t\t\t\tscrollPredominantAxis: scrollPredominantAxis\n\t\t\t};\n\t\t\tthis.scrollbar.updateOptions(newOpts);\n\t\t}\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\tthis._setLayout();\n\t\t}\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\tthis.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to do\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis.scrollbar.renderNow();\n\t}\n}\n"]}