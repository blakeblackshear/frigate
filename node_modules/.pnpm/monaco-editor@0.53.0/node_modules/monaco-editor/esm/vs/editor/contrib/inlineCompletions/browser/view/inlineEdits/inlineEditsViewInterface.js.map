{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViewInterface.ts","vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViewInterface.ts"],"names":[],"mappings":"AAMA,MAAM,CAAN,IAAY,mBAIX;AAJD,WAAY,mBAAmB;IAC9B,oCAAa,CAAA;IACb,wCAAiB,CAAA;IACjB,4CAAqB,CAAA;AACtB,CAAC,EAJW,mBAAmB,KAAnB,mBAAmB,QAI9B;AAqBD,+DAA+D;AAC/D,MAAM,CAAN,IAAY,wBAUX;AAVD,WAAY,wBAAwB;IACnC,mDAAuB,CAAA;IACvB,6CAAiB,CAAA;IACjB,qDAAyB,CAAA;IACzB,iDAAqB,CAAA;IACrB,+DAAmC,CAAA;IACnC,qEAAyC,CAAA;IACzC,iEAAqC,CAAA;IACrC,+DAAmC,CAAA;IACnC,mDAAuB,CAAA;AACxB,CAAC,EAVW,wBAAwB,KAAxB,wBAAwB,QAUnC","file":"inlineEditsViewInterface.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["\nimport { Event } from '../../../../../../base/common/event.js';\nimport { IObservable } from '../../../../../../base/common/observable.js';\nimport { Command, InlineCompletionCommand, InlineCompletionDisplayLocation } from '../../../../../common/languages.js';\nimport { InlineEditWithChanges } from './inlineEditWithChanges.js';\n\nexport enum InlineEditTabAction {\n\tJump = 'jump',\n\tAccept = 'accept',\n\tInactive = 'inactive'\n}\n\nexport interface IInlineEditsView {\n}\n\nexport interface IInlineEditHost {\n\treadonly onDidAccept: Event<void>;\n}\n\nexport interface IInlineEditModel {\n\tdisplayName: string;\n\taction: Command | undefined;\n\textensionCommands: InlineCompletionCommand[];\n\tisInDiffEditor: boolean;\n\tinlineEdit: InlineEditWithChanges;\n\ttabAction: IObservable<InlineEditTabAction>;\n\tdisplayLocation: InlineCompletionDisplayLocation | undefined;\n\taccept(): void;\n\tjump(): void;\n}\n\n// TODO: Move this out of here as it is also includes ghosttext\nexport enum InlineCompletionViewKind {\n\tGhostText = 'ghostText',\n\tCustom = 'custom',\n\tSideBySide = 'sideBySide',\n\tDeletion = 'deletion',\n\tInsertionInline = 'insertionInline',\n\tInsertionMultiLine = 'insertionMultiLine',\n\tWordReplacements = 'wordReplacements',\n\tLineReplacement = 'lineReplacement',\n\tCollapsed = 'collapsed'\n}\n\nexport type InlineCompletionViewData = {\n\tcursorColumnDistance: number;\n\tcursorLineDistance: number;\n\tlineCountOriginal: number;\n\tlineCountModified: number;\n\tcharacterCountOriginal: number;\n\tcharacterCountModified: number;\n\tdisjointReplacements: number;\n\tsameShapeReplacements?: boolean;\n};\n","\nimport { Event } from '../../../../../../base/common/event.js';\nimport { IObservable } from '../../../../../../base/common/observable.js';\nimport { Command, InlineCompletionCommand, InlineCompletionDisplayLocation } from '../../../../../common/languages.js';\nimport { InlineEditWithChanges } from './inlineEditWithChanges.js';\n\nexport enum InlineEditTabAction {\n\tJump = 'jump',\n\tAccept = 'accept',\n\tInactive = 'inactive'\n}\n\nexport interface IInlineEditsView {\n}\n\nexport interface IInlineEditHost {\n\treadonly onDidAccept: Event<void>;\n}\n\nexport interface IInlineEditModel {\n\tdisplayName: string;\n\taction: Command | undefined;\n\textensionCommands: InlineCompletionCommand[];\n\tisInDiffEditor: boolean;\n\tinlineEdit: InlineEditWithChanges;\n\ttabAction: IObservable<InlineEditTabAction>;\n\tdisplayLocation: InlineCompletionDisplayLocation | undefined;\n\taccept(): void;\n\tjump(): void;\n}\n\n// TODO: Move this out of here as it is also includes ghosttext\nexport enum InlineCompletionViewKind {\n\tGhostText = 'ghostText',\n\tCustom = 'custom',\n\tSideBySide = 'sideBySide',\n\tDeletion = 'deletion',\n\tInsertionInline = 'insertionInline',\n\tInsertionMultiLine = 'insertionMultiLine',\n\tWordReplacements = 'wordReplacements',\n\tLineReplacement = 'lineReplacement',\n\tCollapsed = 'collapsed'\n}\n\nexport type InlineCompletionViewData = {\n\tcursorColumnDistance: number;\n\tcursorLineDistance: number;\n\tlineCountOriginal: number;\n\tlineCountModified: number;\n\tcharacterCountOriginal: number;\n\tcharacterCountModified: number;\n\tdisjointReplacements: number;\n\tsameShapeReplacements?: boolean;\n};\n"]}