{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/codeAction/common/types.ts","vs/editor/contrib/codeAction/common/types.ts"],"names":[],"mappings":"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","file":"types.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Position } from '../../../common/core/position.js';\nimport * as languages from '../../../common/languages.js';\nimport { ActionSet } from '../../../../platform/actionWidget/common/actionWidget.js';\n\nexport const CodeActionKind = new class {\n\tpublic readonly QuickFix = new HierarchicalKind('quickfix');\n\n\tpublic readonly Refactor = new HierarchicalKind('refactor');\n\tpublic readonly RefactorExtract = this.Refactor.append('extract');\n\tpublic readonly RefactorInline = this.Refactor.append('inline');\n\tpublic readonly RefactorMove = this.Refactor.append('move');\n\tpublic readonly RefactorRewrite = this.Refactor.append('rewrite');\n\n\tpublic readonly Notebook = new HierarchicalKind('notebook');\n\n\tpublic readonly Source = new HierarchicalKind('source');\n\tpublic readonly SourceOrganizeImports = this.Source.append('organizeImports');\n\tpublic readonly SourceFixAll = this.Source.append('fixAll');\n\tpublic readonly SurroundWith = this.Refactor.append('surround');\n};\n\nexport const enum CodeActionAutoApply {\n\tIfSingle = 'ifSingle',\n\tFirst = 'first',\n\tNever = 'never',\n}\n\nexport enum CodeActionTriggerSource {\n\tRefactor = 'refactor',\n\tRefactorPreview = 'refactor preview',\n\tLightbulb = 'lightbulb',\n\tDefault = 'other (default)',\n\tSourceAction = 'source action',\n\tQuickFix = 'quick fix action',\n\tFixAll = 'fix all',\n\tOrganizeImports = 'organize imports',\n\tAutoFix = 'auto fix',\n\tQuickFixHover = 'quick fix hover window',\n\tOnSave = 'save participants',\n\tProblemsView = 'problems view'\n}\n\nexport interface CodeActionFilter {\n\treadonly include?: HierarchicalKind;\n\treadonly excludes?: readonly HierarchicalKind[];\n\treadonly includeSourceActions?: boolean;\n\treadonly onlyIncludePreferredActions?: boolean;\n}\n\nexport function mayIncludeActionsOfKind(filter: CodeActionFilter, providedKind: HierarchicalKind): boolean {\n\t// A provided kind may be a subset or superset of our filtered kind.\n\tif (filter.include && !filter.include.intersects(providedKind)) {\n\t\treturn false;\n\t}\n\n\tif (filter.excludes) {\n\t\tif (filter.excludes.some(exclude => excludesAction(providedKind, exclude, filter.include))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Don't return source actions unless they are explicitly requested\n\tif (!filter.includeSourceActions && CodeActionKind.Source.contains(providedKind)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function filtersAction(filter: CodeActionFilter, action: languages.CodeAction): boolean {\n\tconst actionKind = action.kind ? new HierarchicalKind(action.kind) : undefined;\n\n\t// Filter out actions by kind\n\tif (filter.include) {\n\t\tif (!actionKind || !filter.include.contains(actionKind)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (filter.excludes) {\n\t\tif (actionKind && filter.excludes.some(exclude => excludesAction(actionKind, exclude, filter.include))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Don't return source actions unless they are explicitly requested\n\tif (!filter.includeSourceActions) {\n\t\tif (actionKind && CodeActionKind.Source.contains(actionKind)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (filter.onlyIncludePreferredActions) {\n\t\tif (!action.isPreferred) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction excludesAction(providedKind: HierarchicalKind, exclude: HierarchicalKind, include: HierarchicalKind | undefined): boolean {\n\tif (!exclude.contains(providedKind)) {\n\t\treturn false;\n\t}\n\tif (include && exclude.contains(include)) {\n\t\t// The include is more specific, don't filter out\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport interface CodeActionTrigger {\n\treadonly type: languages.CodeActionTriggerType;\n\treadonly triggerAction: CodeActionTriggerSource;\n\treadonly filter?: CodeActionFilter;\n\treadonly autoApply?: CodeActionAutoApply;\n\treadonly context?: {\n\t\treadonly notAvailableMessage: string;\n\t\treadonly position: Position;\n\t};\n}\n\nexport class CodeActionCommandArgs {\n\tpublic static fromUser(arg: any, defaults: { kind: HierarchicalKind; apply: CodeActionAutoApply }): CodeActionCommandArgs {\n\t\tif (!arg || typeof arg !== 'object') {\n\t\t\treturn new CodeActionCommandArgs(defaults.kind, defaults.apply, false);\n\t\t}\n\t\treturn new CodeActionCommandArgs(\n\t\t\tCodeActionCommandArgs.getKindFromUser(arg, defaults.kind),\n\t\t\tCodeActionCommandArgs.getApplyFromUser(arg, defaults.apply),\n\t\t\tCodeActionCommandArgs.getPreferredUser(arg));\n\t}\n\n\tprivate static getApplyFromUser(arg: any, defaultAutoApply: CodeActionAutoApply) {\n\t\tswitch (typeof arg.apply === 'string' ? arg.apply.toLowerCase() : '') {\n\t\t\tcase 'first': return CodeActionAutoApply.First;\n\t\t\tcase 'never': return CodeActionAutoApply.Never;\n\t\t\tcase 'ifsingle': return CodeActionAutoApply.IfSingle;\n\t\t\tdefault: return defaultAutoApply;\n\t\t}\n\t}\n\n\tprivate static getKindFromUser(arg: any, defaultKind: HierarchicalKind) {\n\t\treturn typeof arg.kind === 'string'\n\t\t\t? new HierarchicalKind(arg.kind)\n\t\t\t: defaultKind;\n\t}\n\n\tprivate static getPreferredUser(arg: any): boolean {\n\t\treturn typeof arg.preferred === 'boolean'\n\t\t\t? arg.preferred\n\t\t\t: false;\n\t}\n\n\tprivate constructor(\n\t\tpublic readonly kind: HierarchicalKind,\n\t\tpublic readonly apply: CodeActionAutoApply,\n\t\tpublic readonly preferred: boolean,\n\t) { }\n}\n\nexport class CodeActionItem {\n\n\tconstructor(\n\t\tpublic readonly action: languages.CodeAction,\n\t\tpublic readonly provider: languages.CodeActionProvider | undefined,\n\t\tpublic highlightRange?: boolean,\n\t) { }\n\n\tasync resolve(token: CancellationToken): Promise<this> {\n\t\tif (this.provider?.resolveCodeAction && !this.action.edit) {\n\t\t\tlet action: languages.CodeAction | undefined | null;\n\t\t\ttry {\n\t\t\t\taction = await this.provider.resolveCodeAction(this.action, token);\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedExternalError(err);\n\t\t\t}\n\t\t\tif (action) {\n\t\t\t\tthis.action.edit = action.edit;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport interface CodeActionSet extends ActionSet<CodeActionItem> {\n\treadonly validActions: readonly CodeActionItem[];\n\treadonly allActions: readonly CodeActionItem[];\n\n\treadonly documentation: readonly languages.Command[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Position } from '../../../common/core/position.js';\nimport * as languages from '../../../common/languages.js';\nimport { ActionSet } from '../../../../platform/actionWidget/common/actionWidget.js';\n\nexport const CodeActionKind = new class {\n\tpublic readonly QuickFix = new HierarchicalKind('quickfix');\n\n\tpublic readonly Refactor = new HierarchicalKind('refactor');\n\tpublic readonly RefactorExtract = this.Refactor.append('extract');\n\tpublic readonly RefactorInline = this.Refactor.append('inline');\n\tpublic readonly RefactorMove = this.Refactor.append('move');\n\tpublic readonly RefactorRewrite = this.Refactor.append('rewrite');\n\n\tpublic readonly Notebook = new HierarchicalKind('notebook');\n\n\tpublic readonly Source = new HierarchicalKind('source');\n\tpublic readonly SourceOrganizeImports = this.Source.append('organizeImports');\n\tpublic readonly SourceFixAll = this.Source.append('fixAll');\n\tpublic readonly SurroundWith = this.Refactor.append('surround');\n};\n\nexport const enum CodeActionAutoApply {\n\tIfSingle = 'ifSingle',\n\tFirst = 'first',\n\tNever = 'never',\n}\n\nexport enum CodeActionTriggerSource {\n\tRefactor = 'refactor',\n\tRefactorPreview = 'refactor preview',\n\tLightbulb = 'lightbulb',\n\tDefault = 'other (default)',\n\tSourceAction = 'source action',\n\tQuickFix = 'quick fix action',\n\tFixAll = 'fix all',\n\tOrganizeImports = 'organize imports',\n\tAutoFix = 'auto fix',\n\tQuickFixHover = 'quick fix hover window',\n\tOnSave = 'save participants',\n\tProblemsView = 'problems view'\n}\n\nexport interface CodeActionFilter {\n\treadonly include?: HierarchicalKind;\n\treadonly excludes?: readonly HierarchicalKind[];\n\treadonly includeSourceActions?: boolean;\n\treadonly onlyIncludePreferredActions?: boolean;\n}\n\nexport function mayIncludeActionsOfKind(filter: CodeActionFilter, providedKind: HierarchicalKind): boolean {\n\t// A provided kind may be a subset or superset of our filtered kind.\n\tif (filter.include && !filter.include.intersects(providedKind)) {\n\t\treturn false;\n\t}\n\n\tif (filter.excludes) {\n\t\tif (filter.excludes.some(exclude => excludesAction(providedKind, exclude, filter.include))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Don't return source actions unless they are explicitly requested\n\tif (!filter.includeSourceActions && CodeActionKind.Source.contains(providedKind)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function filtersAction(filter: CodeActionFilter, action: languages.CodeAction): boolean {\n\tconst actionKind = action.kind ? new HierarchicalKind(action.kind) : undefined;\n\n\t// Filter out actions by kind\n\tif (filter.include) {\n\t\tif (!actionKind || !filter.include.contains(actionKind)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (filter.excludes) {\n\t\tif (actionKind && filter.excludes.some(exclude => excludesAction(actionKind, exclude, filter.include))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Don't return source actions unless they are explicitly requested\n\tif (!filter.includeSourceActions) {\n\t\tif (actionKind && CodeActionKind.Source.contains(actionKind)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (filter.onlyIncludePreferredActions) {\n\t\tif (!action.isPreferred) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction excludesAction(providedKind: HierarchicalKind, exclude: HierarchicalKind, include: HierarchicalKind | undefined): boolean {\n\tif (!exclude.contains(providedKind)) {\n\t\treturn false;\n\t}\n\tif (include && exclude.contains(include)) {\n\t\t// The include is more specific, don't filter out\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport interface CodeActionTrigger {\n\treadonly type: languages.CodeActionTriggerType;\n\treadonly triggerAction: CodeActionTriggerSource;\n\treadonly filter?: CodeActionFilter;\n\treadonly autoApply?: CodeActionAutoApply;\n\treadonly context?: {\n\t\treadonly notAvailableMessage: string;\n\t\treadonly position: Position;\n\t};\n}\n\nexport class CodeActionCommandArgs {\n\tpublic static fromUser(arg: any, defaults: { kind: HierarchicalKind; apply: CodeActionAutoApply }): CodeActionCommandArgs {\n\t\tif (!arg || typeof arg !== 'object') {\n\t\t\treturn new CodeActionCommandArgs(defaults.kind, defaults.apply, false);\n\t\t}\n\t\treturn new CodeActionCommandArgs(\n\t\t\tCodeActionCommandArgs.getKindFromUser(arg, defaults.kind),\n\t\t\tCodeActionCommandArgs.getApplyFromUser(arg, defaults.apply),\n\t\t\tCodeActionCommandArgs.getPreferredUser(arg));\n\t}\n\n\tprivate static getApplyFromUser(arg: any, defaultAutoApply: CodeActionAutoApply) {\n\t\tswitch (typeof arg.apply === 'string' ? arg.apply.toLowerCase() : '') {\n\t\t\tcase 'first': return CodeActionAutoApply.First;\n\t\t\tcase 'never': return CodeActionAutoApply.Never;\n\t\t\tcase 'ifsingle': return CodeActionAutoApply.IfSingle;\n\t\t\tdefault: return defaultAutoApply;\n\t\t}\n\t}\n\n\tprivate static getKindFromUser(arg: any, defaultKind: HierarchicalKind) {\n\t\treturn typeof arg.kind === 'string'\n\t\t\t? new HierarchicalKind(arg.kind)\n\t\t\t: defaultKind;\n\t}\n\n\tprivate static getPreferredUser(arg: any): boolean {\n\t\treturn typeof arg.preferred === 'boolean'\n\t\t\t? arg.preferred\n\t\t\t: false;\n\t}\n\n\tprivate constructor(\n\t\tpublic readonly kind: HierarchicalKind,\n\t\tpublic readonly apply: CodeActionAutoApply,\n\t\tpublic readonly preferred: boolean,\n\t) { }\n}\n\nexport class CodeActionItem {\n\n\tconstructor(\n\t\tpublic readonly action: languages.CodeAction,\n\t\tpublic readonly provider: languages.CodeActionProvider | undefined,\n\t\tpublic highlightRange?: boolean,\n\t) { }\n\n\tasync resolve(token: CancellationToken): Promise<this> {\n\t\tif (this.provider?.resolveCodeAction && !this.action.edit) {\n\t\t\tlet action: languages.CodeAction | undefined | null;\n\t\t\ttry {\n\t\t\t\taction = await this.provider.resolveCodeAction(this.action, token);\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedExternalError(err);\n\t\t\t}\n\t\t\tif (action) {\n\t\t\t\tthis.action.edit = action.edit;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport interface CodeActionSet extends ActionSet<CodeActionItem> {\n\treadonly validActions: readonly CodeActionItem[];\n\treadonly allActions: readonly CodeActionItem[];\n\n\treadonly documentation: readonly languages.Command[];\n}\n"]}