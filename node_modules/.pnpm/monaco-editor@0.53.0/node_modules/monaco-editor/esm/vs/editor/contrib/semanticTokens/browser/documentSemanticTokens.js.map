{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/semanticTokens/browser/documentSemanticTokens.ts","vs/editor/contrib/semanticTokens/browser/documentSemanticTokens.ts"],"names":[],"mappings":"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","file":"documentSemanticTokens.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport * as errors from '../../../../base/common/errors.js';\nimport { Disposable, IDisposable, dispose } from '../../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry.js';\nimport { DocumentSemanticTokensProvider, SemanticTokens, SemanticTokensEdits } from '../../../common/languages.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { IFeatureDebounceInformation, ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { SemanticTokensProviderStyling, toMultilineTokens2 } from '../../../common/services/semanticTokensProviderStyling.js';\nimport { ISemanticTokensStylingService } from '../../../common/services/semanticTokensStyling.js';\nimport { IModelContentChangedEvent } from '../../../common/textModelEvents.js';\nimport { getDocumentSemanticTokens, hasDocumentSemanticTokensProvider, isSemanticTokens, isSemanticTokensEdits } from '../common/getSemanticTokens.js';\nimport { SEMANTIC_HIGHLIGHTING_SETTING_ID, isSemanticColoringEnabled } from '../common/semanticTokensConfig.js';\n\nexport class DocumentSemanticTokensFeature extends Disposable {\n\n\tprivate readonly _watchers = new ResourceMap<ModelSemanticColoring>();\n\n\tconstructor(\n\t\t@ISemanticTokensStylingService semanticTokensStylingService: ISemanticTokensStylingService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILanguageFeatureDebounceService languageFeatureDebounceService: ILanguageFeatureDebounceService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\n\t\tconst register = (model: ITextModel) => {\n\t\t\tthis._watchers.get(model.uri)?.dispose();\n\t\t\tthis._watchers.set(model.uri, new ModelSemanticColoring(model, semanticTokensStylingService, themeService, languageFeatureDebounceService, languageFeaturesService));\n\t\t};\n\t\tconst deregister = (model: ITextModel, modelSemanticColoring: ModelSemanticColoring) => {\n\t\t\tmodelSemanticColoring.dispose();\n\t\t\tthis._watchers.delete(model.uri);\n\t\t};\n\t\tconst handleSettingOrThemeChange = () => {\n\t\t\tfor (const model of modelService.getModels()) {\n\t\t\t\tconst curr = this._watchers.get(model.uri);\n\t\t\t\tif (isSemanticColoringEnabled(model, themeService, configurationService)) {\n\t\t\t\t\tif (!curr) {\n\t\t\t\t\t\tregister(model);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (curr) {\n\t\t\t\t\t\tderegister(model, curr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tmodelService.getModels().forEach(model => {\n\t\t\tif (isSemanticColoringEnabled(model, themeService, configurationService)) {\n\t\t\t\tregister(model);\n\t\t\t}\n\t\t});\n\t\tthis._register(modelService.onModelAdded((model) => {\n\t\t\tif (isSemanticColoringEnabled(model, themeService, configurationService)) {\n\t\t\t\tregister(model);\n\t\t\t}\n\t\t}));\n\t\tthis._register(modelService.onModelRemoved((model) => {\n\t\t\tconst curr = this._watchers.get(model.uri);\n\t\t\tif (curr) {\n\t\t\t\tderegister(model, curr);\n\t\t\t}\n\t\t}));\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\n\t\t\t\thandleSettingOrThemeChange();\n\t\t\t}\n\t\t}));\n\t\tthis._register(themeService.onDidColorThemeChange(handleSettingOrThemeChange));\n\t}\n\n\toverride dispose(): void {\n\t\tdispose(this._watchers.values());\n\t\tthis._watchers.clear();\n\n\t\tsuper.dispose();\n\t}\n}\n\nclass ModelSemanticColoring extends Disposable {\n\n\tpublic static REQUEST_MIN_DELAY = 300;\n\tpublic static REQUEST_MAX_DELAY = 2000;\n\n\tprivate _isDisposed: boolean;\n\tprivate readonly _model: ITextModel;\n\tprivate readonly _provider: LanguageFeatureRegistry<DocumentSemanticTokensProvider>;\n\tprivate readonly _debounceInformation: IFeatureDebounceInformation;\n\tprivate readonly _fetchDocumentSemanticTokens: RunOnceScheduler;\n\tprivate _currentDocumentResponse: SemanticTokensResponse | null;\n\tprivate _currentDocumentRequestCancellationTokenSource: CancellationTokenSource | null;\n\tprivate _documentProvidersChangeListeners: IDisposable[];\n\tprivate _providersChangedDuringRequest: boolean;\n\n\tconstructor(\n\t\tmodel: ITextModel,\n\t\t@ISemanticTokensStylingService private readonly _semanticTokensStylingService: ISemanticTokensStylingService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILanguageFeatureDebounceService languageFeatureDebounceService: ILanguageFeatureDebounceService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\n\t\tthis._isDisposed = false;\n\t\tthis._model = model;\n\t\tthis._provider = languageFeaturesService.documentSemanticTokensProvider;\n\t\tthis._debounceInformation = languageFeatureDebounceService.for(this._provider, 'DocumentSemanticTokens', { min: ModelSemanticColoring.REQUEST_MIN_DELAY, max: ModelSemanticColoring.REQUEST_MAX_DELAY });\n\t\tthis._fetchDocumentSemanticTokens = this._register(new RunOnceScheduler(() => this._fetchDocumentSemanticTokensNow(), ModelSemanticColoring.REQUEST_MIN_DELAY));\n\t\tthis._currentDocumentResponse = null;\n\t\tthis._currentDocumentRequestCancellationTokenSource = null;\n\t\tthis._documentProvidersChangeListeners = [];\n\t\tthis._providersChangedDuringRequest = false;\n\n\t\tthis._register(this._model.onDidChangeContent(() => {\n\t\t\tif (!this._fetchDocumentSemanticTokens.isScheduled()) {\n\t\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._model.onDidChangeAttached(() => {\n\t\t\tif (!this._fetchDocumentSemanticTokens.isScheduled()) {\n\t\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._model.onDidChangeLanguage(() => {\n\t\t\t// clear any outstanding state\n\t\t\tif (this._currentDocumentResponse) {\n\t\t\t\tthis._currentDocumentResponse.dispose();\n\t\t\t\tthis._currentDocumentResponse = null;\n\t\t\t}\n\t\t\tif (this._currentDocumentRequestCancellationTokenSource) {\n\t\t\t\tthis._currentDocumentRequestCancellationTokenSource.cancel();\n\t\t\t\tthis._currentDocumentRequestCancellationTokenSource = null;\n\t\t\t}\n\t\t\tthis._setDocumentSemanticTokens(null, null, null, []);\n\t\t\tthis._fetchDocumentSemanticTokens.schedule(0);\n\t\t}));\n\n\t\tconst bindDocumentChangeListeners = () => {\n\t\t\tdispose(this._documentProvidersChangeListeners);\n\t\t\tthis._documentProvidersChangeListeners = [];\n\t\t\tfor (const provider of this._provider.all(model)) {\n\t\t\t\tif (typeof provider.onDidChange === 'function') {\n\t\t\t\t\tthis._documentProvidersChangeListeners.push(provider.onDidChange(() => {\n\t\t\t\t\t\tif (this._currentDocumentRequestCancellationTokenSource) {\n\t\t\t\t\t\t\t// there is already a request running,\n\t\t\t\t\t\t\tthis._providersChangedDuringRequest = true;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._fetchDocumentSemanticTokens.schedule(0);\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tbindDocumentChangeListeners();\n\t\tthis._register(this._provider.onDidChange(() => {\n\t\t\tbindDocumentChangeListeners();\n\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t}));\n\n\t\tthis._register(themeService.onDidColorThemeChange(_ => {\n\t\t\t// clear out existing tokens\n\t\t\tthis._setDocumentSemanticTokens(null, null, null, []);\n\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t}));\n\n\t\tthis._fetchDocumentSemanticTokens.schedule(0);\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._currentDocumentResponse) {\n\t\t\tthis._currentDocumentResponse.dispose();\n\t\t\tthis._currentDocumentResponse = null;\n\t\t}\n\t\tif (this._currentDocumentRequestCancellationTokenSource) {\n\t\t\tthis._currentDocumentRequestCancellationTokenSource.cancel();\n\t\t\tthis._currentDocumentRequestCancellationTokenSource = null;\n\t\t}\n\t\tdispose(this._documentProvidersChangeListeners);\n\t\tthis._documentProvidersChangeListeners = [];\n\t\tthis._setDocumentSemanticTokens(null, null, null, []);\n\t\tthis._isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n\n\tprivate _fetchDocumentSemanticTokensNow(): void {\n\t\tif (this._currentDocumentRequestCancellationTokenSource) {\n\t\t\t// there is already a request running, let it finish...\n\t\t\treturn;\n\t\t}\n\n\t\tif (!hasDocumentSemanticTokensProvider(this._provider, this._model)) {\n\t\t\t// there is no provider\n\t\t\tif (this._currentDocumentResponse) {\n\t\t\t\t// there are semantic tokens set\n\t\t\t\tthis._model.tokenization.setSemanticTokens(null, false);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._model.isAttachedToEditor()) {\n\t\t\t// this document is not visible, there is no need to fetch semantic tokens for it\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tconst lastProvider = this._currentDocumentResponse ? this._currentDocumentResponse.provider : null;\n\t\tconst lastResultId = this._currentDocumentResponse ? this._currentDocumentResponse.resultId || null : null;\n\t\tconst request = getDocumentSemanticTokens(this._provider, this._model, lastProvider, lastResultId, cancellationTokenSource.token);\n\t\tthis._currentDocumentRequestCancellationTokenSource = cancellationTokenSource;\n\t\tthis._providersChangedDuringRequest = false;\n\n\t\tconst pendingChanges: IModelContentChangedEvent[] = [];\n\t\tconst contentChangeListener = this._model.onDidChangeContent((e) => {\n\t\t\tpendingChanges.push(e);\n\t\t});\n\n\t\tconst sw = new StopWatch(false);\n\t\trequest.then((res) => {\n\t\t\tthis._debounceInformation.update(this._model, sw.elapsed());\n\t\t\tthis._currentDocumentRequestCancellationTokenSource = null;\n\t\t\tcontentChangeListener.dispose();\n\n\t\t\tif (!res) {\n\t\t\t\tthis._setDocumentSemanticTokens(null, null, null, pendingChanges);\n\t\t\t} else {\n\t\t\t\tconst { provider, tokens } = res;\n\t\t\t\tconst styling = this._semanticTokensStylingService.getStyling(provider);\n\t\t\t\tthis._setDocumentSemanticTokens(provider, tokens || null, styling, pendingChanges);\n\t\t\t}\n\t\t}, (err) => {\n\t\t\tconst isExpectedError = err && (errors.isCancellationError(err) || (typeof err.message === 'string' && err.message.indexOf('busy') !== -1));\n\t\t\tif (!isExpectedError) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t}\n\n\t\t\t// Semantic tokens eats up all errors and considers errors to mean that the result is temporarily not available\n\t\t\t// The API does not have a special error kind to express this...\n\t\t\tthis._currentDocumentRequestCancellationTokenSource = null;\n\t\t\tcontentChangeListener.dispose();\n\n\t\t\tif (pendingChanges.length > 0 || this._providersChangedDuringRequest) {\n\t\t\t\t// More changes occurred while the request was running\n\t\t\t\tif (!this._fetchDocumentSemanticTokens.isScheduled()) {\n\t\t\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _copy(src: Uint32Array, srcOffset: number, dest: Uint32Array, destOffset: number, length: number): void {\n\t\t// protect against overflows\n\t\tlength = Math.min(length, dest.length - destOffset, src.length - srcOffset);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdest[destOffset + i] = src[srcOffset + i];\n\t\t}\n\t}\n\n\tprivate _setDocumentSemanticTokens(provider: DocumentSemanticTokensProvider | null, tokens: SemanticTokens | SemanticTokensEdits | null, styling: SemanticTokensProviderStyling | null, pendingChanges: IModelContentChangedEvent[]): void {\n\t\tconst currentResponse = this._currentDocumentResponse;\n\t\tconst rescheduleIfNeeded = () => {\n\t\t\tif ((pendingChanges.length > 0 || this._providersChangedDuringRequest) && !this._fetchDocumentSemanticTokens.isScheduled()) {\n\t\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t\t}\n\t\t};\n\n\t\tif (this._currentDocumentResponse) {\n\t\t\tthis._currentDocumentResponse.dispose();\n\t\t\tthis._currentDocumentResponse = null;\n\t\t}\n\t\tif (this._isDisposed) {\n\t\t\t// disposed!\n\t\t\tif (provider && tokens) {\n\t\t\t\tprovider.releaseDocumentSemanticTokens(tokens.resultId);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (!provider || !styling) {\n\t\t\tthis._model.tokenization.setSemanticTokens(null, false);\n\t\t\treturn;\n\t\t}\n\t\tif (!tokens) {\n\t\t\tthis._model.tokenization.setSemanticTokens(null, true);\n\t\t\trescheduleIfNeeded();\n\t\t\treturn;\n\t\t}\n\n\t\tif (isSemanticTokensEdits(tokens)) {\n\t\t\tif (!currentResponse) {\n\t\t\t\t// not possible!\n\t\t\t\tthis._model.tokenization.setSemanticTokens(null, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (tokens.edits.length === 0) {\n\t\t\t\t// nothing to do!\n\t\t\t\ttokens = {\n\t\t\t\t\tresultId: tokens.resultId,\n\t\t\t\t\tdata: currentResponse.data\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tlet deltaLength = 0;\n\t\t\t\tfor (const edit of tokens.edits) {\n\t\t\t\t\tdeltaLength += (edit.data ? edit.data.length : 0) - edit.deleteCount;\n\t\t\t\t}\n\n\t\t\t\tconst srcData = currentResponse.data;\n\t\t\t\tconst destData = new Uint32Array(srcData.length + deltaLength);\n\n\t\t\t\tlet srcLastStart = srcData.length;\n\t\t\t\tlet destLastStart = destData.length;\n\t\t\t\tfor (let i = tokens.edits.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst edit = tokens.edits[i];\n\n\t\t\t\t\tif (edit.start > srcData.length) {\n\t\t\t\t\t\tstyling.warnInvalidEditStart(currentResponse.resultId, tokens.resultId, i, edit.start, srcData.length);\n\t\t\t\t\t\t// The edits are invalid and there's no way to recover\n\t\t\t\t\t\tthis._model.tokenization.setSemanticTokens(null, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst copyCount = srcLastStart - (edit.start + edit.deleteCount);\n\t\t\t\t\tif (copyCount > 0) {\n\t\t\t\t\t\tModelSemanticColoring._copy(srcData, srcLastStart - copyCount, destData, destLastStart - copyCount, copyCount);\n\t\t\t\t\t\tdestLastStart -= copyCount;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (edit.data) {\n\t\t\t\t\t\tModelSemanticColoring._copy(edit.data, 0, destData, destLastStart - edit.data.length, edit.data.length);\n\t\t\t\t\t\tdestLastStart -= edit.data.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tsrcLastStart = edit.start;\n\t\t\t\t}\n\n\t\t\t\tif (srcLastStart > 0) {\n\t\t\t\t\tModelSemanticColoring._copy(srcData, 0, destData, 0, srcLastStart);\n\t\t\t\t}\n\n\t\t\t\ttokens = {\n\t\t\t\t\tresultId: tokens.resultId,\n\t\t\t\t\tdata: destData\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (isSemanticTokens(tokens)) {\n\n\t\t\tthis._currentDocumentResponse = new SemanticTokensResponse(provider, tokens.resultId, tokens.data);\n\n\t\t\tconst result = toMultilineTokens2(tokens, styling, this._model.getLanguageId());\n\n\t\t\t// Adjust incoming semantic tokens\n\t\t\tif (pendingChanges.length > 0) {\n\t\t\t\t// More changes occurred while the request was running\n\t\t\t\t// We need to:\n\t\t\t\t// 1. Adjust incoming semantic tokens\n\t\t\t\t// 2. Request them again\n\t\t\t\tfor (const change of pendingChanges) {\n\t\t\t\t\tfor (const area of result) {\n\t\t\t\t\t\tfor (const singleChange of change.changes) {\n\t\t\t\t\t\t\tarea.applyEdit(singleChange.range, singleChange.text);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._model.tokenization.setSemanticTokens(result, true);\n\t\t} else {\n\t\t\tthis._model.tokenization.setSemanticTokens(null, true);\n\t\t}\n\n\t\trescheduleIfNeeded();\n\t}\n}\n\nclass SemanticTokensResponse {\n\tconstructor(\n\t\tpublic readonly provider: DocumentSemanticTokensProvider,\n\t\tpublic readonly resultId: string | undefined,\n\t\tpublic readonly data: Uint32Array\n\t) { }\n\n\tpublic dispose(): void {\n\t\tthis.provider.releaseDocumentSemanticTokens(this.resultId);\n\t}\n}\n\nregisterEditorFeature(DocumentSemanticTokensFeature);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport * as errors from '../../../../base/common/errors.js';\nimport { Disposable, IDisposable, dispose } from '../../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry.js';\nimport { DocumentSemanticTokensProvider, SemanticTokens, SemanticTokensEdits } from '../../../common/languages.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { IFeatureDebounceInformation, ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { SemanticTokensProviderStyling, toMultilineTokens2 } from '../../../common/services/semanticTokensProviderStyling.js';\nimport { ISemanticTokensStylingService } from '../../../common/services/semanticTokensStyling.js';\nimport { IModelContentChangedEvent } from '../../../common/textModelEvents.js';\nimport { getDocumentSemanticTokens, hasDocumentSemanticTokensProvider, isSemanticTokens, isSemanticTokensEdits } from '../common/getSemanticTokens.js';\nimport { SEMANTIC_HIGHLIGHTING_SETTING_ID, isSemanticColoringEnabled } from '../common/semanticTokensConfig.js';\n\nexport class DocumentSemanticTokensFeature extends Disposable {\n\n\tprivate readonly _watchers = new ResourceMap<ModelSemanticColoring>();\n\n\tconstructor(\n\t\t@ISemanticTokensStylingService semanticTokensStylingService: ISemanticTokensStylingService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILanguageFeatureDebounceService languageFeatureDebounceService: ILanguageFeatureDebounceService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\n\t\tconst register = (model: ITextModel) => {\n\t\t\tthis._watchers.get(model.uri)?.dispose();\n\t\t\tthis._watchers.set(model.uri, new ModelSemanticColoring(model, semanticTokensStylingService, themeService, languageFeatureDebounceService, languageFeaturesService));\n\t\t};\n\t\tconst deregister = (model: ITextModel, modelSemanticColoring: ModelSemanticColoring) => {\n\t\t\tmodelSemanticColoring.dispose();\n\t\t\tthis._watchers.delete(model.uri);\n\t\t};\n\t\tconst handleSettingOrThemeChange = () => {\n\t\t\tfor (const model of modelService.getModels()) {\n\t\t\t\tconst curr = this._watchers.get(model.uri);\n\t\t\t\tif (isSemanticColoringEnabled(model, themeService, configurationService)) {\n\t\t\t\t\tif (!curr) {\n\t\t\t\t\t\tregister(model);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (curr) {\n\t\t\t\t\t\tderegister(model, curr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tmodelService.getModels().forEach(model => {\n\t\t\tif (isSemanticColoringEnabled(model, themeService, configurationService)) {\n\t\t\t\tregister(model);\n\t\t\t}\n\t\t});\n\t\tthis._register(modelService.onModelAdded((model) => {\n\t\t\tif (isSemanticColoringEnabled(model, themeService, configurationService)) {\n\t\t\t\tregister(model);\n\t\t\t}\n\t\t}));\n\t\tthis._register(modelService.onModelRemoved((model) => {\n\t\t\tconst curr = this._watchers.get(model.uri);\n\t\t\tif (curr) {\n\t\t\t\tderegister(model, curr);\n\t\t\t}\n\t\t}));\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\n\t\t\t\thandleSettingOrThemeChange();\n\t\t\t}\n\t\t}));\n\t\tthis._register(themeService.onDidColorThemeChange(handleSettingOrThemeChange));\n\t}\n\n\toverride dispose(): void {\n\t\tdispose(this._watchers.values());\n\t\tthis._watchers.clear();\n\n\t\tsuper.dispose();\n\t}\n}\n\nclass ModelSemanticColoring extends Disposable {\n\n\tpublic static REQUEST_MIN_DELAY = 300;\n\tpublic static REQUEST_MAX_DELAY = 2000;\n\n\tprivate _isDisposed: boolean;\n\tprivate readonly _model: ITextModel;\n\tprivate readonly _provider: LanguageFeatureRegistry<DocumentSemanticTokensProvider>;\n\tprivate readonly _debounceInformation: IFeatureDebounceInformation;\n\tprivate readonly _fetchDocumentSemanticTokens: RunOnceScheduler;\n\tprivate _currentDocumentResponse: SemanticTokensResponse | null;\n\tprivate _currentDocumentRequestCancellationTokenSource: CancellationTokenSource | null;\n\tprivate _documentProvidersChangeListeners: IDisposable[];\n\tprivate _providersChangedDuringRequest: boolean;\n\n\tconstructor(\n\t\tmodel: ITextModel,\n\t\t@ISemanticTokensStylingService private readonly _semanticTokensStylingService: ISemanticTokensStylingService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILanguageFeatureDebounceService languageFeatureDebounceService: ILanguageFeatureDebounceService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\n\t\tthis._isDisposed = false;\n\t\tthis._model = model;\n\t\tthis._provider = languageFeaturesService.documentSemanticTokensProvider;\n\t\tthis._debounceInformation = languageFeatureDebounceService.for(this._provider, 'DocumentSemanticTokens', { min: ModelSemanticColoring.REQUEST_MIN_DELAY, max: ModelSemanticColoring.REQUEST_MAX_DELAY });\n\t\tthis._fetchDocumentSemanticTokens = this._register(new RunOnceScheduler(() => this._fetchDocumentSemanticTokensNow(), ModelSemanticColoring.REQUEST_MIN_DELAY));\n\t\tthis._currentDocumentResponse = null;\n\t\tthis._currentDocumentRequestCancellationTokenSource = null;\n\t\tthis._documentProvidersChangeListeners = [];\n\t\tthis._providersChangedDuringRequest = false;\n\n\t\tthis._register(this._model.onDidChangeContent(() => {\n\t\t\tif (!this._fetchDocumentSemanticTokens.isScheduled()) {\n\t\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._model.onDidChangeAttached(() => {\n\t\t\tif (!this._fetchDocumentSemanticTokens.isScheduled()) {\n\t\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._model.onDidChangeLanguage(() => {\n\t\t\t// clear any outstanding state\n\t\t\tif (this._currentDocumentResponse) {\n\t\t\t\tthis._currentDocumentResponse.dispose();\n\t\t\t\tthis._currentDocumentResponse = null;\n\t\t\t}\n\t\t\tif (this._currentDocumentRequestCancellationTokenSource) {\n\t\t\t\tthis._currentDocumentRequestCancellationTokenSource.cancel();\n\t\t\t\tthis._currentDocumentRequestCancellationTokenSource = null;\n\t\t\t}\n\t\t\tthis._setDocumentSemanticTokens(null, null, null, []);\n\t\t\tthis._fetchDocumentSemanticTokens.schedule(0);\n\t\t}));\n\n\t\tconst bindDocumentChangeListeners = () => {\n\t\t\tdispose(this._documentProvidersChangeListeners);\n\t\t\tthis._documentProvidersChangeListeners = [];\n\t\t\tfor (const provider of this._provider.all(model)) {\n\t\t\t\tif (typeof provider.onDidChange === 'function') {\n\t\t\t\t\tthis._documentProvidersChangeListeners.push(provider.onDidChange(() => {\n\t\t\t\t\t\tif (this._currentDocumentRequestCancellationTokenSource) {\n\t\t\t\t\t\t\t// there is already a request running,\n\t\t\t\t\t\t\tthis._providersChangedDuringRequest = true;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._fetchDocumentSemanticTokens.schedule(0);\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tbindDocumentChangeListeners();\n\t\tthis._register(this._provider.onDidChange(() => {\n\t\t\tbindDocumentChangeListeners();\n\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t}));\n\n\t\tthis._register(themeService.onDidColorThemeChange(_ => {\n\t\t\t// clear out existing tokens\n\t\t\tthis._setDocumentSemanticTokens(null, null, null, []);\n\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t}));\n\n\t\tthis._fetchDocumentSemanticTokens.schedule(0);\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._currentDocumentResponse) {\n\t\t\tthis._currentDocumentResponse.dispose();\n\t\t\tthis._currentDocumentResponse = null;\n\t\t}\n\t\tif (this._currentDocumentRequestCancellationTokenSource) {\n\t\t\tthis._currentDocumentRequestCancellationTokenSource.cancel();\n\t\t\tthis._currentDocumentRequestCancellationTokenSource = null;\n\t\t}\n\t\tdispose(this._documentProvidersChangeListeners);\n\t\tthis._documentProvidersChangeListeners = [];\n\t\tthis._setDocumentSemanticTokens(null, null, null, []);\n\t\tthis._isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n\n\tprivate _fetchDocumentSemanticTokensNow(): void {\n\t\tif (this._currentDocumentRequestCancellationTokenSource) {\n\t\t\t// there is already a request running, let it finish...\n\t\t\treturn;\n\t\t}\n\n\t\tif (!hasDocumentSemanticTokensProvider(this._provider, this._model)) {\n\t\t\t// there is no provider\n\t\t\tif (this._currentDocumentResponse) {\n\t\t\t\t// there are semantic tokens set\n\t\t\t\tthis._model.tokenization.setSemanticTokens(null, false);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._model.isAttachedToEditor()) {\n\t\t\t// this document is not visible, there is no need to fetch semantic tokens for it\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tconst lastProvider = this._currentDocumentResponse ? this._currentDocumentResponse.provider : null;\n\t\tconst lastResultId = this._currentDocumentResponse ? this._currentDocumentResponse.resultId || null : null;\n\t\tconst request = getDocumentSemanticTokens(this._provider, this._model, lastProvider, lastResultId, cancellationTokenSource.token);\n\t\tthis._currentDocumentRequestCancellationTokenSource = cancellationTokenSource;\n\t\tthis._providersChangedDuringRequest = false;\n\n\t\tconst pendingChanges: IModelContentChangedEvent[] = [];\n\t\tconst contentChangeListener = this._model.onDidChangeContent((e) => {\n\t\t\tpendingChanges.push(e);\n\t\t});\n\n\t\tconst sw = new StopWatch(false);\n\t\trequest.then((res) => {\n\t\t\tthis._debounceInformation.update(this._model, sw.elapsed());\n\t\t\tthis._currentDocumentRequestCancellationTokenSource = null;\n\t\t\tcontentChangeListener.dispose();\n\n\t\t\tif (!res) {\n\t\t\t\tthis._setDocumentSemanticTokens(null, null, null, pendingChanges);\n\t\t\t} else {\n\t\t\t\tconst { provider, tokens } = res;\n\t\t\t\tconst styling = this._semanticTokensStylingService.getStyling(provider);\n\t\t\t\tthis._setDocumentSemanticTokens(provider, tokens || null, styling, pendingChanges);\n\t\t\t}\n\t\t}, (err) => {\n\t\t\tconst isExpectedError = err && (errors.isCancellationError(err) || (typeof err.message === 'string' && err.message.indexOf('busy') !== -1));\n\t\t\tif (!isExpectedError) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t}\n\n\t\t\t// Semantic tokens eats up all errors and considers errors to mean that the result is temporarily not available\n\t\t\t// The API does not have a special error kind to express this...\n\t\t\tthis._currentDocumentRequestCancellationTokenSource = null;\n\t\t\tcontentChangeListener.dispose();\n\n\t\t\tif (pendingChanges.length > 0 || this._providersChangedDuringRequest) {\n\t\t\t\t// More changes occurred while the request was running\n\t\t\t\tif (!this._fetchDocumentSemanticTokens.isScheduled()) {\n\t\t\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _copy(src: Uint32Array, srcOffset: number, dest: Uint32Array, destOffset: number, length: number): void {\n\t\t// protect against overflows\n\t\tlength = Math.min(length, dest.length - destOffset, src.length - srcOffset);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdest[destOffset + i] = src[srcOffset + i];\n\t\t}\n\t}\n\n\tprivate _setDocumentSemanticTokens(provider: DocumentSemanticTokensProvider | null, tokens: SemanticTokens | SemanticTokensEdits | null, styling: SemanticTokensProviderStyling | null, pendingChanges: IModelContentChangedEvent[]): void {\n\t\tconst currentResponse = this._currentDocumentResponse;\n\t\tconst rescheduleIfNeeded = () => {\n\t\t\tif ((pendingChanges.length > 0 || this._providersChangedDuringRequest) && !this._fetchDocumentSemanticTokens.isScheduled()) {\n\t\t\t\tthis._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n\t\t\t}\n\t\t};\n\n\t\tif (this._currentDocumentResponse) {\n\t\t\tthis._currentDocumentResponse.dispose();\n\t\t\tthis._currentDocumentResponse = null;\n\t\t}\n\t\tif (this._isDisposed) {\n\t\t\t// disposed!\n\t\t\tif (provider && tokens) {\n\t\t\t\tprovider.releaseDocumentSemanticTokens(tokens.resultId);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (!provider || !styling) {\n\t\t\tthis._model.tokenization.setSemanticTokens(null, false);\n\t\t\treturn;\n\t\t}\n\t\tif (!tokens) {\n\t\t\tthis._model.tokenization.setSemanticTokens(null, true);\n\t\t\trescheduleIfNeeded();\n\t\t\treturn;\n\t\t}\n\n\t\tif (isSemanticTokensEdits(tokens)) {\n\t\t\tif (!currentResponse) {\n\t\t\t\t// not possible!\n\t\t\t\tthis._model.tokenization.setSemanticTokens(null, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (tokens.edits.length === 0) {\n\t\t\t\t// nothing to do!\n\t\t\t\ttokens = {\n\t\t\t\t\tresultId: tokens.resultId,\n\t\t\t\t\tdata: currentResponse.data\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tlet deltaLength = 0;\n\t\t\t\tfor (const edit of tokens.edits) {\n\t\t\t\t\tdeltaLength += (edit.data ? edit.data.length : 0) - edit.deleteCount;\n\t\t\t\t}\n\n\t\t\t\tconst srcData = currentResponse.data;\n\t\t\t\tconst destData = new Uint32Array(srcData.length + deltaLength);\n\n\t\t\t\tlet srcLastStart = srcData.length;\n\t\t\t\tlet destLastStart = destData.length;\n\t\t\t\tfor (let i = tokens.edits.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst edit = tokens.edits[i];\n\n\t\t\t\t\tif (edit.start > srcData.length) {\n\t\t\t\t\t\tstyling.warnInvalidEditStart(currentResponse.resultId, tokens.resultId, i, edit.start, srcData.length);\n\t\t\t\t\t\t// The edits are invalid and there's no way to recover\n\t\t\t\t\t\tthis._model.tokenization.setSemanticTokens(null, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst copyCount = srcLastStart - (edit.start + edit.deleteCount);\n\t\t\t\t\tif (copyCount > 0) {\n\t\t\t\t\t\tModelSemanticColoring._copy(srcData, srcLastStart - copyCount, destData, destLastStart - copyCount, copyCount);\n\t\t\t\t\t\tdestLastStart -= copyCount;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (edit.data) {\n\t\t\t\t\t\tModelSemanticColoring._copy(edit.data, 0, destData, destLastStart - edit.data.length, edit.data.length);\n\t\t\t\t\t\tdestLastStart -= edit.data.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tsrcLastStart = edit.start;\n\t\t\t\t}\n\n\t\t\t\tif (srcLastStart > 0) {\n\t\t\t\t\tModelSemanticColoring._copy(srcData, 0, destData, 0, srcLastStart);\n\t\t\t\t}\n\n\t\t\t\ttokens = {\n\t\t\t\t\tresultId: tokens.resultId,\n\t\t\t\t\tdata: destData\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (isSemanticTokens(tokens)) {\n\n\t\t\tthis._currentDocumentResponse = new SemanticTokensResponse(provider, tokens.resultId, tokens.data);\n\n\t\t\tconst result = toMultilineTokens2(tokens, styling, this._model.getLanguageId());\n\n\t\t\t// Adjust incoming semantic tokens\n\t\t\tif (pendingChanges.length > 0) {\n\t\t\t\t// More changes occurred while the request was running\n\t\t\t\t// We need to:\n\t\t\t\t// 1. Adjust incoming semantic tokens\n\t\t\t\t// 2. Request them again\n\t\t\t\tfor (const change of pendingChanges) {\n\t\t\t\t\tfor (const area of result) {\n\t\t\t\t\t\tfor (const singleChange of change.changes) {\n\t\t\t\t\t\t\tarea.applyEdit(singleChange.range, singleChange.text);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._model.tokenization.setSemanticTokens(result, true);\n\t\t} else {\n\t\t\tthis._model.tokenization.setSemanticTokens(null, true);\n\t\t}\n\n\t\trescheduleIfNeeded();\n\t}\n}\n\nclass SemanticTokensResponse {\n\tconstructor(\n\t\tpublic readonly provider: DocumentSemanticTokensProvider,\n\t\tpublic readonly resultId: string | undefined,\n\t\tpublic readonly data: Uint32Array\n\t) { }\n\n\tpublic dispose(): void {\n\t\tthis.provider.releaseDocumentSemanticTokens(this.resultId);\n\t}\n}\n\nregisterEditorFeature(DocumentSemanticTokensFeature);\n"]}