{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/animation.ts","vs/editor/contrib/inlineCompletions/browser/model/animation.ts"],"names":[],"mappings":"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","file":"animation.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveWindow } from '../../../../../base/browser/dom.js';\nimport { ISettableObservable, observableValue, IReader, observableSignal } from '../../../../../base/common/observable.js';\n\nexport class AnimatedValue {\n\n\tpublic readonly startTimeMs = Date.now();\n\n\tconstructor(\n\t\tpublic readonly startValue: number,\n\t\tpublic readonly endValue: number,\n\t\tpublic readonly durationMs: number,\n\t\tprivate readonly _interpolationFunction: InterpolationFunction = easeOutExpo,\n\t) {\n\t\tif (startValue === endValue) {\n\t\t\tthis.durationMs = 0;\n\t\t}\n\t}\n\n\tisFinished(): boolean {\n\t\treturn Date.now() >= this.startTimeMs + this.durationMs;\n\t}\n\n\tgetValue(): number {\n\t\tconst timePassed = Date.now() - this.startTimeMs;\n\t\tif (timePassed >= this.durationMs) {\n\t\t\treturn this.endValue;\n\t\t}\n\t\tconst value = this._interpolationFunction(timePassed, this.startValue, this.endValue - this.startValue, this.durationMs);\n\t\treturn value;\n\t}\n}\n\ntype InterpolationFunction = (passedTime: number, start: number, length: number, totalDuration: number) => number;\n\nexport function easeOutExpo(passedTime: number, start: number, length: number, totalDuration: number): number {\n\treturn passedTime === totalDuration\n\t\t? start + length\n\t\t: length * (-Math.pow(2, -10 * passedTime / totalDuration) + 1) + start;\n}\n\nexport function easeOutCubic(passedTime: number, start: number, length: number, totalDuration: number): number {\n\treturn length * ((passedTime = passedTime / totalDuration - 1) * passedTime * passedTime + 1) + start;\n}\n\nexport class ObservableAnimatedValue {\n\n\tprivate readonly _value: ISettableObservable<AnimatedValue>;\n\n\tconstructor(\n\t\tinitialValue: AnimatedValue,\n\t) {\n\t\tthis._value = observableValue(this, initialValue);\n\t}\n\n\tgetValue(reader: IReader | undefined): number {\n\t\tconst value = this._value.read(reader);\n\t\tif (!value.isFinished()) {\n\t\t\tAnimationFrameScheduler.instance.invalidateOnNextAnimationFrame(reader);\n\t\t}\n\t\treturn value.getValue();\n\t}\n}\n\nexport class AnimationFrameScheduler {\n\tpublic static instance = new AnimationFrameScheduler();\n\n\tprivate readonly _counter = observableSignal(this);\n\n\tprivate _isScheduled = false;\n\n\tpublic invalidateOnNextAnimationFrame(reader: IReader | undefined): void {\n\t\tthis._counter.read(reader);\n\t\tif (!this._isScheduled) {\n\t\t\tthis._isScheduled = true;\n\t\t\tgetActiveWindow().requestAnimationFrame(() => {\n\t\t\t\tthis._isScheduled = false;\n\t\t\t\tthis._update();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _update(): void {\n\t\tthis._counter.trigger(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveWindow } from '../../../../../base/browser/dom.js';\nimport { ISettableObservable, observableValue, IReader, observableSignal } from '../../../../../base/common/observable.js';\n\nexport class AnimatedValue {\n\n\tpublic readonly startTimeMs = Date.now();\n\n\tconstructor(\n\t\tpublic readonly startValue: number,\n\t\tpublic readonly endValue: number,\n\t\tpublic readonly durationMs: number,\n\t\tprivate readonly _interpolationFunction: InterpolationFunction = easeOutExpo,\n\t) {\n\t\tif (startValue === endValue) {\n\t\t\tthis.durationMs = 0;\n\t\t}\n\t}\n\n\tisFinished(): boolean {\n\t\treturn Date.now() >= this.startTimeMs + this.durationMs;\n\t}\n\n\tgetValue(): number {\n\t\tconst timePassed = Date.now() - this.startTimeMs;\n\t\tif (timePassed >= this.durationMs) {\n\t\t\treturn this.endValue;\n\t\t}\n\t\tconst value = this._interpolationFunction(timePassed, this.startValue, this.endValue - this.startValue, this.durationMs);\n\t\treturn value;\n\t}\n}\n\ntype InterpolationFunction = (passedTime: number, start: number, length: number, totalDuration: number) => number;\n\nexport function easeOutExpo(passedTime: number, start: number, length: number, totalDuration: number): number {\n\treturn passedTime === totalDuration\n\t\t? start + length\n\t\t: length * (-Math.pow(2, -10 * passedTime / totalDuration) + 1) + start;\n}\n\nexport function easeOutCubic(passedTime: number, start: number, length: number, totalDuration: number): number {\n\treturn length * ((passedTime = passedTime / totalDuration - 1) * passedTime * passedTime + 1) + start;\n}\n\nexport class ObservableAnimatedValue {\n\n\tprivate readonly _value: ISettableObservable<AnimatedValue>;\n\n\tconstructor(\n\t\tinitialValue: AnimatedValue,\n\t) {\n\t\tthis._value = observableValue(this, initialValue);\n\t}\n\n\tgetValue(reader: IReader | undefined): number {\n\t\tconst value = this._value.read(reader);\n\t\tif (!value.isFinished()) {\n\t\t\tAnimationFrameScheduler.instance.invalidateOnNextAnimationFrame(reader);\n\t\t}\n\t\treturn value.getValue();\n\t}\n}\n\nexport class AnimationFrameScheduler {\n\tpublic static instance = new AnimationFrameScheduler();\n\n\tprivate readonly _counter = observableSignal(this);\n\n\tprivate _isScheduled = false;\n\n\tpublic invalidateOnNextAnimationFrame(reader: IReader | undefined): void {\n\t\tthis._counter.read(reader);\n\t\tif (!this._isScheduled) {\n\t\t\tthis._isScheduled = true;\n\t\t\tgetActiveWindow().requestAnimationFrame(() => {\n\t\t\t\tthis._isScheduled = false;\n\t\t\t\tthis._update();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _update(): void {\n\t\tthis._counter.trigger(undefined);\n\t}\n}\n"]}