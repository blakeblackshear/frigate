{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/colorPicker/browser/colorPickerParts/colorPickerBody.ts","vs/editor/contrib/colorPicker/browser/colorPickerParts/colorPickerBody.ts"],"names":[],"mappings":"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","file":"colorPickerBody.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport '../colorPicker.css';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { Color, HSVA } from '../../../../../base/common/color.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ColorPickerModel } from '../colorPickerModel.js';\nimport { SaturationBox } from './colorPickerSaturationBox.js';\nimport { InsertButton } from './colorPickerInsertButton.js';\nimport { HueStrip, OpacityStrip, Strip } from './colorPickerStrip.js';\nimport { ColorPickerWidgetType } from '../colorPickerParticipantUtils.js';\n\nconst $ = dom.$;\n\nexport class ColorPickerBody extends Disposable {\n\n\tprivate readonly _domNode: HTMLElement;\n\tprivate readonly _saturationBox: SaturationBox;\n\tprivate readonly _hueStrip: Strip;\n\tprivate readonly _opacityStrip: Strip;\n\tprivate readonly _insertButton: InsertButton | null = null;\n\n\tconstructor(container: HTMLElement, private readonly model: ColorPickerModel, private pixelRatio: number, type: ColorPickerWidgetType) {\n\t\tsuper();\n\n\t\tthis._domNode = $('.colorpicker-body');\n\t\tdom.append(container, this._domNode);\n\n\t\tthis._saturationBox = new SaturationBox(this._domNode, this.model, this.pixelRatio);\n\t\tthis._register(this._saturationBox);\n\t\tthis._register(this._saturationBox.onDidChange(this.onDidSaturationValueChange, this));\n\t\tthis._register(this._saturationBox.onColorFlushed(this.flushColor, this));\n\n\t\tthis._opacityStrip = new OpacityStrip(this._domNode, this.model, type);\n\t\tthis._register(this._opacityStrip);\n\t\tthis._register(this._opacityStrip.onDidChange(this.onDidOpacityChange, this));\n\t\tthis._register(this._opacityStrip.onColorFlushed(this.flushColor, this));\n\n\t\tthis._hueStrip = new HueStrip(this._domNode, this.model, type);\n\t\tthis._register(this._hueStrip);\n\t\tthis._register(this._hueStrip.onDidChange(this.onDidHueChange, this));\n\t\tthis._register(this._hueStrip.onColorFlushed(this.flushColor, this));\n\n\t\tif (type === ColorPickerWidgetType.Standalone) {\n\t\t\tthis._insertButton = this._register(new InsertButton(this._domNode));\n\t\t\tthis._domNode.classList.add('standalone-colorpicker');\n\t\t}\n\t}\n\n\tprivate flushColor(): void {\n\t\tthis.model.flushColor();\n\t}\n\n\tprivate onDidSaturationValueChange({ s, v }: { s: number; v: number }): void {\n\t\tconst hsva = this.model.color.hsva;\n\t\tthis.model.color = new Color(new HSVA(hsva.h, s, v, hsva.a));\n\t}\n\n\tprivate onDidOpacityChange(a: number): void {\n\t\tconst hsva = this.model.color.hsva;\n\t\tthis.model.color = new Color(new HSVA(hsva.h, hsva.s, hsva.v, a));\n\t}\n\n\tprivate onDidHueChange(value: number): void {\n\t\tconst hsva = this.model.color.hsva;\n\t\tconst h = (1 - value) * 360;\n\n\t\tthis.model.color = new Color(new HSVA(h === 360 ? 0 : h, hsva.s, hsva.v, hsva.a));\n\t}\n\n\tget domNode() {\n\t\treturn this._domNode;\n\t}\n\n\tget saturationBox() {\n\t\treturn this._saturationBox;\n\t}\n\n\tget enterButton() {\n\t\treturn this._insertButton;\n\t}\n\n\tlayout(): void {\n\t\tthis._saturationBox.layout();\n\t\tthis._opacityStrip.layout();\n\t\tthis._hueStrip.layout();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport '../colorPicker.css';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { Color, HSVA } from '../../../../../base/common/color.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ColorPickerModel } from '../colorPickerModel.js';\nimport { SaturationBox } from './colorPickerSaturationBox.js';\nimport { InsertButton } from './colorPickerInsertButton.js';\nimport { HueStrip, OpacityStrip, Strip } from './colorPickerStrip.js';\nimport { ColorPickerWidgetType } from '../colorPickerParticipantUtils.js';\n\nconst $ = dom.$;\n\nexport class ColorPickerBody extends Disposable {\n\n\tprivate readonly _domNode: HTMLElement;\n\tprivate readonly _saturationBox: SaturationBox;\n\tprivate readonly _hueStrip: Strip;\n\tprivate readonly _opacityStrip: Strip;\n\tprivate readonly _insertButton: InsertButton | null = null;\n\n\tconstructor(container: HTMLElement, private readonly model: ColorPickerModel, private pixelRatio: number, type: ColorPickerWidgetType) {\n\t\tsuper();\n\n\t\tthis._domNode = $('.colorpicker-body');\n\t\tdom.append(container, this._domNode);\n\n\t\tthis._saturationBox = new SaturationBox(this._domNode, this.model, this.pixelRatio);\n\t\tthis._register(this._saturationBox);\n\t\tthis._register(this._saturationBox.onDidChange(this.onDidSaturationValueChange, this));\n\t\tthis._register(this._saturationBox.onColorFlushed(this.flushColor, this));\n\n\t\tthis._opacityStrip = new OpacityStrip(this._domNode, this.model, type);\n\t\tthis._register(this._opacityStrip);\n\t\tthis._register(this._opacityStrip.onDidChange(this.onDidOpacityChange, this));\n\t\tthis._register(this._opacityStrip.onColorFlushed(this.flushColor, this));\n\n\t\tthis._hueStrip = new HueStrip(this._domNode, this.model, type);\n\t\tthis._register(this._hueStrip);\n\t\tthis._register(this._hueStrip.onDidChange(this.onDidHueChange, this));\n\t\tthis._register(this._hueStrip.onColorFlushed(this.flushColor, this));\n\n\t\tif (type === ColorPickerWidgetType.Standalone) {\n\t\t\tthis._insertButton = this._register(new InsertButton(this._domNode));\n\t\t\tthis._domNode.classList.add('standalone-colorpicker');\n\t\t}\n\t}\n\n\tprivate flushColor(): void {\n\t\tthis.model.flushColor();\n\t}\n\n\tprivate onDidSaturationValueChange({ s, v }: { s: number; v: number }): void {\n\t\tconst hsva = this.model.color.hsva;\n\t\tthis.model.color = new Color(new HSVA(hsva.h, s, v, hsva.a));\n\t}\n\n\tprivate onDidOpacityChange(a: number): void {\n\t\tconst hsva = this.model.color.hsva;\n\t\tthis.model.color = new Color(new HSVA(hsva.h, hsva.s, hsva.v, a));\n\t}\n\n\tprivate onDidHueChange(value: number): void {\n\t\tconst hsva = this.model.color.hsva;\n\t\tconst h = (1 - value) * 360;\n\n\t\tthis.model.color = new Color(new HSVA(h === 360 ? 0 : h, hsva.s, hsva.v, hsva.a));\n\t}\n\n\tget domNode() {\n\t\treturn this._domNode;\n\t}\n\n\tget saturationBox() {\n\t\treturn this._saturationBox;\n\t}\n\n\tget enterButton() {\n\t\treturn this._insertButton;\n\t}\n\n\tlayout(): void {\n\t\tthis._saturationBox.layout();\n\t\tthis._opacityStrip.layout();\n\t\tthis._hueStrip.layout();\n\t}\n}\n"]}