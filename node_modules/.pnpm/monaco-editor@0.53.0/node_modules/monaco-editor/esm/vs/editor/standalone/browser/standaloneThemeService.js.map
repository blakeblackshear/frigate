{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/standalone/browser/standaloneThemeService.ts","vs/editor/standalone/browser/standaloneThemeService.ts"],"names":[],"mappings":"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","file":"standaloneThemeService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport * as domStylesheetsJs from '../../../base/browser/domStylesheets.js';\nimport { addMatchMediaChangeListener } from '../../../base/browser/browser.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { FontStyle, TokenMetadata } from '../../common/encodedTokenAttributes.js';\nimport { ITokenThemeRule, TokenTheme, generateTokensCSSForColorMap } from '../../common/languages/supports/tokenization.js';\nimport { BuiltinTheme, IStandaloneTheme, IStandaloneThemeData, IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { hc_black, hc_light, vs, vs_dark } from '../common/themes.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { asCssVariableName, ColorIdentifier, Extensions, IColorRegistry } from '../../../platform/theme/common/colorRegistry.js';\nimport { Extensions as ThemingExtensions, ICssStyleCollector, IFileIconTheme, IProductIconTheme, IThemingRegistry, ITokenStyle } from '../../../platform/theme/common/themeService.js';\nimport { IDisposable, Disposable } from '../../../base/common/lifecycle.js';\nimport { ColorScheme, isDark, isHighContrast } from '../../../platform/theme/common/theme.js';\nimport { getIconsStyleSheet, UnthemedProductIconTheme } from '../../../platform/theme/browser/iconsStyleSheet.js';\nimport { mainWindow } from '../../../base/browser/window.js';\n\nexport const VS_LIGHT_THEME_NAME = 'vs';\nexport const VS_DARK_THEME_NAME = 'vs-dark';\nexport const HC_BLACK_THEME_NAME = 'hc-black';\nexport const HC_LIGHT_THEME_NAME = 'hc-light';\n\nconst colorRegistry = Registry.as<IColorRegistry>(Extensions.ColorContribution);\nconst themingRegistry = Registry.as<IThemingRegistry>(ThemingExtensions.ThemingContribution);\n\nclass StandaloneTheme implements IStandaloneTheme {\n\n\tpublic readonly id: string;\n\tpublic readonly themeName: string;\n\n\tprivate readonly themeData: IStandaloneThemeData;\n\tprivate colors: Map<string, Color> | null;\n\tprivate readonly defaultColors: { [colorId: string]: Color | undefined };\n\tprivate _tokenTheme: TokenTheme | null;\n\n\tconstructor(name: string, standaloneThemeData: IStandaloneThemeData) {\n\t\tthis.themeData = standaloneThemeData;\n\t\tconst base = standaloneThemeData.base;\n\t\tif (name.length > 0) {\n\t\t\tif (isBuiltinTheme(name)) {\n\t\t\t\tthis.id = name;\n\t\t\t} else {\n\t\t\t\tthis.id = base + ' ' + name;\n\t\t\t}\n\t\t\tthis.themeName = name;\n\t\t} else {\n\t\t\tthis.id = base;\n\t\t\tthis.themeName = base;\n\t\t}\n\t\tthis.colors = null;\n\t\tthis.defaultColors = Object.create(null);\n\t\tthis._tokenTheme = null;\n\t}\n\n\tpublic get base(): string {\n\t\treturn this.themeData.base;\n\t}\n\n\tpublic notifyBaseUpdated() {\n\t\tif (this.themeData.inherit) {\n\t\t\tthis.colors = null;\n\t\t\tthis._tokenTheme = null;\n\t\t}\n\t}\n\n\tprivate getColors(): Map<string, Color> {\n\t\tif (!this.colors) {\n\t\t\tconst colors = new Map<string, Color>();\n\t\t\tfor (const id in this.themeData.colors) {\n\t\t\t\tcolors.set(id, Color.fromHex(this.themeData.colors[id]));\n\t\t\t}\n\t\t\tif (this.themeData.inherit) {\n\t\t\t\tconst baseData = getBuiltinRules(this.themeData.base);\n\t\t\t\tfor (const id in baseData.colors) {\n\t\t\t\t\tif (!colors.has(id)) {\n\t\t\t\t\t\tcolors.set(id, Color.fromHex(baseData.colors[id]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.colors = colors;\n\t\t}\n\t\treturn this.colors;\n\t}\n\n\tpublic getColor(colorId: ColorIdentifier, useDefault?: boolean): Color | undefined {\n\t\tconst color = this.getColors().get(colorId);\n\t\tif (color) {\n\t\t\treturn color;\n\t\t}\n\t\tif (useDefault !== false) {\n\t\t\treturn this.getDefault(colorId);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getDefault(colorId: ColorIdentifier): Color | undefined {\n\t\tlet color = this.defaultColors[colorId];\n\t\tif (color) {\n\t\t\treturn color;\n\t\t}\n\t\tcolor = colorRegistry.resolveDefaultColor(colorId, this);\n\t\tthis.defaultColors[colorId] = color;\n\t\treturn color;\n\t}\n\n\tpublic defines(colorId: ColorIdentifier): boolean {\n\t\treturn this.getColors().has(colorId);\n\t}\n\n\tpublic get type(): ColorScheme {\n\t\tswitch (this.base) {\n\t\t\tcase VS_LIGHT_THEME_NAME: return ColorScheme.LIGHT;\n\t\t\tcase HC_BLACK_THEME_NAME: return ColorScheme.HIGH_CONTRAST_DARK;\n\t\t\tcase HC_LIGHT_THEME_NAME: return ColorScheme.HIGH_CONTRAST_LIGHT;\n\t\t\tdefault: return ColorScheme.DARK;\n\t\t}\n\t}\n\n\tpublic get tokenTheme(): TokenTheme {\n\t\tif (!this._tokenTheme) {\n\t\t\tlet rules: ITokenThemeRule[] = [];\n\t\t\tlet encodedTokensColors: string[] = [];\n\t\t\tif (this.themeData.inherit) {\n\t\t\t\tconst baseData = getBuiltinRules(this.themeData.base);\n\t\t\t\trules = baseData.rules;\n\t\t\t\tif (baseData.encodedTokensColors) {\n\t\t\t\t\tencodedTokensColors = baseData.encodedTokensColors;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Pick up default colors from `editor.foreground` and `editor.background` if available\n\t\t\tconst editorForeground = this.themeData.colors['editor.foreground'];\n\t\t\tconst editorBackground = this.themeData.colors['editor.background'];\n\t\t\tif (editorForeground || editorBackground) {\n\t\t\t\tconst rule: ITokenThemeRule = { token: '' };\n\t\t\t\tif (editorForeground) {\n\t\t\t\t\trule.foreground = editorForeground;\n\t\t\t\t}\n\t\t\t\tif (editorBackground) {\n\t\t\t\t\trule.background = editorBackground;\n\t\t\t\t}\n\t\t\t\trules.push(rule);\n\t\t\t}\n\t\t\trules = rules.concat(this.themeData.rules);\n\t\t\tif (this.themeData.encodedTokensColors) {\n\t\t\t\tencodedTokensColors = this.themeData.encodedTokensColors;\n\t\t\t}\n\t\t\tthis._tokenTheme = TokenTheme.createFromRawTokenTheme(rules, encodedTokensColors);\n\t\t}\n\t\treturn this._tokenTheme;\n\t}\n\n\tpublic getTokenStyleMetadata(type: string, modifiers: string[], modelLanguage: string): ITokenStyle | undefined {\n\t\t// use theme rules match\n\t\tconst style = this.tokenTheme._match([type].concat(modifiers).join('.'));\n\t\tconst metadata = style.metadata;\n\t\tconst foreground = TokenMetadata.getForeground(metadata);\n\t\tconst fontStyle = TokenMetadata.getFontStyle(metadata);\n\t\treturn {\n\t\t\tforeground: foreground,\n\t\t\titalic: Boolean(fontStyle & FontStyle.Italic),\n\t\t\tbold: Boolean(fontStyle & FontStyle.Bold),\n\t\t\tunderline: Boolean(fontStyle & FontStyle.Underline),\n\t\t\tstrikethrough: Boolean(fontStyle & FontStyle.Strikethrough)\n\t\t};\n\t}\n\n\tpublic get tokenColorMap(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic readonly semanticHighlighting = false;\n}\n\nfunction isBuiltinTheme(themeName: string): themeName is BuiltinTheme {\n\treturn (\n\t\tthemeName === VS_LIGHT_THEME_NAME\n\t\t|| themeName === VS_DARK_THEME_NAME\n\t\t|| themeName === HC_BLACK_THEME_NAME\n\t\t|| themeName === HC_LIGHT_THEME_NAME\n\t);\n}\n\nfunction getBuiltinRules(builtinTheme: BuiltinTheme): IStandaloneThemeData {\n\tswitch (builtinTheme) {\n\t\tcase VS_LIGHT_THEME_NAME:\n\t\t\treturn vs;\n\t\tcase VS_DARK_THEME_NAME:\n\t\t\treturn vs_dark;\n\t\tcase HC_BLACK_THEME_NAME:\n\t\t\treturn hc_black;\n\t\tcase HC_LIGHT_THEME_NAME:\n\t\t\treturn hc_light;\n\t}\n}\n\nfunction newBuiltInTheme(builtinTheme: BuiltinTheme): StandaloneTheme {\n\tconst themeData = getBuiltinRules(builtinTheme);\n\treturn new StandaloneTheme(builtinTheme, themeData);\n}\n\nexport class StandaloneThemeService extends Disposable implements IStandaloneThemeService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onColorThemeChange = this._register(new Emitter<IStandaloneTheme>());\n\tpublic readonly onDidColorThemeChange = this._onColorThemeChange.event;\n\n\tprivate readonly _onProductIconThemeChange = this._register(new Emitter<IProductIconTheme>());\n\tpublic readonly onDidProductIconThemeChange = this._onProductIconThemeChange.event;\n\n\tprivate readonly _environment: IEnvironmentService = Object.create(null);\n\tprivate readonly _knownThemes: Map<string, StandaloneTheme>;\n\tprivate _autoDetectHighContrast: boolean;\n\tprivate _codiconCSS: string;\n\tprivate _themeCSS: string;\n\tprivate _allCSS: string;\n\tprivate _globalStyleElement: HTMLStyleElement | null;\n\tprivate _styleElements: HTMLStyleElement[];\n\tprivate _colorMapOverride: Color[] | null;\n\tprivate _theme!: IStandaloneTheme;\n\n\tprivate _builtInProductIconTheme = new UnthemedProductIconTheme();\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._autoDetectHighContrast = true;\n\n\t\tthis._knownThemes = new Map<string, StandaloneTheme>();\n\t\tthis._knownThemes.set(VS_LIGHT_THEME_NAME, newBuiltInTheme(VS_LIGHT_THEME_NAME));\n\t\tthis._knownThemes.set(VS_DARK_THEME_NAME, newBuiltInTheme(VS_DARK_THEME_NAME));\n\t\tthis._knownThemes.set(HC_BLACK_THEME_NAME, newBuiltInTheme(HC_BLACK_THEME_NAME));\n\t\tthis._knownThemes.set(HC_LIGHT_THEME_NAME, newBuiltInTheme(HC_LIGHT_THEME_NAME));\n\n\t\tconst iconsStyleSheet = this._register(getIconsStyleSheet(this));\n\n\t\tthis._codiconCSS = iconsStyleSheet.getCSS();\n\t\tthis._themeCSS = '';\n\t\tthis._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\n\t\tthis._globalStyleElement = null;\n\t\tthis._styleElements = [];\n\t\tthis._colorMapOverride = null;\n\t\tthis.setTheme(VS_LIGHT_THEME_NAME);\n\t\tthis._onOSSchemeChanged();\n\n\t\tthis._register(iconsStyleSheet.onDidChange(() => {\n\t\t\tthis._codiconCSS = iconsStyleSheet.getCSS();\n\t\t\tthis._updateCSS();\n\t\t}));\n\n\t\taddMatchMediaChangeListener(mainWindow, '(forced-colors: active)', () => {\n\t\t\tthis._onOSSchemeChanged();\n\t\t});\n\t}\n\n\tpublic registerEditorContainer(domNode: HTMLElement): IDisposable {\n\t\tif (dom.isInShadowDOM(domNode)) {\n\t\t\treturn this._registerShadowDomContainer(domNode);\n\t\t}\n\t\treturn this._registerRegularEditorContainer();\n\t}\n\n\tprivate _registerRegularEditorContainer(): IDisposable {\n\t\tif (!this._globalStyleElement) {\n\t\t\tthis._globalStyleElement = domStylesheetsJs.createStyleSheet(undefined, style => {\n\t\t\t\tstyle.className = 'monaco-colors';\n\t\t\t\tstyle.textContent = this._allCSS;\n\t\t\t});\n\t\t\tthis._styleElements.push(this._globalStyleElement);\n\t\t}\n\t\treturn Disposable.None;\n\t}\n\n\tprivate _registerShadowDomContainer(domNode: HTMLElement): IDisposable {\n\t\tconst styleElement = domStylesheetsJs.createStyleSheet(domNode, style => {\n\t\t\tstyle.className = 'monaco-colors';\n\t\t\tstyle.textContent = this._allCSS;\n\t\t});\n\t\tthis._styleElements.push(styleElement);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tfor (let i = 0; i < this._styleElements.length; i++) {\n\t\t\t\t\tif (this._styleElements[i] === styleElement) {\n\t\t\t\t\t\tthis._styleElements.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic defineTheme(themeName: string, themeData: IStandaloneThemeData): void {\n\t\tif (!/^[a-z0-9\\-]+$/i.test(themeName)) {\n\t\t\tthrow new Error('Illegal theme name!');\n\t\t}\n\t\tif (!isBuiltinTheme(themeData.base) && !isBuiltinTheme(themeName)) {\n\t\t\tthrow new Error('Illegal theme base!');\n\t\t}\n\t\t// set or replace theme\n\t\tthis._knownThemes.set(themeName, new StandaloneTheme(themeName, themeData));\n\n\t\tif (isBuiltinTheme(themeName)) {\n\t\t\tthis._knownThemes.forEach(theme => {\n\t\t\t\tif (theme.base === themeName) {\n\t\t\t\t\ttheme.notifyBaseUpdated();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (this._theme.themeName === themeName) {\n\t\t\tthis.setTheme(themeName); // refresh theme\n\t\t}\n\t}\n\n\tpublic getColorTheme(): IStandaloneTheme {\n\t\treturn this._theme;\n\t}\n\n\tpublic setColorMapOverride(colorMapOverride: Color[] | null): void {\n\t\tthis._colorMapOverride = colorMapOverride;\n\t\tthis._updateThemeOrColorMap();\n\t}\n\n\tpublic setTheme(themeName: string): void {\n\t\tlet theme: StandaloneTheme | undefined;\n\t\tif (this._knownThemes.has(themeName)) {\n\t\t\ttheme = this._knownThemes.get(themeName);\n\t\t} else {\n\t\t\ttheme = this._knownThemes.get(VS_LIGHT_THEME_NAME);\n\t\t}\n\t\tthis._updateActualTheme(theme);\n\t}\n\n\tprivate _updateActualTheme(desiredTheme: IStandaloneTheme | undefined): void {\n\t\tif (!desiredTheme || this._theme === desiredTheme) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._theme = desiredTheme;\n\t\tthis._updateThemeOrColorMap();\n\t}\n\n\tprivate _onOSSchemeChanged() {\n\t\tif (this._autoDetectHighContrast) {\n\t\t\tconst wantsHighContrast = mainWindow.matchMedia(`(forced-colors: active)`).matches;\n\t\t\tif (wantsHighContrast !== isHighContrast(this._theme.type)) {\n\t\t\t\t// switch to high contrast or non-high contrast but stick to dark or light\n\t\t\t\tlet newThemeName;\n\t\t\t\tif (isDark(this._theme.type)) {\n\t\t\t\t\tnewThemeName = wantsHighContrast ? HC_BLACK_THEME_NAME : VS_DARK_THEME_NAME;\n\t\t\t\t} else {\n\t\t\t\t\tnewThemeName = wantsHighContrast ? HC_LIGHT_THEME_NAME : VS_LIGHT_THEME_NAME;\n\t\t\t\t}\n\t\t\t\tthis._updateActualTheme(this._knownThemes.get(newThemeName));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setAutoDetectHighContrast(autoDetectHighContrast: boolean): void {\n\t\tthis._autoDetectHighContrast = autoDetectHighContrast;\n\t\tthis._onOSSchemeChanged();\n\t}\n\n\tprivate _updateThemeOrColorMap(): void {\n\t\tconst cssRules: string[] = [];\n\t\tconst hasRule: { [rule: string]: boolean } = {};\n\t\tconst ruleCollector: ICssStyleCollector = {\n\t\t\taddRule: (rule: string) => {\n\t\t\t\tif (!hasRule[rule]) {\n\t\t\t\t\tcssRules.push(rule);\n\t\t\t\t\thasRule[rule] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthemingRegistry.getThemingParticipants().forEach(p => p(this._theme, ruleCollector, this._environment));\n\n\t\tconst colorVariables: string[] = [];\n\t\tfor (const item of colorRegistry.getColors()) {\n\t\t\tconst color = this._theme.getColor(item.id, true);\n\t\t\tif (color) {\n\t\t\t\tcolorVariables.push(`${asCssVariableName(item.id)}: ${color.toString()};`);\n\t\t\t}\n\t\t}\n\t\truleCollector.addRule(`.monaco-editor, .monaco-diff-editor, .monaco-component { ${colorVariables.join('\\n')} }`);\n\n\t\tconst colorMap = this._colorMapOverride || this._theme.tokenTheme.getColorMap();\n\t\truleCollector.addRule(generateTokensCSSForColorMap(colorMap));\n\n\t\tthis._themeCSS = cssRules.join('\\n');\n\t\tthis._updateCSS();\n\n\t\tTokenizationRegistry.setColorMap(colorMap);\n\t\tthis._onColorThemeChange.fire(this._theme);\n\t}\n\n\tprivate _updateCSS(): void {\n\t\tthis._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\n\t\tthis._styleElements.forEach(styleElement => styleElement.textContent = this._allCSS);\n\t}\n\n\tpublic getFileIconTheme(): IFileIconTheme {\n\t\treturn {\n\t\t\thasFileIcons: false,\n\t\t\thasFolderIcons: false,\n\t\t\thidesExplorerArrows: false\n\t\t};\n\t}\n\n\tpublic getProductIconTheme(): IProductIconTheme {\n\t\treturn this._builtInProductIconTheme;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport * as domStylesheetsJs from '../../../base/browser/domStylesheets.js';\nimport { addMatchMediaChangeListener } from '../../../base/browser/browser.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { FontStyle, TokenMetadata } from '../../common/encodedTokenAttributes.js';\nimport { ITokenThemeRule, TokenTheme, generateTokensCSSForColorMap } from '../../common/languages/supports/tokenization.js';\nimport { BuiltinTheme, IStandaloneTheme, IStandaloneThemeData, IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { hc_black, hc_light, vs, vs_dark } from '../common/themes.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { asCssVariableName, ColorIdentifier, Extensions, IColorRegistry } from '../../../platform/theme/common/colorRegistry.js';\nimport { Extensions as ThemingExtensions, ICssStyleCollector, IFileIconTheme, IProductIconTheme, IThemingRegistry, ITokenStyle } from '../../../platform/theme/common/themeService.js';\nimport { IDisposable, Disposable } from '../../../base/common/lifecycle.js';\nimport { ColorScheme, isDark, isHighContrast } from '../../../platform/theme/common/theme.js';\nimport { getIconsStyleSheet, UnthemedProductIconTheme } from '../../../platform/theme/browser/iconsStyleSheet.js';\nimport { mainWindow } from '../../../base/browser/window.js';\n\nexport const VS_LIGHT_THEME_NAME = 'vs';\nexport const VS_DARK_THEME_NAME = 'vs-dark';\nexport const HC_BLACK_THEME_NAME = 'hc-black';\nexport const HC_LIGHT_THEME_NAME = 'hc-light';\n\nconst colorRegistry = Registry.as<IColorRegistry>(Extensions.ColorContribution);\nconst themingRegistry = Registry.as<IThemingRegistry>(ThemingExtensions.ThemingContribution);\n\nclass StandaloneTheme implements IStandaloneTheme {\n\n\tpublic readonly id: string;\n\tpublic readonly themeName: string;\n\n\tprivate readonly themeData: IStandaloneThemeData;\n\tprivate colors: Map<string, Color> | null;\n\tprivate readonly defaultColors: { [colorId: string]: Color | undefined };\n\tprivate _tokenTheme: TokenTheme | null;\n\n\tconstructor(name: string, standaloneThemeData: IStandaloneThemeData) {\n\t\tthis.themeData = standaloneThemeData;\n\t\tconst base = standaloneThemeData.base;\n\t\tif (name.length > 0) {\n\t\t\tif (isBuiltinTheme(name)) {\n\t\t\t\tthis.id = name;\n\t\t\t} else {\n\t\t\t\tthis.id = base + ' ' + name;\n\t\t\t}\n\t\t\tthis.themeName = name;\n\t\t} else {\n\t\t\tthis.id = base;\n\t\t\tthis.themeName = base;\n\t\t}\n\t\tthis.colors = null;\n\t\tthis.defaultColors = Object.create(null);\n\t\tthis._tokenTheme = null;\n\t}\n\n\tpublic get base(): string {\n\t\treturn this.themeData.base;\n\t}\n\n\tpublic notifyBaseUpdated() {\n\t\tif (this.themeData.inherit) {\n\t\t\tthis.colors = null;\n\t\t\tthis._tokenTheme = null;\n\t\t}\n\t}\n\n\tprivate getColors(): Map<string, Color> {\n\t\tif (!this.colors) {\n\t\t\tconst colors = new Map<string, Color>();\n\t\t\tfor (const id in this.themeData.colors) {\n\t\t\t\tcolors.set(id, Color.fromHex(this.themeData.colors[id]));\n\t\t\t}\n\t\t\tif (this.themeData.inherit) {\n\t\t\t\tconst baseData = getBuiltinRules(this.themeData.base);\n\t\t\t\tfor (const id in baseData.colors) {\n\t\t\t\t\tif (!colors.has(id)) {\n\t\t\t\t\t\tcolors.set(id, Color.fromHex(baseData.colors[id]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.colors = colors;\n\t\t}\n\t\treturn this.colors;\n\t}\n\n\tpublic getColor(colorId: ColorIdentifier, useDefault?: boolean): Color | undefined {\n\t\tconst color = this.getColors().get(colorId);\n\t\tif (color) {\n\t\t\treturn color;\n\t\t}\n\t\tif (useDefault !== false) {\n\t\t\treturn this.getDefault(colorId);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getDefault(colorId: ColorIdentifier): Color | undefined {\n\t\tlet color = this.defaultColors[colorId];\n\t\tif (color) {\n\t\t\treturn color;\n\t\t}\n\t\tcolor = colorRegistry.resolveDefaultColor(colorId, this);\n\t\tthis.defaultColors[colorId] = color;\n\t\treturn color;\n\t}\n\n\tpublic defines(colorId: ColorIdentifier): boolean {\n\t\treturn this.getColors().has(colorId);\n\t}\n\n\tpublic get type(): ColorScheme {\n\t\tswitch (this.base) {\n\t\t\tcase VS_LIGHT_THEME_NAME: return ColorScheme.LIGHT;\n\t\t\tcase HC_BLACK_THEME_NAME: return ColorScheme.HIGH_CONTRAST_DARK;\n\t\t\tcase HC_LIGHT_THEME_NAME: return ColorScheme.HIGH_CONTRAST_LIGHT;\n\t\t\tdefault: return ColorScheme.DARK;\n\t\t}\n\t}\n\n\tpublic get tokenTheme(): TokenTheme {\n\t\tif (!this._tokenTheme) {\n\t\t\tlet rules: ITokenThemeRule[] = [];\n\t\t\tlet encodedTokensColors: string[] = [];\n\t\t\tif (this.themeData.inherit) {\n\t\t\t\tconst baseData = getBuiltinRules(this.themeData.base);\n\t\t\t\trules = baseData.rules;\n\t\t\t\tif (baseData.encodedTokensColors) {\n\t\t\t\t\tencodedTokensColors = baseData.encodedTokensColors;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Pick up default colors from `editor.foreground` and `editor.background` if available\n\t\t\tconst editorForeground = this.themeData.colors['editor.foreground'];\n\t\t\tconst editorBackground = this.themeData.colors['editor.background'];\n\t\t\tif (editorForeground || editorBackground) {\n\t\t\t\tconst rule: ITokenThemeRule = { token: '' };\n\t\t\t\tif (editorForeground) {\n\t\t\t\t\trule.foreground = editorForeground;\n\t\t\t\t}\n\t\t\t\tif (editorBackground) {\n\t\t\t\t\trule.background = editorBackground;\n\t\t\t\t}\n\t\t\t\trules.push(rule);\n\t\t\t}\n\t\t\trules = rules.concat(this.themeData.rules);\n\t\t\tif (this.themeData.encodedTokensColors) {\n\t\t\t\tencodedTokensColors = this.themeData.encodedTokensColors;\n\t\t\t}\n\t\t\tthis._tokenTheme = TokenTheme.createFromRawTokenTheme(rules, encodedTokensColors);\n\t\t}\n\t\treturn this._tokenTheme;\n\t}\n\n\tpublic getTokenStyleMetadata(type: string, modifiers: string[], modelLanguage: string): ITokenStyle | undefined {\n\t\t// use theme rules match\n\t\tconst style = this.tokenTheme._match([type].concat(modifiers).join('.'));\n\t\tconst metadata = style.metadata;\n\t\tconst foreground = TokenMetadata.getForeground(metadata);\n\t\tconst fontStyle = TokenMetadata.getFontStyle(metadata);\n\t\treturn {\n\t\t\tforeground: foreground,\n\t\t\titalic: Boolean(fontStyle & FontStyle.Italic),\n\t\t\tbold: Boolean(fontStyle & FontStyle.Bold),\n\t\t\tunderline: Boolean(fontStyle & FontStyle.Underline),\n\t\t\tstrikethrough: Boolean(fontStyle & FontStyle.Strikethrough)\n\t\t};\n\t}\n\n\tpublic get tokenColorMap(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic readonly semanticHighlighting = false;\n}\n\nfunction isBuiltinTheme(themeName: string): themeName is BuiltinTheme {\n\treturn (\n\t\tthemeName === VS_LIGHT_THEME_NAME\n\t\t|| themeName === VS_DARK_THEME_NAME\n\t\t|| themeName === HC_BLACK_THEME_NAME\n\t\t|| themeName === HC_LIGHT_THEME_NAME\n\t);\n}\n\nfunction getBuiltinRules(builtinTheme: BuiltinTheme): IStandaloneThemeData {\n\tswitch (builtinTheme) {\n\t\tcase VS_LIGHT_THEME_NAME:\n\t\t\treturn vs;\n\t\tcase VS_DARK_THEME_NAME:\n\t\t\treturn vs_dark;\n\t\tcase HC_BLACK_THEME_NAME:\n\t\t\treturn hc_black;\n\t\tcase HC_LIGHT_THEME_NAME:\n\t\t\treturn hc_light;\n\t}\n}\n\nfunction newBuiltInTheme(builtinTheme: BuiltinTheme): StandaloneTheme {\n\tconst themeData = getBuiltinRules(builtinTheme);\n\treturn new StandaloneTheme(builtinTheme, themeData);\n}\n\nexport class StandaloneThemeService extends Disposable implements IStandaloneThemeService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onColorThemeChange = this._register(new Emitter<IStandaloneTheme>());\n\tpublic readonly onDidColorThemeChange = this._onColorThemeChange.event;\n\n\tprivate readonly _onProductIconThemeChange = this._register(new Emitter<IProductIconTheme>());\n\tpublic readonly onDidProductIconThemeChange = this._onProductIconThemeChange.event;\n\n\tprivate readonly _environment: IEnvironmentService = Object.create(null);\n\tprivate readonly _knownThemes: Map<string, StandaloneTheme>;\n\tprivate _autoDetectHighContrast: boolean;\n\tprivate _codiconCSS: string;\n\tprivate _themeCSS: string;\n\tprivate _allCSS: string;\n\tprivate _globalStyleElement: HTMLStyleElement | null;\n\tprivate _styleElements: HTMLStyleElement[];\n\tprivate _colorMapOverride: Color[] | null;\n\tprivate _theme!: IStandaloneTheme;\n\n\tprivate _builtInProductIconTheme = new UnthemedProductIconTheme();\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._autoDetectHighContrast = true;\n\n\t\tthis._knownThemes = new Map<string, StandaloneTheme>();\n\t\tthis._knownThemes.set(VS_LIGHT_THEME_NAME, newBuiltInTheme(VS_LIGHT_THEME_NAME));\n\t\tthis._knownThemes.set(VS_DARK_THEME_NAME, newBuiltInTheme(VS_DARK_THEME_NAME));\n\t\tthis._knownThemes.set(HC_BLACK_THEME_NAME, newBuiltInTheme(HC_BLACK_THEME_NAME));\n\t\tthis._knownThemes.set(HC_LIGHT_THEME_NAME, newBuiltInTheme(HC_LIGHT_THEME_NAME));\n\n\t\tconst iconsStyleSheet = this._register(getIconsStyleSheet(this));\n\n\t\tthis._codiconCSS = iconsStyleSheet.getCSS();\n\t\tthis._themeCSS = '';\n\t\tthis._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\n\t\tthis._globalStyleElement = null;\n\t\tthis._styleElements = [];\n\t\tthis._colorMapOverride = null;\n\t\tthis.setTheme(VS_LIGHT_THEME_NAME);\n\t\tthis._onOSSchemeChanged();\n\n\t\tthis._register(iconsStyleSheet.onDidChange(() => {\n\t\t\tthis._codiconCSS = iconsStyleSheet.getCSS();\n\t\t\tthis._updateCSS();\n\t\t}));\n\n\t\taddMatchMediaChangeListener(mainWindow, '(forced-colors: active)', () => {\n\t\t\tthis._onOSSchemeChanged();\n\t\t});\n\t}\n\n\tpublic registerEditorContainer(domNode: HTMLElement): IDisposable {\n\t\tif (dom.isInShadowDOM(domNode)) {\n\t\t\treturn this._registerShadowDomContainer(domNode);\n\t\t}\n\t\treturn this._registerRegularEditorContainer();\n\t}\n\n\tprivate _registerRegularEditorContainer(): IDisposable {\n\t\tif (!this._globalStyleElement) {\n\t\t\tthis._globalStyleElement = domStylesheetsJs.createStyleSheet(undefined, style => {\n\t\t\t\tstyle.className = 'monaco-colors';\n\t\t\t\tstyle.textContent = this._allCSS;\n\t\t\t});\n\t\t\tthis._styleElements.push(this._globalStyleElement);\n\t\t}\n\t\treturn Disposable.None;\n\t}\n\n\tprivate _registerShadowDomContainer(domNode: HTMLElement): IDisposable {\n\t\tconst styleElement = domStylesheetsJs.createStyleSheet(domNode, style => {\n\t\t\tstyle.className = 'monaco-colors';\n\t\t\tstyle.textContent = this._allCSS;\n\t\t});\n\t\tthis._styleElements.push(styleElement);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tfor (let i = 0; i < this._styleElements.length; i++) {\n\t\t\t\t\tif (this._styleElements[i] === styleElement) {\n\t\t\t\t\t\tthis._styleElements.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic defineTheme(themeName: string, themeData: IStandaloneThemeData): void {\n\t\tif (!/^[a-z0-9\\-]+$/i.test(themeName)) {\n\t\t\tthrow new Error('Illegal theme name!');\n\t\t}\n\t\tif (!isBuiltinTheme(themeData.base) && !isBuiltinTheme(themeName)) {\n\t\t\tthrow new Error('Illegal theme base!');\n\t\t}\n\t\t// set or replace theme\n\t\tthis._knownThemes.set(themeName, new StandaloneTheme(themeName, themeData));\n\n\t\tif (isBuiltinTheme(themeName)) {\n\t\t\tthis._knownThemes.forEach(theme => {\n\t\t\t\tif (theme.base === themeName) {\n\t\t\t\t\ttheme.notifyBaseUpdated();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (this._theme.themeName === themeName) {\n\t\t\tthis.setTheme(themeName); // refresh theme\n\t\t}\n\t}\n\n\tpublic getColorTheme(): IStandaloneTheme {\n\t\treturn this._theme;\n\t}\n\n\tpublic setColorMapOverride(colorMapOverride: Color[] | null): void {\n\t\tthis._colorMapOverride = colorMapOverride;\n\t\tthis._updateThemeOrColorMap();\n\t}\n\n\tpublic setTheme(themeName: string): void {\n\t\tlet theme: StandaloneTheme | undefined;\n\t\tif (this._knownThemes.has(themeName)) {\n\t\t\ttheme = this._knownThemes.get(themeName);\n\t\t} else {\n\t\t\ttheme = this._knownThemes.get(VS_LIGHT_THEME_NAME);\n\t\t}\n\t\tthis._updateActualTheme(theme);\n\t}\n\n\tprivate _updateActualTheme(desiredTheme: IStandaloneTheme | undefined): void {\n\t\tif (!desiredTheme || this._theme === desiredTheme) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._theme = desiredTheme;\n\t\tthis._updateThemeOrColorMap();\n\t}\n\n\tprivate _onOSSchemeChanged() {\n\t\tif (this._autoDetectHighContrast) {\n\t\t\tconst wantsHighContrast = mainWindow.matchMedia(`(forced-colors: active)`).matches;\n\t\t\tif (wantsHighContrast !== isHighContrast(this._theme.type)) {\n\t\t\t\t// switch to high contrast or non-high contrast but stick to dark or light\n\t\t\t\tlet newThemeName;\n\t\t\t\tif (isDark(this._theme.type)) {\n\t\t\t\t\tnewThemeName = wantsHighContrast ? HC_BLACK_THEME_NAME : VS_DARK_THEME_NAME;\n\t\t\t\t} else {\n\t\t\t\t\tnewThemeName = wantsHighContrast ? HC_LIGHT_THEME_NAME : VS_LIGHT_THEME_NAME;\n\t\t\t\t}\n\t\t\t\tthis._updateActualTheme(this._knownThemes.get(newThemeName));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setAutoDetectHighContrast(autoDetectHighContrast: boolean): void {\n\t\tthis._autoDetectHighContrast = autoDetectHighContrast;\n\t\tthis._onOSSchemeChanged();\n\t}\n\n\tprivate _updateThemeOrColorMap(): void {\n\t\tconst cssRules: string[] = [];\n\t\tconst hasRule: { [rule: string]: boolean } = {};\n\t\tconst ruleCollector: ICssStyleCollector = {\n\t\t\taddRule: (rule: string) => {\n\t\t\t\tif (!hasRule[rule]) {\n\t\t\t\t\tcssRules.push(rule);\n\t\t\t\t\thasRule[rule] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthemingRegistry.getThemingParticipants().forEach(p => p(this._theme, ruleCollector, this._environment));\n\n\t\tconst colorVariables: string[] = [];\n\t\tfor (const item of colorRegistry.getColors()) {\n\t\t\tconst color = this._theme.getColor(item.id, true);\n\t\t\tif (color) {\n\t\t\t\tcolorVariables.push(`${asCssVariableName(item.id)}: ${color.toString()};`);\n\t\t\t}\n\t\t}\n\t\truleCollector.addRule(`.monaco-editor, .monaco-diff-editor, .monaco-component { ${colorVariables.join('\\n')} }`);\n\n\t\tconst colorMap = this._colorMapOverride || this._theme.tokenTheme.getColorMap();\n\t\truleCollector.addRule(generateTokensCSSForColorMap(colorMap));\n\n\t\tthis._themeCSS = cssRules.join('\\n');\n\t\tthis._updateCSS();\n\n\t\tTokenizationRegistry.setColorMap(colorMap);\n\t\tthis._onColorThemeChange.fire(this._theme);\n\t}\n\n\tprivate _updateCSS(): void {\n\t\tthis._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\n\t\tthis._styleElements.forEach(styleElement => styleElement.textContent = this._allCSS);\n\t}\n\n\tpublic getFileIconTheme(): IFileIconTheme {\n\t\treturn {\n\t\t\thasFileIcons: false,\n\t\t\thasFolderIcons: false,\n\t\t\thidesExplorerArrows: false\n\t\t};\n\t}\n\n\tpublic getProductIconTheme(): IProductIconTheme {\n\t\treturn this._builtInProductIconTheme;\n\t}\n\n}\n"]}