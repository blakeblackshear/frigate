{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsLineReplacementView.ts","vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsLineReplacementView.ts"],"names":[],"mappings":"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","file":"inlineEditsLineReplacementView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, getWindow, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../../../../base/common/lifecycle.js';\nimport { autorunDelta, constObservable, derived, IObservable } from '../../../../../../../base/common/observable.js';\nimport { editorBackground, scrollbarShadow } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { IEditorMouseEvent, IViewZoneChangeAccessor } from '../../../../../../browser/editorBrowser.js';\nimport { EditorMouseEvent } from '../../../../../../browser/editorDom.js';\nimport { ObservableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { InlineDecoration, InlineDecorationType } from '../../../../../../common/viewModel/inlineDecorations.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getEditorBlendedColor, getModifiedBorderColor, getOriginalBorderColor, modifiedChangedLineBackgroundColor, originalBackgroundColor } from '../theme.js';\nimport { getEditorValidOverlayRect, getPrefixTrim, mapOutFalsy, rectToProps } from '../utils/utils.js';\n\nexport class InlineEditsLineReplacementView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick;\n\treadonly onDidClick;\n\n\tprivate readonly _maxPrefixTrim;\n\n\tprivate readonly _modifiedLineElements;\n\n\n\tprivate readonly _layout;\n\n\tprivate readonly _viewZoneInfo;\n\n\tprivate readonly _div;\n\n\treadonly isHovered;\n\n\treadonly minEditorScrollHeight;\n\n\tconstructor(\n\t\tprivate readonly _editor: ObservableCodeEditor,\n\t\tprivate readonly _edit: IObservable<{\n\t\t\toriginalRange: LineRange;\n\t\t\tmodifiedRange: LineRange;\n\t\t\tmodifiedLines: string[];\n\t\t\treplacements: Replacement[];\n\t\t} | undefined>,\n\t\tprivate readonly _isInDiffEditor: IObservable<boolean>,\n\t\tprivate readonly _tabAction: IObservable<InlineEditTabAction>,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._maxPrefixTrim = this._edit.map(e => e ? getPrefixTrim(e.replacements.flatMap(r => [r.originalRange, r.modifiedRange]), e.originalRange, e.modifiedLines, this._editor.editor) : undefined);\n\t\tthis._modifiedLineElements = derived(this, reader => {\n\t\t\tconst lines = [];\n\t\t\tlet requiredWidth = 0;\n\n\t\t\tconst prefixTrim = this._maxPrefixTrim.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!edit || !prefixTrim) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst maxPrefixTrim = prefixTrim.prefixTrim;\n\t\t\tconst modifiedBubbles = rangesToBubbleRanges(edit.replacements.map(r => r.modifiedRange)).map(r => new Range(r.startLineNumber, r.startColumn - maxPrefixTrim, r.endLineNumber, r.endColumn - maxPrefixTrim));\n\n\t\t\tconst textModel = this._editor.model.get()!;\n\t\t\tconst startLineNumber = edit.modifiedRange.startLineNumber;\n\t\t\tfor (let i = 0; i < edit.modifiedRange.length; i++) {\n\t\t\t\tconst line = document.createElement('div');\n\t\t\t\tconst lineNumber = startLineNumber + i;\n\t\t\t\tconst modLine = edit.modifiedLines[i].slice(maxPrefixTrim);\n\n\t\t\t\tconst t = textModel.tokenization.tokenizeLinesAt(lineNumber, [modLine])?.[0];\n\t\t\t\tlet tokens: LineTokens;\n\t\t\t\tif (t) {\n\t\t\t\t\ttokens = TokenArray.fromLineTokens(t).toLineTokens(modLine, this._languageService.languageIdCodec);\n\t\t\t\t} else {\n\t\t\t\t\ttokens = LineTokens.createEmpty(modLine, this._languageService.languageIdCodec);\n\t\t\t\t}\n\n\t\t\t\tconst decorations = [];\n\t\t\t\tfor (const modified of modifiedBubbles.filter(b => b.startLineNumber === lineNumber)) {\n\t\t\t\t\tconst validatedEndColumn = Math.min(modified.endColumn, modLine.length + 1);\n\t\t\t\t\tdecorations.push(new InlineDecoration(new Range(1, modified.startColumn, 1, validatedEndColumn), 'inlineCompletions-modified-bubble', InlineDecorationType.Regular));\n\t\t\t\t}\n\n\t\t\t\t// TODO: All lines should be rendered at once for one dom element\n\t\t\t\tconst result = renderLines(new LineSource([tokens]), RenderOptions.fromEditor(this._editor.editor).withSetWidth(false).withScrollBeyondLastColumn(0), decorations, line, true);\n\t\t\t\tthis._editor.getOption(EditorOption.fontInfo).read(reader); // update when font info changes\n\n\t\t\t\trequiredWidth = Math.max(requiredWidth, result.minWidthInPx);\n\n\t\t\t\tlines.push(line);\n\t\t\t}\n\n\t\t\treturn { lines, requiredWidth: requiredWidth };\n\t\t});\n\t\tthis._layout = derived(this, reader => {\n\t\t\tconst modifiedLines = this._modifiedLineElements.read(reader);\n\t\t\tconst maxPrefixTrim = this._maxPrefixTrim.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!modifiedLines || !maxPrefixTrim || !edit) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst { prefixLeftOffset } = maxPrefixTrim;\n\t\t\tconst { requiredWidth } = modifiedLines;\n\n\t\t\tconst originalLineHeights = this._editor.observeLineHeightsForLineRange(edit.originalRange).read(reader);\n\t\t\tconst modifiedLineHeights = (() => {\n\t\t\t\tconst lineHeights = originalLineHeights.slice(0, edit.modifiedRange.length);\n\t\t\t\twhile (lineHeights.length < edit.modifiedRange.length) {\n\t\t\t\t\tlineHeights.push(originalLineHeights[originalLineHeights.length - 1]);\n\t\t\t\t}\n\t\t\t\treturn lineHeights;\n\t\t\t})();\n\n\t\t\tconst contentLeft = this._editor.layoutInfoContentLeft.read(reader);\n\t\t\tconst verticalScrollbarWidth = this._editor.layoutInfoVerticalScrollbarWidth.read(reader);\n\t\t\tconst scrollLeft = this._editor.scrollLeft.read(reader);\n\t\t\tconst scrollTop = this._editor.scrollTop.read(reader);\n\t\t\tconst editorLeftOffset = contentLeft - scrollLeft;\n\n\t\t\tconst textModel = this._editor.editor.getModel()!;\n\n\t\t\tconst originalLineWidths = edit.originalRange.mapToLineArray(line => this._editor.editor.getOffsetForColumn(line, textModel.getLineMaxColumn(line)) - prefixLeftOffset);\n\t\t\tconst maxLineWidth = Math.max(...originalLineWidths, requiredWidth);\n\n\t\t\tconst startLineNumber = edit.originalRange.startLineNumber;\n\t\t\tconst endLineNumber = edit.originalRange.endLineNumberExclusive - 1;\n\t\t\tconst topOfOriginalLines = this._editor.editor.getTopForLineNumber(startLineNumber) - scrollTop;\n\t\t\tconst bottomOfOriginalLines = this._editor.editor.getBottomForLineNumber(endLineNumber) - scrollTop;\n\n\t\t\t// Box Widget positioning\n\t\t\tconst originalLinesOverlay = Rect.fromLeftTopWidthHeight(\n\t\t\t\teditorLeftOffset + prefixLeftOffset,\n\t\t\t\ttopOfOriginalLines,\n\t\t\t\tmaxLineWidth,\n\t\t\t\tbottomOfOriginalLines - topOfOriginalLines\n\t\t\t);\n\t\t\tconst modifiedLinesOverlay = Rect.fromLeftTopWidthHeight(\n\t\t\t\toriginalLinesOverlay.left,\n\t\t\t\toriginalLinesOverlay.bottom,\n\t\t\t\toriginalLinesOverlay.width,\n\t\t\t\tmodifiedLineHeights.reduce((sum, h) => sum + h, 0)\n\t\t\t);\n\t\t\tconst background = Rect.hull([originalLinesOverlay, modifiedLinesOverlay]);\n\n\t\t\tconst lowerBackground = background.intersectVertical(new OffsetRange(originalLinesOverlay.bottom, Number.MAX_SAFE_INTEGER));\n\t\t\tconst lowerText = new Rect(lowerBackground.left, lowerBackground.top, lowerBackground.right, lowerBackground.bottom);\n\n\t\t\treturn {\n\t\t\t\toriginalLinesOverlay,\n\t\t\t\tmodifiedLinesOverlay,\n\t\t\t\tbackground,\n\t\t\t\tlowerBackground,\n\t\t\t\tlowerText,\n\t\t\t\tmodifiedLineHeights,\n\t\t\t\tminContentWidthRequired: prefixLeftOffset + maxLineWidth + verticalScrollbarWidth,\n\t\t\t};\n\t\t});\n\t\tthis._viewZoneInfo = derived<{ height: number; lineNumber: number } | undefined>(reader => {\n\t\t\tconst shouldShowViewZone = this._editor.getOption(EditorOption.inlineSuggest).map(o => o.edits.allowCodeShifting === 'always').read(reader);\n\t\t\tif (!shouldShowViewZone) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst layout = this._layout.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!layout || !edit) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst viewZoneHeight = layout.lowerBackground.height;\n\t\t\tconst viewZoneLineNumber = edit.originalRange.endLineNumberExclusive;\n\t\t\treturn { height: viewZoneHeight, lineNumber: viewZoneLineNumber };\n\t\t});\n\t\tthis.minEditorScrollHeight = derived(this, reader => {\n\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\tif (!layout || this._viewZoneInfo.read(reader) !== undefined) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn layout.read(reader).lowerText.bottom + this._editor.editor.getScrollTop();\n\t\t});\n\t\tthis._div = n.div({\n\t\t\tclass: 'line-replacement',\n\t\t}, [\n\t\t\tderived(this, reader => {\n\t\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\t\tconst modifiedLineElements = this._modifiedLineElements.read(reader);\n\t\t\t\tif (!layout || !modifiedLineElements) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst layoutProps = layout.read(reader);\n\t\t\t\tconst contentLeft = this._editor.layoutInfoContentLeft.read(reader);\n\n\t\t\t\tconst separatorWidth = this._isInDiffEditor.read(reader) ? 3 : 1;\n\n\t\t\t\tmodifiedLineElements.lines.forEach((l, i) => {\n\t\t\t\t\tl.style.width = `${layoutProps.lowerText.width}px`;\n\t\t\t\t\tl.style.height = `${layoutProps.modifiedLineHeights[i]}px`;\n\t\t\t\t\tl.style.position = 'relative';\n\t\t\t\t});\n\n\t\t\t\tconst modifiedBorderColor = getModifiedBorderColor(this._tabAction).read(reader);\n\t\t\t\tconst originalBorderColor = getOriginalBorderColor(this._tabAction).read(reader);\n\n\t\t\t\treturn [\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t...rectToProps((r) => getEditorValidOverlayRect(this._editor).read(r)),\n\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t}\n\t\t\t\t\t}, [\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'borderAroundLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).background.translateX(-contentLeft).withMargin(separatorWidth)),\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\n\t\t\t\t\t\t\t\tborder: `${separatorWidth + 1}px solid ${asCssVariable(editorBackground)}`,\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'originalOverlayLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).background.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\n\t\t\t\t\t\t\t\tborder: getEditorBlendedColor(originalBorderColor, this._themeService).map(c => `1px solid ${c.toString()}`),\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tbackground: asCssVariable(originalBackgroundColor),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'modifiedOverlayLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).lowerBackground.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tborderRadius: '0 0 4px 4px',\n\t\t\t\t\t\t\t\tbackground: asCssVariable(editorBackground),\n\t\t\t\t\t\t\t\tboxShadow: `${asCssVariable(scrollbarShadow)} 0 6px 6px -6px`,\n\t\t\t\t\t\t\t\tborder: `1px solid ${asCssVariable(modifiedBorderColor)}`,\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\tpointerEvents: 'auto',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonmousedown: e => {\n\t\t\t\t\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonclick: (e) => this._onDidClick.fire(new StandardMouseEvent(getWindow(e), e)),\n\t\t\t\t\t\t}, [\n\t\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tposition: 'absolute', top: 0, left: 0, width: '100%', height: '100%',\n\t\t\t\t\t\t\t\t\tbackground: asCssVariable(modifiedChangedLineBackgroundColor),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'modifiedLinesLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).lowerText.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tfontFamily: this._editor.getOption(EditorOption.fontFamily),\n\t\t\t\t\t\t\t\tfontSize: this._editor.getOption(EditorOption.fontSize),\n\t\t\t\t\t\t\t\tfontWeight: this._editor.getOption(EditorOption.fontWeight),\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\t\t\t\tborderRadius: '0 0 4px 4px',\n\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, [...modifiedLineElements.lines]),\n\t\t\t\t\t])\n\t\t\t\t];\n\t\t\t})\n\t\t]).keepUpdated(this._store);\n\t\tthis.isHovered = this._editor.isTargetHovered((e) => this._isMouseOverWidget(e), this._store);\n\t\tthis._previousViewZoneInfo = undefined;\n\n\t\tthis._register(toDisposable(() => this._editor.editor.changeViewZones(accessor => this.removePreviousViewZone(accessor))));\n\n\t\tthis._register(autorunDelta(this._viewZoneInfo, ({ lastValue, newValue }) => {\n\t\t\tif (lastValue === newValue || (lastValue?.height === newValue?.height && lastValue?.lineNumber === newValue?.lineNumber)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._editor.editor.changeViewZones((changeAccessor) => {\n\t\t\t\tthis.removePreviousViewZone(changeAccessor);\n\t\t\t\tif (!newValue) { return; }\n\t\t\t\tthis.addViewZone(newValue, changeAccessor);\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(this._editor.createOverlayWidget({\n\t\t\tdomNode: this._div.element,\n\t\t\tminContentWidthInPx: derived(this, reader => {\n\t\t\t\treturn this._layout.read(reader)?.minContentWidthRequired ?? 0;\n\t\t\t}),\n\t\t\tposition: constObservable({ preference: { top: 0, left: 0 } }),\n\t\t\tallowEditorOverflow: false,\n\t\t}));\n\t}\n\n\tprivate _isMouseOverWidget(e: IEditorMouseEvent): boolean {\n\t\tconst layout = this._layout.get();\n\t\tif (!layout || !(e.event instanceof EditorMouseEvent)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn layout.lowerBackground.containsPoint(new Point(e.event.relativePos.x, e.event.relativePos.y));\n\t}\n\n\t// View Zones\n\tprivate _previousViewZoneInfo: { height: number; lineNumber: number; id: string } | undefined;\n\n\tprivate removePreviousViewZone(changeAccessor: IViewZoneChangeAccessor) {\n\t\tif (!this._previousViewZoneInfo) {\n\t\t\treturn;\n\t\t}\n\n\t\tchangeAccessor.removeZone(this._previousViewZoneInfo.id);\n\n\t\tconst cursorLineNumber = this._editor.cursorLineNumber.get();\n\t\tif (cursorLineNumber !== null && cursorLineNumber >= this._previousViewZoneInfo.lineNumber) {\n\t\t\tthis._editor.editor.setScrollTop(this._editor.scrollTop.get() - this._previousViewZoneInfo.height);\n\t\t}\n\n\t\tthis._previousViewZoneInfo = undefined;\n\t}\n\n\tprivate addViewZone(viewZoneInfo: { height: number; lineNumber: number }, changeAccessor: IViewZoneChangeAccessor) {\n\t\tconst activeViewZone = changeAccessor.addZone({\n\t\t\tafterLineNumber: viewZoneInfo.lineNumber - 1,\n\t\t\theightInPx: viewZoneInfo.height, // move computation to layout?\n\t\t\tdomNode: $('div'),\n\t\t});\n\n\t\tthis._previousViewZoneInfo = { height: viewZoneInfo.height, lineNumber: viewZoneInfo.lineNumber, id: activeViewZone };\n\n\t\tconst cursorLineNumber = this._editor.cursorLineNumber.get();\n\t\tif (cursorLineNumber !== null && cursorLineNumber >= viewZoneInfo.lineNumber) {\n\t\t\tthis._editor.editor.setScrollTop(this._editor.scrollTop.get() + viewZoneInfo.height);\n\t\t}\n\t}\n}\n\nfunction rangesToBubbleRanges(ranges: Range[]): Range[] {\n\tconst result: Range[] = [];\n\twhile (ranges.length) {\n\t\tlet range = ranges.shift()!;\n\t\tif (range.startLineNumber !== range.endLineNumber) {\n\t\t\tranges.push(new Range(range.startLineNumber + 1, 1, range.endLineNumber, range.endColumn));\n\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.startLineNumber, Number.MAX_SAFE_INTEGER); // TODO: this is not correct\n\t\t}\n\n\t\tresult.push(range);\n\t}\n\treturn result;\n\n}\n\nexport interface Replacement {\n\toriginalRange: Range;\n\tmodifiedRange: Range;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, getWindow, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../../../../base/common/lifecycle.js';\nimport { autorunDelta, constObservable, derived, IObservable } from '../../../../../../../base/common/observable.js';\nimport { editorBackground, scrollbarShadow } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { IEditorMouseEvent, IViewZoneChangeAccessor } from '../../../../../../browser/editorBrowser.js';\nimport { EditorMouseEvent } from '../../../../../../browser/editorDom.js';\nimport { ObservableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { InlineDecoration, InlineDecorationType } from '../../../../../../common/viewModel/inlineDecorations.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getEditorBlendedColor, getModifiedBorderColor, getOriginalBorderColor, modifiedChangedLineBackgroundColor, originalBackgroundColor } from '../theme.js';\nimport { getEditorValidOverlayRect, getPrefixTrim, mapOutFalsy, rectToProps } from '../utils/utils.js';\n\nexport class InlineEditsLineReplacementView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick;\n\treadonly onDidClick;\n\n\tprivate readonly _maxPrefixTrim;\n\n\tprivate readonly _modifiedLineElements;\n\n\n\tprivate readonly _layout;\n\n\tprivate readonly _viewZoneInfo;\n\n\tprivate readonly _div;\n\n\treadonly isHovered;\n\n\treadonly minEditorScrollHeight;\n\n\tconstructor(\n\t\tprivate readonly _editor: ObservableCodeEditor,\n\t\tprivate readonly _edit: IObservable<{\n\t\t\toriginalRange: LineRange;\n\t\t\tmodifiedRange: LineRange;\n\t\t\tmodifiedLines: string[];\n\t\t\treplacements: Replacement[];\n\t\t} | undefined>,\n\t\tprivate readonly _isInDiffEditor: IObservable<boolean>,\n\t\tprivate readonly _tabAction: IObservable<InlineEditTabAction>,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._maxPrefixTrim = this._edit.map(e => e ? getPrefixTrim(e.replacements.flatMap(r => [r.originalRange, r.modifiedRange]), e.originalRange, e.modifiedLines, this._editor.editor) : undefined);\n\t\tthis._modifiedLineElements = derived(this, reader => {\n\t\t\tconst lines = [];\n\t\t\tlet requiredWidth = 0;\n\n\t\t\tconst prefixTrim = this._maxPrefixTrim.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!edit || !prefixTrim) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst maxPrefixTrim = prefixTrim.prefixTrim;\n\t\t\tconst modifiedBubbles = rangesToBubbleRanges(edit.replacements.map(r => r.modifiedRange)).map(r => new Range(r.startLineNumber, r.startColumn - maxPrefixTrim, r.endLineNumber, r.endColumn - maxPrefixTrim));\n\n\t\t\tconst textModel = this._editor.model.get()!;\n\t\t\tconst startLineNumber = edit.modifiedRange.startLineNumber;\n\t\t\tfor (let i = 0; i < edit.modifiedRange.length; i++) {\n\t\t\t\tconst line = document.createElement('div');\n\t\t\t\tconst lineNumber = startLineNumber + i;\n\t\t\t\tconst modLine = edit.modifiedLines[i].slice(maxPrefixTrim);\n\n\t\t\t\tconst t = textModel.tokenization.tokenizeLinesAt(lineNumber, [modLine])?.[0];\n\t\t\t\tlet tokens: LineTokens;\n\t\t\t\tif (t) {\n\t\t\t\t\ttokens = TokenArray.fromLineTokens(t).toLineTokens(modLine, this._languageService.languageIdCodec);\n\t\t\t\t} else {\n\t\t\t\t\ttokens = LineTokens.createEmpty(modLine, this._languageService.languageIdCodec);\n\t\t\t\t}\n\n\t\t\t\tconst decorations = [];\n\t\t\t\tfor (const modified of modifiedBubbles.filter(b => b.startLineNumber === lineNumber)) {\n\t\t\t\t\tconst validatedEndColumn = Math.min(modified.endColumn, modLine.length + 1);\n\t\t\t\t\tdecorations.push(new InlineDecoration(new Range(1, modified.startColumn, 1, validatedEndColumn), 'inlineCompletions-modified-bubble', InlineDecorationType.Regular));\n\t\t\t\t}\n\n\t\t\t\t// TODO: All lines should be rendered at once for one dom element\n\t\t\t\tconst result = renderLines(new LineSource([tokens]), RenderOptions.fromEditor(this._editor.editor).withSetWidth(false).withScrollBeyondLastColumn(0), decorations, line, true);\n\t\t\t\tthis._editor.getOption(EditorOption.fontInfo).read(reader); // update when font info changes\n\n\t\t\t\trequiredWidth = Math.max(requiredWidth, result.minWidthInPx);\n\n\t\t\t\tlines.push(line);\n\t\t\t}\n\n\t\t\treturn { lines, requiredWidth: requiredWidth };\n\t\t});\n\t\tthis._layout = derived(this, reader => {\n\t\t\tconst modifiedLines = this._modifiedLineElements.read(reader);\n\t\t\tconst maxPrefixTrim = this._maxPrefixTrim.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!modifiedLines || !maxPrefixTrim || !edit) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst { prefixLeftOffset } = maxPrefixTrim;\n\t\t\tconst { requiredWidth } = modifiedLines;\n\n\t\t\tconst originalLineHeights = this._editor.observeLineHeightsForLineRange(edit.originalRange).read(reader);\n\t\t\tconst modifiedLineHeights = (() => {\n\t\t\t\tconst lineHeights = originalLineHeights.slice(0, edit.modifiedRange.length);\n\t\t\t\twhile (lineHeights.length < edit.modifiedRange.length) {\n\t\t\t\t\tlineHeights.push(originalLineHeights[originalLineHeights.length - 1]);\n\t\t\t\t}\n\t\t\t\treturn lineHeights;\n\t\t\t})();\n\n\t\t\tconst contentLeft = this._editor.layoutInfoContentLeft.read(reader);\n\t\t\tconst verticalScrollbarWidth = this._editor.layoutInfoVerticalScrollbarWidth.read(reader);\n\t\t\tconst scrollLeft = this._editor.scrollLeft.read(reader);\n\t\t\tconst scrollTop = this._editor.scrollTop.read(reader);\n\t\t\tconst editorLeftOffset = contentLeft - scrollLeft;\n\n\t\t\tconst textModel = this._editor.editor.getModel()!;\n\n\t\t\tconst originalLineWidths = edit.originalRange.mapToLineArray(line => this._editor.editor.getOffsetForColumn(line, textModel.getLineMaxColumn(line)) - prefixLeftOffset);\n\t\t\tconst maxLineWidth = Math.max(...originalLineWidths, requiredWidth);\n\n\t\t\tconst startLineNumber = edit.originalRange.startLineNumber;\n\t\t\tconst endLineNumber = edit.originalRange.endLineNumberExclusive - 1;\n\t\t\tconst topOfOriginalLines = this._editor.editor.getTopForLineNumber(startLineNumber) - scrollTop;\n\t\t\tconst bottomOfOriginalLines = this._editor.editor.getBottomForLineNumber(endLineNumber) - scrollTop;\n\n\t\t\t// Box Widget positioning\n\t\t\tconst originalLinesOverlay = Rect.fromLeftTopWidthHeight(\n\t\t\t\teditorLeftOffset + prefixLeftOffset,\n\t\t\t\ttopOfOriginalLines,\n\t\t\t\tmaxLineWidth,\n\t\t\t\tbottomOfOriginalLines - topOfOriginalLines\n\t\t\t);\n\t\t\tconst modifiedLinesOverlay = Rect.fromLeftTopWidthHeight(\n\t\t\t\toriginalLinesOverlay.left,\n\t\t\t\toriginalLinesOverlay.bottom,\n\t\t\t\toriginalLinesOverlay.width,\n\t\t\t\tmodifiedLineHeights.reduce((sum, h) => sum + h, 0)\n\t\t\t);\n\t\t\tconst background = Rect.hull([originalLinesOverlay, modifiedLinesOverlay]);\n\n\t\t\tconst lowerBackground = background.intersectVertical(new OffsetRange(originalLinesOverlay.bottom, Number.MAX_SAFE_INTEGER));\n\t\t\tconst lowerText = new Rect(lowerBackground.left, lowerBackground.top, lowerBackground.right, lowerBackground.bottom);\n\n\t\t\treturn {\n\t\t\t\toriginalLinesOverlay,\n\t\t\t\tmodifiedLinesOverlay,\n\t\t\t\tbackground,\n\t\t\t\tlowerBackground,\n\t\t\t\tlowerText,\n\t\t\t\tmodifiedLineHeights,\n\t\t\t\tminContentWidthRequired: prefixLeftOffset + maxLineWidth + verticalScrollbarWidth,\n\t\t\t};\n\t\t});\n\t\tthis._viewZoneInfo = derived<{ height: number; lineNumber: number } | undefined>(reader => {\n\t\t\tconst shouldShowViewZone = this._editor.getOption(EditorOption.inlineSuggest).map(o => o.edits.allowCodeShifting === 'always').read(reader);\n\t\t\tif (!shouldShowViewZone) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst layout = this._layout.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!layout || !edit) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst viewZoneHeight = layout.lowerBackground.height;\n\t\t\tconst viewZoneLineNumber = edit.originalRange.endLineNumberExclusive;\n\t\t\treturn { height: viewZoneHeight, lineNumber: viewZoneLineNumber };\n\t\t});\n\t\tthis.minEditorScrollHeight = derived(this, reader => {\n\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\tif (!layout || this._viewZoneInfo.read(reader) !== undefined) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn layout.read(reader).lowerText.bottom + this._editor.editor.getScrollTop();\n\t\t});\n\t\tthis._div = n.div({\n\t\t\tclass: 'line-replacement',\n\t\t}, [\n\t\t\tderived(this, reader => {\n\t\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\t\tconst modifiedLineElements = this._modifiedLineElements.read(reader);\n\t\t\t\tif (!layout || !modifiedLineElements) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst layoutProps = layout.read(reader);\n\t\t\t\tconst contentLeft = this._editor.layoutInfoContentLeft.read(reader);\n\n\t\t\t\tconst separatorWidth = this._isInDiffEditor.read(reader) ? 3 : 1;\n\n\t\t\t\tmodifiedLineElements.lines.forEach((l, i) => {\n\t\t\t\t\tl.style.width = `${layoutProps.lowerText.width}px`;\n\t\t\t\t\tl.style.height = `${layoutProps.modifiedLineHeights[i]}px`;\n\t\t\t\t\tl.style.position = 'relative';\n\t\t\t\t});\n\n\t\t\t\tconst modifiedBorderColor = getModifiedBorderColor(this._tabAction).read(reader);\n\t\t\t\tconst originalBorderColor = getOriginalBorderColor(this._tabAction).read(reader);\n\n\t\t\t\treturn [\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t...rectToProps((r) => getEditorValidOverlayRect(this._editor).read(r)),\n\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t}\n\t\t\t\t\t}, [\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'borderAroundLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).background.translateX(-contentLeft).withMargin(separatorWidth)),\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\n\t\t\t\t\t\t\t\tborder: `${separatorWidth + 1}px solid ${asCssVariable(editorBackground)}`,\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'originalOverlayLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).background.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\n\t\t\t\t\t\t\t\tborder: getEditorBlendedColor(originalBorderColor, this._themeService).map(c => `1px solid ${c.toString()}`),\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tbackground: asCssVariable(originalBackgroundColor),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'modifiedOverlayLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).lowerBackground.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tborderRadius: '0 0 4px 4px',\n\t\t\t\t\t\t\t\tbackground: asCssVariable(editorBackground),\n\t\t\t\t\t\t\t\tboxShadow: `${asCssVariable(scrollbarShadow)} 0 6px 6px -6px`,\n\t\t\t\t\t\t\t\tborder: `1px solid ${asCssVariable(modifiedBorderColor)}`,\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\tpointerEvents: 'auto',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonmousedown: e => {\n\t\t\t\t\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonclick: (e) => this._onDidClick.fire(new StandardMouseEvent(getWindow(e), e)),\n\t\t\t\t\t\t}, [\n\t\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tposition: 'absolute', top: 0, left: 0, width: '100%', height: '100%',\n\t\t\t\t\t\t\t\t\tbackground: asCssVariable(modifiedChangedLineBackgroundColor),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'modifiedLinesLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).lowerText.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tfontFamily: this._editor.getOption(EditorOption.fontFamily),\n\t\t\t\t\t\t\t\tfontSize: this._editor.getOption(EditorOption.fontSize),\n\t\t\t\t\t\t\t\tfontWeight: this._editor.getOption(EditorOption.fontWeight),\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\t\t\t\tborderRadius: '0 0 4px 4px',\n\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, [...modifiedLineElements.lines]),\n\t\t\t\t\t])\n\t\t\t\t];\n\t\t\t})\n\t\t]).keepUpdated(this._store);\n\t\tthis.isHovered = this._editor.isTargetHovered((e) => this._isMouseOverWidget(e), this._store);\n\t\tthis._previousViewZoneInfo = undefined;\n\n\t\tthis._register(toDisposable(() => this._editor.editor.changeViewZones(accessor => this.removePreviousViewZone(accessor))));\n\n\t\tthis._register(autorunDelta(this._viewZoneInfo, ({ lastValue, newValue }) => {\n\t\t\tif (lastValue === newValue || (lastValue?.height === newValue?.height && lastValue?.lineNumber === newValue?.lineNumber)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._editor.editor.changeViewZones((changeAccessor) => {\n\t\t\t\tthis.removePreviousViewZone(changeAccessor);\n\t\t\t\tif (!newValue) { return; }\n\t\t\t\tthis.addViewZone(newValue, changeAccessor);\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(this._editor.createOverlayWidget({\n\t\t\tdomNode: this._div.element,\n\t\t\tminContentWidthInPx: derived(this, reader => {\n\t\t\t\treturn this._layout.read(reader)?.minContentWidthRequired ?? 0;\n\t\t\t}),\n\t\t\tposition: constObservable({ preference: { top: 0, left: 0 } }),\n\t\t\tallowEditorOverflow: false,\n\t\t}));\n\t}\n\n\tprivate _isMouseOverWidget(e: IEditorMouseEvent): boolean {\n\t\tconst layout = this._layout.get();\n\t\tif (!layout || !(e.event instanceof EditorMouseEvent)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn layout.lowerBackground.containsPoint(new Point(e.event.relativePos.x, e.event.relativePos.y));\n\t}\n\n\t// View Zones\n\tprivate _previousViewZoneInfo: { height: number; lineNumber: number; id: string } | undefined;\n\n\tprivate removePreviousViewZone(changeAccessor: IViewZoneChangeAccessor) {\n\t\tif (!this._previousViewZoneInfo) {\n\t\t\treturn;\n\t\t}\n\n\t\tchangeAccessor.removeZone(this._previousViewZoneInfo.id);\n\n\t\tconst cursorLineNumber = this._editor.cursorLineNumber.get();\n\t\tif (cursorLineNumber !== null && cursorLineNumber >= this._previousViewZoneInfo.lineNumber) {\n\t\t\tthis._editor.editor.setScrollTop(this._editor.scrollTop.get() - this._previousViewZoneInfo.height);\n\t\t}\n\n\t\tthis._previousViewZoneInfo = undefined;\n\t}\n\n\tprivate addViewZone(viewZoneInfo: { height: number; lineNumber: number }, changeAccessor: IViewZoneChangeAccessor) {\n\t\tconst activeViewZone = changeAccessor.addZone({\n\t\t\tafterLineNumber: viewZoneInfo.lineNumber - 1,\n\t\t\theightInPx: viewZoneInfo.height, // move computation to layout?\n\t\t\tdomNode: $('div'),\n\t\t});\n\n\t\tthis._previousViewZoneInfo = { height: viewZoneInfo.height, lineNumber: viewZoneInfo.lineNumber, id: activeViewZone };\n\n\t\tconst cursorLineNumber = this._editor.cursorLineNumber.get();\n\t\tif (cursorLineNumber !== null && cursorLineNumber >= viewZoneInfo.lineNumber) {\n\t\t\tthis._editor.editor.setScrollTop(this._editor.scrollTop.get() + viewZoneInfo.height);\n\t\t}\n\t}\n}\n\nfunction rangesToBubbleRanges(ranges: Range[]): Range[] {\n\tconst result: Range[] = [];\n\twhile (ranges.length) {\n\t\tlet range = ranges.shift()!;\n\t\tif (range.startLineNumber !== range.endLineNumber) {\n\t\t\tranges.push(new Range(range.startLineNumber + 1, 1, range.endLineNumber, range.endColumn));\n\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.startLineNumber, Number.MAX_SAFE_INTEGER); // TODO: this is not correct\n\t\t}\n\n\t\tresult.push(range);\n\t}\n\treturn result;\n\n}\n\nexport interface Replacement {\n\toriginalRange: Range;\n\tmodifiedRange: Range;\n}\n"]}