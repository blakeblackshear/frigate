{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/model/bracketPairsTextModelPart/colorizedBracketPairsDecorationProvider.ts","vs/editor/common/model/bracketPairsTextModelPart/colorizedBracketPairsDecorationProvider.ts"],"names":[],"mappings":"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","file":"colorizedBracketPairsDecorationProvider.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../core/range.js';\nimport { BracketPairColorizationOptions, IModelDecoration } from '../../model.js';\nimport { BracketInfo } from '../../textModelBracketPairs.js';\nimport { DecorationProvider } from '../decorationProvider.js';\nimport { TextModel } from '../textModel.js';\nimport {\n\teditorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketHighlightingUnexpectedBracketForeground } from '../../core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { IModelOptionsChangedEvent } from '../../textModelEvents.js';\n\nexport class ColorizedBracketPairsDecorationProvider extends Disposable implements DecorationProvider {\n\tprivate colorizationOptions: BracketPairColorizationOptions;\n\tprivate readonly colorProvider = new ColorProvider();\n\n\tprivate readonly onDidChangeEmitter = new Emitter<void>();\n\tpublic readonly onDidChange = this.onDidChangeEmitter.event;\n\n\tconstructor(private readonly textModel: TextModel) {\n\t\tsuper();\n\n\t\tthis.colorizationOptions = textModel.getOptions().bracketPairColorizationOptions;\n\n\t\tthis._register(textModel.bracketPairs.onDidChange(e => {\n\t\t\tthis.onDidChangeEmitter.fire();\n\t\t}));\n\t}\n\n\t//#region TextModel events\n\n\tpublic handleDidChangeOptions(e: IModelOptionsChangedEvent): void {\n\t\tthis.colorizationOptions = this.textModel.getOptions().bracketPairColorizationOptions;\n\t}\n\n\t//#endregion\n\n\tgetDecorationsInRange(range: Range, ownerId?: number, filterOutValidation?: boolean, onlyMinimapDecorations?: boolean): IModelDecoration[] {\n\t\tif (onlyMinimapDecorations) {\n\t\t\t// Bracket pair colorization decorations are not rendered in the minimap\n\t\t\treturn [];\n\t\t}\n\t\tif (ownerId === undefined) {\n\t\t\treturn [];\n\t\t}\n\t\tif (!this.colorizationOptions.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst result = this.textModel.bracketPairs.getBracketsInRange(range, true).map<IModelDecoration>(bracket => ({\n\t\t\tid: `bracket${bracket.range.toString()}-${bracket.nestingLevel}`,\n\t\t\toptions: {\n\t\t\t\tdescription: 'BracketPairColorization',\n\t\t\t\tinlineClassName: this.colorProvider.getInlineClassName(\n\t\t\t\t\tbracket,\n\t\t\t\t\tthis.colorizationOptions.independentColorPoolPerBracketType\n\t\t\t\t),\n\t\t\t},\n\t\t\townerId: 0,\n\t\t\trange: bracket.range,\n\t\t})).toArray();\n\n\t\treturn result;\n\t}\n\n\tgetAllDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[] {\n\t\tif (ownerId === undefined) {\n\t\t\treturn [];\n\t\t}\n\t\tif (!this.colorizationOptions.enabled) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.getDecorationsInRange(\n\t\t\tnew Range(1, 1, this.textModel.getLineCount(), 1),\n\t\t\townerId,\n\t\t\tfilterOutValidation\n\t\t);\n\t}\n}\n\nclass ColorProvider {\n\tpublic readonly unexpectedClosingBracketClassName = 'unexpected-closing-bracket';\n\n\tgetInlineClassName(bracket: BracketInfo, independentColorPoolPerBracketType: boolean): string {\n\t\tif (bracket.isInvalid) {\n\t\t\treturn this.unexpectedClosingBracketClassName;\n\t\t}\n\t\treturn this.getInlineClassNameOfLevel(independentColorPoolPerBracketType ? bracket.nestingLevelOfEqualBracketType : bracket.nestingLevel);\n\t}\n\n\tgetInlineClassNameOfLevel(level: number): string {\n\t\t// To support a dynamic amount of colors up to 6 colors,\n\t\t// we use a number that is a lcm of all numbers from 1 to 6.\n\t\treturn `bracket-highlighting-${level % 30}`;\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst colors = [\n\t\teditorBracketHighlightingForeground1,\n\t\teditorBracketHighlightingForeground2,\n\t\teditorBracketHighlightingForeground3,\n\t\teditorBracketHighlightingForeground4,\n\t\teditorBracketHighlightingForeground5,\n\t\teditorBracketHighlightingForeground6\n\t];\n\tconst colorProvider = new ColorProvider();\n\n\tcollector.addRule(`.monaco-editor .${colorProvider.unexpectedClosingBracketClassName} { color: ${theme.getColor(editorBracketHighlightingUnexpectedBracketForeground)}; }`);\n\n\tconst colorValues = colors\n\t\t.map(c => theme.getColor(c))\n\t\t.filter((c): c is Color => !!c)\n\t\t.filter(c => !c.isTransparent());\n\n\tfor (let level = 0; level < 30; level++) {\n\t\tconst color = colorValues[level % colorValues.length];\n\t\tcollector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level)} { color: ${color}; }`);\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../core/range.js';\nimport { BracketPairColorizationOptions, IModelDecoration } from '../../model.js';\nimport { BracketInfo } from '../../textModelBracketPairs.js';\nimport { DecorationProvider } from '../decorationProvider.js';\nimport { TextModel } from '../textModel.js';\nimport {\n\teditorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketHighlightingUnexpectedBracketForeground } from '../../core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { IModelOptionsChangedEvent } from '../../textModelEvents.js';\n\nexport class ColorizedBracketPairsDecorationProvider extends Disposable implements DecorationProvider {\n\tprivate colorizationOptions: BracketPairColorizationOptions;\n\tprivate readonly colorProvider = new ColorProvider();\n\n\tprivate readonly onDidChangeEmitter = new Emitter<void>();\n\tpublic readonly onDidChange = this.onDidChangeEmitter.event;\n\n\tconstructor(private readonly textModel: TextModel) {\n\t\tsuper();\n\n\t\tthis.colorizationOptions = textModel.getOptions().bracketPairColorizationOptions;\n\n\t\tthis._register(textModel.bracketPairs.onDidChange(e => {\n\t\t\tthis.onDidChangeEmitter.fire();\n\t\t}));\n\t}\n\n\t//#region TextModel events\n\n\tpublic handleDidChangeOptions(e: IModelOptionsChangedEvent): void {\n\t\tthis.colorizationOptions = this.textModel.getOptions().bracketPairColorizationOptions;\n\t}\n\n\t//#endregion\n\n\tgetDecorationsInRange(range: Range, ownerId?: number, filterOutValidation?: boolean, onlyMinimapDecorations?: boolean): IModelDecoration[] {\n\t\tif (onlyMinimapDecorations) {\n\t\t\t// Bracket pair colorization decorations are not rendered in the minimap\n\t\t\treturn [];\n\t\t}\n\t\tif (ownerId === undefined) {\n\t\t\treturn [];\n\t\t}\n\t\tif (!this.colorizationOptions.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst result = this.textModel.bracketPairs.getBracketsInRange(range, true).map<IModelDecoration>(bracket => ({\n\t\t\tid: `bracket${bracket.range.toString()}-${bracket.nestingLevel}`,\n\t\t\toptions: {\n\t\t\t\tdescription: 'BracketPairColorization',\n\t\t\t\tinlineClassName: this.colorProvider.getInlineClassName(\n\t\t\t\t\tbracket,\n\t\t\t\t\tthis.colorizationOptions.independentColorPoolPerBracketType\n\t\t\t\t),\n\t\t\t},\n\t\t\townerId: 0,\n\t\t\trange: bracket.range,\n\t\t})).toArray();\n\n\t\treturn result;\n\t}\n\n\tgetAllDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[] {\n\t\tif (ownerId === undefined) {\n\t\t\treturn [];\n\t\t}\n\t\tif (!this.colorizationOptions.enabled) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.getDecorationsInRange(\n\t\t\tnew Range(1, 1, this.textModel.getLineCount(), 1),\n\t\t\townerId,\n\t\t\tfilterOutValidation\n\t\t);\n\t}\n}\n\nclass ColorProvider {\n\tpublic readonly unexpectedClosingBracketClassName = 'unexpected-closing-bracket';\n\n\tgetInlineClassName(bracket: BracketInfo, independentColorPoolPerBracketType: boolean): string {\n\t\tif (bracket.isInvalid) {\n\t\t\treturn this.unexpectedClosingBracketClassName;\n\t\t}\n\t\treturn this.getInlineClassNameOfLevel(independentColorPoolPerBracketType ? bracket.nestingLevelOfEqualBracketType : bracket.nestingLevel);\n\t}\n\n\tgetInlineClassNameOfLevel(level: number): string {\n\t\t// To support a dynamic amount of colors up to 6 colors,\n\t\t// we use a number that is a lcm of all numbers from 1 to 6.\n\t\treturn `bracket-highlighting-${level % 30}`;\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst colors = [\n\t\teditorBracketHighlightingForeground1,\n\t\teditorBracketHighlightingForeground2,\n\t\teditorBracketHighlightingForeground3,\n\t\teditorBracketHighlightingForeground4,\n\t\teditorBracketHighlightingForeground5,\n\t\teditorBracketHighlightingForeground6\n\t];\n\tconst colorProvider = new ColorProvider();\n\n\tcollector.addRule(`.monaco-editor .${colorProvider.unexpectedClosingBracketClassName} { color: ${theme.getColor(editorBracketHighlightingUnexpectedBracketForeground)}; }`);\n\n\tconst colorValues = colors\n\t\t.map(c => theme.getColor(c))\n\t\t.filter((c): c is Color => !!c)\n\t\t.filter(c => !c.isTransparent());\n\n\tfor (let level = 0; level < 30; level++) {\n\t\tconst color = colorValues[level % colorValues.length];\n\t\tcollector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level)} { color: ${color}; }`);\n\t}\n});\n"]}