{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/suggest/browser/suggestWidgetStatus.ts","vs/editor/contrib/suggest/browser/suggestWidgetStatus.ts"],"names":[],"mappings":"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","file":"suggestWidgetStatus.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionBar, IActionViewItemProvider } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { IAction } from '../../../../base/common/actions.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { TextOnlyMenuEntryActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\n\nexport class SuggestWidgetStatus {\n\n\treadonly element: HTMLElement;\n\n\tprivate readonly _leftActions: ActionBar;\n\tprivate readonly _rightActions: ActionBar;\n\tprivate readonly _menuDisposables = new DisposableStore();\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate readonly _menuId: MenuId,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IMenuService private _menuService: IMenuService,\n\t\t@IContextKeyService private _contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.element = dom.append(container, dom.$('.suggest-status-bar'));\n\n\t\tconst actionViewItemProvider = <IActionViewItemProvider>(action => {\n\t\t\treturn action instanceof MenuItemAction ? instantiationService.createInstance(TextOnlyMenuEntryActionViewItem, action, { useComma: false }) : undefined;\n\t\t});\n\t\tthis._leftActions = new ActionBar(this.element, { actionViewItemProvider });\n\t\tthis._rightActions = new ActionBar(this.element, { actionViewItemProvider });\n\n\t\tthis._leftActions.domNode.classList.add('left');\n\t\tthis._rightActions.domNode.classList.add('right');\n\t}\n\n\tdispose(): void {\n\t\tthis._menuDisposables.dispose();\n\t\tthis._leftActions.dispose();\n\t\tthis._rightActions.dispose();\n\t\tthis.element.remove();\n\t}\n\n\tshow(): void {\n\t\tconst menu = this._menuService.createMenu(this._menuId, this._contextKeyService);\n\t\tconst renderMenu = () => {\n\t\t\tconst left: IAction[] = [];\n\t\t\tconst right: IAction[] = [];\n\t\t\tfor (const [group, actions] of menu.getActions()) {\n\t\t\t\tif (group === 'left') {\n\t\t\t\t\tleft.push(...actions);\n\t\t\t\t} else {\n\t\t\t\t\tright.push(...actions);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._leftActions.clear();\n\t\t\tthis._leftActions.push(left);\n\t\t\tthis._rightActions.clear();\n\t\t\tthis._rightActions.push(right);\n\t\t};\n\t\tthis._menuDisposables.add(menu.onDidChange(() => renderMenu()));\n\t\tthis._menuDisposables.add(menu);\n\t}\n\n\thide(): void {\n\t\tthis._menuDisposables.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionBar, IActionViewItemProvider } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { IAction } from '../../../../base/common/actions.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { TextOnlyMenuEntryActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\n\nexport class SuggestWidgetStatus {\n\n\treadonly element: HTMLElement;\n\n\tprivate readonly _leftActions: ActionBar;\n\tprivate readonly _rightActions: ActionBar;\n\tprivate readonly _menuDisposables = new DisposableStore();\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate readonly _menuId: MenuId,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IMenuService private _menuService: IMenuService,\n\t\t@IContextKeyService private _contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.element = dom.append(container, dom.$('.suggest-status-bar'));\n\n\t\tconst actionViewItemProvider = <IActionViewItemProvider>(action => {\n\t\t\treturn action instanceof MenuItemAction ? instantiationService.createInstance(TextOnlyMenuEntryActionViewItem, action, { useComma: false }) : undefined;\n\t\t});\n\t\tthis._leftActions = new ActionBar(this.element, { actionViewItemProvider });\n\t\tthis._rightActions = new ActionBar(this.element, { actionViewItemProvider });\n\n\t\tthis._leftActions.domNode.classList.add('left');\n\t\tthis._rightActions.domNode.classList.add('right');\n\t}\n\n\tdispose(): void {\n\t\tthis._menuDisposables.dispose();\n\t\tthis._leftActions.dispose();\n\t\tthis._rightActions.dispose();\n\t\tthis.element.remove();\n\t}\n\n\tshow(): void {\n\t\tconst menu = this._menuService.createMenu(this._menuId, this._contextKeyService);\n\t\tconst renderMenu = () => {\n\t\t\tconst left: IAction[] = [];\n\t\t\tconst right: IAction[] = [];\n\t\t\tfor (const [group, actions] of menu.getActions()) {\n\t\t\t\tif (group === 'left') {\n\t\t\t\t\tleft.push(...actions);\n\t\t\t\t} else {\n\t\t\t\t\tright.push(...actions);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._leftActions.clear();\n\t\t\tthis._leftActions.push(left);\n\t\t\tthis._rightActions.clear();\n\t\t\tthis._rightActions.push(right);\n\t\t};\n\t\tthis._menuDisposables.add(menu.onDidChange(() => renderMenu()));\n\t\tthis._menuDisposables.add(menu);\n\t}\n\n\thide(): void {\n\t\tthis._menuDisposables.clear();\n\t}\n}\n"]}