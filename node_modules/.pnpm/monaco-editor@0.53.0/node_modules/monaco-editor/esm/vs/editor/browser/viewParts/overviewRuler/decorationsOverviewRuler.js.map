{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.ts","vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.ts"],"names":[],"mappings":"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","file":"decorationsOverviewRuler.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { IEditorConfiguration } from '../../../common/config/editorConfiguration.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { editorCursorForeground, editorOverviewRulerBorder, editorOverviewRulerBackground, editorMultiCursorSecondaryForeground, editorMultiCursorPrimaryForeground } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { EditorTheme } from '../../../common/editorTheme.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { OverviewRulerDecorationsGroup } from '../../../common/viewModel.js';\nimport { equals } from '../../../../base/common/arrays.js';\n\nclass Settings {\n\n\tpublic readonly lineHeight: number;\n\tpublic readonly pixelRatio: number;\n\tpublic readonly overviewRulerLanes: number;\n\n\tpublic readonly renderBorder: boolean;\n\tpublic readonly borderColor: string | null;\n\n\tpublic readonly hideCursor: boolean;\n\tpublic readonly cursorColorSingle: string | null;\n\tpublic readonly cursorColorPrimary: string | null;\n\tpublic readonly cursorColorSecondary: string | null;\n\n\tpublic readonly themeType: 'light' | 'dark' | 'hcLight' | 'hcDark';\n\tpublic readonly backgroundColor: Color | null;\n\n\tpublic readonly top: number;\n\tpublic readonly right: number;\n\tpublic readonly domWidth: number;\n\tpublic readonly domHeight: number;\n\tpublic readonly canvasWidth: number;\n\tpublic readonly canvasHeight: number;\n\n\tpublic readonly x: number[];\n\tpublic readonly w: number[];\n\n\tconstructor(config: IEditorConfiguration, theme: EditorTheme) {\n\t\tconst options = config.options;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.pixelRatio = options.get(EditorOption.pixelRatio);\n\t\tthis.overviewRulerLanes = options.get(EditorOption.overviewRulerLanes);\n\n\t\tthis.renderBorder = options.get(EditorOption.overviewRulerBorder);\n\t\tconst borderColor = theme.getColor(editorOverviewRulerBorder);\n\t\tthis.borderColor = borderColor ? borderColor.toString() : null;\n\n\t\tthis.hideCursor = options.get(EditorOption.hideCursorInOverviewRuler);\n\t\tconst cursorColorSingle = theme.getColor(editorCursorForeground);\n\t\tthis.cursorColorSingle = cursorColorSingle ? cursorColorSingle.transparent(0.7).toString() : null;\n\t\tconst cursorColorPrimary = theme.getColor(editorMultiCursorPrimaryForeground);\n\t\tthis.cursorColorPrimary = cursorColorPrimary ? cursorColorPrimary.transparent(0.7).toString() : null;\n\t\tconst cursorColorSecondary = theme.getColor(editorMultiCursorSecondaryForeground);\n\t\tthis.cursorColorSecondary = cursorColorSecondary ? cursorColorSecondary.transparent(0.7).toString() : null;\n\n\t\tthis.themeType = theme.type;\n\n\t\tconst minimapOpts = options.get(EditorOption.minimap);\n\t\tconst minimapEnabled = minimapOpts.enabled;\n\t\tconst minimapSide = minimapOpts.side;\n\t\tconst themeColor = theme.getColor(editorOverviewRulerBackground);\n\t\tconst defaultBackground = TokenizationRegistry.getDefaultBackground();\n\n\t\tif (themeColor) {\n\t\t\tthis.backgroundColor = themeColor;\n\t\t} else if (minimapEnabled && minimapSide === 'right') {\n\t\t\tthis.backgroundColor = defaultBackground;\n\t\t} else {\n\t\t\tthis.backgroundColor = null;\n\t\t}\n\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst position = layoutInfo.overviewRuler;\n\t\tthis.top = position.top;\n\t\tthis.right = position.right;\n\t\tthis.domWidth = position.width;\n\t\tthis.domHeight = position.height;\n\t\tif (this.overviewRulerLanes === 0) {\n\t\t\t// overview ruler is off\n\t\t\tthis.canvasWidth = 0;\n\t\t\tthis.canvasHeight = 0;\n\t\t} else {\n\t\t\tthis.canvasWidth = (this.domWidth * this.pixelRatio) | 0;\n\t\t\tthis.canvasHeight = (this.domHeight * this.pixelRatio) | 0;\n\t\t}\n\n\t\tconst [x, w] = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes);\n\t\tthis.x = x;\n\t\tthis.w = w;\n\t}\n\n\tprivate _initLanes(canvasLeftOffset: number, canvasWidth: number, laneCount: number): [number[], number[]] {\n\t\tconst remainingWidth = canvasWidth - canvasLeftOffset;\n\n\t\tif (laneCount >= 3) {\n\t\t\tconst leftWidth = Math.floor(remainingWidth / 3);\n\t\t\tconst rightWidth = Math.floor(remainingWidth / 3);\n\t\t\tconst centerWidth = remainingWidth - leftWidth - rightWidth;\n\t\t\tconst leftOffset = canvasLeftOffset;\n\t\t\tconst centerOffset = leftOffset + leftWidth;\n\t\t\tconst rightOffset = leftOffset + leftWidth + centerWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\tleftOffset, // Left\n\t\t\t\t\tcenterOffset, // Center\n\t\t\t\t\tleftOffset, // Left | Center\n\t\t\t\t\trightOffset, // Right\n\t\t\t\t\tleftOffset, // Left | Right\n\t\t\t\t\tcenterOffset, // Center | Right\n\t\t\t\t\tleftOffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\tleftWidth, // Left\n\t\t\t\t\tcenterWidth, // Center\n\t\t\t\t\tleftWidth + centerWidth, // Left | Center\n\t\t\t\t\trightWidth, // Right\n\t\t\t\t\tleftWidth + centerWidth + rightWidth, // Left | Right\n\t\t\t\t\tcenterWidth + rightWidth, // Center | Right\n\t\t\t\t\tleftWidth + centerWidth + rightWidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t} else if (laneCount === 2) {\n\t\t\tconst leftWidth = Math.floor(remainingWidth / 2);\n\t\t\tconst rightWidth = remainingWidth - leftWidth;\n\t\t\tconst leftOffset = canvasLeftOffset;\n\t\t\tconst rightOffset = leftOffset + leftWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\tleftOffset, // Left\n\t\t\t\t\tleftOffset, // Center\n\t\t\t\t\tleftOffset, // Left | Center\n\t\t\t\t\trightOffset, // Right\n\t\t\t\t\tleftOffset, // Left | Right\n\t\t\t\t\tleftOffset, // Center | Right\n\t\t\t\t\tleftOffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\tleftWidth, // Left\n\t\t\t\t\tleftWidth, // Center\n\t\t\t\t\tleftWidth, // Left | Center\n\t\t\t\t\trightWidth, // Right\n\t\t\t\t\tleftWidth + rightWidth, // Left | Right\n\t\t\t\t\tleftWidth + rightWidth, // Center | Right\n\t\t\t\t\tleftWidth + rightWidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t} else {\n\t\t\tconst offset = canvasLeftOffset;\n\t\t\tconst width = remainingWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\toffset, // Left\n\t\t\t\t\toffset, // Center\n\t\t\t\t\toffset, // Left | Center\n\t\t\t\t\toffset, // Right\n\t\t\t\t\toffset, // Left | Right\n\t\t\t\t\toffset, // Center | Right\n\t\t\t\t\toffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\twidth, // Left\n\t\t\t\t\twidth, // Center\n\t\t\t\t\twidth, // Left | Center\n\t\t\t\t\twidth, // Right\n\t\t\t\t\twidth, // Left | Right\n\t\t\t\t\twidth, // Center | Right\n\t\t\t\t\twidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t}\n\t}\n\n\tpublic equals(other: Settings): boolean {\n\t\treturn (\n\t\t\tthis.lineHeight === other.lineHeight\n\t\t\t&& this.pixelRatio === other.pixelRatio\n\t\t\t&& this.overviewRulerLanes === other.overviewRulerLanes\n\t\t\t&& this.renderBorder === other.renderBorder\n\t\t\t&& this.borderColor === other.borderColor\n\t\t\t&& this.hideCursor === other.hideCursor\n\t\t\t&& this.cursorColorSingle === other.cursorColorSingle\n\t\t\t&& this.cursorColorPrimary === other.cursorColorPrimary\n\t\t\t&& this.cursorColorSecondary === other.cursorColorSecondary\n\t\t\t&& this.themeType === other.themeType\n\t\t\t&& Color.equals(this.backgroundColor, other.backgroundColor)\n\t\t\t&& this.top === other.top\n\t\t\t&& this.right === other.right\n\t\t\t&& this.domWidth === other.domWidth\n\t\t\t&& this.domHeight === other.domHeight\n\t\t\t&& this.canvasWidth === other.canvasWidth\n\t\t\t&& this.canvasHeight === other.canvasHeight\n\t\t);\n\t}\n}\n\nconst enum Constants {\n\tMIN_DECORATION_HEIGHT = 6\n}\n\nconst enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\ntype Cursor = {\n\tposition: Position;\n\tcolor: string | null;\n};\n\nconst enum ShouldRenderValue {\n\tNotNeeded = 0,\n\tMaybe = 1,\n\tNeeded = 2\n}\n\nexport class DecorationsOverviewRuler extends ViewPart {\n\n\tprivate _actualShouldRender: ShouldRenderValue = ShouldRenderValue.NotNeeded;\n\n\tprivate readonly _tokensColorTrackerListener: IDisposable;\n\tprivate readonly _domNode: FastDomNode<HTMLCanvasElement>;\n\tprivate _settings!: Settings;\n\tprivate _cursorPositions: Cursor[];\n\n\tprivate _renderedDecorations: OverviewRulerDecorationsGroup[] = [];\n\tprivate _renderedCursorPositions: Cursor[] = [];\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis._domNode = createFastDomNode(document.createElement('canvas'));\n\t\tthis._domNode.setClassName('decorationsOverviewRuler');\n\t\tthis._domNode.setPosition('absolute');\n\t\tthis._domNode.setLayerHinting(true);\n\t\tthis._domNode.setContain('strict');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._updateSettings(false);\n\n\t\tthis._tokensColorTrackerListener = TokenizationRegistry.onDidChange((e) => {\n\t\t\tif (e.changedColorMap) {\n\t\t\t\tthis._updateSettings(true);\n\t\t\t}\n\t\t});\n\n\t\tthis._cursorPositions = [{ position: new Position(1, 1), color: this._settings.cursorColorSingle }];\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._tokensColorTrackerListener.dispose();\n\t}\n\n\tprivate _updateSettings(renderNow: boolean): boolean {\n\t\tconst newSettings = new Settings(this._context.configuration, this._context.theme);\n\t\tif (this._settings && this._settings.equals(newSettings)) {\n\t\t\t// nothing to do\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._settings = newSettings;\n\n\t\tthis._domNode.setTop(this._settings.top);\n\t\tthis._domNode.setRight(this._settings.right);\n\t\tthis._domNode.setWidth(this._settings.domWidth);\n\t\tthis._domNode.setHeight(this._settings.domHeight);\n\t\tthis._domNode.domNode.width = this._settings.canvasWidth;\n\t\tthis._domNode.domNode.height = this._settings.canvasHeight;\n\n\t\tif (renderNow) {\n\t\t\tthis._render();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// ---- begin view event handlers\n\n\tprivate _markRenderingIsNeeded(): true {\n\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\treturn true;\n\t}\n\n\tprivate _markRenderingIsMaybeNeeded(): true {\n\t\tthis._actualShouldRender = ShouldRenderValue.Maybe;\n\t\treturn true;\n\t}\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._cursorPositions = [];\n\t\tfor (let i = 0, len = e.selections.length; i < len; i++) {\n\t\t\tlet color = this._settings.cursorColorSingle;\n\t\t\tif (len > 1) {\n\t\t\t\tcolor = i === 0 ? this._settings.cursorColorPrimary : this._settings.cursorColorSecondary;\n\t\t\t}\n\t\t\tthis._cursorPositions.push({ position: e.selections[i].getPosition(), color });\n\t\t}\n\t\tthis._cursorPositions.sort((a, b) => Position.compare(a.position, b.position));\n\t\treturn this._markRenderingIsMaybeNeeded();\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\tif (e.affectsOverviewRuler) {\n\t\t\treturn this._markRenderingIsMaybeNeeded();\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn this._markRenderingIsNeeded();\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollHeightChanged ? this._markRenderingIsNeeded() : false;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn this._markRenderingIsNeeded();\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\treturn this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n\t}\n\n\t// ---- end view event handlers\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode.domNode;\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(editorCtx: RestrictedRenderingContext): void {\n\t\tthis._render();\n\t\tthis._actualShouldRender = ShouldRenderValue.NotNeeded;\n\t}\n\n\tprivate _render(): void {\n\t\tconst backgroundColor = this._settings.backgroundColor;\n\t\tif (this._settings.overviewRulerLanes === 0) {\n\t\t\t// overview ruler is off\n\t\t\tthis._domNode.setBackgroundColor(backgroundColor ? Color.Format.CSS.formatHexA(backgroundColor) : '');\n\t\t\tthis._domNode.setDisplay('none');\n\t\t\treturn;\n\t\t}\n\n\t\tconst decorations = this._context.viewModel.getAllOverviewRulerDecorations(this._context.theme);\n\t\tdecorations.sort(OverviewRulerDecorationsGroup.compareByRenderingProps);\n\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe && !OverviewRulerDecorationsGroup.equalsArr(this._renderedDecorations, decorations)) {\n\t\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\t}\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe && !equals(this._renderedCursorPositions, this._cursorPositions, (a, b) => a.position.lineNumber === b.position.lineNumber && a.color === b.color)) {\n\t\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\t}\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe) {\n\t\t\t// both decorations and cursor positions are unchanged, nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._renderedDecorations = decorations;\n\t\tthis._renderedCursorPositions = this._cursorPositions;\n\n\t\tthis._domNode.setDisplay('block');\n\t\tconst canvasWidth = this._settings.canvasWidth;\n\t\tconst canvasHeight = this._settings.canvasHeight;\n\t\tconst lineHeight = this._settings.lineHeight;\n\t\tconst viewLayout = this._context.viewLayout;\n\t\tconst outerHeight = this._context.viewLayout.getScrollHeight();\n\t\tconst heightRatio = canvasHeight / outerHeight;\n\n\t\tconst minDecorationHeight = (Constants.MIN_DECORATION_HEIGHT * this._settings.pixelRatio) | 0;\n\t\tconst halfMinDecorationHeight = (minDecorationHeight / 2) | 0;\n\n\t\tconst canvasCtx = this._domNode.domNode.getContext('2d')!;\n\t\tif (backgroundColor) {\n\t\t\tif (backgroundColor.isOpaque()) {\n\t\t\t\t// We have a background color which is opaque, we can just paint the entire surface with it\n\t\t\t\tcanvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n\t\t\t\tcanvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t} else {\n\t\t\t\t// We have a background color which is transparent, we need to first clear the surface and\n\t\t\t\t// then fill it\n\t\t\t\tcanvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t\tcanvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n\t\t\t\tcanvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t}\n\t\t} else {\n\t\t\t// We don't have a background color\n\t\t\tcanvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t\t}\n\n\t\tconst x = this._settings.x;\n\t\tconst w = this._settings.w;\n\n\n\n\t\tfor (const decorationGroup of decorations) {\n\t\t\tconst color = decorationGroup.color;\n\t\t\tconst decorationGroupData = decorationGroup.data;\n\n\t\t\tcanvasCtx.fillStyle = color;\n\n\t\t\tlet prevLane = 0;\n\t\t\tlet prevY1 = 0;\n\t\t\tlet prevY2 = 0;\n\t\t\tfor (let i = 0, len = decorationGroupData.length / 3; i < len; i++) {\n\t\t\t\tconst lane = decorationGroupData[3 * i];\n\t\t\t\tconst startLineNumber = decorationGroupData[3 * i + 1];\n\t\t\t\tconst endLineNumber = decorationGroupData[3 * i + 2];\n\n\t\t\t\tlet y1 = (viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio) | 0;\n\t\t\t\tlet y2 = ((viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio) | 0;\n\t\t\t\tconst height = y2 - y1;\n\t\t\t\tif (height < minDecorationHeight) {\n\t\t\t\t\tlet yCenter = ((y1 + y2) / 2) | 0;\n\t\t\t\t\tif (yCenter < halfMinDecorationHeight) {\n\t\t\t\t\t\tyCenter = halfMinDecorationHeight;\n\t\t\t\t\t} else if (yCenter + halfMinDecorationHeight > canvasHeight) {\n\t\t\t\t\t\tyCenter = canvasHeight - halfMinDecorationHeight;\n\t\t\t\t\t}\n\t\t\t\t\ty1 = yCenter - halfMinDecorationHeight;\n\t\t\t\t\ty2 = yCenter + halfMinDecorationHeight;\n\t\t\t\t}\n\n\t\t\t\tif (y1 > prevY2 + 1 || lane !== prevLane) {\n\t\t\t\t\t// flush prev\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tcanvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n\t\t\t\t\t}\n\t\t\t\t\tprevLane = lane;\n\t\t\t\t\tprevY1 = y1;\n\t\t\t\t\tprevY2 = y2;\n\t\t\t\t} else {\n\t\t\t\t\t// merge into prev\n\t\t\t\t\tif (y2 > prevY2) {\n\t\t\t\t\t\tprevY2 = y2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcanvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n\t\t}\n\n\t\t// Draw cursors\n\t\tif (!this._settings.hideCursor) {\n\t\t\tconst cursorHeight = (2 * this._settings.pixelRatio) | 0;\n\t\t\tconst halfCursorHeight = (cursorHeight / 2) | 0;\n\t\t\tconst cursorX = this._settings.x[OverviewRulerLane.Full];\n\t\t\tconst cursorW = this._settings.w[OverviewRulerLane.Full];\n\n\t\t\tlet prevY1 = -100;\n\t\t\tlet prevY2 = -100;\n\t\t\tlet prevColor: string | null = null;\n\t\t\tfor (let i = 0, len = this._cursorPositions.length; i < len; i++) {\n\t\t\t\tconst color = this._cursorPositions[i].color;\n\t\t\t\tif (!color) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst cursor = this._cursorPositions[i].position;\n\n\t\t\t\tlet yCenter = (viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio) | 0;\n\t\t\t\tif (yCenter < halfCursorHeight) {\n\t\t\t\t\tyCenter = halfCursorHeight;\n\t\t\t\t} else if (yCenter + halfCursorHeight > canvasHeight) {\n\t\t\t\t\tyCenter = canvasHeight - halfCursorHeight;\n\t\t\t\t}\n\t\t\t\tconst y1 = yCenter - halfCursorHeight;\n\t\t\t\tconst y2 = y1 + cursorHeight;\n\n\t\t\t\tif (y1 > prevY2 + 1 || color !== prevColor) {\n\t\t\t\t\t// flush prev\n\t\t\t\t\tif (i !== 0 && prevColor) {\n\t\t\t\t\t\tcanvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n\t\t\t\t\t}\n\t\t\t\t\tprevY1 = y1;\n\t\t\t\t\tprevY2 = y2;\n\t\t\t\t} else {\n\t\t\t\t\t// merge into prev\n\t\t\t\t\tif (y2 > prevY2) {\n\t\t\t\t\t\tprevY2 = y2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprevColor = color;\n\t\t\t\tcanvasCtx.fillStyle = color;\n\t\t\t}\n\t\t\tif (prevColor) {\n\t\t\t\tcanvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n\t\t\t}\n\t\t}\n\n\t\tif (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\n\t\t\tcanvasCtx.beginPath();\n\t\t\tcanvasCtx.lineWidth = 1;\n\t\t\tcanvasCtx.strokeStyle = this._settings.borderColor;\n\t\t\tcanvasCtx.moveTo(0, 0);\n\t\t\tcanvasCtx.lineTo(0, canvasHeight);\n\t\t\tcanvasCtx.moveTo(1, 0);\n\t\t\tcanvasCtx.lineTo(canvasWidth, 0);\n\t\t\tcanvasCtx.stroke();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { IEditorConfiguration } from '../../../common/config/editorConfiguration.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { editorCursorForeground, editorOverviewRulerBorder, editorOverviewRulerBackground, editorMultiCursorSecondaryForeground, editorMultiCursorPrimaryForeground } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { EditorTheme } from '../../../common/editorTheme.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { OverviewRulerDecorationsGroup } from '../../../common/viewModel.js';\nimport { equals } from '../../../../base/common/arrays.js';\n\nclass Settings {\n\n\tpublic readonly lineHeight: number;\n\tpublic readonly pixelRatio: number;\n\tpublic readonly overviewRulerLanes: number;\n\n\tpublic readonly renderBorder: boolean;\n\tpublic readonly borderColor: string | null;\n\n\tpublic readonly hideCursor: boolean;\n\tpublic readonly cursorColorSingle: string | null;\n\tpublic readonly cursorColorPrimary: string | null;\n\tpublic readonly cursorColorSecondary: string | null;\n\n\tpublic readonly themeType: 'light' | 'dark' | 'hcLight' | 'hcDark';\n\tpublic readonly backgroundColor: Color | null;\n\n\tpublic readonly top: number;\n\tpublic readonly right: number;\n\tpublic readonly domWidth: number;\n\tpublic readonly domHeight: number;\n\tpublic readonly canvasWidth: number;\n\tpublic readonly canvasHeight: number;\n\n\tpublic readonly x: number[];\n\tpublic readonly w: number[];\n\n\tconstructor(config: IEditorConfiguration, theme: EditorTheme) {\n\t\tconst options = config.options;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.pixelRatio = options.get(EditorOption.pixelRatio);\n\t\tthis.overviewRulerLanes = options.get(EditorOption.overviewRulerLanes);\n\n\t\tthis.renderBorder = options.get(EditorOption.overviewRulerBorder);\n\t\tconst borderColor = theme.getColor(editorOverviewRulerBorder);\n\t\tthis.borderColor = borderColor ? borderColor.toString() : null;\n\n\t\tthis.hideCursor = options.get(EditorOption.hideCursorInOverviewRuler);\n\t\tconst cursorColorSingle = theme.getColor(editorCursorForeground);\n\t\tthis.cursorColorSingle = cursorColorSingle ? cursorColorSingle.transparent(0.7).toString() : null;\n\t\tconst cursorColorPrimary = theme.getColor(editorMultiCursorPrimaryForeground);\n\t\tthis.cursorColorPrimary = cursorColorPrimary ? cursorColorPrimary.transparent(0.7).toString() : null;\n\t\tconst cursorColorSecondary = theme.getColor(editorMultiCursorSecondaryForeground);\n\t\tthis.cursorColorSecondary = cursorColorSecondary ? cursorColorSecondary.transparent(0.7).toString() : null;\n\n\t\tthis.themeType = theme.type;\n\n\t\tconst minimapOpts = options.get(EditorOption.minimap);\n\t\tconst minimapEnabled = minimapOpts.enabled;\n\t\tconst minimapSide = minimapOpts.side;\n\t\tconst themeColor = theme.getColor(editorOverviewRulerBackground);\n\t\tconst defaultBackground = TokenizationRegistry.getDefaultBackground();\n\n\t\tif (themeColor) {\n\t\t\tthis.backgroundColor = themeColor;\n\t\t} else if (minimapEnabled && minimapSide === 'right') {\n\t\t\tthis.backgroundColor = defaultBackground;\n\t\t} else {\n\t\t\tthis.backgroundColor = null;\n\t\t}\n\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst position = layoutInfo.overviewRuler;\n\t\tthis.top = position.top;\n\t\tthis.right = position.right;\n\t\tthis.domWidth = position.width;\n\t\tthis.domHeight = position.height;\n\t\tif (this.overviewRulerLanes === 0) {\n\t\t\t// overview ruler is off\n\t\t\tthis.canvasWidth = 0;\n\t\t\tthis.canvasHeight = 0;\n\t\t} else {\n\t\t\tthis.canvasWidth = (this.domWidth * this.pixelRatio) | 0;\n\t\t\tthis.canvasHeight = (this.domHeight * this.pixelRatio) | 0;\n\t\t}\n\n\t\tconst [x, w] = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes);\n\t\tthis.x = x;\n\t\tthis.w = w;\n\t}\n\n\tprivate _initLanes(canvasLeftOffset: number, canvasWidth: number, laneCount: number): [number[], number[]] {\n\t\tconst remainingWidth = canvasWidth - canvasLeftOffset;\n\n\t\tif (laneCount >= 3) {\n\t\t\tconst leftWidth = Math.floor(remainingWidth / 3);\n\t\t\tconst rightWidth = Math.floor(remainingWidth / 3);\n\t\t\tconst centerWidth = remainingWidth - leftWidth - rightWidth;\n\t\t\tconst leftOffset = canvasLeftOffset;\n\t\t\tconst centerOffset = leftOffset + leftWidth;\n\t\t\tconst rightOffset = leftOffset + leftWidth + centerWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\tleftOffset, // Left\n\t\t\t\t\tcenterOffset, // Center\n\t\t\t\t\tleftOffset, // Left | Center\n\t\t\t\t\trightOffset, // Right\n\t\t\t\t\tleftOffset, // Left | Right\n\t\t\t\t\tcenterOffset, // Center | Right\n\t\t\t\t\tleftOffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\tleftWidth, // Left\n\t\t\t\t\tcenterWidth, // Center\n\t\t\t\t\tleftWidth + centerWidth, // Left | Center\n\t\t\t\t\trightWidth, // Right\n\t\t\t\t\tleftWidth + centerWidth + rightWidth, // Left | Right\n\t\t\t\t\tcenterWidth + rightWidth, // Center | Right\n\t\t\t\t\tleftWidth + centerWidth + rightWidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t} else if (laneCount === 2) {\n\t\t\tconst leftWidth = Math.floor(remainingWidth / 2);\n\t\t\tconst rightWidth = remainingWidth - leftWidth;\n\t\t\tconst leftOffset = canvasLeftOffset;\n\t\t\tconst rightOffset = leftOffset + leftWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\tleftOffset, // Left\n\t\t\t\t\tleftOffset, // Center\n\t\t\t\t\tleftOffset, // Left | Center\n\t\t\t\t\trightOffset, // Right\n\t\t\t\t\tleftOffset, // Left | Right\n\t\t\t\t\tleftOffset, // Center | Right\n\t\t\t\t\tleftOffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\tleftWidth, // Left\n\t\t\t\t\tleftWidth, // Center\n\t\t\t\t\tleftWidth, // Left | Center\n\t\t\t\t\trightWidth, // Right\n\t\t\t\t\tleftWidth + rightWidth, // Left | Right\n\t\t\t\t\tleftWidth + rightWidth, // Center | Right\n\t\t\t\t\tleftWidth + rightWidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t} else {\n\t\t\tconst offset = canvasLeftOffset;\n\t\t\tconst width = remainingWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\toffset, // Left\n\t\t\t\t\toffset, // Center\n\t\t\t\t\toffset, // Left | Center\n\t\t\t\t\toffset, // Right\n\t\t\t\t\toffset, // Left | Right\n\t\t\t\t\toffset, // Center | Right\n\t\t\t\t\toffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\twidth, // Left\n\t\t\t\t\twidth, // Center\n\t\t\t\t\twidth, // Left | Center\n\t\t\t\t\twidth, // Right\n\t\t\t\t\twidth, // Left | Right\n\t\t\t\t\twidth, // Center | Right\n\t\t\t\t\twidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t}\n\t}\n\n\tpublic equals(other: Settings): boolean {\n\t\treturn (\n\t\t\tthis.lineHeight === other.lineHeight\n\t\t\t&& this.pixelRatio === other.pixelRatio\n\t\t\t&& this.overviewRulerLanes === other.overviewRulerLanes\n\t\t\t&& this.renderBorder === other.renderBorder\n\t\t\t&& this.borderColor === other.borderColor\n\t\t\t&& this.hideCursor === other.hideCursor\n\t\t\t&& this.cursorColorSingle === other.cursorColorSingle\n\t\t\t&& this.cursorColorPrimary === other.cursorColorPrimary\n\t\t\t&& this.cursorColorSecondary === other.cursorColorSecondary\n\t\t\t&& this.themeType === other.themeType\n\t\t\t&& Color.equals(this.backgroundColor, other.backgroundColor)\n\t\t\t&& this.top === other.top\n\t\t\t&& this.right === other.right\n\t\t\t&& this.domWidth === other.domWidth\n\t\t\t&& this.domHeight === other.domHeight\n\t\t\t&& this.canvasWidth === other.canvasWidth\n\t\t\t&& this.canvasHeight === other.canvasHeight\n\t\t);\n\t}\n}\n\nconst enum Constants {\n\tMIN_DECORATION_HEIGHT = 6\n}\n\nconst enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\ntype Cursor = {\n\tposition: Position;\n\tcolor: string | null;\n};\n\nconst enum ShouldRenderValue {\n\tNotNeeded = 0,\n\tMaybe = 1,\n\tNeeded = 2\n}\n\nexport class DecorationsOverviewRuler extends ViewPart {\n\n\tprivate _actualShouldRender: ShouldRenderValue = ShouldRenderValue.NotNeeded;\n\n\tprivate readonly _tokensColorTrackerListener: IDisposable;\n\tprivate readonly _domNode: FastDomNode<HTMLCanvasElement>;\n\tprivate _settings!: Settings;\n\tprivate _cursorPositions: Cursor[];\n\n\tprivate _renderedDecorations: OverviewRulerDecorationsGroup[] = [];\n\tprivate _renderedCursorPositions: Cursor[] = [];\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis._domNode = createFastDomNode(document.createElement('canvas'));\n\t\tthis._domNode.setClassName('decorationsOverviewRuler');\n\t\tthis._domNode.setPosition('absolute');\n\t\tthis._domNode.setLayerHinting(true);\n\t\tthis._domNode.setContain('strict');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._updateSettings(false);\n\n\t\tthis._tokensColorTrackerListener = TokenizationRegistry.onDidChange((e) => {\n\t\t\tif (e.changedColorMap) {\n\t\t\t\tthis._updateSettings(true);\n\t\t\t}\n\t\t});\n\n\t\tthis._cursorPositions = [{ position: new Position(1, 1), color: this._settings.cursorColorSingle }];\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._tokensColorTrackerListener.dispose();\n\t}\n\n\tprivate _updateSettings(renderNow: boolean): boolean {\n\t\tconst newSettings = new Settings(this._context.configuration, this._context.theme);\n\t\tif (this._settings && this._settings.equals(newSettings)) {\n\t\t\t// nothing to do\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._settings = newSettings;\n\n\t\tthis._domNode.setTop(this._settings.top);\n\t\tthis._domNode.setRight(this._settings.right);\n\t\tthis._domNode.setWidth(this._settings.domWidth);\n\t\tthis._domNode.setHeight(this._settings.domHeight);\n\t\tthis._domNode.domNode.width = this._settings.canvasWidth;\n\t\tthis._domNode.domNode.height = this._settings.canvasHeight;\n\n\t\tif (renderNow) {\n\t\t\tthis._render();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// ---- begin view event handlers\n\n\tprivate _markRenderingIsNeeded(): true {\n\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\treturn true;\n\t}\n\n\tprivate _markRenderingIsMaybeNeeded(): true {\n\t\tthis._actualShouldRender = ShouldRenderValue.Maybe;\n\t\treturn true;\n\t}\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._cursorPositions = [];\n\t\tfor (let i = 0, len = e.selections.length; i < len; i++) {\n\t\t\tlet color = this._settings.cursorColorSingle;\n\t\t\tif (len > 1) {\n\t\t\t\tcolor = i === 0 ? this._settings.cursorColorPrimary : this._settings.cursorColorSecondary;\n\t\t\t}\n\t\t\tthis._cursorPositions.push({ position: e.selections[i].getPosition(), color });\n\t\t}\n\t\tthis._cursorPositions.sort((a, b) => Position.compare(a.position, b.position));\n\t\treturn this._markRenderingIsMaybeNeeded();\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\tif (e.affectsOverviewRuler) {\n\t\t\treturn this._markRenderingIsMaybeNeeded();\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn this._markRenderingIsNeeded();\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollHeightChanged ? this._markRenderingIsNeeded() : false;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn this._markRenderingIsNeeded();\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\treturn this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n\t}\n\n\t// ---- end view event handlers\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode.domNode;\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(editorCtx: RestrictedRenderingContext): void {\n\t\tthis._render();\n\t\tthis._actualShouldRender = ShouldRenderValue.NotNeeded;\n\t}\n\n\tprivate _render(): void {\n\t\tconst backgroundColor = this._settings.backgroundColor;\n\t\tif (this._settings.overviewRulerLanes === 0) {\n\t\t\t// overview ruler is off\n\t\t\tthis._domNode.setBackgroundColor(backgroundColor ? Color.Format.CSS.formatHexA(backgroundColor) : '');\n\t\t\tthis._domNode.setDisplay('none');\n\t\t\treturn;\n\t\t}\n\n\t\tconst decorations = this._context.viewModel.getAllOverviewRulerDecorations(this._context.theme);\n\t\tdecorations.sort(OverviewRulerDecorationsGroup.compareByRenderingProps);\n\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe && !OverviewRulerDecorationsGroup.equalsArr(this._renderedDecorations, decorations)) {\n\t\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\t}\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe && !equals(this._renderedCursorPositions, this._cursorPositions, (a, b) => a.position.lineNumber === b.position.lineNumber && a.color === b.color)) {\n\t\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\t}\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe) {\n\t\t\t// both decorations and cursor positions are unchanged, nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._renderedDecorations = decorations;\n\t\tthis._renderedCursorPositions = this._cursorPositions;\n\n\t\tthis._domNode.setDisplay('block');\n\t\tconst canvasWidth = this._settings.canvasWidth;\n\t\tconst canvasHeight = this._settings.canvasHeight;\n\t\tconst lineHeight = this._settings.lineHeight;\n\t\tconst viewLayout = this._context.viewLayout;\n\t\tconst outerHeight = this._context.viewLayout.getScrollHeight();\n\t\tconst heightRatio = canvasHeight / outerHeight;\n\n\t\tconst minDecorationHeight = (Constants.MIN_DECORATION_HEIGHT * this._settings.pixelRatio) | 0;\n\t\tconst halfMinDecorationHeight = (minDecorationHeight / 2) | 0;\n\n\t\tconst canvasCtx = this._domNode.domNode.getContext('2d')!;\n\t\tif (backgroundColor) {\n\t\t\tif (backgroundColor.isOpaque()) {\n\t\t\t\t// We have a background color which is opaque, we can just paint the entire surface with it\n\t\t\t\tcanvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n\t\t\t\tcanvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t} else {\n\t\t\t\t// We have a background color which is transparent, we need to first clear the surface and\n\t\t\t\t// then fill it\n\t\t\t\tcanvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t\tcanvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n\t\t\t\tcanvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t}\n\t\t} else {\n\t\t\t// We don't have a background color\n\t\t\tcanvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t\t}\n\n\t\tconst x = this._settings.x;\n\t\tconst w = this._settings.w;\n\n\n\n\t\tfor (const decorationGroup of decorations) {\n\t\t\tconst color = decorationGroup.color;\n\t\t\tconst decorationGroupData = decorationGroup.data;\n\n\t\t\tcanvasCtx.fillStyle = color;\n\n\t\t\tlet prevLane = 0;\n\t\t\tlet prevY1 = 0;\n\t\t\tlet prevY2 = 0;\n\t\t\tfor (let i = 0, len = decorationGroupData.length / 3; i < len; i++) {\n\t\t\t\tconst lane = decorationGroupData[3 * i];\n\t\t\t\tconst startLineNumber = decorationGroupData[3 * i + 1];\n\t\t\t\tconst endLineNumber = decorationGroupData[3 * i + 2];\n\n\t\t\t\tlet y1 = (viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio) | 0;\n\t\t\t\tlet y2 = ((viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio) | 0;\n\t\t\t\tconst height = y2 - y1;\n\t\t\t\tif (height < minDecorationHeight) {\n\t\t\t\t\tlet yCenter = ((y1 + y2) / 2) | 0;\n\t\t\t\t\tif (yCenter < halfMinDecorationHeight) {\n\t\t\t\t\t\tyCenter = halfMinDecorationHeight;\n\t\t\t\t\t} else if (yCenter + halfMinDecorationHeight > canvasHeight) {\n\t\t\t\t\t\tyCenter = canvasHeight - halfMinDecorationHeight;\n\t\t\t\t\t}\n\t\t\t\t\ty1 = yCenter - halfMinDecorationHeight;\n\t\t\t\t\ty2 = yCenter + halfMinDecorationHeight;\n\t\t\t\t}\n\n\t\t\t\tif (y1 > prevY2 + 1 || lane !== prevLane) {\n\t\t\t\t\t// flush prev\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tcanvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n\t\t\t\t\t}\n\t\t\t\t\tprevLane = lane;\n\t\t\t\t\tprevY1 = y1;\n\t\t\t\t\tprevY2 = y2;\n\t\t\t\t} else {\n\t\t\t\t\t// merge into prev\n\t\t\t\t\tif (y2 > prevY2) {\n\t\t\t\t\t\tprevY2 = y2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcanvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n\t\t}\n\n\t\t// Draw cursors\n\t\tif (!this._settings.hideCursor) {\n\t\t\tconst cursorHeight = (2 * this._settings.pixelRatio) | 0;\n\t\t\tconst halfCursorHeight = (cursorHeight / 2) | 0;\n\t\t\tconst cursorX = this._settings.x[OverviewRulerLane.Full];\n\t\t\tconst cursorW = this._settings.w[OverviewRulerLane.Full];\n\n\t\t\tlet prevY1 = -100;\n\t\t\tlet prevY2 = -100;\n\t\t\tlet prevColor: string | null = null;\n\t\t\tfor (let i = 0, len = this._cursorPositions.length; i < len; i++) {\n\t\t\t\tconst color = this._cursorPositions[i].color;\n\t\t\t\tif (!color) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst cursor = this._cursorPositions[i].position;\n\n\t\t\t\tlet yCenter = (viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio) | 0;\n\t\t\t\tif (yCenter < halfCursorHeight) {\n\t\t\t\t\tyCenter = halfCursorHeight;\n\t\t\t\t} else if (yCenter + halfCursorHeight > canvasHeight) {\n\t\t\t\t\tyCenter = canvasHeight - halfCursorHeight;\n\t\t\t\t}\n\t\t\t\tconst y1 = yCenter - halfCursorHeight;\n\t\t\t\tconst y2 = y1 + cursorHeight;\n\n\t\t\t\tif (y1 > prevY2 + 1 || color !== prevColor) {\n\t\t\t\t\t// flush prev\n\t\t\t\t\tif (i !== 0 && prevColor) {\n\t\t\t\t\t\tcanvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n\t\t\t\t\t}\n\t\t\t\t\tprevY1 = y1;\n\t\t\t\t\tprevY2 = y2;\n\t\t\t\t} else {\n\t\t\t\t\t// merge into prev\n\t\t\t\t\tif (y2 > prevY2) {\n\t\t\t\t\t\tprevY2 = y2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprevColor = color;\n\t\t\t\tcanvasCtx.fillStyle = color;\n\t\t\t}\n\t\t\tif (prevColor) {\n\t\t\t\tcanvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n\t\t\t}\n\t\t}\n\n\t\tif (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\n\t\t\tcanvasCtx.beginPath();\n\t\t\tcanvasCtx.lineWidth = 1;\n\t\t\tcanvasCtx.strokeStyle = this._settings.borderColor;\n\t\t\tcanvasCtx.moveTo(0, 0);\n\t\t\tcanvasCtx.lineTo(0, canvasHeight);\n\t\t\tcanvasCtx.moveTo(1, 0);\n\t\t\tcanvasCtx.lineTo(canvasWidth, 0);\n\t\t\tcanvasCtx.stroke();\n\t\t}\n\t}\n}\n"]}