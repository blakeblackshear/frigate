{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/hover/browser/contentHoverComputer.ts","vs/editor/contrib/hover/browser/contentHoverComputer.ts"],"names":[],"mappings":"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","file":"contentHoverComputer.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IActiveCodeEditor, ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { IModelDecoration } from '../../../common/model.js';\nimport { HoverStartSource, IHoverComputer } from './hoverOperation.js';\nimport { HoverAnchor, HoverAnchorType, IEditorHoverParticipant, IHoverPart } from './hoverTypes.js';\nimport { AsyncIterableProducer } from '../../../../base/common/async.js';\n\nexport interface ContentHoverComputerOptions {\n\tshouldFocus: boolean;\n\tanchor: HoverAnchor;\n\tsource: HoverStartSource;\n\tinsistOnKeepingHoverVisible: boolean;\n}\n\nexport class ContentHoverComputer implements IHoverComputer<ContentHoverComputerOptions, IHoverPart> {\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _participants: readonly IEditorHoverParticipant[]\n\t) {\n\t}\n\n\tprivate static _getLineDecorations(editor: IActiveCodeEditor, anchor: HoverAnchor): IModelDecoration[] {\n\t\tif (anchor.type !== HoverAnchorType.Range && !anchor.supportsMarkerHover) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst model = editor.getModel();\n\t\tconst lineNumber = anchor.range.startLineNumber;\n\n\t\tif (lineNumber > model.getLineCount()) {\n\t\t\t// invalid line\n\t\t\treturn [];\n\t\t}\n\n\t\tconst maxColumn = model.getLineMaxColumn(lineNumber);\n\n\t\treturn editor.getLineDecorations(lineNumber).filter((d) => {\n\t\t\tif (d.options.isWholeLine) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n\t\t\tconst endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n\n\t\t\tif (d.options.showIfCollapsed) {\n\t\t\t\t// Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n\t\t\t\tif (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tpublic computeAsync(options: ContentHoverComputerOptions, token: CancellationToken): AsyncIterableProducer<IHoverPart> {\n\t\tconst anchor = options.anchor;\n\n\t\tif (!this._editor.hasModel() || !anchor) {\n\t\t\treturn AsyncIterableProducer.EMPTY;\n\t\t}\n\n\t\tconst lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n\n\t\treturn AsyncIterableProducer.merge(\n\t\t\tthis._participants.map((participant) => {\n\t\t\t\tif (!participant.computeAsync) {\n\t\t\t\t\treturn AsyncIterableProducer.EMPTY;\n\t\t\t\t}\n\t\t\t\treturn participant.computeAsync(anchor, lineDecorations, options.source, token);\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic computeSync(options: ContentHoverComputerOptions): IHoverPart[] {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst anchor = options.anchor;\n\t\tconst lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n\n\t\tlet result: IHoverPart[] = [];\n\t\tfor (const participant of this._participants) {\n\t\t\tresult = result.concat(participant.computeSync(anchor, lineDecorations, options.source));\n\t\t}\n\n\t\treturn coalesce(result);\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IActiveCodeEditor, ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { IModelDecoration } from '../../../common/model.js';\nimport { HoverStartSource, IHoverComputer } from './hoverOperation.js';\nimport { HoverAnchor, HoverAnchorType, IEditorHoverParticipant, IHoverPart } from './hoverTypes.js';\nimport { AsyncIterableProducer } from '../../../../base/common/async.js';\n\nexport interface ContentHoverComputerOptions {\n\tshouldFocus: boolean;\n\tanchor: HoverAnchor;\n\tsource: HoverStartSource;\n\tinsistOnKeepingHoverVisible: boolean;\n}\n\nexport class ContentHoverComputer implements IHoverComputer<ContentHoverComputerOptions, IHoverPart> {\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _participants: readonly IEditorHoverParticipant[]\n\t) {\n\t}\n\n\tprivate static _getLineDecorations(editor: IActiveCodeEditor, anchor: HoverAnchor): IModelDecoration[] {\n\t\tif (anchor.type !== HoverAnchorType.Range && !anchor.supportsMarkerHover) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst model = editor.getModel();\n\t\tconst lineNumber = anchor.range.startLineNumber;\n\n\t\tif (lineNumber > model.getLineCount()) {\n\t\t\t// invalid line\n\t\t\treturn [];\n\t\t}\n\n\t\tconst maxColumn = model.getLineMaxColumn(lineNumber);\n\n\t\treturn editor.getLineDecorations(lineNumber).filter((d) => {\n\t\t\tif (d.options.isWholeLine) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n\t\t\tconst endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n\n\t\t\tif (d.options.showIfCollapsed) {\n\t\t\t\t// Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n\t\t\t\tif (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tpublic computeAsync(options: ContentHoverComputerOptions, token: CancellationToken): AsyncIterableProducer<IHoverPart> {\n\t\tconst anchor = options.anchor;\n\n\t\tif (!this._editor.hasModel() || !anchor) {\n\t\t\treturn AsyncIterableProducer.EMPTY;\n\t\t}\n\n\t\tconst lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n\n\t\treturn AsyncIterableProducer.merge(\n\t\t\tthis._participants.map((participant) => {\n\t\t\t\tif (!participant.computeAsync) {\n\t\t\t\t\treturn AsyncIterableProducer.EMPTY;\n\t\t\t\t}\n\t\t\t\treturn participant.computeAsync(anchor, lineDecorations, options.source, token);\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic computeSync(options: ContentHoverComputerOptions): IHoverPart[] {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst anchor = options.anchor;\n\t\tconst lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n\n\t\tlet result: IHoverPart[] = [];\n\t\tfor (const participant of this._participants) {\n\t\t\tresult = result.concat(participant.computeSync(anchor, lineDecorations, options.source));\n\t\t}\n\n\t\treturn coalesce(result);\n\t}\n}\n\n"]}