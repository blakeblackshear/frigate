{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/viewCursors/viewCursors.ts","vs/editor/browser/viewParts/viewCursors/viewCursors.ts"],"names":[],"mappings":"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","file":"viewCursors.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './viewCursors.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { IViewCursorRenderData, ViewCursor, CursorPlurality } from './viewCursor.js';\nimport { TextEditorCursorBlinkingStyle, TextEditorCursorStyle, EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport {\n\teditorCursorBackground, editorCursorForeground,\n\teditorMultiCursorPrimaryForeground, editorMultiCursorPrimaryBackground,\n\teditorMultiCursorSecondaryForeground, editorMultiCursorSecondaryBackground } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { CursorChangeReason } from '../../../common/cursorEvents.js';\nimport { WindowIntervalTimer, getWindow } from '../../../../base/browser/dom.js';\n\n/**\n * View cursors is a view part responsible for rendering the primary cursor and\n * any secondary cursors that are currently active.\n */\nexport class ViewCursors extends ViewPart {\n\n\tstatic readonly BLINK_INTERVAL = 500;\n\n\tprivate _readOnly: boolean;\n\tprivate _cursorBlinking: TextEditorCursorBlinkingStyle;\n\tprivate _cursorStyle: TextEditorCursorStyle;\n\tprivate _cursorSmoothCaretAnimation: 'off' | 'explicit' | 'on';\n\tprivate _editContextEnabled: boolean;\n\tprivate _selectionIsEmpty: boolean;\n\tprivate _isComposingInput: boolean;\n\n\tprivate _isVisible: boolean;\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\n\tprivate readonly _startCursorBlinkAnimation: TimeoutTimer;\n\tprivate readonly _cursorFlatBlinkInterval: IntervalTimer;\n\tprivate _blinkingEnabled: boolean;\n\n\tprivate _editorHasFocus: boolean;\n\n\tprivate readonly _primaryCursor: ViewCursor;\n\tprivate readonly _secondaryCursors: ViewCursor[];\n\tprivate _renderData: IViewCursorRenderData[];\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tconst options = this._context.configuration.options;\n\t\tthis._readOnly = options.get(EditorOption.readOnly);\n\t\tthis._cursorBlinking = options.get(EditorOption.cursorBlinking);\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._cursorSmoothCaretAnimation = options.get(EditorOption.cursorSmoothCaretAnimation);\n\t\tthis._editContextEnabled = options.get(EditorOption.effectiveEditContext);\n\t\tthis._selectionIsEmpty = true;\n\t\tthis._isComposingInput = false;\n\n\t\tthis._isVisible = false;\n\n\t\tthis._primaryCursor = new ViewCursor(this._context, CursorPlurality.Single);\n\t\tthis._secondaryCursors = [];\n\t\tthis._renderData = [];\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\t\tthis._updateDomClassName();\n\n\t\tthis._domNode.appendChild(this._primaryCursor.getDomNode());\n\n\t\tthis._startCursorBlinkAnimation = new TimeoutTimer();\n\t\tthis._cursorFlatBlinkInterval = new WindowIntervalTimer();\n\n\t\tthis._blinkingEnabled = false;\n\n\t\tthis._editorHasFocus = false;\n\t\tthis._updateBlinking();\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._startCursorBlinkAnimation.dispose();\n\t\tthis._cursorFlatBlinkInterval.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onCompositionStart(e: viewEvents.ViewCompositionStartEvent): boolean {\n\t\tthis._isComposingInput = true;\n\t\tthis._updateBlinking();\n\t\treturn true;\n\t}\n\tpublic override onCompositionEnd(e: viewEvents.ViewCompositionEndEvent): boolean {\n\t\tthis._isComposingInput = false;\n\t\tthis._updateBlinking();\n\t\treturn true;\n\t}\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\n\t\tthis._readOnly = options.get(EditorOption.readOnly);\n\t\tthis._cursorBlinking = options.get(EditorOption.cursorBlinking);\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._cursorSmoothCaretAnimation = options.get(EditorOption.cursorSmoothCaretAnimation);\n\t\tthis._editContextEnabled = options.get(EditorOption.effectiveEditContext);\n\n\t\tthis._updateBlinking();\n\t\tthis._updateDomClassName();\n\n\t\tthis._primaryCursor.onConfigurationChanged(e);\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].onConfigurationChanged(e);\n\t\t}\n\t\treturn true;\n\t}\n\tprivate _onCursorPositionChanged(position: Position, secondaryPositions: Position[], reason: CursorChangeReason): void {\n\t\tconst pauseAnimation = (\n\t\t\tthis._secondaryCursors.length !== secondaryPositions.length\n\t\t\t|| (this._cursorSmoothCaretAnimation === 'explicit' && reason !== CursorChangeReason.Explicit)\n\t\t);\n\t\tthis._primaryCursor.setPlurality(secondaryPositions.length ? CursorPlurality.MultiPrimary : CursorPlurality.Single);\n\t\tthis._primaryCursor.onCursorPositionChanged(position, pauseAnimation);\n\t\tthis._updateBlinking();\n\n\t\tif (this._secondaryCursors.length < secondaryPositions.length) {\n\t\t\t// Create new cursors\n\t\t\tconst addCnt = secondaryPositions.length - this._secondaryCursors.length;\n\t\t\tfor (let i = 0; i < addCnt; i++) {\n\t\t\t\tconst newCursor = new ViewCursor(this._context, CursorPlurality.MultiSecondary);\n\t\t\t\tthis._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n\t\t\t\tthis._secondaryCursors.push(newCursor);\n\t\t\t}\n\t\t} else if (this._secondaryCursors.length > secondaryPositions.length) {\n\t\t\t// Remove some cursors\n\t\t\tconst removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n\t\t\tfor (let i = 0; i < removeCnt; i++) {\n\t\t\t\tthis._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n\t\t\t\tthis._secondaryCursors.splice(0, 1);\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < secondaryPositions.length; i++) {\n\t\t\tthis._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i], pauseAnimation);\n\t\t}\n\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst positions: Position[] = [];\n\t\tfor (let i = 0, len = e.selections.length; i < len; i++) {\n\t\t\tpositions[i] = e.selections[i].getPosition();\n\t\t}\n\t\tthis._onCursorPositionChanged(positions[0], positions.slice(1), e.reason);\n\n\t\tconst selectionIsEmpty = e.selections[0].isEmpty();\n\t\tif (this._selectionIsEmpty !== selectionIsEmpty) {\n\t\t\tthis._selectionIsEmpty = selectionIsEmpty;\n\t\t\tthis._updateDomClassName();\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\tthis._editorHasFocus = e.isFocused;\n\t\tthis._updateBlinking();\n\t\treturn false;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean {\n\t\tconst shouldRender = (position: Position) => {\n\t\t\tfor (let i = 0, len = e.ranges.length; i < len; i++) {\n\t\t\t\tif (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tif (shouldRender(this._primaryCursor.getPosition())) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (const secondaryCursor of this._secondaryCursors) {\n\t\t\tif (shouldRender(secondaryCursor.getPosition())) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\t// ---- blinking logic\n\n\tprivate _getCursorBlinking(): TextEditorCursorBlinkingStyle {\n\t\t// TODO: Remove the following if statement when experimental edit context is made default sole implementation\n\t\tif (this._isComposingInput && !this._editContextEnabled) {\n\t\t\t// avoid double cursors\n\t\t\treturn TextEditorCursorBlinkingStyle.Hidden;\n\t\t}\n\t\tif (!this._editorHasFocus) {\n\t\t\treturn TextEditorCursorBlinkingStyle.Hidden;\n\t\t}\n\t\tif (this._readOnly) {\n\t\t\treturn TextEditorCursorBlinkingStyle.Solid;\n\t\t}\n\t\treturn this._cursorBlinking;\n\t}\n\n\tprivate _updateBlinking(): void {\n\t\tthis._startCursorBlinkAnimation.cancel();\n\t\tthis._cursorFlatBlinkInterval.cancel();\n\n\t\tconst blinkingStyle = this._getCursorBlinking();\n\n\t\t// hidden and solid are special as they involve no animations\n\t\tconst isHidden = (blinkingStyle === TextEditorCursorBlinkingStyle.Hidden);\n\t\tconst isSolid = (blinkingStyle === TextEditorCursorBlinkingStyle.Solid);\n\n\t\tif (isHidden) {\n\t\t\tthis._hide();\n\t\t} else {\n\t\t\tthis._show();\n\t\t}\n\n\t\tthis._blinkingEnabled = false;\n\t\tthis._updateDomClassName();\n\n\t\tif (!isHidden && !isSolid) {\n\t\t\tif (blinkingStyle === TextEditorCursorBlinkingStyle.Blink) {\n\t\t\t\t// flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n\t\t\t\tthis._cursorFlatBlinkInterval.cancelAndSet(() => {\n\t\t\t\t\tif (this._isVisible) {\n\t\t\t\t\t\tthis._hide();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._show();\n\t\t\t\t\t}\n\t\t\t\t}, ViewCursors.BLINK_INTERVAL, getWindow(this._domNode.domNode));\n\t\t\t} else {\n\t\t\t\tthis._startCursorBlinkAnimation.setIfNotSet(() => {\n\t\t\t\t\tthis._blinkingEnabled = true;\n\t\t\t\t\tthis._updateDomClassName();\n\t\t\t\t}, ViewCursors.BLINK_INTERVAL);\n\t\t\t}\n\t\t}\n\t}\n\n\t// --- end blinking logic\n\n\tprivate _updateDomClassName(): void {\n\t\tthis._domNode.setClassName(this._getClassName());\n\t}\n\n\tprivate _getClassName(): string {\n\t\tlet result = 'cursors-layer';\n\t\tif (!this._selectionIsEmpty) {\n\t\t\tresult += ' has-selection';\n\t\t}\n\t\tswitch (this._cursorStyle) {\n\t\t\tcase TextEditorCursorStyle.Line:\n\t\t\t\tresult += ' cursor-line-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.Block:\n\t\t\t\tresult += ' cursor-block-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.Underline:\n\t\t\t\tresult += ' cursor-underline-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.LineThin:\n\t\t\t\tresult += ' cursor-line-thin-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.BlockOutline:\n\t\t\t\tresult += ' cursor-block-outline-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.UnderlineThin:\n\t\t\t\tresult += ' cursor-underline-thin-style';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresult += ' cursor-line-style';\n\t\t}\n\t\tif (this._blinkingEnabled) {\n\t\t\tswitch (this._getCursorBlinking()) {\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Blink:\n\t\t\t\t\tresult += ' cursor-blink';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Smooth:\n\t\t\t\t\tresult += ' cursor-smooth';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Phase:\n\t\t\t\t\tresult += ' cursor-phase';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Expand:\n\t\t\t\t\tresult += ' cursor-expand';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Solid:\n\t\t\t\t\tresult += ' cursor-solid';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tresult += ' cursor-solid';\n\t\t\t}\n\t\t} else {\n\t\t\tresult += ' cursor-solid';\n\t\t}\n\t\tif (this._cursorSmoothCaretAnimation === 'on' || this._cursorSmoothCaretAnimation === 'explicit') {\n\t\t\tresult += ' cursor-smooth-caret-animation';\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _show(): void {\n\t\tthis._primaryCursor.show();\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].show();\n\t\t}\n\t\tthis._isVisible = true;\n\t}\n\n\tprivate _hide(): void {\n\t\tthis._primaryCursor.hide();\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].hide();\n\t\t}\n\t\tthis._isVisible = false;\n\t}\n\n\t// ---- IViewPart implementation\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._primaryCursor.prepareRender(ctx);\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].prepareRender(ctx);\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tconst renderData: IViewCursorRenderData[] = [];\n\t\tlet renderDataLen = 0;\n\n\t\tconst primaryRenderData = this._primaryCursor.render(ctx);\n\t\tif (primaryRenderData) {\n\t\t\trenderData[renderDataLen++] = primaryRenderData;\n\t\t}\n\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tconst secondaryRenderData = this._secondaryCursors[i].render(ctx);\n\t\t\tif (secondaryRenderData) {\n\t\t\t\trenderData[renderDataLen++] = secondaryRenderData;\n\t\t\t}\n\t\t}\n\n\t\tthis._renderData = renderData;\n\t}\n\n\tpublic getLastRenderData(): IViewCursorRenderData[] {\n\t\treturn this._renderData;\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\ttype CursorTheme = {\n\t\tforeground: string;\n\t\tbackground: string;\n\t\tclass: string;\n\t};\n\n\tconst cursorThemes: CursorTheme[] = [\n\t\t{ class: '.cursor', foreground: editorCursorForeground, background: editorCursorBackground },\n\t\t{ class: '.cursor-primary', foreground: editorMultiCursorPrimaryForeground, background: editorMultiCursorPrimaryBackground },\n\t\t{ class: '.cursor-secondary', foreground: editorMultiCursorSecondaryForeground, background: editorMultiCursorSecondaryBackground },\n\t];\n\n\tfor (const cursorTheme of cursorThemes) {\n\t\tconst caret = theme.getColor(cursorTheme.foreground);\n\t\tif (caret) {\n\t\t\tlet caretBackground = theme.getColor(cursorTheme.background);\n\t\t\tif (!caretBackground) {\n\t\t\t\tcaretBackground = caret.opposite();\n\t\t\t}\n\t\t\tcollector.addRule(`.monaco-editor .cursors-layer ${cursorTheme.class} { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n\t\t\tif (isHighContrast(theme.type)) {\n\t\t\t\tcollector.addRule(`.monaco-editor .cursors-layer.has-selection ${cursorTheme.class} { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n\t\t\t}\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './viewCursors.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { IViewCursorRenderData, ViewCursor, CursorPlurality } from './viewCursor.js';\nimport { TextEditorCursorBlinkingStyle, TextEditorCursorStyle, EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport {\n\teditorCursorBackground, editorCursorForeground,\n\teditorMultiCursorPrimaryForeground, editorMultiCursorPrimaryBackground,\n\teditorMultiCursorSecondaryForeground, editorMultiCursorSecondaryBackground } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { CursorChangeReason } from '../../../common/cursorEvents.js';\nimport { WindowIntervalTimer, getWindow } from '../../../../base/browser/dom.js';\n\n/**\n * View cursors is a view part responsible for rendering the primary cursor and\n * any secondary cursors that are currently active.\n */\nexport class ViewCursors extends ViewPart {\n\n\tstatic readonly BLINK_INTERVAL = 500;\n\n\tprivate _readOnly: boolean;\n\tprivate _cursorBlinking: TextEditorCursorBlinkingStyle;\n\tprivate _cursorStyle: TextEditorCursorStyle;\n\tprivate _cursorSmoothCaretAnimation: 'off' | 'explicit' | 'on';\n\tprivate _editContextEnabled: boolean;\n\tprivate _selectionIsEmpty: boolean;\n\tprivate _isComposingInput: boolean;\n\n\tprivate _isVisible: boolean;\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\n\tprivate readonly _startCursorBlinkAnimation: TimeoutTimer;\n\tprivate readonly _cursorFlatBlinkInterval: IntervalTimer;\n\tprivate _blinkingEnabled: boolean;\n\n\tprivate _editorHasFocus: boolean;\n\n\tprivate readonly _primaryCursor: ViewCursor;\n\tprivate readonly _secondaryCursors: ViewCursor[];\n\tprivate _renderData: IViewCursorRenderData[];\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tconst options = this._context.configuration.options;\n\t\tthis._readOnly = options.get(EditorOption.readOnly);\n\t\tthis._cursorBlinking = options.get(EditorOption.cursorBlinking);\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._cursorSmoothCaretAnimation = options.get(EditorOption.cursorSmoothCaretAnimation);\n\t\tthis._editContextEnabled = options.get(EditorOption.effectiveEditContext);\n\t\tthis._selectionIsEmpty = true;\n\t\tthis._isComposingInput = false;\n\n\t\tthis._isVisible = false;\n\n\t\tthis._primaryCursor = new ViewCursor(this._context, CursorPlurality.Single);\n\t\tthis._secondaryCursors = [];\n\t\tthis._renderData = [];\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\t\tthis._updateDomClassName();\n\n\t\tthis._domNode.appendChild(this._primaryCursor.getDomNode());\n\n\t\tthis._startCursorBlinkAnimation = new TimeoutTimer();\n\t\tthis._cursorFlatBlinkInterval = new WindowIntervalTimer();\n\n\t\tthis._blinkingEnabled = false;\n\n\t\tthis._editorHasFocus = false;\n\t\tthis._updateBlinking();\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._startCursorBlinkAnimation.dispose();\n\t\tthis._cursorFlatBlinkInterval.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onCompositionStart(e: viewEvents.ViewCompositionStartEvent): boolean {\n\t\tthis._isComposingInput = true;\n\t\tthis._updateBlinking();\n\t\treturn true;\n\t}\n\tpublic override onCompositionEnd(e: viewEvents.ViewCompositionEndEvent): boolean {\n\t\tthis._isComposingInput = false;\n\t\tthis._updateBlinking();\n\t\treturn true;\n\t}\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\n\t\tthis._readOnly = options.get(EditorOption.readOnly);\n\t\tthis._cursorBlinking = options.get(EditorOption.cursorBlinking);\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._cursorSmoothCaretAnimation = options.get(EditorOption.cursorSmoothCaretAnimation);\n\t\tthis._editContextEnabled = options.get(EditorOption.effectiveEditContext);\n\n\t\tthis._updateBlinking();\n\t\tthis._updateDomClassName();\n\n\t\tthis._primaryCursor.onConfigurationChanged(e);\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].onConfigurationChanged(e);\n\t\t}\n\t\treturn true;\n\t}\n\tprivate _onCursorPositionChanged(position: Position, secondaryPositions: Position[], reason: CursorChangeReason): void {\n\t\tconst pauseAnimation = (\n\t\t\tthis._secondaryCursors.length !== secondaryPositions.length\n\t\t\t|| (this._cursorSmoothCaretAnimation === 'explicit' && reason !== CursorChangeReason.Explicit)\n\t\t);\n\t\tthis._primaryCursor.setPlurality(secondaryPositions.length ? CursorPlurality.MultiPrimary : CursorPlurality.Single);\n\t\tthis._primaryCursor.onCursorPositionChanged(position, pauseAnimation);\n\t\tthis._updateBlinking();\n\n\t\tif (this._secondaryCursors.length < secondaryPositions.length) {\n\t\t\t// Create new cursors\n\t\t\tconst addCnt = secondaryPositions.length - this._secondaryCursors.length;\n\t\t\tfor (let i = 0; i < addCnt; i++) {\n\t\t\t\tconst newCursor = new ViewCursor(this._context, CursorPlurality.MultiSecondary);\n\t\t\t\tthis._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n\t\t\t\tthis._secondaryCursors.push(newCursor);\n\t\t\t}\n\t\t} else if (this._secondaryCursors.length > secondaryPositions.length) {\n\t\t\t// Remove some cursors\n\t\t\tconst removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n\t\t\tfor (let i = 0; i < removeCnt; i++) {\n\t\t\t\tthis._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n\t\t\t\tthis._secondaryCursors.splice(0, 1);\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < secondaryPositions.length; i++) {\n\t\t\tthis._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i], pauseAnimation);\n\t\t}\n\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst positions: Position[] = [];\n\t\tfor (let i = 0, len = e.selections.length; i < len; i++) {\n\t\t\tpositions[i] = e.selections[i].getPosition();\n\t\t}\n\t\tthis._onCursorPositionChanged(positions[0], positions.slice(1), e.reason);\n\n\t\tconst selectionIsEmpty = e.selections[0].isEmpty();\n\t\tif (this._selectionIsEmpty !== selectionIsEmpty) {\n\t\t\tthis._selectionIsEmpty = selectionIsEmpty;\n\t\t\tthis._updateDomClassName();\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\tthis._editorHasFocus = e.isFocused;\n\t\tthis._updateBlinking();\n\t\treturn false;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean {\n\t\tconst shouldRender = (position: Position) => {\n\t\t\tfor (let i = 0, len = e.ranges.length; i < len; i++) {\n\t\t\t\tif (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tif (shouldRender(this._primaryCursor.getPosition())) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (const secondaryCursor of this._secondaryCursors) {\n\t\t\tif (shouldRender(secondaryCursor.getPosition())) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\t// ---- blinking logic\n\n\tprivate _getCursorBlinking(): TextEditorCursorBlinkingStyle {\n\t\t// TODO: Remove the following if statement when experimental edit context is made default sole implementation\n\t\tif (this._isComposingInput && !this._editContextEnabled) {\n\t\t\t// avoid double cursors\n\t\t\treturn TextEditorCursorBlinkingStyle.Hidden;\n\t\t}\n\t\tif (!this._editorHasFocus) {\n\t\t\treturn TextEditorCursorBlinkingStyle.Hidden;\n\t\t}\n\t\tif (this._readOnly) {\n\t\t\treturn TextEditorCursorBlinkingStyle.Solid;\n\t\t}\n\t\treturn this._cursorBlinking;\n\t}\n\n\tprivate _updateBlinking(): void {\n\t\tthis._startCursorBlinkAnimation.cancel();\n\t\tthis._cursorFlatBlinkInterval.cancel();\n\n\t\tconst blinkingStyle = this._getCursorBlinking();\n\n\t\t// hidden and solid are special as they involve no animations\n\t\tconst isHidden = (blinkingStyle === TextEditorCursorBlinkingStyle.Hidden);\n\t\tconst isSolid = (blinkingStyle === TextEditorCursorBlinkingStyle.Solid);\n\n\t\tif (isHidden) {\n\t\t\tthis._hide();\n\t\t} else {\n\t\t\tthis._show();\n\t\t}\n\n\t\tthis._blinkingEnabled = false;\n\t\tthis._updateDomClassName();\n\n\t\tif (!isHidden && !isSolid) {\n\t\t\tif (blinkingStyle === TextEditorCursorBlinkingStyle.Blink) {\n\t\t\t\t// flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n\t\t\t\tthis._cursorFlatBlinkInterval.cancelAndSet(() => {\n\t\t\t\t\tif (this._isVisible) {\n\t\t\t\t\t\tthis._hide();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._show();\n\t\t\t\t\t}\n\t\t\t\t}, ViewCursors.BLINK_INTERVAL, getWindow(this._domNode.domNode));\n\t\t\t} else {\n\t\t\t\tthis._startCursorBlinkAnimation.setIfNotSet(() => {\n\t\t\t\t\tthis._blinkingEnabled = true;\n\t\t\t\t\tthis._updateDomClassName();\n\t\t\t\t}, ViewCursors.BLINK_INTERVAL);\n\t\t\t}\n\t\t}\n\t}\n\n\t// --- end blinking logic\n\n\tprivate _updateDomClassName(): void {\n\t\tthis._domNode.setClassName(this._getClassName());\n\t}\n\n\tprivate _getClassName(): string {\n\t\tlet result = 'cursors-layer';\n\t\tif (!this._selectionIsEmpty) {\n\t\t\tresult += ' has-selection';\n\t\t}\n\t\tswitch (this._cursorStyle) {\n\t\t\tcase TextEditorCursorStyle.Line:\n\t\t\t\tresult += ' cursor-line-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.Block:\n\t\t\t\tresult += ' cursor-block-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.Underline:\n\t\t\t\tresult += ' cursor-underline-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.LineThin:\n\t\t\t\tresult += ' cursor-line-thin-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.BlockOutline:\n\t\t\t\tresult += ' cursor-block-outline-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.UnderlineThin:\n\t\t\t\tresult += ' cursor-underline-thin-style';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresult += ' cursor-line-style';\n\t\t}\n\t\tif (this._blinkingEnabled) {\n\t\t\tswitch (this._getCursorBlinking()) {\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Blink:\n\t\t\t\t\tresult += ' cursor-blink';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Smooth:\n\t\t\t\t\tresult += ' cursor-smooth';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Phase:\n\t\t\t\t\tresult += ' cursor-phase';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Expand:\n\t\t\t\t\tresult += ' cursor-expand';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Solid:\n\t\t\t\t\tresult += ' cursor-solid';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tresult += ' cursor-solid';\n\t\t\t}\n\t\t} else {\n\t\t\tresult += ' cursor-solid';\n\t\t}\n\t\tif (this._cursorSmoothCaretAnimation === 'on' || this._cursorSmoothCaretAnimation === 'explicit') {\n\t\t\tresult += ' cursor-smooth-caret-animation';\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _show(): void {\n\t\tthis._primaryCursor.show();\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].show();\n\t\t}\n\t\tthis._isVisible = true;\n\t}\n\n\tprivate _hide(): void {\n\t\tthis._primaryCursor.hide();\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].hide();\n\t\t}\n\t\tthis._isVisible = false;\n\t}\n\n\t// ---- IViewPart implementation\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._primaryCursor.prepareRender(ctx);\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].prepareRender(ctx);\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tconst renderData: IViewCursorRenderData[] = [];\n\t\tlet renderDataLen = 0;\n\n\t\tconst primaryRenderData = this._primaryCursor.render(ctx);\n\t\tif (primaryRenderData) {\n\t\t\trenderData[renderDataLen++] = primaryRenderData;\n\t\t}\n\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tconst secondaryRenderData = this._secondaryCursors[i].render(ctx);\n\t\t\tif (secondaryRenderData) {\n\t\t\t\trenderData[renderDataLen++] = secondaryRenderData;\n\t\t\t}\n\t\t}\n\n\t\tthis._renderData = renderData;\n\t}\n\n\tpublic getLastRenderData(): IViewCursorRenderData[] {\n\t\treturn this._renderData;\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\ttype CursorTheme = {\n\t\tforeground: string;\n\t\tbackground: string;\n\t\tclass: string;\n\t};\n\n\tconst cursorThemes: CursorTheme[] = [\n\t\t{ class: '.cursor', foreground: editorCursorForeground, background: editorCursorBackground },\n\t\t{ class: '.cursor-primary', foreground: editorMultiCursorPrimaryForeground, background: editorMultiCursorPrimaryBackground },\n\t\t{ class: '.cursor-secondary', foreground: editorMultiCursorSecondaryForeground, background: editorMultiCursorSecondaryBackground },\n\t];\n\n\tfor (const cursorTheme of cursorThemes) {\n\t\tconst caret = theme.getColor(cursorTheme.foreground);\n\t\tif (caret) {\n\t\t\tlet caretBackground = theme.getColor(cursorTheme.background);\n\t\t\tif (!caretBackground) {\n\t\t\t\tcaretBackground = caret.opposite();\n\t\t\t}\n\t\t\tcollector.addRule(`.monaco-editor .cursors-layer ${cursorTheme.class} { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n\t\t\tif (isHighContrast(theme.type)) {\n\t\t\t\tcollector.addRule(`.monaco-editor .cursors-layer.has-selection ${cursorTheme.class} { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n\t\t\t}\n\t\t}\n\t}\n});\n"]}