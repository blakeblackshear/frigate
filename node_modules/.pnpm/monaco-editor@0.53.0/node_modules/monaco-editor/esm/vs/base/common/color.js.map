{"version":3,"sources":["file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/base/common/color.ts","vs/base/common/color.ts"],"names":[],"mappings":"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","file":"color.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from './charCode.js';\n\nfunction roundFloat(number: number, decimalPoints: number): number {\n\tconst decimal = Math.pow(10, decimalPoints);\n\treturn Math.round(number * decimal) / decimal;\n}\n\nexport class RGBA {\n\t_rgbaBrand: void = undefined;\n\n\t/**\n\t * Red: integer in [0-255]\n\t */\n\treadonly r: number;\n\n\t/**\n\t * Green: integer in [0-255]\n\t */\n\treadonly g: number;\n\n\t/**\n\t * Blue: integer in [0-255]\n\t */\n\treadonly b: number;\n\n\t/**\n\t * Alpha: float in [0-1]\n\t */\n\treadonly a: number;\n\n\tconstructor(r: number, g: number, b: number, a: number = 1) {\n\t\tthis.r = Math.min(255, Math.max(0, r)) | 0;\n\t\tthis.g = Math.min(255, Math.max(0, g)) | 0;\n\t\tthis.b = Math.min(255, Math.max(0, b)) | 0;\n\t\tthis.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n\t}\n\n\tstatic equals(a: RGBA, b: RGBA): boolean {\n\t\treturn a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n\t}\n}\n\nexport class HSLA {\n\n\t_hslaBrand: void = undefined;\n\n\t/**\n\t * Hue: integer in [0, 360]\n\t */\n\treadonly h: number;\n\n\t/**\n\t * Saturation: float in [0, 1]\n\t */\n\treadonly s: number;\n\n\t/**\n\t * Luminosity: float in [0, 1]\n\t */\n\treadonly l: number;\n\n\t/**\n\t * Alpha: float in [0, 1]\n\t */\n\treadonly a: number;\n\n\tconstructor(h: number, s: number, l: number, a: number) {\n\t\tthis.h = Math.max(Math.min(360, h), 0) | 0;\n\t\tthis.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n\t\tthis.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n\t\tthis.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n\t}\n\n\tstatic equals(a: HSLA, b: HSLA): boolean {\n\t\treturn a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n\t}\n\n\t/**\n\t * Converts an RGB color value to HSL. Conversion formula\n\t * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n\t * Assumes r, g, and b are contained in the set [0, 255] and\n\t * returns h in the set [0, 360], s, and l in the set [0, 1].\n\t */\n\tstatic fromRGBA(rgba: RGBA): HSLA {\n\t\tconst r = rgba.r / 255;\n\t\tconst g = rgba.g / 255;\n\t\tconst b = rgba.b / 255;\n\t\tconst a = rgba.a;\n\n\t\tconst max = Math.max(r, g, b);\n\t\tconst min = Math.min(r, g, b);\n\t\tlet h = 0;\n\t\tlet s = 0;\n\t\tconst l = (min + max) / 2;\n\t\tconst chroma = max - min;\n\n\t\tif (chroma > 0) {\n\t\t\ts = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n\n\t\t\tswitch (max) {\n\t\t\t\tcase r: h = (g - b) / chroma + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / chroma + 2; break;\n\t\t\t\tcase b: h = (r - g) / chroma + 4; break;\n\t\t\t}\n\n\t\t\th *= 60;\n\t\t\th = Math.round(h);\n\t\t}\n\t\treturn new HSLA(h, s, l, a);\n\t}\n\n\tprivate static _hue2rgb(p: number, q: number, t: number): number {\n\t\tif (t < 0) {\n\t\t\tt += 1;\n\t\t}\n\t\tif (t > 1) {\n\t\t\tt -= 1;\n\t\t}\n\t\tif (t < 1 / 6) {\n\t\t\treturn p + (q - p) * 6 * t;\n\t\t}\n\t\tif (t < 1 / 2) {\n\t\t\treturn q;\n\t\t}\n\t\tif (t < 2 / 3) {\n\t\t\treturn p + (q - p) * (2 / 3 - t) * 6;\n\t\t}\n\t\treturn p;\n\t}\n\n\t/**\n\t * Converts an HSL color value to RGB. Conversion formula\n\t * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n\t * Assumes h in the set [0, 360] s, and l are contained in the set [0, 1] and\n\t * returns r, g, and b in the set [0, 255].\n\t */\n\tstatic toRGBA(hsla: HSLA): RGBA {\n\t\tconst h = hsla.h / 360;\n\t\tconst { s, l, a } = hsla;\n\t\tlet r: number, g: number, b: number;\n\n\t\tif (s === 0) {\n\t\t\tr = g = b = l; // achromatic\n\t\t} else {\n\t\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\tconst p = 2 * l - q;\n\t\t\tr = HSLA._hue2rgb(p, q, h + 1 / 3);\n\t\t\tg = HSLA._hue2rgb(p, q, h);\n\t\t\tb = HSLA._hue2rgb(p, q, h - 1 / 3);\n\t\t}\n\n\t\treturn new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);\n\t}\n}\n\nexport class HSVA {\n\n\t_hsvaBrand: void = undefined;\n\n\t/**\n\t * Hue: integer in [0, 360]\n\t */\n\treadonly h: number;\n\n\t/**\n\t * Saturation: float in [0, 1]\n\t */\n\treadonly s: number;\n\n\t/**\n\t * Value: float in [0, 1]\n\t */\n\treadonly v: number;\n\n\t/**\n\t * Alpha: float in [0, 1]\n\t */\n\treadonly a: number;\n\n\tconstructor(h: number, s: number, v: number, a: number) {\n\t\tthis.h = Math.max(Math.min(360, h), 0) | 0;\n\t\tthis.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n\t\tthis.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n\t\tthis.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n\t}\n\n\tstatic equals(a: HSVA, b: HSVA): boolean {\n\t\treturn a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n\t}\n\n\t// from http://www.rapidtables.com/convert/color/rgb-to-hsv.htm\n\tstatic fromRGBA(rgba: RGBA): HSVA {\n\t\tconst r = rgba.r / 255;\n\t\tconst g = rgba.g / 255;\n\t\tconst b = rgba.b / 255;\n\t\tconst cmax = Math.max(r, g, b);\n\t\tconst cmin = Math.min(r, g, b);\n\t\tconst delta = cmax - cmin;\n\t\tconst s = cmax === 0 ? 0 : (delta / cmax);\n\t\tlet m: number;\n\n\t\tif (delta === 0) {\n\t\t\tm = 0;\n\t\t} else if (cmax === r) {\n\t\t\tm = ((((g - b) / delta) % 6) + 6) % 6;\n\t\t} else if (cmax === g) {\n\t\t\tm = ((b - r) / delta) + 2;\n\t\t} else {\n\t\t\tm = ((r - g) / delta) + 4;\n\t\t}\n\n\t\treturn new HSVA(Math.round(m * 60), s, cmax, rgba.a);\n\t}\n\n\t// from http://www.rapidtables.com/convert/color/hsv-to-rgb.htm\n\tstatic toRGBA(hsva: HSVA): RGBA {\n\t\tconst { h, s, v, a } = hsva;\n\t\tconst c = v * s;\n\t\tconst x = c * (1 - Math.abs((h / 60) % 2 - 1));\n\t\tconst m = v - c;\n\t\tlet [r, g, b] = [0, 0, 0];\n\n\t\tif (h < 60) {\n\t\t\tr = c;\n\t\t\tg = x;\n\t\t} else if (h < 120) {\n\t\t\tr = x;\n\t\t\tg = c;\n\t\t} else if (h < 180) {\n\t\t\tg = c;\n\t\t\tb = x;\n\t\t} else if (h < 240) {\n\t\t\tg = x;\n\t\t\tb = c;\n\t\t} else if (h < 300) {\n\t\t\tr = x;\n\t\t\tb = c;\n\t\t} else if (h <= 360) {\n\t\t\tr = c;\n\t\t\tb = x;\n\t\t}\n\n\t\tr = Math.round((r + m) * 255);\n\t\tg = Math.round((g + m) * 255);\n\t\tb = Math.round((b + m) * 255);\n\n\t\treturn new RGBA(r, g, b, a);\n\t}\n}\n\nexport class Color {\n\n\tstatic fromHex(hex: string): Color {\n\t\treturn Color.Format.CSS.parseHex(hex) || Color.red;\n\t}\n\n\tstatic equals(a: Color | null, b: Color | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.equals(b);\n\t}\n\n\treadonly rgba: RGBA;\n\tprivate _hsla?: HSLA;\n\tget hsla(): HSLA {\n\t\tif (this._hsla) {\n\t\t\treturn this._hsla;\n\t\t} else {\n\t\t\treturn HSLA.fromRGBA(this.rgba);\n\t\t}\n\t}\n\n\tprivate _hsva?: HSVA;\n\tget hsva(): HSVA {\n\t\tif (this._hsva) {\n\t\t\treturn this._hsva;\n\t\t}\n\t\treturn HSVA.fromRGBA(this.rgba);\n\t}\n\n\tconstructor(arg: RGBA | HSLA | HSVA) {\n\t\tif (!arg) {\n\t\t\tthrow new Error('Color needs a value');\n\t\t} else if (arg instanceof RGBA) {\n\t\t\tthis.rgba = arg;\n\t\t} else if (arg instanceof HSLA) {\n\t\t\tthis._hsla = arg;\n\t\t\tthis.rgba = HSLA.toRGBA(arg);\n\t\t} else if (arg instanceof HSVA) {\n\t\t\tthis._hsva = arg;\n\t\t\tthis.rgba = HSVA.toRGBA(arg);\n\t\t} else {\n\t\t\tthrow new Error('Invalid color ctor argument');\n\t\t}\n\t}\n\n\tequals(other: Color | null): boolean {\n\t\treturn !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n\t}\n\n\t/**\n\t * http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t * Returns the number in the set [0, 1]. O => Darkest Black. 1 => Lightest white.\n\t */\n\tgetRelativeLuminance(): number {\n\t\tconst R = Color._relativeLuminanceForComponent(this.rgba.r);\n\t\tconst G = Color._relativeLuminanceForComponent(this.rgba.g);\n\t\tconst B = Color._relativeLuminanceForComponent(this.rgba.b);\n\t\tconst luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n\n\t\treturn roundFloat(luminance, 4);\n\t}\n\n\tprivate static _relativeLuminanceForComponent(color: number): number {\n\t\tconst c = color / 255;\n\t\treturn (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n\t}\n\n\t/**\n\t *\thttp://24ways.org/2010/calculating-color-contrast\n\t *  Return 'true' if lighter color otherwise 'false'\n\t */\n\tisLighter(): boolean {\n\t\tconst yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n\t\treturn yiq >= 128;\n\t}\n\n\tisLighterThan(another: Color): boolean {\n\t\tconst lum1 = this.getRelativeLuminance();\n\t\tconst lum2 = another.getRelativeLuminance();\n\t\treturn lum1 > lum2;\n\t}\n\n\tisDarkerThan(another: Color): boolean {\n\t\tconst lum1 = this.getRelativeLuminance();\n\t\tconst lum2 = another.getRelativeLuminance();\n\t\treturn lum1 < lum2;\n\t}\n\n\tlighten(factor: number): Color {\n\t\treturn new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a));\n\t}\n\n\tdarken(factor: number): Color {\n\t\treturn new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a));\n\t}\n\n\ttransparent(factor: number): Color {\n\t\tconst { r, g, b, a } = this.rgba;\n\t\treturn new Color(new RGBA(r, g, b, a * factor));\n\t}\n\n\tisTransparent(): boolean {\n\t\treturn this.rgba.a === 0;\n\t}\n\n\tisOpaque(): boolean {\n\t\treturn this.rgba.a === 1;\n\t}\n\n\topposite(): Color {\n\t\treturn new Color(new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));\n\t}\n\n\t/**\n\t * Mixes the current color with the provided color based on the given factor.\n\t * @param color The color to mix with\n\t * @param factor The factor of mixing (0 means this color, 1 means the input color, 0.5 means equal mix)\n\t * @returns A new color representing the mix\n\t */\n\tmix(color: Color, factor: number = 0.5): Color {\n\t\tconst normalize = Math.min(Math.max(factor, 0), 1);\n\t\tconst thisRGBA = this.rgba;\n\t\tconst otherRGBA = color.rgba;\n\n\t\tconst r = thisRGBA.r + (otherRGBA.r - thisRGBA.r) * normalize;\n\t\tconst g = thisRGBA.g + (otherRGBA.g - thisRGBA.g) * normalize;\n\t\tconst b = thisRGBA.b + (otherRGBA.b - thisRGBA.b) * normalize;\n\t\tconst a = thisRGBA.a + (otherRGBA.a - thisRGBA.a) * normalize;\n\n\t\treturn new Color(new RGBA(r, g, b, a));\n\t}\n\n\tmakeOpaque(opaqueBackground: Color): Color {\n\t\tif (this.isOpaque() || opaqueBackground.rgba.a !== 1) {\n\t\t\t// only allow to blend onto a non-opaque color onto a opaque color\n\t\t\treturn this;\n\t\t}\n\n\t\tconst { r, g, b, a } = this.rgba;\n\n\t\t// https://stackoverflow.com/questions/12228548/finding-equivalent-color-with-opacity\n\t\treturn new Color(new RGBA(\n\t\t\topaqueBackground.rgba.r - a * (opaqueBackground.rgba.r - r),\n\t\t\topaqueBackground.rgba.g - a * (opaqueBackground.rgba.g - g),\n\t\t\topaqueBackground.rgba.b - a * (opaqueBackground.rgba.b - b),\n\t\t\t1\n\t\t));\n\t}\n\n\tprivate _toString?: string;\n\ttoString(): string {\n\t\tif (!this._toString) {\n\t\t\tthis._toString = Color.Format.CSS.format(this);\n\t\t}\n\t\treturn this._toString;\n\t}\n\n\tprivate _toNumber32Bit?: number;\n\ttoNumber32Bit(): number {\n\t\tif (!this._toNumber32Bit) {\n\t\t\tthis._toNumber32Bit = (\n\t\t\t\tthis.rgba.r /*  */ << 24 |\n\t\t\t\tthis.rgba.g /*  */ << 16 |\n\t\t\t\tthis.rgba.b /*  */ << 8 |\n\t\t\t\tthis.rgba.a * 0xFF << 0\n\t\t\t) >>> 0;\n\t\t}\n\t\treturn this._toNumber32Bit;\n\t}\n\n\tstatic getLighterColor(of: Color, relative: Color, factor?: number): Color {\n\t\tif (of.isLighterThan(relative)) {\n\t\t\treturn of;\n\t\t}\n\t\tfactor = factor ? factor : 0.5;\n\t\tconst lum1 = of.getRelativeLuminance();\n\t\tconst lum2 = relative.getRelativeLuminance();\n\t\tfactor = factor * (lum2 - lum1) / lum2;\n\t\treturn of.lighten(factor);\n\t}\n\n\tstatic getDarkerColor(of: Color, relative: Color, factor?: number): Color {\n\t\tif (of.isDarkerThan(relative)) {\n\t\t\treturn of;\n\t\t}\n\t\tfactor = factor ? factor : 0.5;\n\t\tconst lum1 = of.getRelativeLuminance();\n\t\tconst lum2 = relative.getRelativeLuminance();\n\t\tfactor = factor * (lum1 - lum2) / lum1;\n\t\treturn of.darken(factor);\n\t}\n\n\tstatic readonly white = new Color(new RGBA(255, 255, 255, 1));\n\tstatic readonly black = new Color(new RGBA(0, 0, 0, 1));\n\tstatic readonly red = new Color(new RGBA(255, 0, 0, 1));\n\tstatic readonly blue = new Color(new RGBA(0, 0, 255, 1));\n\tstatic readonly green = new Color(new RGBA(0, 255, 0, 1));\n\tstatic readonly cyan = new Color(new RGBA(0, 255, 255, 1));\n\tstatic readonly lightgrey = new Color(new RGBA(211, 211, 211, 1));\n\tstatic readonly transparent = new Color(new RGBA(0, 0, 0, 0));\n}\n\nexport namespace Color {\n\texport namespace Format {\n\t\texport namespace CSS {\n\n\t\t\texport function formatRGB(color: Color): string {\n\t\t\t\tif (color.rgba.a === 1) {\n\t\t\t\t\treturn `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n\t\t\t\t}\n\n\t\t\t\treturn Color.Format.CSS.formatRGBA(color);\n\t\t\t}\n\n\t\t\texport function formatRGBA(color: Color): string {\n\t\t\t\treturn `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n\t\t\t}\n\n\t\t\texport function formatHSL(color: Color): string {\n\t\t\t\tif (color.hsla.a === 1) {\n\t\t\t\t\treturn `hsl(${color.hsla.h}, ${Math.round(color.hsla.s * 100)}%, ${Math.round(color.hsla.l * 100)}%)`;\n\t\t\t\t}\n\n\t\t\t\treturn Color.Format.CSS.formatHSLA(color);\n\t\t\t}\n\n\t\t\texport function formatHSLA(color: Color): string {\n\t\t\t\treturn `hsla(${color.hsla.h}, ${Math.round(color.hsla.s * 100)}%, ${Math.round(color.hsla.l * 100)}%, ${color.hsla.a.toFixed(2)})`;\n\t\t\t}\n\n\t\t\tfunction _toTwoDigitHex(n: number): string {\n\t\t\t\tconst r = n.toString(16);\n\t\t\t\treturn r.length !== 2 ? '0' + r : r;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Formats the color as #RRGGBB\n\t\t\t */\n\t\t\texport function formatHex(color: Color): string {\n\t\t\t\treturn `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Formats the color as #RRGGBBAA\n\t\t\t * If 'compact' is set, colors without transparancy will be printed as #RRGGBB\n\t\t\t */\n\t\t\texport function formatHexA(color: Color, compact = false): string {\n\t\t\t\tif (compact && color.rgba.a === 1) {\n\t\t\t\t\treturn Color.Format.CSS.formatHex(color);\n\t\t\t\t}\n\n\t\t\t\treturn `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The default format will use HEX if opaque and RGBA otherwise.\n\t\t\t */\n\t\t\texport function format(color: Color): string {\n\t\t\t\tif (color.isOpaque()) {\n\t\t\t\t\treturn Color.Format.CSS.formatHex(color);\n\t\t\t\t}\n\n\t\t\t\treturn Color.Format.CSS.formatRGBA(color);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Parse a CSS color and return a {@link Color}.\n\t\t\t * @param css The CSS color to parse.\n\t\t\t * @see https://drafts.csswg.org/css-color/#typedef-color\n\t\t\t */\n\t\t\texport function parse(css: string): Color | null {\n\t\t\t\tif (css === 'transparent') {\n\t\t\t\t\treturn Color.transparent;\n\t\t\t\t}\n\t\t\t\tif (css.startsWith('#')) {\n\t\t\t\t\treturn parseHex(css);\n\t\t\t\t}\n\t\t\t\tif (css.startsWith('rgba(')) {\n\t\t\t\t\tconst color = css.match(/rgba\\((?<r>(?:\\+|-)?\\d+), *(?<g>(?:\\+|-)?\\d+), *(?<b>(?:\\+|-)?\\d+), *(?<a>(?:\\+|-)?\\d+(\\.\\d+)?)\\)/);\n\t\t\t\t\tif (!color) {\n\t\t\t\t\t\tthrow new Error('Invalid color format ' + css);\n\t\t\t\t\t}\n\t\t\t\t\tconst r = parseInt(color.groups?.r ?? '0');\n\t\t\t\t\tconst g = parseInt(color.groups?.g ?? '0');\n\t\t\t\t\tconst b = parseInt(color.groups?.b ?? '0');\n\t\t\t\t\tconst a = parseFloat(color.groups?.a ?? '0');\n\t\t\t\t\treturn new Color(new RGBA(r, g, b, a));\n\t\t\t\t}\n\t\t\t\tif (css.startsWith('rgb(')) {\n\t\t\t\t\tconst color = css.match(/rgb\\((?<r>(?:\\+|-)?\\d+), *(?<g>(?:\\+|-)?\\d+), *(?<b>(?:\\+|-)?\\d+)\\)/);\n\t\t\t\t\tif (!color) {\n\t\t\t\t\t\tthrow new Error('Invalid color format ' + css);\n\t\t\t\t\t}\n\t\t\t\t\tconst r = parseInt(color.groups?.r ?? '0');\n\t\t\t\t\tconst g = parseInt(color.groups?.g ?? '0');\n\t\t\t\t\tconst b = parseInt(color.groups?.b ?? '0');\n\t\t\t\t\treturn new Color(new RGBA(r, g, b));\n\t\t\t\t}\n\t\t\t\t// TODO: Support more formats as needed\n\t\t\t\treturn parseNamedKeyword(css);\n\t\t\t}\n\n\t\t\tfunction parseNamedKeyword(css: string): Color | null {\n\t\t\t\t// https://drafts.csswg.org/css-color/#named-colors\n\t\t\t\tswitch (css) {\n\t\t\t\t\tcase 'aliceblue': return new Color(new RGBA(240, 248, 255, 1));\n\t\t\t\t\tcase 'antiquewhite': return new Color(new RGBA(250, 235, 215, 1));\n\t\t\t\t\tcase 'aqua': return new Color(new RGBA(0, 255, 255, 1));\n\t\t\t\t\tcase 'aquamarine': return new Color(new RGBA(127, 255, 212, 1));\n\t\t\t\t\tcase 'azure': return new Color(new RGBA(240, 255, 255, 1));\n\t\t\t\t\tcase 'beige': return new Color(new RGBA(245, 245, 220, 1));\n\t\t\t\t\tcase 'bisque': return new Color(new RGBA(255, 228, 196, 1));\n\t\t\t\t\tcase 'black': return new Color(new RGBA(0, 0, 0, 1));\n\t\t\t\t\tcase 'blanchedalmond': return new Color(new RGBA(255, 235, 205, 1));\n\t\t\t\t\tcase 'blue': return new Color(new RGBA(0, 0, 255, 1));\n\t\t\t\t\tcase 'blueviolet': return new Color(new RGBA(138, 43, 226, 1));\n\t\t\t\t\tcase 'brown': return new Color(new RGBA(165, 42, 42, 1));\n\t\t\t\t\tcase 'burlywood': return new Color(new RGBA(222, 184, 135, 1));\n\t\t\t\t\tcase 'cadetblue': return new Color(new RGBA(95, 158, 160, 1));\n\t\t\t\t\tcase 'chartreuse': return new Color(new RGBA(127, 255, 0, 1));\n\t\t\t\t\tcase 'chocolate': return new Color(new RGBA(210, 105, 30, 1));\n\t\t\t\t\tcase 'coral': return new Color(new RGBA(255, 127, 80, 1));\n\t\t\t\t\tcase 'cornflowerblue': return new Color(new RGBA(100, 149, 237, 1));\n\t\t\t\t\tcase 'cornsilk': return new Color(new RGBA(255, 248, 220, 1));\n\t\t\t\t\tcase 'crimson': return new Color(new RGBA(220, 20, 60, 1));\n\t\t\t\t\tcase 'cyan': return new Color(new RGBA(0, 255, 255, 1));\n\t\t\t\t\tcase 'darkblue': return new Color(new RGBA(0, 0, 139, 1));\n\t\t\t\t\tcase 'darkcyan': return new Color(new RGBA(0, 139, 139, 1));\n\t\t\t\t\tcase 'darkgoldenrod': return new Color(new RGBA(184, 134, 11, 1));\n\t\t\t\t\tcase 'darkgray': return new Color(new RGBA(169, 169, 169, 1));\n\t\t\t\t\tcase 'darkgreen': return new Color(new RGBA(0, 100, 0, 1));\n\t\t\t\t\tcase 'darkgrey': return new Color(new RGBA(169, 169, 169, 1));\n\t\t\t\t\tcase 'darkkhaki': return new Color(new RGBA(189, 183, 107, 1));\n\t\t\t\t\tcase 'darkmagenta': return new Color(new RGBA(139, 0, 139, 1));\n\t\t\t\t\tcase 'darkolivegreen': return new Color(new RGBA(85, 107, 47, 1));\n\t\t\t\t\tcase 'darkorange': return new Color(new RGBA(255, 140, 0, 1));\n\t\t\t\t\tcase 'darkorchid': return new Color(new RGBA(153, 50, 204, 1));\n\t\t\t\t\tcase 'darkred': return new Color(new RGBA(139, 0, 0, 1));\n\t\t\t\t\tcase 'darksalmon': return new Color(new RGBA(233, 150, 122, 1));\n\t\t\t\t\tcase 'darkseagreen': return new Color(new RGBA(143, 188, 143, 1));\n\t\t\t\t\tcase 'darkslateblue': return new Color(new RGBA(72, 61, 139, 1));\n\t\t\t\t\tcase 'darkslategray': return new Color(new RGBA(47, 79, 79, 1));\n\t\t\t\t\tcase 'darkslategrey': return new Color(new RGBA(47, 79, 79, 1));\n\t\t\t\t\tcase 'darkturquoise': return new Color(new RGBA(0, 206, 209, 1));\n\t\t\t\t\tcase 'darkviolet': return new Color(new RGBA(148, 0, 211, 1));\n\t\t\t\t\tcase 'deeppink': return new Color(new RGBA(255, 20, 147, 1));\n\t\t\t\t\tcase 'deepskyblue': return new Color(new RGBA(0, 191, 255, 1));\n\t\t\t\t\tcase 'dimgray': return new Color(new RGBA(105, 105, 105, 1));\n\t\t\t\t\tcase 'dimgrey': return new Color(new RGBA(105, 105, 105, 1));\n\t\t\t\t\tcase 'dodgerblue': return new Color(new RGBA(30, 144, 255, 1));\n\t\t\t\t\tcase 'firebrick': return new Color(new RGBA(178, 34, 34, 1));\n\t\t\t\t\tcase 'floralwhite': return new Color(new RGBA(255, 250, 240, 1));\n\t\t\t\t\tcase 'forestgreen': return new Color(new RGBA(34, 139, 34, 1));\n\t\t\t\t\tcase 'fuchsia': return new Color(new RGBA(255, 0, 255, 1));\n\t\t\t\t\tcase 'gainsboro': return new Color(new RGBA(220, 220, 220, 1));\n\t\t\t\t\tcase 'ghostwhite': return new Color(new RGBA(248, 248, 255, 1));\n\t\t\t\t\tcase 'gold': return new Color(new RGBA(255, 215, 0, 1));\n\t\t\t\t\tcase 'goldenrod': return new Color(new RGBA(218, 165, 32, 1));\n\t\t\t\t\tcase 'gray': return new Color(new RGBA(128, 128, 128, 1));\n\t\t\t\t\tcase 'green': return new Color(new RGBA(0, 128, 0, 1));\n\t\t\t\t\tcase 'greenyellow': return new Color(new RGBA(173, 255, 47, 1));\n\t\t\t\t\tcase 'grey': return new Color(new RGBA(128, 128, 128, 1));\n\t\t\t\t\tcase 'honeydew': return new Color(new RGBA(240, 255, 240, 1));\n\t\t\t\t\tcase 'hotpink': return new Color(new RGBA(255, 105, 180, 1));\n\t\t\t\t\tcase 'indianred': return new Color(new RGBA(205, 92, 92, 1));\n\t\t\t\t\tcase 'indigo': return new Color(new RGBA(75, 0, 130, 1));\n\t\t\t\t\tcase 'ivory': return new Color(new RGBA(255, 255, 240, 1));\n\t\t\t\t\tcase 'khaki': return new Color(new RGBA(240, 230, 140, 1));\n\t\t\t\t\tcase 'lavender': return new Color(new RGBA(230, 230, 250, 1));\n\t\t\t\t\tcase 'lavenderblush': return new Color(new RGBA(255, 240, 245, 1));\n\t\t\t\t\tcase 'lawngreen': return new Color(new RGBA(124, 252, 0, 1));\n\t\t\t\t\tcase 'lemonchiffon': return new Color(new RGBA(255, 250, 205, 1));\n\t\t\t\t\tcase 'lightblue': return new Color(new RGBA(173, 216, 230, 1));\n\t\t\t\t\tcase 'lightcoral': return new Color(new RGBA(240, 128, 128, 1));\n\t\t\t\t\tcase 'lightcyan': return new Color(new RGBA(224, 255, 255, 1));\n\t\t\t\t\tcase 'lightgoldenrodyellow': return new Color(new RGBA(250, 250, 210, 1));\n\t\t\t\t\tcase 'lightgray': return new Color(new RGBA(211, 211, 211, 1));\n\t\t\t\t\tcase 'lightgreen': return new Color(new RGBA(144, 238, 144, 1));\n\t\t\t\t\tcase 'lightgrey': return new Color(new RGBA(211, 211, 211, 1));\n\t\t\t\t\tcase 'lightpink': return new Color(new RGBA(255, 182, 193, 1));\n\t\t\t\t\tcase 'lightsalmon': return new Color(new RGBA(255, 160, 122, 1));\n\t\t\t\t\tcase 'lightseagreen': return new Color(new RGBA(32, 178, 170, 1));\n\t\t\t\t\tcase 'lightskyblue': return new Color(new RGBA(135, 206, 250, 1));\n\t\t\t\t\tcase 'lightslategray': return new Color(new RGBA(119, 136, 153, 1));\n\t\t\t\t\tcase 'lightslategrey': return new Color(new RGBA(119, 136, 153, 1));\n\t\t\t\t\tcase 'lightsteelblue': return new Color(new RGBA(176, 196, 222, 1));\n\t\t\t\t\tcase 'lightyellow': return new Color(new RGBA(255, 255, 224, 1));\n\t\t\t\t\tcase 'lime': return new Color(new RGBA(0, 255, 0, 1));\n\t\t\t\t\tcase 'limegreen': return new Color(new RGBA(50, 205, 50, 1));\n\t\t\t\t\tcase 'linen': return new Color(new RGBA(250, 240, 230, 1));\n\t\t\t\t\tcase 'magenta': return new Color(new RGBA(255, 0, 255, 1));\n\t\t\t\t\tcase 'maroon': return new Color(new RGBA(128, 0, 0, 1));\n\t\t\t\t\tcase 'mediumaquamarine': return new Color(new RGBA(102, 205, 170, 1));\n\t\t\t\t\tcase 'mediumblue': return new Color(new RGBA(0, 0, 205, 1));\n\t\t\t\t\tcase 'mediumorchid': return new Color(new RGBA(186, 85, 211, 1));\n\t\t\t\t\tcase 'mediumpurple': return new Color(new RGBA(147, 112, 219, 1));\n\t\t\t\t\tcase 'mediumseagreen': return new Color(new RGBA(60, 179, 113, 1));\n\t\t\t\t\tcase 'mediumslateblue': return new Color(new RGBA(123, 104, 238, 1));\n\t\t\t\t\tcase 'mediumspringgreen': return new Color(new RGBA(0, 250, 154, 1));\n\t\t\t\t\tcase 'mediumturquoise': return new Color(new RGBA(72, 209, 204, 1));\n\t\t\t\t\tcase 'mediumvioletred': return new Color(new RGBA(199, 21, 133, 1));\n\t\t\t\t\tcase 'midnightblue': return new Color(new RGBA(25, 25, 112, 1));\n\t\t\t\t\tcase 'mintcream': return new Color(new RGBA(245, 255, 250, 1));\n\t\t\t\t\tcase 'mistyrose': return new Color(new RGBA(255, 228, 225, 1));\n\t\t\t\t\tcase 'moccasin': return new Color(new RGBA(255, 228, 181, 1));\n\t\t\t\t\tcase 'navajowhite': return new Color(new RGBA(255, 222, 173, 1));\n\t\t\t\t\tcase 'navy': return new Color(new RGBA(0, 0, 128, 1));\n\t\t\t\t\tcase 'oldlace': return new Color(new RGBA(253, 245, 230, 1));\n\t\t\t\t\tcase 'olive': return new Color(new RGBA(128, 128, 0, 1));\n\t\t\t\t\tcase 'olivedrab': return new Color(new RGBA(107, 142, 35, 1));\n\t\t\t\t\tcase 'orange': return new Color(new RGBA(255, 165, 0, 1));\n\t\t\t\t\tcase 'orangered': return new Color(new RGBA(255, 69, 0, 1));\n\t\t\t\t\tcase 'orchid': return new Color(new RGBA(218, 112, 214, 1));\n\t\t\t\t\tcase 'palegoldenrod': return new Color(new RGBA(238, 232, 170, 1));\n\t\t\t\t\tcase 'palegreen': return new Color(new RGBA(152, 251, 152, 1));\n\t\t\t\t\tcase 'paleturquoise': return new Color(new RGBA(175, 238, 238, 1));\n\t\t\t\t\tcase 'palevioletred': return new Color(new RGBA(219, 112, 147, 1));\n\t\t\t\t\tcase 'papayawhip': return new Color(new RGBA(255, 239, 213, 1));\n\t\t\t\t\tcase 'peachpuff': return new Color(new RGBA(255, 218, 185, 1));\n\t\t\t\t\tcase 'peru': return new Color(new RGBA(205, 133, 63, 1));\n\t\t\t\t\tcase 'pink': return new Color(new RGBA(255, 192, 203, 1));\n\t\t\t\t\tcase 'plum': return new Color(new RGBA(221, 160, 221, 1));\n\t\t\t\t\tcase 'powderblue': return new Color(new RGBA(176, 224, 230, 1));\n\t\t\t\t\tcase 'purple': return new Color(new RGBA(128, 0, 128, 1));\n\t\t\t\t\tcase 'rebeccapurple': return new Color(new RGBA(102, 51, 153, 1));\n\t\t\t\t\tcase 'red': return new Color(new RGBA(255, 0, 0, 1));\n\t\t\t\t\tcase 'rosybrown': return new Color(new RGBA(188, 143, 143, 1));\n\t\t\t\t\tcase 'royalblue': return new Color(new RGBA(65, 105, 225, 1));\n\t\t\t\t\tcase 'saddlebrown': return new Color(new RGBA(139, 69, 19, 1));\n\t\t\t\t\tcase 'salmon': return new Color(new RGBA(250, 128, 114, 1));\n\t\t\t\t\tcase 'sandybrown': return new Color(new RGBA(244, 164, 96, 1));\n\t\t\t\t\tcase 'seagreen': return new Color(new RGBA(46, 139, 87, 1));\n\t\t\t\t\tcase 'seashell': return new Color(new RGBA(255, 245, 238, 1));\n\t\t\t\t\tcase 'sienna': return new Color(new RGBA(160, 82, 45, 1));\n\t\t\t\t\tcase 'silver': return new Color(new RGBA(192, 192, 192, 1));\n\t\t\t\t\tcase 'skyblue': return new Color(new RGBA(135, 206, 235, 1));\n\t\t\t\t\tcase 'slateblue': return new Color(new RGBA(106, 90, 205, 1));\n\t\t\t\t\tcase 'slategray': return new Color(new RGBA(112, 128, 144, 1));\n\t\t\t\t\tcase 'slategrey': return new Color(new RGBA(112, 128, 144, 1));\n\t\t\t\t\tcase 'snow': return new Color(new RGBA(255, 250, 250, 1));\n\t\t\t\t\tcase 'springgreen': return new Color(new RGBA(0, 255, 127, 1));\n\t\t\t\t\tcase 'steelblue': return new Color(new RGBA(70, 130, 180, 1));\n\t\t\t\t\tcase 'tan': return new Color(new RGBA(210, 180, 140, 1));\n\t\t\t\t\tcase 'teal': return new Color(new RGBA(0, 128, 128, 1));\n\t\t\t\t\tcase 'thistle': return new Color(new RGBA(216, 191, 216, 1));\n\t\t\t\t\tcase 'tomato': return new Color(new RGBA(255, 99, 71, 1));\n\t\t\t\t\tcase 'turquoise': return new Color(new RGBA(64, 224, 208, 1));\n\t\t\t\t\tcase 'violet': return new Color(new RGBA(238, 130, 238, 1));\n\t\t\t\t\tcase 'wheat': return new Color(new RGBA(245, 222, 179, 1));\n\t\t\t\t\tcase 'white': return new Color(new RGBA(255, 255, 255, 1));\n\t\t\t\t\tcase 'whitesmoke': return new Color(new RGBA(245, 245, 245, 1));\n\t\t\t\t\tcase 'yellow': return new Color(new RGBA(255, 255, 0, 1));\n\t\t\t\t\tcase 'yellowgreen': return new Color(new RGBA(154, 205, 50, 1));\n\t\t\t\t\tdefault: return null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Converts an Hex color value to a Color.\n\t\t\t * returns r, g, and b are contained in the set [0, 255]\n\t\t\t * @param hex string (#RGB, #RGBA, #RRGGBB or #RRGGBBAA).\n\t\t\t */\n\t\t\texport function parseHex(hex: string): Color | null {\n\t\t\t\tconst length = hex.length;\n\n\t\t\t\tif (length === 0) {\n\t\t\t\t\t// Invalid color\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (hex.charCodeAt(0) !== CharCode.Hash) {\n\t\t\t\t\t// Does not begin with a #\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (length === 7) {\n\t\t\t\t\t// #RRGGBB format\n\t\t\t\t\tconst r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n\t\t\t\t\tconst g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n\t\t\t\t\tconst b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n\t\t\t\t\treturn new Color(new RGBA(r, g, b, 1));\n\t\t\t\t}\n\n\t\t\t\tif (length === 9) {\n\t\t\t\t\t// #RRGGBBAA format\n\t\t\t\t\tconst r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n\t\t\t\t\tconst g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n\t\t\t\t\tconst b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n\t\t\t\t\tconst a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n\t\t\t\t\treturn new Color(new RGBA(r, g, b, a / 255));\n\t\t\t\t}\n\n\t\t\t\tif (length === 4) {\n\t\t\t\t\t// #RGB format\n\t\t\t\t\tconst r = _parseHexDigit(hex.charCodeAt(1));\n\t\t\t\t\tconst g = _parseHexDigit(hex.charCodeAt(2));\n\t\t\t\t\tconst b = _parseHexDigit(hex.charCodeAt(3));\n\t\t\t\t\treturn new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b));\n\t\t\t\t}\n\n\t\t\t\tif (length === 5) {\n\t\t\t\t\t// #RGBA format\n\t\t\t\t\tconst r = _parseHexDigit(hex.charCodeAt(1));\n\t\t\t\t\tconst g = _parseHexDigit(hex.charCodeAt(2));\n\t\t\t\t\tconst b = _parseHexDigit(hex.charCodeAt(3));\n\t\t\t\t\tconst a = _parseHexDigit(hex.charCodeAt(4));\n\t\t\t\t\treturn new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255));\n\t\t\t\t}\n\n\t\t\t\t// Invalid color\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfunction _parseHexDigit(charCode: CharCode): number {\n\t\t\t\tswitch (charCode) {\n\t\t\t\t\tcase CharCode.Digit0: return 0;\n\t\t\t\t\tcase CharCode.Digit1: return 1;\n\t\t\t\t\tcase CharCode.Digit2: return 2;\n\t\t\t\t\tcase CharCode.Digit3: return 3;\n\t\t\t\t\tcase CharCode.Digit4: return 4;\n\t\t\t\t\tcase CharCode.Digit5: return 5;\n\t\t\t\t\tcase CharCode.Digit6: return 6;\n\t\t\t\t\tcase CharCode.Digit7: return 7;\n\t\t\t\t\tcase CharCode.Digit8: return 8;\n\t\t\t\t\tcase CharCode.Digit9: return 9;\n\t\t\t\t\tcase CharCode.a: return 10;\n\t\t\t\t\tcase CharCode.A: return 10;\n\t\t\t\t\tcase CharCode.b: return 11;\n\t\t\t\t\tcase CharCode.B: return 11;\n\t\t\t\t\tcase CharCode.c: return 12;\n\t\t\t\t\tcase CharCode.C: return 12;\n\t\t\t\t\tcase CharCode.d: return 13;\n\t\t\t\t\tcase CharCode.D: return 13;\n\t\t\t\t\tcase CharCode.e: return 14;\n\t\t\t\t\tcase CharCode.E: return 14;\n\t\t\t\t\tcase CharCode.f: return 15;\n\t\t\t\t\tcase CharCode.F: return 15;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from './charCode.js';\n\nfunction roundFloat(number: number, decimalPoints: number): number {\n\tconst decimal = Math.pow(10, decimalPoints);\n\treturn Math.round(number * decimal) / decimal;\n}\n\nexport class RGBA {\n\t_rgbaBrand: void = undefined;\n\n\t/**\n\t * Red: integer in [0-255]\n\t */\n\treadonly r: number;\n\n\t/**\n\t * Green: integer in [0-255]\n\t */\n\treadonly g: number;\n\n\t/**\n\t * Blue: integer in [0-255]\n\t */\n\treadonly b: number;\n\n\t/**\n\t * Alpha: float in [0-1]\n\t */\n\treadonly a: number;\n\n\tconstructor(r: number, g: number, b: number, a: number = 1) {\n\t\tthis.r = Math.min(255, Math.max(0, r)) | 0;\n\t\tthis.g = Math.min(255, Math.max(0, g)) | 0;\n\t\tthis.b = Math.min(255, Math.max(0, b)) | 0;\n\t\tthis.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n\t}\n\n\tstatic equals(a: RGBA, b: RGBA): boolean {\n\t\treturn a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n\t}\n}\n\nexport class HSLA {\n\n\t_hslaBrand: void = undefined;\n\n\t/**\n\t * Hue: integer in [0, 360]\n\t */\n\treadonly h: number;\n\n\t/**\n\t * Saturation: float in [0, 1]\n\t */\n\treadonly s: number;\n\n\t/**\n\t * Luminosity: float in [0, 1]\n\t */\n\treadonly l: number;\n\n\t/**\n\t * Alpha: float in [0, 1]\n\t */\n\treadonly a: number;\n\n\tconstructor(h: number, s: number, l: number, a: number) {\n\t\tthis.h = Math.max(Math.min(360, h), 0) | 0;\n\t\tthis.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n\t\tthis.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n\t\tthis.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n\t}\n\n\tstatic equals(a: HSLA, b: HSLA): boolean {\n\t\treturn a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n\t}\n\n\t/**\n\t * Converts an RGB color value to HSL. Conversion formula\n\t * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n\t * Assumes r, g, and b are contained in the set [0, 255] and\n\t * returns h in the set [0, 360], s, and l in the set [0, 1].\n\t */\n\tstatic fromRGBA(rgba: RGBA): HSLA {\n\t\tconst r = rgba.r / 255;\n\t\tconst g = rgba.g / 255;\n\t\tconst b = rgba.b / 255;\n\t\tconst a = rgba.a;\n\n\t\tconst max = Math.max(r, g, b);\n\t\tconst min = Math.min(r, g, b);\n\t\tlet h = 0;\n\t\tlet s = 0;\n\t\tconst l = (min + max) / 2;\n\t\tconst chroma = max - min;\n\n\t\tif (chroma > 0) {\n\t\t\ts = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n\n\t\t\tswitch (max) {\n\t\t\t\tcase r: h = (g - b) / chroma + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / chroma + 2; break;\n\t\t\t\tcase b: h = (r - g) / chroma + 4; break;\n\t\t\t}\n\n\t\t\th *= 60;\n\t\t\th = Math.round(h);\n\t\t}\n\t\treturn new HSLA(h, s, l, a);\n\t}\n\n\tprivate static _hue2rgb(p: number, q: number, t: number): number {\n\t\tif (t < 0) {\n\t\t\tt += 1;\n\t\t}\n\t\tif (t > 1) {\n\t\t\tt -= 1;\n\t\t}\n\t\tif (t < 1 / 6) {\n\t\t\treturn p + (q - p) * 6 * t;\n\t\t}\n\t\tif (t < 1 / 2) {\n\t\t\treturn q;\n\t\t}\n\t\tif (t < 2 / 3) {\n\t\t\treturn p + (q - p) * (2 / 3 - t) * 6;\n\t\t}\n\t\treturn p;\n\t}\n\n\t/**\n\t * Converts an HSL color value to RGB. Conversion formula\n\t * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n\t * Assumes h in the set [0, 360] s, and l are contained in the set [0, 1] and\n\t * returns r, g, and b in the set [0, 255].\n\t */\n\tstatic toRGBA(hsla: HSLA): RGBA {\n\t\tconst h = hsla.h / 360;\n\t\tconst { s, l, a } = hsla;\n\t\tlet r: number, g: number, b: number;\n\n\t\tif (s === 0) {\n\t\t\tr = g = b = l; // achromatic\n\t\t} else {\n\t\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\tconst p = 2 * l - q;\n\t\t\tr = HSLA._hue2rgb(p, q, h + 1 / 3);\n\t\t\tg = HSLA._hue2rgb(p, q, h);\n\t\t\tb = HSLA._hue2rgb(p, q, h - 1 / 3);\n\t\t}\n\n\t\treturn new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);\n\t}\n}\n\nexport class HSVA {\n\n\t_hsvaBrand: void = undefined;\n\n\t/**\n\t * Hue: integer in [0, 360]\n\t */\n\treadonly h: number;\n\n\t/**\n\t * Saturation: float in [0, 1]\n\t */\n\treadonly s: number;\n\n\t/**\n\t * Value: float in [0, 1]\n\t */\n\treadonly v: number;\n\n\t/**\n\t * Alpha: float in [0, 1]\n\t */\n\treadonly a: number;\n\n\tconstructor(h: number, s: number, v: number, a: number) {\n\t\tthis.h = Math.max(Math.min(360, h), 0) | 0;\n\t\tthis.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n\t\tthis.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n\t\tthis.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n\t}\n\n\tstatic equals(a: HSVA, b: HSVA): boolean {\n\t\treturn a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n\t}\n\n\t// from http://www.rapidtables.com/convert/color/rgb-to-hsv.htm\n\tstatic fromRGBA(rgba: RGBA): HSVA {\n\t\tconst r = rgba.r / 255;\n\t\tconst g = rgba.g / 255;\n\t\tconst b = rgba.b / 255;\n\t\tconst cmax = Math.max(r, g, b);\n\t\tconst cmin = Math.min(r, g, b);\n\t\tconst delta = cmax - cmin;\n\t\tconst s = cmax === 0 ? 0 : (delta / cmax);\n\t\tlet m: number;\n\n\t\tif (delta === 0) {\n\t\t\tm = 0;\n\t\t} else if (cmax === r) {\n\t\t\tm = ((((g - b) / delta) % 6) + 6) % 6;\n\t\t} else if (cmax === g) {\n\t\t\tm = ((b - r) / delta) + 2;\n\t\t} else {\n\t\t\tm = ((r - g) / delta) + 4;\n\t\t}\n\n\t\treturn new HSVA(Math.round(m * 60), s, cmax, rgba.a);\n\t}\n\n\t// from http://www.rapidtables.com/convert/color/hsv-to-rgb.htm\n\tstatic toRGBA(hsva: HSVA): RGBA {\n\t\tconst { h, s, v, a } = hsva;\n\t\tconst c = v * s;\n\t\tconst x = c * (1 - Math.abs((h / 60) % 2 - 1));\n\t\tconst m = v - c;\n\t\tlet [r, g, b] = [0, 0, 0];\n\n\t\tif (h < 60) {\n\t\t\tr = c;\n\t\t\tg = x;\n\t\t} else if (h < 120) {\n\t\t\tr = x;\n\t\t\tg = c;\n\t\t} else if (h < 180) {\n\t\t\tg = c;\n\t\t\tb = x;\n\t\t} else if (h < 240) {\n\t\t\tg = x;\n\t\t\tb = c;\n\t\t} else if (h < 300) {\n\t\t\tr = x;\n\t\t\tb = c;\n\t\t} else if (h <= 360) {\n\t\t\tr = c;\n\t\t\tb = x;\n\t\t}\n\n\t\tr = Math.round((r + m) * 255);\n\t\tg = Math.round((g + m) * 255);\n\t\tb = Math.round((b + m) * 255);\n\n\t\treturn new RGBA(r, g, b, a);\n\t}\n}\n\nexport class Color {\n\n\tstatic fromHex(hex: string): Color {\n\t\treturn Color.Format.CSS.parseHex(hex) || Color.red;\n\t}\n\n\tstatic equals(a: Color | null, b: Color | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.equals(b);\n\t}\n\n\treadonly rgba: RGBA;\n\tprivate _hsla?: HSLA;\n\tget hsla(): HSLA {\n\t\tif (this._hsla) {\n\t\t\treturn this._hsla;\n\t\t} else {\n\t\t\treturn HSLA.fromRGBA(this.rgba);\n\t\t}\n\t}\n\n\tprivate _hsva?: HSVA;\n\tget hsva(): HSVA {\n\t\tif (this._hsva) {\n\t\t\treturn this._hsva;\n\t\t}\n\t\treturn HSVA.fromRGBA(this.rgba);\n\t}\n\n\tconstructor(arg: RGBA | HSLA | HSVA) {\n\t\tif (!arg) {\n\t\t\tthrow new Error('Color needs a value');\n\t\t} else if (arg instanceof RGBA) {\n\t\t\tthis.rgba = arg;\n\t\t} else if (arg instanceof HSLA) {\n\t\t\tthis._hsla = arg;\n\t\t\tthis.rgba = HSLA.toRGBA(arg);\n\t\t} else if (arg instanceof HSVA) {\n\t\t\tthis._hsva = arg;\n\t\t\tthis.rgba = HSVA.toRGBA(arg);\n\t\t} else {\n\t\t\tthrow new Error('Invalid color ctor argument');\n\t\t}\n\t}\n\n\tequals(other: Color | null): boolean {\n\t\treturn !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n\t}\n\n\t/**\n\t * http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t * Returns the number in the set [0, 1]. O => Darkest Black. 1 => Lightest white.\n\t */\n\tgetRelativeLuminance(): number {\n\t\tconst R = Color._relativeLuminanceForComponent(this.rgba.r);\n\t\tconst G = Color._relativeLuminanceForComponent(this.rgba.g);\n\t\tconst B = Color._relativeLuminanceForComponent(this.rgba.b);\n\t\tconst luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n\n\t\treturn roundFloat(luminance, 4);\n\t}\n\n\tprivate static _relativeLuminanceForComponent(color: number): number {\n\t\tconst c = color / 255;\n\t\treturn (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n\t}\n\n\t/**\n\t *\thttp://24ways.org/2010/calculating-color-contrast\n\t *  Return 'true' if lighter color otherwise 'false'\n\t */\n\tisLighter(): boolean {\n\t\tconst yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n\t\treturn yiq >= 128;\n\t}\n\n\tisLighterThan(another: Color): boolean {\n\t\tconst lum1 = this.getRelativeLuminance();\n\t\tconst lum2 = another.getRelativeLuminance();\n\t\treturn lum1 > lum2;\n\t}\n\n\tisDarkerThan(another: Color): boolean {\n\t\tconst lum1 = this.getRelativeLuminance();\n\t\tconst lum2 = another.getRelativeLuminance();\n\t\treturn lum1 < lum2;\n\t}\n\n\tlighten(factor: number): Color {\n\t\treturn new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a));\n\t}\n\n\tdarken(factor: number): Color {\n\t\treturn new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a));\n\t}\n\n\ttransparent(factor: number): Color {\n\t\tconst { r, g, b, a } = this.rgba;\n\t\treturn new Color(new RGBA(r, g, b, a * factor));\n\t}\n\n\tisTransparent(): boolean {\n\t\treturn this.rgba.a === 0;\n\t}\n\n\tisOpaque(): boolean {\n\t\treturn this.rgba.a === 1;\n\t}\n\n\topposite(): Color {\n\t\treturn new Color(new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));\n\t}\n\n\t/**\n\t * Mixes the current color with the provided color based on the given factor.\n\t * @param color The color to mix with\n\t * @param factor The factor of mixing (0 means this color, 1 means the input color, 0.5 means equal mix)\n\t * @returns A new color representing the mix\n\t */\n\tmix(color: Color, factor: number = 0.5): Color {\n\t\tconst normalize = Math.min(Math.max(factor, 0), 1);\n\t\tconst thisRGBA = this.rgba;\n\t\tconst otherRGBA = color.rgba;\n\n\t\tconst r = thisRGBA.r + (otherRGBA.r - thisRGBA.r) * normalize;\n\t\tconst g = thisRGBA.g + (otherRGBA.g - thisRGBA.g) * normalize;\n\t\tconst b = thisRGBA.b + (otherRGBA.b - thisRGBA.b) * normalize;\n\t\tconst a = thisRGBA.a + (otherRGBA.a - thisRGBA.a) * normalize;\n\n\t\treturn new Color(new RGBA(r, g, b, a));\n\t}\n\n\tmakeOpaque(opaqueBackground: Color): Color {\n\t\tif (this.isOpaque() || opaqueBackground.rgba.a !== 1) {\n\t\t\t// only allow to blend onto a non-opaque color onto a opaque color\n\t\t\treturn this;\n\t\t}\n\n\t\tconst { r, g, b, a } = this.rgba;\n\n\t\t// https://stackoverflow.com/questions/12228548/finding-equivalent-color-with-opacity\n\t\treturn new Color(new RGBA(\n\t\t\topaqueBackground.rgba.r - a * (opaqueBackground.rgba.r - r),\n\t\t\topaqueBackground.rgba.g - a * (opaqueBackground.rgba.g - g),\n\t\t\topaqueBackground.rgba.b - a * (opaqueBackground.rgba.b - b),\n\t\t\t1\n\t\t));\n\t}\n\n\tprivate _toString?: string;\n\ttoString(): string {\n\t\tif (!this._toString) {\n\t\t\tthis._toString = Color.Format.CSS.format(this);\n\t\t}\n\t\treturn this._toString;\n\t}\n\n\tprivate _toNumber32Bit?: number;\n\ttoNumber32Bit(): number {\n\t\tif (!this._toNumber32Bit) {\n\t\t\tthis._toNumber32Bit = (\n\t\t\t\tthis.rgba.r /*  */ << 24 |\n\t\t\t\tthis.rgba.g /*  */ << 16 |\n\t\t\t\tthis.rgba.b /*  */ << 8 |\n\t\t\t\tthis.rgba.a * 0xFF << 0\n\t\t\t) >>> 0;\n\t\t}\n\t\treturn this._toNumber32Bit;\n\t}\n\n\tstatic getLighterColor(of: Color, relative: Color, factor?: number): Color {\n\t\tif (of.isLighterThan(relative)) {\n\t\t\treturn of;\n\t\t}\n\t\tfactor = factor ? factor : 0.5;\n\t\tconst lum1 = of.getRelativeLuminance();\n\t\tconst lum2 = relative.getRelativeLuminance();\n\t\tfactor = factor * (lum2 - lum1) / lum2;\n\t\treturn of.lighten(factor);\n\t}\n\n\tstatic getDarkerColor(of: Color, relative: Color, factor?: number): Color {\n\t\tif (of.isDarkerThan(relative)) {\n\t\t\treturn of;\n\t\t}\n\t\tfactor = factor ? factor : 0.5;\n\t\tconst lum1 = of.getRelativeLuminance();\n\t\tconst lum2 = relative.getRelativeLuminance();\n\t\tfactor = factor * (lum1 - lum2) / lum1;\n\t\treturn of.darken(factor);\n\t}\n\n\tstatic readonly white = new Color(new RGBA(255, 255, 255, 1));\n\tstatic readonly black = new Color(new RGBA(0, 0, 0, 1));\n\tstatic readonly red = new Color(new RGBA(255, 0, 0, 1));\n\tstatic readonly blue = new Color(new RGBA(0, 0, 255, 1));\n\tstatic readonly green = new Color(new RGBA(0, 255, 0, 1));\n\tstatic readonly cyan = new Color(new RGBA(0, 255, 255, 1));\n\tstatic readonly lightgrey = new Color(new RGBA(211, 211, 211, 1));\n\tstatic readonly transparent = new Color(new RGBA(0, 0, 0, 0));\n}\n\nexport namespace Color {\n\texport namespace Format {\n\t\texport namespace CSS {\n\n\t\t\texport function formatRGB(color: Color): string {\n\t\t\t\tif (color.rgba.a === 1) {\n\t\t\t\t\treturn `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n\t\t\t\t}\n\n\t\t\t\treturn Color.Format.CSS.formatRGBA(color);\n\t\t\t}\n\n\t\t\texport function formatRGBA(color: Color): string {\n\t\t\t\treturn `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n\t\t\t}\n\n\t\t\texport function formatHSL(color: Color): string {\n\t\t\t\tif (color.hsla.a === 1) {\n\t\t\t\t\treturn `hsl(${color.hsla.h}, ${Math.round(color.hsla.s * 100)}%, ${Math.round(color.hsla.l * 100)}%)`;\n\t\t\t\t}\n\n\t\t\t\treturn Color.Format.CSS.formatHSLA(color);\n\t\t\t}\n\n\t\t\texport function formatHSLA(color: Color): string {\n\t\t\t\treturn `hsla(${color.hsla.h}, ${Math.round(color.hsla.s * 100)}%, ${Math.round(color.hsla.l * 100)}%, ${color.hsla.a.toFixed(2)})`;\n\t\t\t}\n\n\t\t\tfunction _toTwoDigitHex(n: number): string {\n\t\t\t\tconst r = n.toString(16);\n\t\t\t\treturn r.length !== 2 ? '0' + r : r;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Formats the color as #RRGGBB\n\t\t\t */\n\t\t\texport function formatHex(color: Color): string {\n\t\t\t\treturn `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Formats the color as #RRGGBBAA\n\t\t\t * If 'compact' is set, colors without transparancy will be printed as #RRGGBB\n\t\t\t */\n\t\t\texport function formatHexA(color: Color, compact = false): string {\n\t\t\t\tif (compact && color.rgba.a === 1) {\n\t\t\t\t\treturn Color.Format.CSS.formatHex(color);\n\t\t\t\t}\n\n\t\t\t\treturn `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The default format will use HEX if opaque and RGBA otherwise.\n\t\t\t */\n\t\t\texport function format(color: Color): string {\n\t\t\t\tif (color.isOpaque()) {\n\t\t\t\t\treturn Color.Format.CSS.formatHex(color);\n\t\t\t\t}\n\n\t\t\t\treturn Color.Format.CSS.formatRGBA(color);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Parse a CSS color and return a {@link Color}.\n\t\t\t * @param css The CSS color to parse.\n\t\t\t * @see https://drafts.csswg.org/css-color/#typedef-color\n\t\t\t */\n\t\t\texport function parse(css: string): Color | null {\n\t\t\t\tif (css === 'transparent') {\n\t\t\t\t\treturn Color.transparent;\n\t\t\t\t}\n\t\t\t\tif (css.startsWith('#')) {\n\t\t\t\t\treturn parseHex(css);\n\t\t\t\t}\n\t\t\t\tif (css.startsWith('rgba(')) {\n\t\t\t\t\tconst color = css.match(/rgba\\((?<r>(?:\\+|-)?\\d+), *(?<g>(?:\\+|-)?\\d+), *(?<b>(?:\\+|-)?\\d+), *(?<a>(?:\\+|-)?\\d+(\\.\\d+)?)\\)/);\n\t\t\t\t\tif (!color) {\n\t\t\t\t\t\tthrow new Error('Invalid color format ' + css);\n\t\t\t\t\t}\n\t\t\t\t\tconst r = parseInt(color.groups?.r ?? '0');\n\t\t\t\t\tconst g = parseInt(color.groups?.g ?? '0');\n\t\t\t\t\tconst b = parseInt(color.groups?.b ?? '0');\n\t\t\t\t\tconst a = parseFloat(color.groups?.a ?? '0');\n\t\t\t\t\treturn new Color(new RGBA(r, g, b, a));\n\t\t\t\t}\n\t\t\t\tif (css.startsWith('rgb(')) {\n\t\t\t\t\tconst color = css.match(/rgb\\((?<r>(?:\\+|-)?\\d+), *(?<g>(?:\\+|-)?\\d+), *(?<b>(?:\\+|-)?\\d+)\\)/);\n\t\t\t\t\tif (!color) {\n\t\t\t\t\t\tthrow new Error('Invalid color format ' + css);\n\t\t\t\t\t}\n\t\t\t\t\tconst r = parseInt(color.groups?.r ?? '0');\n\t\t\t\t\tconst g = parseInt(color.groups?.g ?? '0');\n\t\t\t\t\tconst b = parseInt(color.groups?.b ?? '0');\n\t\t\t\t\treturn new Color(new RGBA(r, g, b));\n\t\t\t\t}\n\t\t\t\t// TODO: Support more formats as needed\n\t\t\t\treturn parseNamedKeyword(css);\n\t\t\t}\n\n\t\t\tfunction parseNamedKeyword(css: string): Color | null {\n\t\t\t\t// https://drafts.csswg.org/css-color/#named-colors\n\t\t\t\tswitch (css) {\n\t\t\t\t\tcase 'aliceblue': return new Color(new RGBA(240, 248, 255, 1));\n\t\t\t\t\tcase 'antiquewhite': return new Color(new RGBA(250, 235, 215, 1));\n\t\t\t\t\tcase 'aqua': return new Color(new RGBA(0, 255, 255, 1));\n\t\t\t\t\tcase 'aquamarine': return new Color(new RGBA(127, 255, 212, 1));\n\t\t\t\t\tcase 'azure': return new Color(new RGBA(240, 255, 255, 1));\n\t\t\t\t\tcase 'beige': return new Color(new RGBA(245, 245, 220, 1));\n\t\t\t\t\tcase 'bisque': return new Color(new RGBA(255, 228, 196, 1));\n\t\t\t\t\tcase 'black': return new Color(new RGBA(0, 0, 0, 1));\n\t\t\t\t\tcase 'blanchedalmond': return new Color(new RGBA(255, 235, 205, 1));\n\t\t\t\t\tcase 'blue': return new Color(new RGBA(0, 0, 255, 1));\n\t\t\t\t\tcase 'blueviolet': return new Color(new RGBA(138, 43, 226, 1));\n\t\t\t\t\tcase 'brown': return new Color(new RGBA(165, 42, 42, 1));\n\t\t\t\t\tcase 'burlywood': return new Color(new RGBA(222, 184, 135, 1));\n\t\t\t\t\tcase 'cadetblue': return new Color(new RGBA(95, 158, 160, 1));\n\t\t\t\t\tcase 'chartreuse': return new Color(new RGBA(127, 255, 0, 1));\n\t\t\t\t\tcase 'chocolate': return new Color(new RGBA(210, 105, 30, 1));\n\t\t\t\t\tcase 'coral': return new Color(new RGBA(255, 127, 80, 1));\n\t\t\t\t\tcase 'cornflowerblue': return new Color(new RGBA(100, 149, 237, 1));\n\t\t\t\t\tcase 'cornsilk': return new Color(new RGBA(255, 248, 220, 1));\n\t\t\t\t\tcase 'crimson': return new Color(new RGBA(220, 20, 60, 1));\n\t\t\t\t\tcase 'cyan': return new Color(new RGBA(0, 255, 255, 1));\n\t\t\t\t\tcase 'darkblue': return new Color(new RGBA(0, 0, 139, 1));\n\t\t\t\t\tcase 'darkcyan': return new Color(new RGBA(0, 139, 139, 1));\n\t\t\t\t\tcase 'darkgoldenrod': return new Color(new RGBA(184, 134, 11, 1));\n\t\t\t\t\tcase 'darkgray': return new Color(new RGBA(169, 169, 169, 1));\n\t\t\t\t\tcase 'darkgreen': return new Color(new RGBA(0, 100, 0, 1));\n\t\t\t\t\tcase 'darkgrey': return new Color(new RGBA(169, 169, 169, 1));\n\t\t\t\t\tcase 'darkkhaki': return new Color(new RGBA(189, 183, 107, 1));\n\t\t\t\t\tcase 'darkmagenta': return new Color(new RGBA(139, 0, 139, 1));\n\t\t\t\t\tcase 'darkolivegreen': return new Color(new RGBA(85, 107, 47, 1));\n\t\t\t\t\tcase 'darkorange': return new Color(new RGBA(255, 140, 0, 1));\n\t\t\t\t\tcase 'darkorchid': return new Color(new RGBA(153, 50, 204, 1));\n\t\t\t\t\tcase 'darkred': return new Color(new RGBA(139, 0, 0, 1));\n\t\t\t\t\tcase 'darksalmon': return new Color(new RGBA(233, 150, 122, 1));\n\t\t\t\t\tcase 'darkseagreen': return new Color(new RGBA(143, 188, 143, 1));\n\t\t\t\t\tcase 'darkslateblue': return new Color(new RGBA(72, 61, 139, 1));\n\t\t\t\t\tcase 'darkslategray': return new Color(new RGBA(47, 79, 79, 1));\n\t\t\t\t\tcase 'darkslategrey': return new Color(new RGBA(47, 79, 79, 1));\n\t\t\t\t\tcase 'darkturquoise': return new Color(new RGBA(0, 206, 209, 1));\n\t\t\t\t\tcase 'darkviolet': return new Color(new RGBA(148, 0, 211, 1));\n\t\t\t\t\tcase 'deeppink': return new Color(new RGBA(255, 20, 147, 1));\n\t\t\t\t\tcase 'deepskyblue': return new Color(new RGBA(0, 191, 255, 1));\n\t\t\t\t\tcase 'dimgray': return new Color(new RGBA(105, 105, 105, 1));\n\t\t\t\t\tcase 'dimgrey': return new Color(new RGBA(105, 105, 105, 1));\n\t\t\t\t\tcase 'dodgerblue': return new Color(new RGBA(30, 144, 255, 1));\n\t\t\t\t\tcase 'firebrick': return new Color(new RGBA(178, 34, 34, 1));\n\t\t\t\t\tcase 'floralwhite': return new Color(new RGBA(255, 250, 240, 1));\n\t\t\t\t\tcase 'forestgreen': return new Color(new RGBA(34, 139, 34, 1));\n\t\t\t\t\tcase 'fuchsia': return new Color(new RGBA(255, 0, 255, 1));\n\t\t\t\t\tcase 'gainsboro': return new Color(new RGBA(220, 220, 220, 1));\n\t\t\t\t\tcase 'ghostwhite': return new Color(new RGBA(248, 248, 255, 1));\n\t\t\t\t\tcase 'gold': return new Color(new RGBA(255, 215, 0, 1));\n\t\t\t\t\tcase 'goldenrod': return new Color(new RGBA(218, 165, 32, 1));\n\t\t\t\t\tcase 'gray': return new Color(new RGBA(128, 128, 128, 1));\n\t\t\t\t\tcase 'green': return new Color(new RGBA(0, 128, 0, 1));\n\t\t\t\t\tcase 'greenyellow': return new Color(new RGBA(173, 255, 47, 1));\n\t\t\t\t\tcase 'grey': return new Color(new RGBA(128, 128, 128, 1));\n\t\t\t\t\tcase 'honeydew': return new Color(new RGBA(240, 255, 240, 1));\n\t\t\t\t\tcase 'hotpink': return new Color(new RGBA(255, 105, 180, 1));\n\t\t\t\t\tcase 'indianred': return new Color(new RGBA(205, 92, 92, 1));\n\t\t\t\t\tcase 'indigo': return new Color(new RGBA(75, 0, 130, 1));\n\t\t\t\t\tcase 'ivory': return new Color(new RGBA(255, 255, 240, 1));\n\t\t\t\t\tcase 'khaki': return new Color(new RGBA(240, 230, 140, 1));\n\t\t\t\t\tcase 'lavender': return new Color(new RGBA(230, 230, 250, 1));\n\t\t\t\t\tcase 'lavenderblush': return new Color(new RGBA(255, 240, 245, 1));\n\t\t\t\t\tcase 'lawngreen': return new Color(new RGBA(124, 252, 0, 1));\n\t\t\t\t\tcase 'lemonchiffon': return new Color(new RGBA(255, 250, 205, 1));\n\t\t\t\t\tcase 'lightblue': return new Color(new RGBA(173, 216, 230, 1));\n\t\t\t\t\tcase 'lightcoral': return new Color(new RGBA(240, 128, 128, 1));\n\t\t\t\t\tcase 'lightcyan': return new Color(new RGBA(224, 255, 255, 1));\n\t\t\t\t\tcase 'lightgoldenrodyellow': return new Color(new RGBA(250, 250, 210, 1));\n\t\t\t\t\tcase 'lightgray': return new Color(new RGBA(211, 211, 211, 1));\n\t\t\t\t\tcase 'lightgreen': return new Color(new RGBA(144, 238, 144, 1));\n\t\t\t\t\tcase 'lightgrey': return new Color(new RGBA(211, 211, 211, 1));\n\t\t\t\t\tcase 'lightpink': return new Color(new RGBA(255, 182, 193, 1));\n\t\t\t\t\tcase 'lightsalmon': return new Color(new RGBA(255, 160, 122, 1));\n\t\t\t\t\tcase 'lightseagreen': return new Color(new RGBA(32, 178, 170, 1));\n\t\t\t\t\tcase 'lightskyblue': return new Color(new RGBA(135, 206, 250, 1));\n\t\t\t\t\tcase 'lightslategray': return new Color(new RGBA(119, 136, 153, 1));\n\t\t\t\t\tcase 'lightslategrey': return new Color(new RGBA(119, 136, 153, 1));\n\t\t\t\t\tcase 'lightsteelblue': return new Color(new RGBA(176, 196, 222, 1));\n\t\t\t\t\tcase 'lightyellow': return new Color(new RGBA(255, 255, 224, 1));\n\t\t\t\t\tcase 'lime': return new Color(new RGBA(0, 255, 0, 1));\n\t\t\t\t\tcase 'limegreen': return new Color(new RGBA(50, 205, 50, 1));\n\t\t\t\t\tcase 'linen': return new Color(new RGBA(250, 240, 230, 1));\n\t\t\t\t\tcase 'magenta': return new Color(new RGBA(255, 0, 255, 1));\n\t\t\t\t\tcase 'maroon': return new Color(new RGBA(128, 0, 0, 1));\n\t\t\t\t\tcase 'mediumaquamarine': return new Color(new RGBA(102, 205, 170, 1));\n\t\t\t\t\tcase 'mediumblue': return new Color(new RGBA(0, 0, 205, 1));\n\t\t\t\t\tcase 'mediumorchid': return new Color(new RGBA(186, 85, 211, 1));\n\t\t\t\t\tcase 'mediumpurple': return new Color(new RGBA(147, 112, 219, 1));\n\t\t\t\t\tcase 'mediumseagreen': return new Color(new RGBA(60, 179, 113, 1));\n\t\t\t\t\tcase 'mediumslateblue': return new Color(new RGBA(123, 104, 238, 1));\n\t\t\t\t\tcase 'mediumspringgreen': return new Color(new RGBA(0, 250, 154, 1));\n\t\t\t\t\tcase 'mediumturquoise': return new Color(new RGBA(72, 209, 204, 1));\n\t\t\t\t\tcase 'mediumvioletred': return new Color(new RGBA(199, 21, 133, 1));\n\t\t\t\t\tcase 'midnightblue': return new Color(new RGBA(25, 25, 112, 1));\n\t\t\t\t\tcase 'mintcream': return new Color(new RGBA(245, 255, 250, 1));\n\t\t\t\t\tcase 'mistyrose': return new Color(new RGBA(255, 228, 225, 1));\n\t\t\t\t\tcase 'moccasin': return new Color(new RGBA(255, 228, 181, 1));\n\t\t\t\t\tcase 'navajowhite': return new Color(new RGBA(255, 222, 173, 1));\n\t\t\t\t\tcase 'navy': return new Color(new RGBA(0, 0, 128, 1));\n\t\t\t\t\tcase 'oldlace': return new Color(new RGBA(253, 245, 230, 1));\n\t\t\t\t\tcase 'olive': return new Color(new RGBA(128, 128, 0, 1));\n\t\t\t\t\tcase 'olivedrab': return new Color(new RGBA(107, 142, 35, 1));\n\t\t\t\t\tcase 'orange': return new Color(new RGBA(255, 165, 0, 1));\n\t\t\t\t\tcase 'orangered': return new Color(new RGBA(255, 69, 0, 1));\n\t\t\t\t\tcase 'orchid': return new Color(new RGBA(218, 112, 214, 1));\n\t\t\t\t\tcase 'palegoldenrod': return new Color(new RGBA(238, 232, 170, 1));\n\t\t\t\t\tcase 'palegreen': return new Color(new RGBA(152, 251, 152, 1));\n\t\t\t\t\tcase 'paleturquoise': return new Color(new RGBA(175, 238, 238, 1));\n\t\t\t\t\tcase 'palevioletred': return new Color(new RGBA(219, 112, 147, 1));\n\t\t\t\t\tcase 'papayawhip': return new Color(new RGBA(255, 239, 213, 1));\n\t\t\t\t\tcase 'peachpuff': return new Color(new RGBA(255, 218, 185, 1));\n\t\t\t\t\tcase 'peru': return new Color(new RGBA(205, 133, 63, 1));\n\t\t\t\t\tcase 'pink': return new Color(new RGBA(255, 192, 203, 1));\n\t\t\t\t\tcase 'plum': return new Color(new RGBA(221, 160, 221, 1));\n\t\t\t\t\tcase 'powderblue': return new Color(new RGBA(176, 224, 230, 1));\n\t\t\t\t\tcase 'purple': return new Color(new RGBA(128, 0, 128, 1));\n\t\t\t\t\tcase 'rebeccapurple': return new Color(new RGBA(102, 51, 153, 1));\n\t\t\t\t\tcase 'red': return new Color(new RGBA(255, 0, 0, 1));\n\t\t\t\t\tcase 'rosybrown': return new Color(new RGBA(188, 143, 143, 1));\n\t\t\t\t\tcase 'royalblue': return new Color(new RGBA(65, 105, 225, 1));\n\t\t\t\t\tcase 'saddlebrown': return new Color(new RGBA(139, 69, 19, 1));\n\t\t\t\t\tcase 'salmon': return new Color(new RGBA(250, 128, 114, 1));\n\t\t\t\t\tcase 'sandybrown': return new Color(new RGBA(244, 164, 96, 1));\n\t\t\t\t\tcase 'seagreen': return new Color(new RGBA(46, 139, 87, 1));\n\t\t\t\t\tcase 'seashell': return new Color(new RGBA(255, 245, 238, 1));\n\t\t\t\t\tcase 'sienna': return new Color(new RGBA(160, 82, 45, 1));\n\t\t\t\t\tcase 'silver': return new Color(new RGBA(192, 192, 192, 1));\n\t\t\t\t\tcase 'skyblue': return new Color(new RGBA(135, 206, 235, 1));\n\t\t\t\t\tcase 'slateblue': return new Color(new RGBA(106, 90, 205, 1));\n\t\t\t\t\tcase 'slategray': return new Color(new RGBA(112, 128, 144, 1));\n\t\t\t\t\tcase 'slategrey': return new Color(new RGBA(112, 128, 144, 1));\n\t\t\t\t\tcase 'snow': return new Color(new RGBA(255, 250, 250, 1));\n\t\t\t\t\tcase 'springgreen': return new Color(new RGBA(0, 255, 127, 1));\n\t\t\t\t\tcase 'steelblue': return new Color(new RGBA(70, 130, 180, 1));\n\t\t\t\t\tcase 'tan': return new Color(new RGBA(210, 180, 140, 1));\n\t\t\t\t\tcase 'teal': return new Color(new RGBA(0, 128, 128, 1));\n\t\t\t\t\tcase 'thistle': return new Color(new RGBA(216, 191, 216, 1));\n\t\t\t\t\tcase 'tomato': return new Color(new RGBA(255, 99, 71, 1));\n\t\t\t\t\tcase 'turquoise': return new Color(new RGBA(64, 224, 208, 1));\n\t\t\t\t\tcase 'violet': return new Color(new RGBA(238, 130, 238, 1));\n\t\t\t\t\tcase 'wheat': return new Color(new RGBA(245, 222, 179, 1));\n\t\t\t\t\tcase 'white': return new Color(new RGBA(255, 255, 255, 1));\n\t\t\t\t\tcase 'whitesmoke': return new Color(new RGBA(245, 245, 245, 1));\n\t\t\t\t\tcase 'yellow': return new Color(new RGBA(255, 255, 0, 1));\n\t\t\t\t\tcase 'yellowgreen': return new Color(new RGBA(154, 205, 50, 1));\n\t\t\t\t\tdefault: return null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Converts an Hex color value to a Color.\n\t\t\t * returns r, g, and b are contained in the set [0, 255]\n\t\t\t * @param hex string (#RGB, #RGBA, #RRGGBB or #RRGGBBAA).\n\t\t\t */\n\t\t\texport function parseHex(hex: string): Color | null {\n\t\t\t\tconst length = hex.length;\n\n\t\t\t\tif (length === 0) {\n\t\t\t\t\t// Invalid color\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (hex.charCodeAt(0) !== CharCode.Hash) {\n\t\t\t\t\t// Does not begin with a #\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (length === 7) {\n\t\t\t\t\t// #RRGGBB format\n\t\t\t\t\tconst r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n\t\t\t\t\tconst g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n\t\t\t\t\tconst b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n\t\t\t\t\treturn new Color(new RGBA(r, g, b, 1));\n\t\t\t\t}\n\n\t\t\t\tif (length === 9) {\n\t\t\t\t\t// #RRGGBBAA format\n\t\t\t\t\tconst r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n\t\t\t\t\tconst g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n\t\t\t\t\tconst b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n\t\t\t\t\tconst a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n\t\t\t\t\treturn new Color(new RGBA(r, g, b, a / 255));\n\t\t\t\t}\n\n\t\t\t\tif (length === 4) {\n\t\t\t\t\t// #RGB format\n\t\t\t\t\tconst r = _parseHexDigit(hex.charCodeAt(1));\n\t\t\t\t\tconst g = _parseHexDigit(hex.charCodeAt(2));\n\t\t\t\t\tconst b = _parseHexDigit(hex.charCodeAt(3));\n\t\t\t\t\treturn new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b));\n\t\t\t\t}\n\n\t\t\t\tif (length === 5) {\n\t\t\t\t\t// #RGBA format\n\t\t\t\t\tconst r = _parseHexDigit(hex.charCodeAt(1));\n\t\t\t\t\tconst g = _parseHexDigit(hex.charCodeAt(2));\n\t\t\t\t\tconst b = _parseHexDigit(hex.charCodeAt(3));\n\t\t\t\t\tconst a = _parseHexDigit(hex.charCodeAt(4));\n\t\t\t\t\treturn new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255));\n\t\t\t\t}\n\n\t\t\t\t// Invalid color\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfunction _parseHexDigit(charCode: CharCode): number {\n\t\t\t\tswitch (charCode) {\n\t\t\t\t\tcase CharCode.Digit0: return 0;\n\t\t\t\t\tcase CharCode.Digit1: return 1;\n\t\t\t\t\tcase CharCode.Digit2: return 2;\n\t\t\t\t\tcase CharCode.Digit3: return 3;\n\t\t\t\t\tcase CharCode.Digit4: return 4;\n\t\t\t\t\tcase CharCode.Digit5: return 5;\n\t\t\t\t\tcase CharCode.Digit6: return 6;\n\t\t\t\t\tcase CharCode.Digit7: return 7;\n\t\t\t\t\tcase CharCode.Digit8: return 8;\n\t\t\t\t\tcase CharCode.Digit9: return 9;\n\t\t\t\t\tcase CharCode.a: return 10;\n\t\t\t\t\tcase CharCode.A: return 10;\n\t\t\t\t\tcase CharCode.b: return 11;\n\t\t\t\t\tcase CharCode.B: return 11;\n\t\t\t\t\tcase CharCode.c: return 12;\n\t\t\t\t\tcase CharCode.C: return 12;\n\t\t\t\t\tcase CharCode.d: return 13;\n\t\t\t\t\tcase CharCode.D: return 13;\n\t\t\t\t\tcase CharCode.e: return 14;\n\t\t\t\t\tcase CharCode.E: return 14;\n\t\t\t\t\tcase CharCode.f: return 15;\n\t\t\t\t\tcase CharCode.F: return 15;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n}\n"]}