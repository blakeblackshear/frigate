{"version":3,"file":"react-router-config.js","sources":["../modules/matchRoutes.js","../../node_modules/@babel/runtime/helpers/esm/extends.js","../modules/renderRoutes.js"],"sourcesContent":["import { matchPath, Router } from \"react-router\";\n\nfunction matchRoutes(routes, pathname, /*not public API*/ branch = []) {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n        ? branch[branch.length - 1].match // use parent match\n        : Router.computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, branch);\n      }\n    }\n\n    return match;\n  });\n\n  return branch;\n}\n\nexport default matchRoutes;\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React from \"react\";\nimport { Switch, Route } from \"react-router\";\n\nfunction renderRoutes(routes, extraProps = {}, switchProps = {}) {\n  return routes ? (\n    <Switch {...switchProps}>\n      {routes.map((route, i) => (\n        <Route\n          key={route.key || i}\n          path={route.path}\n          exact={route.exact}\n          strict={route.strict}\n          render={props =>\n            route.render ? (\n              route.render({ ...props, ...extraProps, route: route })\n            ) : (\n              <route.component {...props} {...extraProps} route={route} />\n            )\n          }\n        />\n      ))}\n    </Switch>\n  ) : null;\n}\n\nexport default renderRoutes;\n"],"names":["matchRoutes","routes","pathname","branch","some","route","match","path","matchPath","length","Router","computeRootMatch","push","renderRoutes","extraProps","switchProps","Switch","map","i","Route","key","exact","strict","props","render"],"mappings":";;;;;;;;EAEA,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,QAA7B;EAAuC;EAAmBC,MAA1D,EAAuE;EAAA,MAAbA,MAAa;EAAbA,IAAAA,MAAa,GAAJ,EAAI;EAAA;;EACrEF,EAAAA,MAAM,CAACG,IAAP,CAAY,UAAAC,KAAK,EAAI;EACnB,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,GACVC,qBAAS,CAACN,QAAD,EAAWG,KAAX,CADC,GAEVF,MAAM,CAACM,MAAP,GACEN,MAAM,CAACA,MAAM,CAACM,MAAP,GAAgB,CAAjB,CAAN,CAA0BH,KAD5B;EAAA,MAEEI,kBAAM,CAACC,gBAAP,CAAwBT,QAAxB,CAJN,CADmB;;EAOnB,QAAII,KAAJ,EAAW;EACTH,MAAAA,MAAM,CAACS,IAAP,CAAY;EAAEP,QAAAA,KAAK,EAALA,KAAF;EAASC,QAAAA,KAAK,EAALA;EAAT,OAAZ;;EAEA,UAAID,KAAK,CAACJ,MAAV,EAAkB;EAChBD,QAAAA,WAAW,CAACK,KAAK,CAACJ,MAAP,EAAeC,QAAf,EAAyBC,MAAzB,CAAX;EACD;EACF;;EAED,WAAOG,KAAP;EACD,GAhBD;EAkBA,SAAOH,MAAP;EACD;;ECtBc,SAAS,QAAQ,GAAG;EACnC,EAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,UAAU,MAAM,EAAE;EAChD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC/C,MAAM,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAM,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;EAC9B,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;EAC/D,UAAU,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;EACpC,SAAS;EACT,OAAO;EACP,KAAK;;EAEL,IAAI,OAAO,MAAM,CAAC;EAClB,GAAG,CAAC;;EAEJ,EAAE,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EACzC;;GAAC,DCbD,SAASU,YAAT,CAAsBZ,MAAtB,EAA8Ba,UAA9B,EAA+CC,WAA/C,EAAiE;EAAA,MAAnCD,UAAmC;EAAnCA,IAAAA,UAAmC,GAAtB,EAAsB;EAAA;;EAAA,MAAlBC,WAAkB;EAAlBA,IAAAA,WAAkB,GAAJ,EAAI;EAAA;;EAC/D,SAAOd,MAAM,GACX,oBAACe,kBAAD,EAAYD,WAAZ,EACGd,MAAM,CAACgB,GAAP,CAAW,UAACZ,KAAD,EAAQa,CAAR;EAAA,WACV,oBAACC,iBAAD;EACE,MAAA,GAAG,EAAEd,KAAK,CAACe,GAAN,IAAaF,CADpB;EAEE,MAAA,IAAI,EAAEb,KAAK,CAACE,IAFd;EAGE,MAAA,KAAK,EAAEF,KAAK,CAACgB,KAHf;EAIE,MAAA,MAAM,EAAEhB,KAAK,CAACiB,MAJhB;EAKE,MAAA,MAAM,EAAE,gBAAAC,KAAK;EAAA,eACXlB,KAAK,CAACmB,MAAN,GACEnB,KAAK,CAACmB,MAAN,cAAkBD,KAAlB,MAA4BT,UAA5B;EAAwCT,UAAAA,KAAK,EAAEA;EAA/C,WADF,GAGE,oBAAC,KAAD,CAAO,SAAP,eAAqBkB,KAArB,EAAgCT,UAAhC;EAA4C,UAAA,KAAK,EAAET;EAAnD,WAJS;EAAA;EALf,MADU;EAAA,GAAX,CADH,CADW,GAkBT,IAlBJ;EAmBD;;;;;;;;;;;;;"}