import { AuthProviderType, ApigeeDevOnboardingIntegrationAuthType } from './constants';
export declare const oidcIssuerMetadataSchema: {
    readonly type: "object";
    readonly properties: {
        readonly end_session_endpoint: {
            readonly type: "string";
        };
        readonly token_endpoint: {
            readonly type: "string";
        };
        readonly authorization_endpoint: {
            readonly type: "string";
        };
        readonly jwks_uri: {
            readonly type: "string";
        };
    };
    readonly required: readonly ["token_endpoint", "authorization_endpoint"];
    readonly additionalProperties: true;
};
export declare const oidcProviderConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: AuthProviderType.OIDC;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly pkce: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly configurationUrl: {
            readonly type: "string";
            readonly minLength: 1;
        };
        readonly configuration: {
            readonly type: "object";
            readonly properties: {
                readonly end_session_endpoint: {
                    readonly type: "string";
                };
                readonly token_endpoint: {
                    readonly type: "string";
                };
                readonly authorization_endpoint: {
                    readonly type: "string";
                };
                readonly jwks_uri: {
                    readonly type: "string";
                };
            };
            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
            readonly additionalProperties: true;
        };
        readonly clientId: {
            readonly type: "string";
            readonly minLength: 1;
        };
        readonly clientSecret: {
            readonly type: "string";
            readonly minLength: 0;
        };
        readonly teamsClaimName: {
            readonly type: "string";
        };
        readonly teamsClaimMap: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly defaultTeams: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly scopes: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly tokenExpirationTime: {
            readonly type: "number";
        };
        readonly authorizationRequestCustomParams: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly tokenRequestCustomParams: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly audience: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly required: readonly ["type", "clientId"];
    readonly oneOf: readonly [{
        readonly required: readonly ["configurationUrl"];
    }, {
        readonly required: readonly ["configuration"];
    }];
    readonly additionalProperties: false;
};
export declare const saml2ProviderConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: AuthProviderType.SAML2;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly issuerId: {
            readonly type: "string";
        };
        readonly entityId: {
            readonly type: "string";
        };
        readonly ssoUrl: {
            readonly type: "string";
        };
        readonly x509PublicCert: {
            readonly type: "string";
        };
        readonly teamsAttributeName: {
            readonly type: "string";
            readonly default: "https://redocly.com/sso/teams";
        };
        readonly teamsAttributeMap: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly defaultTeams: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
};
export declare const authProviderConfigSchema: {
    readonly oneOf: readonly [{
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: AuthProviderType.OIDC;
            };
            readonly title: {
                readonly type: "string";
            };
            readonly pkce: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly configurationUrl: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly configuration: {
                readonly type: "object";
                readonly properties: {
                    readonly end_session_endpoint: {
                        readonly type: "string";
                    };
                    readonly token_endpoint: {
                        readonly type: "string";
                    };
                    readonly authorization_endpoint: {
                        readonly type: "string";
                    };
                    readonly jwks_uri: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                readonly additionalProperties: true;
            };
            readonly clientId: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly clientSecret: {
                readonly type: "string";
                readonly minLength: 0;
            };
            readonly teamsClaimName: {
                readonly type: "string";
            };
            readonly teamsClaimMap: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly defaultTeams: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly scopes: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly tokenExpirationTime: {
                readonly type: "number";
            };
            readonly authorizationRequestCustomParams: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly tokenRequestCustomParams: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly audience: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
        };
        readonly required: readonly ["type", "clientId"];
        readonly oneOf: readonly [{
            readonly required: readonly ["configurationUrl"];
        }, {
            readonly required: readonly ["configuration"];
        }];
        readonly additionalProperties: false;
    }, {
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: AuthProviderType.SAML2;
            };
            readonly title: {
                readonly type: "string";
            };
            readonly issuerId: {
                readonly type: "string";
            };
            readonly entityId: {
                readonly type: "string";
            };
            readonly ssoUrl: {
                readonly type: "string";
            };
            readonly x509PublicCert: {
                readonly type: "string";
            };
            readonly teamsAttributeName: {
                readonly type: "string";
                readonly default: "https://redocly.com/sso/teams";
            };
            readonly teamsAttributeMap: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly defaultTeams: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
        };
        readonly additionalProperties: false;
        readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
    }];
    readonly discriminator: {
        readonly propertyName: "type";
    };
};
export declare const ssoDirectConfigSchema: {
    readonly type: "object";
    readonly additionalProperties: {
        readonly oneOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly const: AuthProviderType.OIDC;
                };
                readonly title: {
                    readonly type: "string";
                };
                readonly pkce: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly configurationUrl: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly configuration: {
                    readonly type: "object";
                    readonly properties: {
                        readonly end_session_endpoint: {
                            readonly type: "string";
                        };
                        readonly token_endpoint: {
                            readonly type: "string";
                        };
                        readonly authorization_endpoint: {
                            readonly type: "string";
                        };
                        readonly jwks_uri: {
                            readonly type: "string";
                        };
                    };
                    readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                    readonly additionalProperties: true;
                };
                readonly clientId: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly clientSecret: {
                    readonly type: "string";
                    readonly minLength: 0;
                };
                readonly teamsClaimName: {
                    readonly type: "string";
                };
                readonly teamsClaimMap: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly defaultTeams: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly scopes: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly tokenExpirationTime: {
                    readonly type: "number";
                };
                readonly authorizationRequestCustomParams: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly tokenRequestCustomParams: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly audience: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly required: readonly ["type", "clientId"];
            readonly oneOf: readonly [{
                readonly required: readonly ["configurationUrl"];
            }, {
                readonly required: readonly ["configuration"];
            }];
            readonly additionalProperties: false;
        }, {
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly const: AuthProviderType.SAML2;
                };
                readonly title: {
                    readonly type: "string";
                };
                readonly issuerId: {
                    readonly type: "string";
                };
                readonly entityId: {
                    readonly type: "string";
                };
                readonly ssoUrl: {
                    readonly type: "string";
                };
                readonly x509PublicCert: {
                    readonly type: "string";
                };
                readonly teamsAttributeName: {
                    readonly type: "string";
                    readonly default: "https://redocly.com/sso/teams";
                };
                readonly teamsAttributeMap: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly defaultTeams: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
        }];
        readonly discriminator: {
            readonly propertyName: "type";
        };
    };
};
export declare const ssoConfigSchema: {
    readonly oneOf: readonly [{
        readonly type: "array";
        readonly items: {
            readonly type: "string";
            readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
        };
        readonly uniqueItems: true;
    }, {
        readonly type: "string";
        readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
    }];
};
export declare const redirectConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly to: {
            readonly type: "string";
        };
        readonly type: {
            readonly type: "number";
            readonly default: 301;
        };
    };
    readonly additionalProperties: false;
};
export declare const redirectsConfigSchema: {
    readonly type: "object";
    readonly additionalProperties: {
        readonly type: "object";
        readonly properties: {
            readonly to: {
                readonly type: "string";
            };
            readonly type: {
                readonly type: "number";
                readonly default: 301;
            };
        };
        readonly additionalProperties: false;
    };
    readonly default: {};
};
export declare const apiConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly root: {
            readonly type: "string";
        };
        readonly output: {
            readonly type: "string";
            readonly pattern: "(.ya?ml|.json)$";
        };
        readonly rbac: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly openapi: {
            readonly properties: {
                readonly theme: {
                    readonly type: "object";
                    readonly properties: {
                        readonly breakpoints: {
                            readonly type: "object";
                            readonly properties: {
                                readonly small: {
                                    readonly type: "string";
                                };
                                readonly medium: {
                                    readonly type: "string";
                                };
                                readonly large: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly codeBlock: {
                            readonly type: "object";
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly borderRadius: {
                                    readonly type: "string";
                                };
                                readonly tokens: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly colors: {
                            readonly type: "object";
                            readonly properties: {
                                readonly accent: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly border: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly error: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly http: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly basic: {
                                            readonly type: "string";
                                        };
                                        readonly delete: {
                                            readonly type: "string";
                                        };
                                        readonly get: {
                                            readonly type: "string";
                                        };
                                        readonly head: {
                                            readonly type: "string";
                                        };
                                        readonly link: {
                                            readonly type: "string";
                                        };
                                        readonly options: {
                                            readonly type: "string";
                                        };
                                        readonly patch: {
                                            readonly type: "string";
                                        };
                                        readonly post: {
                                            readonly type: "string";
                                        };
                                        readonly put: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly primary: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly responses: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly error: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly info: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly redirect: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly success: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly secondary: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly success: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly text: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly primary: {
                                            readonly type: "string";
                                        };
                                        readonly secondary: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly tonalOffset: {
                                    readonly type: "number";
                                };
                                readonly warning: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly components: {
                            readonly type: "object";
                            readonly properties: {
                                readonly buttons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly hoverStyle: {
                                            readonly type: "string";
                                        };
                                        readonly boxShadow: {
                                            readonly type: "string";
                                        };
                                        readonly hoverBoxShadow: {
                                            readonly type: "string";
                                        };
                                        readonly sizes: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly medium: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly large: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly xlarge: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly httpBadges: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly sizes: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly medium: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontFamily: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontWeight: {
                                                            readonly type: "string";
                                                        };
                                                        readonly lineHeight: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly small: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontFamily: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontWeight: {
                                                            readonly type: "string";
                                                        };
                                                        readonly lineHeight: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly layoutControls: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly top: {
                                            readonly type: "string";
                                        };
                                        readonly width: {
                                            readonly type: "string";
                                        };
                                        readonly height: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly panels: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly tryItButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fullWidth: {
                                            readonly type: "boolean";
                                        };
                                    };
                                };
                                readonly tryItSendButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fullWidth: {
                                            readonly type: "boolean";
                                        };
                                    };
                                };
                            };
                        };
                        readonly layout: {
                            readonly type: "object";
                            readonly properties: {
                                readonly showDarkRightPanel: {
                                    readonly type: "boolean";
                                };
                                readonly stacked: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly maxWidth: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "string";
                                                };
                                                readonly medium: {
                                                    readonly type: "string";
                                                };
                                                readonly large: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly 'three-panel': {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly maxWidth: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "string";
                                                };
                                                readonly medium: {
                                                    readonly type: "string";
                                                };
                                                readonly large: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly middlePanelMaxWidth: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "string";
                                                };
                                                readonly medium: {
                                                    readonly type: "string";
                                                };
                                                readonly large: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly logo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly gutter: {
                                    readonly type: "string";
                                };
                                readonly maxHeight: {
                                    readonly type: "string";
                                };
                                readonly maxWidth: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly fab: {
                            readonly type: "object";
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly color: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly overrides: {
                            readonly type: "object";
                            readonly properties: {
                                readonly DownloadButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly custom: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly NextSectionButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly custom: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly rightPanel: {
                            readonly type: "object";
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly panelBackgroundColor: {
                                    readonly type: "string";
                                };
                                readonly panelControlsBackgroundColor: {
                                    readonly type: "string";
                                };
                                readonly showAtBreakpoint: {
                                    readonly type: "string";
                                };
                                readonly textColor: {
                                    readonly type: "string";
                                };
                                readonly width: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly schema: {
                            readonly type: "object";
                            readonly properties: {
                                readonly breakFieldNames: {
                                    readonly type: "boolean";
                                };
                                readonly caretColor: {
                                    readonly type: "string";
                                };
                                readonly caretSize: {
                                    readonly type: "string";
                                };
                                readonly constraints: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly border: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly defaultDetailsWidth: {
                                    readonly type: "string";
                                };
                                readonly examples: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly border: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly labelsTextSize: {
                                    readonly type: "string";
                                };
                                readonly linesColor: {
                                    readonly type: "string";
                                };
                                readonly nestedBackground: {
                                    readonly type: "string";
                                };
                                readonly nestingSpacing: {
                                    readonly type: "string";
                                };
                                readonly requireLabelColor: {
                                    readonly type: "string";
                                };
                                readonly typeNameColor: {
                                    readonly type: "string";
                                };
                                readonly typeTitleColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly shape: {
                            readonly type: "object";
                            readonly properties: {
                                readonly borderRadius: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly sidebar: {
                            readonly type: "object";
                            readonly properties: {
                                readonly activeBgColor: {
                                    readonly type: "string";
                                };
                                readonly activeTextColor: {
                                    readonly type: "string";
                                };
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly borderRadius: {
                                    readonly type: "string";
                                };
                                readonly breakPath: {
                                    readonly type: "boolean";
                                };
                                readonly caretColor: {
                                    readonly type: "string";
                                };
                                readonly caretSize: {
                                    readonly type: "string";
                                };
                                readonly groupItems: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly subItemsColor: {
                                            readonly type: "string";
                                        };
                                        readonly textTransform: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly level1items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly subItemsColor: {
                                            readonly type: "string";
                                        };
                                        readonly textTransform: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly rightLineColor: {
                                    readonly type: "string";
                                };
                                readonly separatorLabelColor: {
                                    readonly type: "string";
                                };
                                readonly showAtBreakpoint: {
                                    readonly type: "string";
                                };
                                readonly spacing: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly unit: {
                                            readonly type: "number";
                                        };
                                        readonly paddingHorizontal: {
                                            readonly type: "string";
                                        };
                                        readonly paddingVertical: {
                                            readonly type: "string";
                                        };
                                        readonly offsetTop: {
                                            readonly type: "string";
                                        };
                                        readonly offsetLeft: {
                                            readonly type: "string";
                                        };
                                        readonly offsetNesting: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly textColor: {
                                    readonly type: "string";
                                };
                                readonly width: {
                                    readonly type: "string";
                                };
                                readonly fontFamily: {
                                    readonly type: "string";
                                };
                                readonly fontSize: {
                                    readonly type: "string";
                                };
                                readonly fontWeight: {
                                    readonly type: "string";
                                };
                                readonly lineHeight: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly spacing: {
                            readonly type: "object";
                            readonly properties: {
                                readonly sectionHorizontal: {
                                    readonly type: "number";
                                };
                                readonly sectionVertical: {
                                    readonly type: "number";
                                };
                                readonly unit: {
                                    readonly type: "number";
                                };
                            };
                        };
                        readonly typography: {
                            readonly type: "object";
                            readonly properties: {
                                readonly fontWeightBold: {
                                    readonly type: "string";
                                };
                                readonly fontWeightLight: {
                                    readonly type: "string";
                                };
                                readonly fontWeightRegular: {
                                    readonly type: "string";
                                };
                                readonly heading1: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly heading2: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly heading3: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly headings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly lineHeight: {
                                    readonly type: "string";
                                };
                                readonly links: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly hover: {
                                            readonly type: "string";
                                        };
                                        readonly textDecoration: {
                                            readonly type: "string";
                                        };
                                        readonly hoverTextDecoration: {
                                            readonly type: "string";
                                        };
                                        readonly visited: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly optimizeSpeed: {
                                    readonly type: "boolean";
                                };
                                readonly rightPanelHeading: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly smoothing: {
                                    readonly type: "string";
                                    readonly enum: readonly ["auto", "none", "antialiased", "subpixel-antialiased", "grayscale"];
                                };
                                readonly fontFamily: {
                                    readonly type: "string";
                                };
                                readonly fontSize: {
                                    readonly type: "string";
                                };
                                readonly fontWeight: {
                                    readonly type: "string";
                                };
                                readonly code: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly wordBreak: {
                                            readonly type: "string";
                                            readonly enum: readonly ["break-all", "break-word", "keep-all", "normal", "revert", "unset", "inherit", "initial"];
                                        };
                                        readonly wrap: {
                                            readonly type: "boolean";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly fieldName: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly links: {
                            readonly properties: {
                                readonly color: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly codeSample: {
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly ctrlFHijack: {
                    readonly type: "boolean";
                };
                readonly defaultSampleLanguage: {
                    readonly type: "string";
                };
                readonly disableDeepLinks: {
                    readonly type: "boolean";
                };
                readonly disableSearch: {
                    readonly type: "boolean";
                };
                readonly disableSidebar: {
                    readonly type: "boolean";
                };
                readonly downloadDefinitionUrl: {
                    readonly type: "string";
                };
                readonly expandDefaultServerVariables: {
                    readonly type: "boolean";
                };
                readonly enumSkipQuotes: {
                    readonly type: "boolean";
                };
                readonly expandDefaultRequest: {
                    readonly type: "boolean";
                };
                readonly expandDefaultResponse: {
                    readonly type: "boolean";
                };
                readonly expandResponses: {
                    readonly type: "string";
                };
                readonly expandSingleSchemaField: {
                    readonly type: "boolean";
                };
                readonly generateCodeSamples: {
                    readonly type: "object";
                    readonly properties: {
                        readonly skipOptionalParameters: {
                            readonly type: "boolean";
                        };
                        readonly languages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly lang: {
                                        readonly enum: readonly ["curl", "C#", "Go", "Java", "Java8+Apache", "JavaScript", "Node.js", "PHP", "Python", "R", "Ruby"];
                                    };
                                };
                                readonly required: readonly ["lang"];
                            };
                        };
                    };
                    readonly required: readonly ["languages"];
                };
                readonly generatedPayloadSamplesMaxDepth: {
                    readonly type: "number";
                };
                readonly hideDownloadButton: {
                    readonly type: "boolean";
                };
                readonly hideHostname: {
                    readonly type: "boolean";
                };
                readonly hideInfoSection: {
                    readonly type: "boolean";
                };
                readonly hideLogo: {
                    readonly type: "boolean";
                };
                readonly hideRequestPayloadSample: {
                    readonly type: "boolean";
                };
                readonly hideRightPanel: {
                    readonly type: "boolean";
                };
                readonly hideSchemaPattern: {
                    readonly type: "boolean";
                };
                readonly hideSingleRequestSampleTab: {
                    readonly type: "boolean";
                };
                readonly hideSecuritySection: {
                    readonly type: "boolean";
                };
                readonly hideTryItPanel: {
                    readonly type: "boolean";
                };
                readonly hideFab: {
                    readonly type: "boolean";
                };
                readonly hideOneOfDescription: {
                    readonly type: "boolean";
                };
                readonly htmlTemplate: {
                    readonly type: "string";
                };
                readonly jsonSampleExpandLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                        readonly minimum: 1;
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly labels: {
                    readonly type: "object";
                    readonly properties: {
                        readonly enum: {
                            readonly type: "string";
                        };
                        readonly enumSingleValue: {
                            readonly type: "string";
                        };
                        readonly enumArray: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "string";
                        };
                        readonly deprecated: {
                            readonly type: "string";
                        };
                        readonly example: {
                            readonly type: "string";
                        };
                        readonly examples: {
                            readonly type: "string";
                        };
                        readonly nullable: {
                            readonly type: "string";
                        };
                        readonly recursive: {
                            readonly type: "string";
                        };
                        readonly arrayOf: {
                            readonly type: "string";
                        };
                        readonly webhook: {
                            readonly type: "string";
                        };
                        readonly authorizations: {
                            readonly type: "string";
                        };
                        readonly tryItAuthBasicUsername: {
                            readonly type: "string";
                        };
                        readonly tryItAuthBasicPassword: {
                            readonly type: "string";
                        };
                    };
                };
                readonly menuToggle: {
                    readonly type: "boolean";
                };
                readonly nativeScrollbars: {
                    readonly type: "boolean";
                };
                readonly noAutoAuth: {
                    readonly type: "boolean";
                };
                readonly onDeepLinkClick: {
                    readonly type: "object";
                };
                readonly pagination: {
                    readonly enum: readonly ["none", "section", "item"];
                };
                readonly pathInMiddlePanel: {
                    readonly type: "boolean";
                };
                readonly payloadSampleIdx: {
                    readonly type: "number";
                    readonly minimum: 0;
                };
                readonly requestInterceptor: {
                    readonly type: "object";
                };
                readonly requiredPropsFirst: {
                    readonly type: "boolean";
                };
                readonly routingStrategy: {
                    readonly type: "string";
                };
                readonly samplesTabsMaxCount: {
                    readonly type: "number";
                };
                readonly schemaExpansionLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                        readonly minimum: 0;
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly minCharacterLengthToInitSearch: {
                    readonly type: "number";
                    readonly minimum: 1;
                };
                readonly maxResponseHeadersToShowInTryIt: {
                    readonly type: "number";
                    readonly minimum: 0;
                };
                readonly scrollYOffset: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly searchAutoExpand: {
                    readonly type: "boolean";
                };
                readonly searchFieldLevelBoost: {
                    readonly type: "number";
                    readonly minimum: 0;
                };
                readonly searchMaxDepth: {
                    readonly type: "number";
                    readonly minimum: 1;
                };
                readonly searchMode: {
                    readonly type: "string";
                    readonly enum: readonly ["default", "path-only"];
                };
                readonly searchOperationTitleBoost: {
                    readonly type: "number";
                };
                readonly searchTagTitleBoost: {
                    readonly type: "number";
                };
                readonly sendXUserAgentInTryIt: {
                    readonly type: "boolean";
                };
                readonly showChangeLayoutButton: {
                    readonly type: "boolean";
                };
                readonly showConsole: {
                    readonly type: "boolean";
                };
                readonly showNextButton: {
                    readonly type: "boolean";
                };
                readonly showRightPanelToggle: {
                    readonly type: "boolean";
                };
                readonly showSecuritySchemeType: {
                    readonly type: "boolean";
                };
                readonly showWebhookVerb: {
                    readonly type: "boolean";
                };
                readonly showObjectSchemaExamples: {
                    readonly type: "boolean";
                };
                readonly disableTryItRequestUrlEncoding: {
                    readonly type: "boolean";
                };
                readonly sidebarLinks: {
                    readonly type: "object";
                    readonly properties: {
                        readonly beforeInfo: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly target: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["label", "link"];
                            };
                        };
                        readonly end: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly target: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["label", "link"];
                            };
                        };
                    };
                };
                readonly sideNavStyle: {
                    readonly type: "string";
                    readonly enum: readonly ["summary-only", "path-first", "id-only", "path-only"];
                };
                readonly simpleOneOfTypeLabel: {
                    readonly type: "boolean";
                };
                readonly sortEnumValuesAlphabetically: {
                    readonly type: "boolean";
                };
                readonly sortOperationsAlphabetically: {
                    readonly type: "boolean";
                };
                readonly sortPropsAlphabetically: {
                    readonly type: "boolean";
                };
                readonly sortTagsAlphabetically: {
                    readonly type: "boolean";
                };
                readonly suppressWarnings: {
                    readonly type: "boolean";
                };
                readonly unstable_externalDescription: {
                    readonly type: "boolean";
                };
                readonly unstable_ignoreMimeParameters: {
                    readonly type: "boolean";
                };
                readonly untrustedDefinition: {
                    readonly type: "boolean";
                };
                readonly showAccessMode: {
                    readonly type: "boolean";
                };
                readonly preserveOriginalExtensionsName: {
                    readonly type: "boolean";
                };
                readonly markdownHeadingsAnchorLevel: {
                    readonly type: "number";
                };
                readonly licenseKey: {
                    readonly type: "string";
                };
                readonly hideLoading: {
                    readonly type: "boolean";
                };
                readonly disableRouter: {
                    readonly type: "boolean";
                };
                readonly hideSidebar: {
                    readonly type: "boolean";
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly like: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dislike: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly satisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly neutral: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dissatisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly optionalEmail: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly placeholder: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly hideReplay: {
                    readonly type: "boolean";
                };
                readonly oAuth2RedirectURI: {
                    readonly type: "string";
                    readonly nullable: true;
                };
                readonly corsProxyUrl: {
                    readonly type: "string";
                };
                readonly sortRequiredPropsFirst: {
                    readonly type: "boolean";
                };
                readonly sanitize: {
                    readonly type: "boolean";
                };
                readonly hideDownloadButtons: {
                    readonly type: "boolean";
                };
                readonly downloadUrls: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["url"];
                        readonly additionalProperties: false;
                    };
                };
                readonly onlyRequiredInSamples: {
                    readonly type: "boolean";
                };
                readonly generatedSamplesMaxDepth: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly showExtensions: {
                    readonly oneOf: readonly [{
                        readonly type: "boolean";
                    }, {
                        readonly type: "string";
                    }, {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }];
                };
                readonly hideSchemaTitles: {
                    readonly type: "boolean";
                };
                readonly jsonSamplesExpandLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly schemasExpansionLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly mockServer: {
                    readonly type: "object";
                    readonly properties: {
                        readonly url: {
                            readonly type: "string";
                        };
                        readonly position: {
                            readonly type: "string";
                            readonly enum: readonly ["first", "last", "replace", "off"];
                        };
                        readonly description: {
                            readonly type: "string";
                        };
                    };
                };
                readonly maxDisplayedEnumValues: {
                    readonly type: "number";
                };
                readonly schemaDefinitionsTagName: {
                    readonly type: "string";
                };
                readonly layout: {
                    readonly type: "string";
                    readonly enum: readonly ["stacked", "three-panel"];
                };
                readonly hideInfoMetadata: {
                    readonly type: "boolean";
                };
                readonly events: {
                    readonly type: "object";
                };
                readonly skipBundle: {
                    readonly type: "boolean";
                };
                readonly routingBasePath: {
                    readonly type: "string";
                };
                readonly codeSamples: {
                    readonly type: "object";
                    readonly properties: {
                        readonly languages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly lang: {
                                        readonly type: "string";
                                        readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly options: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly indent: {
                                                readonly type: "string";
                                            };
                                            readonly withImports: {
                                                readonly type: "boolean";
                                            };
                                            readonly withComments: {
                                                readonly type: "boolean";
                                            };
                                            readonly binary: {
                                                readonly type: "boolean";
                                            };
                                            readonly credentials: {
                                                readonly type: "string";
                                                readonly enum: readonly ["omit", "same-origin", "include"];
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly required: readonly ["lang"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly skipOptionalParameters: {
                            readonly type: "boolean";
                        };
                        readonly withOAuth2Call: {
                            readonly type: "boolean";
                        };
                    };
                    readonly required: readonly ["languages"];
                    readonly additionalProperties: false;
                };
                readonly ignoreNamedSchemas: {
                    readonly oneOf: readonly [{
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly hidePropertiesPrefix: {
                    readonly type: "boolean";
                };
                readonly excludeFromSearch: {
                    readonly type: "boolean";
                };
            };
            readonly type: "object";
            readonly additionalProperties: false;
        };
        readonly graphql: {
            readonly type: "object";
            readonly properties: {
                readonly hidePaginationButtons: {
                    readonly type: "boolean";
                };
                readonly menu: {
                    readonly type: "object";
                    readonly properties: {
                        readonly requireExactGroups: {
                            readonly type: "boolean";
                        };
                        readonly groups: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly queries: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly mutations: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly subscriptions: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly types: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly directives: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly required: readonly ["name"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly otherItemsGroupName: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly sidebar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                    };
                };
                readonly apiLogo: {
                    readonly type: "object";
                    readonly properties: {
                        readonly imageUrl: {
                            readonly type: "string";
                        };
                        readonly href: {
                            readonly type: "string";
                        };
                        readonly altText: {
                            readonly type: "string";
                        };
                        readonly backgroundColor: {
                            readonly type: "string";
                        };
                    };
                };
                readonly jsonSamplesDepth: {
                    readonly type: "number";
                };
                readonly samplesMaxInlineArgs: {
                    readonly type: "number";
                };
                readonly licenseKey: {
                    readonly type: "string";
                };
                readonly fieldExpandLevel: {
                    readonly type: "number";
                };
                readonly baseUrlPath: {
                    readonly type: "string";
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly like: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dislike: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly satisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly neutral: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dissatisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly optionalEmail: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly placeholder: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
            };
            readonly additionalProperties: false;
        };
        /**
         * @deprecated left for backwards compatibility
         */
        readonly theme: {
            readonly type: "object";
            readonly properties: {
                readonly openapi: {
                    readonly properties: {
                        readonly theme: {
                            readonly type: "object";
                            readonly properties: {
                                readonly breakpoints: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly small: {
                                            readonly type: "string";
                                        };
                                        readonly medium: {
                                            readonly type: "string";
                                        };
                                        readonly large: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly codeBlock: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly tokens: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly colors: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly accent: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly border: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly error: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly http: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly basic: {
                                                    readonly type: "string";
                                                };
                                                readonly delete: {
                                                    readonly type: "string";
                                                };
                                                readonly get: {
                                                    readonly type: "string";
                                                };
                                                readonly head: {
                                                    readonly type: "string";
                                                };
                                                readonly link: {
                                                    readonly type: "string";
                                                };
                                                readonly options: {
                                                    readonly type: "string";
                                                };
                                                readonly patch: {
                                                    readonly type: "string";
                                                };
                                                readonly post: {
                                                    readonly type: "string";
                                                };
                                                readonly put: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly primary: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly responses: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly error: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly info: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly redirect: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly success: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly secondary: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly success: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly text: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly primary: {
                                                    readonly type: "string";
                                                };
                                                readonly secondary: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly tonalOffset: {
                                            readonly type: "number";
                                        };
                                        readonly warning: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly components: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly buttons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly borderRadius: {
                                                    readonly type: "string";
                                                };
                                                readonly hoverStyle: {
                                                    readonly type: "string";
                                                };
                                                readonly boxShadow: {
                                                    readonly type: "string";
                                                };
                                                readonly hoverBoxShadow: {
                                                    readonly type: "string";
                                                };
                                                readonly sizes: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly medium: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly large: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly xlarge: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly httpBadges: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly borderRadius: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly sizes: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly medium: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontFamily: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontWeight: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly lineHeight: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly small: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontFamily: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontWeight: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly lineHeight: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly layoutControls: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly top: {
                                                    readonly type: "string";
                                                };
                                                readonly width: {
                                                    readonly type: "string";
                                                };
                                                readonly height: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly panels: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly borderRadius: {
                                                    readonly type: "string";
                                                };
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly tryItButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fullWidth: {
                                                    readonly type: "boolean";
                                                };
                                            };
                                        };
                                        readonly tryItSendButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fullWidth: {
                                                    readonly type: "boolean";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly layout: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly showDarkRightPanel: {
                                            readonly type: "boolean";
                                        };
                                        readonly stacked: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly maxWidth: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "string";
                                                        };
                                                        readonly medium: {
                                                            readonly type: "string";
                                                        };
                                                        readonly large: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly 'three-panel': {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly maxWidth: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "string";
                                                        };
                                                        readonly medium: {
                                                            readonly type: "string";
                                                        };
                                                        readonly large: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly middlePanelMaxWidth: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "string";
                                                        };
                                                        readonly medium: {
                                                            readonly type: "string";
                                                        };
                                                        readonly large: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly logo: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly gutter: {
                                            readonly type: "string";
                                        };
                                        readonly maxHeight: {
                                            readonly type: "string";
                                        };
                                        readonly maxWidth: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly fab: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly overrides: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly DownloadButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly custom: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly NextSectionButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly custom: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly rightPanel: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly panelBackgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly panelControlsBackgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly showAtBreakpoint: {
                                            readonly type: "string";
                                        };
                                        readonly textColor: {
                                            readonly type: "string";
                                        };
                                        readonly width: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly schema: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly breakFieldNames: {
                                            readonly type: "boolean";
                                        };
                                        readonly caretColor: {
                                            readonly type: "string";
                                        };
                                        readonly caretSize: {
                                            readonly type: "string";
                                        };
                                        readonly constraints: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly border: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly defaultDetailsWidth: {
                                            readonly type: "string";
                                        };
                                        readonly examples: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly border: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly labelsTextSize: {
                                            readonly type: "string";
                                        };
                                        readonly linesColor: {
                                            readonly type: "string";
                                        };
                                        readonly nestedBackground: {
                                            readonly type: "string";
                                        };
                                        readonly nestingSpacing: {
                                            readonly type: "string";
                                        };
                                        readonly requireLabelColor: {
                                            readonly type: "string";
                                        };
                                        readonly typeNameColor: {
                                            readonly type: "string";
                                        };
                                        readonly typeTitleColor: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly shape: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly sidebar: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly activeBgColor: {
                                            readonly type: "string";
                                        };
                                        readonly activeTextColor: {
                                            readonly type: "string";
                                        };
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly breakPath: {
                                            readonly type: "boolean";
                                        };
                                        readonly caretColor: {
                                            readonly type: "string";
                                        };
                                        readonly caretSize: {
                                            readonly type: "string";
                                        };
                                        readonly groupItems: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly subItemsColor: {
                                                    readonly type: "string";
                                                };
                                                readonly textTransform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly level1items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly subItemsColor: {
                                                    readonly type: "string";
                                                };
                                                readonly textTransform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly rightLineColor: {
                                            readonly type: "string";
                                        };
                                        readonly separatorLabelColor: {
                                            readonly type: "string";
                                        };
                                        readonly showAtBreakpoint: {
                                            readonly type: "string";
                                        };
                                        readonly spacing: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly unit: {
                                                    readonly type: "number";
                                                };
                                                readonly paddingHorizontal: {
                                                    readonly type: "string";
                                                };
                                                readonly paddingVertical: {
                                                    readonly type: "string";
                                                };
                                                readonly offsetTop: {
                                                    readonly type: "string";
                                                };
                                                readonly offsetLeft: {
                                                    readonly type: "string";
                                                };
                                                readonly offsetNesting: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly textColor: {
                                            readonly type: "string";
                                        };
                                        readonly width: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly spacing: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly sectionHorizontal: {
                                            readonly type: "number";
                                        };
                                        readonly sectionVertical: {
                                            readonly type: "number";
                                        };
                                        readonly unit: {
                                            readonly type: "number";
                                        };
                                    };
                                };
                                readonly typography: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontWeightBold: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeightLight: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeightRegular: {
                                            readonly type: "string";
                                        };
                                        readonly heading1: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly heading2: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly heading3: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly headings: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                        readonly links: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly hover: {
                                                    readonly type: "string";
                                                };
                                                readonly textDecoration: {
                                                    readonly type: "string";
                                                };
                                                readonly hoverTextDecoration: {
                                                    readonly type: "string";
                                                };
                                                readonly visited: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly optimizeSpeed: {
                                            readonly type: "boolean";
                                        };
                                        readonly rightPanelHeading: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly smoothing: {
                                            readonly type: "string";
                                            readonly enum: readonly ["auto", "none", "antialiased", "subpixel-antialiased", "grayscale"];
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly code: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly wordBreak: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["break-all", "break-word", "keep-all", "normal", "revert", "unset", "inherit", "initial"];
                                                };
                                                readonly wrap: {
                                                    readonly type: "boolean";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly fieldName: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly links: {
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly codeSample: {
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly ctrlFHijack: {
                            readonly type: "boolean";
                        };
                        readonly defaultSampleLanguage: {
                            readonly type: "string";
                        };
                        readonly disableDeepLinks: {
                            readonly type: "boolean";
                        };
                        readonly disableSearch: {
                            readonly type: "boolean";
                        };
                        readonly disableSidebar: {
                            readonly type: "boolean";
                        };
                        readonly downloadDefinitionUrl: {
                            readonly type: "string";
                        };
                        readonly expandDefaultServerVariables: {
                            readonly type: "boolean";
                        };
                        readonly enumSkipQuotes: {
                            readonly type: "boolean";
                        };
                        readonly expandDefaultRequest: {
                            readonly type: "boolean";
                        };
                        readonly expandDefaultResponse: {
                            readonly type: "boolean";
                        };
                        readonly expandResponses: {
                            readonly type: "string";
                        };
                        readonly expandSingleSchemaField: {
                            readonly type: "boolean";
                        };
                        readonly generateCodeSamples: {
                            readonly type: "object";
                            readonly properties: {
                                readonly skipOptionalParameters: {
                                    readonly type: "boolean";
                                };
                                readonly languages: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly lang: {
                                                readonly enum: readonly ["curl", "C#", "Go", "Java", "Java8+Apache", "JavaScript", "Node.js", "PHP", "Python", "R", "Ruby"];
                                            };
                                        };
                                        readonly required: readonly ["lang"];
                                    };
                                };
                            };
                            readonly required: readonly ["languages"];
                        };
                        readonly generatedPayloadSamplesMaxDepth: {
                            readonly type: "number";
                        };
                        readonly hideDownloadButton: {
                            readonly type: "boolean";
                        };
                        readonly hideHostname: {
                            readonly type: "boolean";
                        };
                        readonly hideInfoSection: {
                            readonly type: "boolean";
                        };
                        readonly hideLogo: {
                            readonly type: "boolean";
                        };
                        readonly hideRequestPayloadSample: {
                            readonly type: "boolean";
                        };
                        readonly hideRightPanel: {
                            readonly type: "boolean";
                        };
                        readonly hideSchemaPattern: {
                            readonly type: "boolean";
                        };
                        readonly hideSingleRequestSampleTab: {
                            readonly type: "boolean";
                        };
                        readonly hideSecuritySection: {
                            readonly type: "boolean";
                        };
                        readonly hideTryItPanel: {
                            readonly type: "boolean";
                        };
                        readonly hideFab: {
                            readonly type: "boolean";
                        };
                        readonly hideOneOfDescription: {
                            readonly type: "boolean";
                        };
                        readonly htmlTemplate: {
                            readonly type: "string";
                        };
                        readonly jsonSampleExpandLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                                readonly minimum: 1;
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly labels: {
                            readonly type: "object";
                            readonly properties: {
                                readonly enum: {
                                    readonly type: "string";
                                };
                                readonly enumSingleValue: {
                                    readonly type: "string";
                                };
                                readonly enumArray: {
                                    readonly type: "string";
                                };
                                readonly default: {
                                    readonly type: "string";
                                };
                                readonly deprecated: {
                                    readonly type: "string";
                                };
                                readonly example: {
                                    readonly type: "string";
                                };
                                readonly examples: {
                                    readonly type: "string";
                                };
                                readonly nullable: {
                                    readonly type: "string";
                                };
                                readonly recursive: {
                                    readonly type: "string";
                                };
                                readonly arrayOf: {
                                    readonly type: "string";
                                };
                                readonly webhook: {
                                    readonly type: "string";
                                };
                                readonly authorizations: {
                                    readonly type: "string";
                                };
                                readonly tryItAuthBasicUsername: {
                                    readonly type: "string";
                                };
                                readonly tryItAuthBasicPassword: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly menuToggle: {
                            readonly type: "boolean";
                        };
                        readonly nativeScrollbars: {
                            readonly type: "boolean";
                        };
                        readonly noAutoAuth: {
                            readonly type: "boolean";
                        };
                        readonly onDeepLinkClick: {
                            readonly type: "object";
                        };
                        readonly pagination: {
                            readonly enum: readonly ["none", "section", "item"];
                        };
                        readonly pathInMiddlePanel: {
                            readonly type: "boolean";
                        };
                        readonly payloadSampleIdx: {
                            readonly type: "number";
                            readonly minimum: 0;
                        };
                        readonly requestInterceptor: {
                            readonly type: "object";
                        };
                        readonly requiredPropsFirst: {
                            readonly type: "boolean";
                        };
                        readonly routingStrategy: {
                            readonly type: "string";
                        };
                        readonly samplesTabsMaxCount: {
                            readonly type: "number";
                        };
                        readonly schemaExpansionLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                                readonly minimum: 0;
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly minCharacterLengthToInitSearch: {
                            readonly type: "number";
                            readonly minimum: 1;
                        };
                        readonly maxResponseHeadersToShowInTryIt: {
                            readonly type: "number";
                            readonly minimum: 0;
                        };
                        readonly scrollYOffset: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly searchAutoExpand: {
                            readonly type: "boolean";
                        };
                        readonly searchFieldLevelBoost: {
                            readonly type: "number";
                            readonly minimum: 0;
                        };
                        readonly searchMaxDepth: {
                            readonly type: "number";
                            readonly minimum: 1;
                        };
                        readonly searchMode: {
                            readonly type: "string";
                            readonly enum: readonly ["default", "path-only"];
                        };
                        readonly searchOperationTitleBoost: {
                            readonly type: "number";
                        };
                        readonly searchTagTitleBoost: {
                            readonly type: "number";
                        };
                        readonly sendXUserAgentInTryIt: {
                            readonly type: "boolean";
                        };
                        readonly showChangeLayoutButton: {
                            readonly type: "boolean";
                        };
                        readonly showConsole: {
                            readonly type: "boolean";
                        };
                        readonly showNextButton: {
                            readonly type: "boolean";
                        };
                        readonly showRightPanelToggle: {
                            readonly type: "boolean";
                        };
                        readonly showSecuritySchemeType: {
                            readonly type: "boolean";
                        };
                        readonly showWebhookVerb: {
                            readonly type: "boolean";
                        };
                        readonly showObjectSchemaExamples: {
                            readonly type: "boolean";
                        };
                        readonly disableTryItRequestUrlEncoding: {
                            readonly type: "boolean";
                        };
                        readonly sidebarLinks: {
                            readonly type: "object";
                            readonly properties: {
                                readonly beforeInfo: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly link: {
                                                readonly type: "string";
                                            };
                                            readonly target: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["label", "link"];
                                    };
                                };
                                readonly end: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly link: {
                                                readonly type: "string";
                                            };
                                            readonly target: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["label", "link"];
                                    };
                                };
                            };
                        };
                        readonly sideNavStyle: {
                            readonly type: "string";
                            readonly enum: readonly ["summary-only", "path-first", "id-only", "path-only"];
                        };
                        readonly simpleOneOfTypeLabel: {
                            readonly type: "boolean";
                        };
                        readonly sortEnumValuesAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly sortOperationsAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly sortPropsAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly sortTagsAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly suppressWarnings: {
                            readonly type: "boolean";
                        };
                        readonly unstable_externalDescription: {
                            readonly type: "boolean";
                        };
                        readonly unstable_ignoreMimeParameters: {
                            readonly type: "boolean";
                        };
                        readonly untrustedDefinition: {
                            readonly type: "boolean";
                        };
                        readonly showAccessMode: {
                            readonly type: "boolean";
                        };
                        readonly preserveOriginalExtensionsName: {
                            readonly type: "boolean";
                        };
                        readonly markdownHeadingsAnchorLevel: {
                            readonly type: "number";
                        };
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly hideLoading: {
                            readonly type: "boolean";
                        };
                        readonly disableRouter: {
                            readonly type: "boolean";
                        };
                        readonly hideSidebar: {
                            readonly type: "boolean";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly like: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dislike: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly satisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly neutral: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dissatisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly optionalEmail: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly placeholder: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly hideReplay: {
                            readonly type: "boolean";
                        };
                        readonly oAuth2RedirectURI: {
                            readonly type: "string";
                            readonly nullable: true;
                        };
                        readonly corsProxyUrl: {
                            readonly type: "string";
                        };
                        readonly sortRequiredPropsFirst: {
                            readonly type: "boolean";
                        };
                        readonly sanitize: {
                            readonly type: "boolean";
                        };
                        readonly hideDownloadButtons: {
                            readonly type: "boolean";
                        };
                        readonly downloadUrls: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly url: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["url"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly onlyRequiredInSamples: {
                            readonly type: "boolean";
                        };
                        readonly generatedSamplesMaxDepth: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly showExtensions: {
                            readonly oneOf: readonly [{
                                readonly type: "boolean";
                            }, {
                                readonly type: "string";
                            }, {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }];
                        };
                        readonly hideSchemaTitles: {
                            readonly type: "boolean";
                        };
                        readonly jsonSamplesExpandLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly schemasExpansionLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly mockServer: {
                            readonly type: "object";
                            readonly properties: {
                                readonly url: {
                                    readonly type: "string";
                                };
                                readonly position: {
                                    readonly type: "string";
                                    readonly enum: readonly ["first", "last", "replace", "off"];
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly maxDisplayedEnumValues: {
                            readonly type: "number";
                        };
                        readonly schemaDefinitionsTagName: {
                            readonly type: "string";
                        };
                        readonly layout: {
                            readonly type: "string";
                            readonly enum: readonly ["stacked", "three-panel"];
                        };
                        readonly hideInfoMetadata: {
                            readonly type: "boolean";
                        };
                        readonly events: {
                            readonly type: "object";
                        };
                        readonly skipBundle: {
                            readonly type: "boolean";
                        };
                        readonly routingBasePath: {
                            readonly type: "string";
                        };
                        readonly codeSamples: {
                            readonly type: "object";
                            readonly properties: {
                                readonly languages: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly lang: {
                                                readonly type: "string";
                                                readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly indent: {
                                                        readonly type: "string";
                                                    };
                                                    readonly withImports: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly withComments: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly binary: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly credentials: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["omit", "same-origin", "include"];
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["lang"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly skipOptionalParameters: {
                                    readonly type: "boolean";
                                };
                                readonly withOAuth2Call: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly required: readonly ["languages"];
                            readonly additionalProperties: false;
                        };
                        readonly ignoreNamedSchemas: {
                            readonly oneOf: readonly [{
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly hidePropertiesPrefix: {
                            readonly type: "boolean";
                        };
                        readonly excludeFromSearch: {
                            readonly type: "boolean";
                        };
                    };
                    readonly type: "object";
                    readonly additionalProperties: false;
                };
                readonly graphql: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hidePaginationButtons: {
                            readonly type: "boolean";
                        };
                        readonly menu: {
                            readonly type: "object";
                            readonly properties: {
                                readonly requireExactGroups: {
                                    readonly type: "boolean";
                                };
                                readonly groups: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly queries: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly mutations: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly subscriptions: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly types: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly directives: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["name"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly otherItemsGroupName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly sidebar: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                        };
                        readonly apiLogo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly imageUrl: {
                                    readonly type: "string";
                                };
                                readonly href: {
                                    readonly type: "string";
                                };
                                readonly altText: {
                                    readonly type: "string";
                                };
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly jsonSamplesDepth: {
                            readonly type: "number";
                        };
                        readonly samplesMaxInlineArgs: {
                            readonly type: "number";
                        };
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly fieldExpandLevel: {
                            readonly type: "number";
                        };
                        readonly baseUrlPath: {
                            readonly type: "string";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly like: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dislike: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly satisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly neutral: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dissatisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly optionalEmail: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly placeholder: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
            };
            readonly additionalProperties: false;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly rules: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "string";
                }, {
                    readonly type: "object";
                }];
            };
        };
        readonly decorators: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly preprocessors: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
    };
    readonly required: readonly ["root"];
};
export declare const seoConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly title: {
            readonly type: "string";
        };
        readonly description: {
            readonly type: "string";
        };
        readonly siteUrl: {
            readonly type: "string";
        };
        readonly image: {
            readonly type: "string";
        };
        readonly keywords: {
            readonly oneOf: readonly [{
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            }, {
                readonly type: "string";
            }];
        };
        readonly lang: {
            readonly type: "string";
        };
        readonly jsonLd: {
            readonly type: "object";
        };
        readonly meta: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly name: {
                        readonly type: "string";
                    };
                    readonly content: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["name", "content"];
                readonly additionalProperties: false;
            };
        };
    };
    readonly additionalProperties: false;
};
export declare const apiFunctionsConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly folders: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly additionalProperties: false;
};
export declare const rbacScopeItemsSchema: {
    readonly type: "object";
    readonly additionalProperties: {
        readonly type: "string";
    };
};
export declare const rbacConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly teamNamePatterns: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly teamFolders: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly teamFoldersBaseRoles: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly cms: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly reunite: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly features: {
            readonly type: "object";
            readonly properties: {
                readonly aiSearch: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly content: {
            readonly type: "object";
            readonly properties: {
                readonly '**': {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
        };
    };
    readonly additionalProperties: {
        readonly type: "object";
        readonly additionalProperties: {
            readonly type: "string";
        };
    };
};
export declare const graviteeAdapterAuthStaticSchema: {
    readonly type: "object";
    readonly properties: {
        readonly static: {
            readonly type: "string";
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["static"];
};
export declare const graviteeAdapterAuthIdpSchema: {
    readonly type: "object";
    readonly properties: {
        readonly idp: {
            readonly type: "string";
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["idp"];
};
export declare const graviteeAdapterConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: "GRAVITEE";
        };
        readonly apiBaseUrl: {
            readonly type: "string";
        };
        readonly env: {
            readonly type: "string";
        };
        readonly allowApiProductsOutsideCatalog: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly stage: {
            readonly type: "string";
            readonly default: "non-production";
        };
        readonly auth: {
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly properties: {
                    readonly static: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["static"];
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly idp: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["idp"];
            }];
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "apiBaseUrl"];
};
export declare const apigeeAdapterAuthOauth2Schema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
        };
        readonly tokenEndpoint: {
            readonly type: "string";
        };
        readonly clientId: {
            readonly type: "string";
        };
        readonly clientSecret: {
            readonly type: "string";
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
};
export declare const apigeeAdapterAuthServiceAccountSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
        };
        readonly serviceAccountEmail: {
            readonly type: "string";
        };
        readonly serviceAccountPrivateKey: {
            readonly type: "string";
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
};
export declare const apigeeXAdapterConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: "APIGEE_X";
        };
        readonly apiUrl: {
            readonly type: "string";
        };
        readonly stage: {
            readonly type: "string";
            readonly default: "non-production";
        };
        readonly organizationName: {
            readonly type: "string";
        };
        readonly ignoreApiProducts: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly allowApiProductsOutsideCatalog: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly auth: {
            readonly type: "object";
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                    };
                    readonly tokenEndpoint: {
                        readonly type: "string";
                    };
                    readonly clientId: {
                        readonly type: "string";
                    };
                    readonly clientSecret: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                    };
                    readonly serviceAccountEmail: {
                        readonly type: "string";
                    };
                    readonly serviceAccountPrivateKey: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
            }];
            readonly discriminator: {
                readonly propertyName: "type";
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "organizationName", "auth"];
};
export declare const apigeeEdgeAdapterConfigSchema: {
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: "APIGEE_EDGE";
        };
        readonly apiUrl: {
            readonly type: "string";
        };
        readonly stage: {
            readonly type: "string";
            readonly default: "non-production";
        };
        readonly organizationName: {
            readonly type: "string";
        };
        readonly ignoreApiProducts: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly allowApiProductsOutsideCatalog: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly auth: {
            readonly type: "object";
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                    };
                    readonly tokenEndpoint: {
                        readonly type: "string";
                    };
                    readonly clientId: {
                        readonly type: "string";
                    };
                    readonly clientSecret: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                    };
                    readonly serviceAccountEmail: {
                        readonly type: "string";
                    };
                    readonly serviceAccountPrivateKey: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
            }];
            readonly discriminator: {
                readonly propertyName: "type";
            };
        };
    };
    readonly type: "object";
    readonly additionalProperties: false;
    readonly required: readonly ["type", "organizationName", "auth"];
};
export declare const devOnboardingAdapterConfigSchema: {
    readonly type: "object";
    readonly oneOf: readonly [{
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: "APIGEE_X";
            };
            readonly apiUrl: {
                readonly type: "string";
            };
            readonly stage: {
                readonly type: "string";
                readonly default: "non-production";
            };
            readonly organizationName: {
                readonly type: "string";
            };
            readonly ignoreApiProducts: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly allowApiProductsOutsideCatalog: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly auth: {
                readonly type: "object";
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                        };
                        readonly tokenEndpoint: {
                            readonly type: "string";
                        };
                        readonly clientId: {
                            readonly type: "string";
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                        };
                        readonly serviceAccountEmail: {
                            readonly type: "string";
                        };
                        readonly serviceAccountPrivateKey: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly additionalProperties: false;
        readonly required: readonly ["type", "organizationName", "auth"];
    }, {
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: "APIGEE_EDGE";
            };
            readonly apiUrl: {
                readonly type: "string";
            };
            readonly stage: {
                readonly type: "string";
                readonly default: "non-production";
            };
            readonly organizationName: {
                readonly type: "string";
            };
            readonly ignoreApiProducts: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly allowApiProductsOutsideCatalog: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly auth: {
                readonly type: "object";
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                        };
                        readonly tokenEndpoint: {
                            readonly type: "string";
                        };
                        readonly clientId: {
                            readonly type: "string";
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                        };
                        readonly serviceAccountEmail: {
                            readonly type: "string";
                        };
                        readonly serviceAccountPrivateKey: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly type: "object";
        readonly additionalProperties: false;
        readonly required: readonly ["type", "organizationName", "auth"];
    }, {
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: "GRAVITEE";
            };
            readonly apiBaseUrl: {
                readonly type: "string";
            };
            readonly env: {
                readonly type: "string";
            };
            readonly allowApiProductsOutsideCatalog: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly stage: {
                readonly type: "string";
                readonly default: "non-production";
            };
            readonly auth: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly static: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["static"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly idp: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["idp"];
                }];
            };
        };
        readonly additionalProperties: false;
        readonly required: readonly ["type", "apiBaseUrl"];
    }];
    readonly discriminator: {
        readonly propertyName: "type";
    };
};
export declare const l10nConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly defaultLocale: {
            readonly type: "string";
        };
        readonly locales: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly code: {
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["code"];
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["defaultLocale"];
};
export declare const redoclyConfigSchema: {
    readonly type: "object";
    readonly properties: {
        /**
         * @deprecated Should use `plugins` instead
         */
        readonly imports: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly licenseKey: {
            readonly type: "string";
        };
        readonly redirects: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly to: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "number";
                        readonly default: 301;
                    };
                };
                readonly additionalProperties: false;
            };
            readonly default: {};
        };
        readonly seo: {
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly type: "string";
                };
                readonly description: {
                    readonly type: "string";
                };
                readonly siteUrl: {
                    readonly type: "string";
                };
                readonly image: {
                    readonly type: "string";
                };
                readonly keywords: {
                    readonly oneOf: readonly [{
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly lang: {
                    readonly type: "string";
                };
                readonly jsonLd: {
                    readonly type: "object";
                };
                readonly meta: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly content: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["name", "content"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly rbac: {
            readonly type: "object";
            readonly properties: {
                readonly teamNamePatterns: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFolders: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFoldersBaseRoles: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly cms: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly reunite: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly features: {
                    readonly type: "object";
                    readonly properties: {
                        readonly aiSearch: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly content: {
                    readonly type: "object";
                    readonly properties: {
                        readonly '**': {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "string";
                        };
                    };
                };
            };
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
        };
        readonly apiFunctions: {
            readonly type: "object";
            readonly properties: {
                readonly folders: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly requiresLogin: {
            readonly type: "boolean";
        };
        readonly responseHeaders: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly value: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["name", "value"];
                };
            };
        };
        readonly mockServer: {
            readonly type: "object";
            readonly properties: {
                readonly off: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly position: {
                    readonly type: "string";
                    readonly enum: readonly ["first", "last", "replace", "off"];
                    readonly default: "first";
                };
                readonly strictExamples: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly errorIfForcedExampleNotFound: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly description: {
                    readonly type: "string";
                };
            };
        };
        readonly apis: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly root: {
                        readonly type: "string";
                    };
                    readonly output: {
                        readonly type: "string";
                        readonly pattern: "(.ya?ml|.json)$";
                    };
                    readonly rbac: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly openapi: {
                        readonly properties: {
                            readonly theme: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly breakpoints: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly small: {
                                                readonly type: "string";
                                            };
                                            readonly medium: {
                                                readonly type: "string";
                                            };
                                            readonly large: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly codeBlock: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly borderRadius: {
                                                readonly type: "string";
                                            };
                                            readonly tokens: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly colors: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly accent: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly border: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly error: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly http: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly basic: {
                                                        readonly type: "string";
                                                    };
                                                    readonly delete: {
                                                        readonly type: "string";
                                                    };
                                                    readonly get: {
                                                        readonly type: "string";
                                                    };
                                                    readonly head: {
                                                        readonly type: "string";
                                                    };
                                                    readonly link: {
                                                        readonly type: "string";
                                                    };
                                                    readonly options: {
                                                        readonly type: "string";
                                                    };
                                                    readonly patch: {
                                                        readonly type: "string";
                                                    };
                                                    readonly post: {
                                                        readonly type: "string";
                                                    };
                                                    readonly put: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly primary: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly responses: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly error: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly borderColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly tabTextColor: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly info: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly borderColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly tabTextColor: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly redirect: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly borderColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly tabTextColor: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly success: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly borderColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly tabTextColor: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly secondary: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly success: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly text: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly primary: {
                                                        readonly type: "string";
                                                    };
                                                    readonly secondary: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly tonalOffset: {
                                                readonly type: "number";
                                            };
                                            readonly warning: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly components: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly buttons: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                    readonly hoverStyle: {
                                                        readonly type: "string";
                                                    };
                                                    readonly boxShadow: {
                                                        readonly type: "string";
                                                    };
                                                    readonly hoverBoxShadow: {
                                                        readonly type: "string";
                                                    };
                                                    readonly sizes: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly small: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly padding: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly minWidth: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly medium: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly padding: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly minWidth: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly large: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly padding: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly minWidth: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly xlarge: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly padding: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly minWidth: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly httpBadges: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly sizes: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly medium: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontFamily: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly fontWeight: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly lineHeight: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly small: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontFamily: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly fontWeight: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly lineHeight: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly layoutControls: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly top: {
                                                        readonly type: "string";
                                                    };
                                                    readonly width: {
                                                        readonly type: "string";
                                                    };
                                                    readonly height: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly panels: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly tryItButton: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fullWidth: {
                                                        readonly type: "boolean";
                                                    };
                                                };
                                            };
                                            readonly tryItSendButton: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fullWidth: {
                                                        readonly type: "boolean";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly layout: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly showDarkRightPanel: {
                                                readonly type: "boolean";
                                            };
                                            readonly stacked: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly maxWidth: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly small: {
                                                                readonly type: "string";
                                                            };
                                                            readonly medium: {
                                                                readonly type: "string";
                                                            };
                                                            readonly large: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly 'three-panel': {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly maxWidth: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly small: {
                                                                readonly type: "string";
                                                            };
                                                            readonly medium: {
                                                                readonly type: "string";
                                                            };
                                                            readonly large: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly middlePanelMaxWidth: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly small: {
                                                                readonly type: "string";
                                                            };
                                                            readonly medium: {
                                                                readonly type: "string";
                                                            };
                                                            readonly large: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly logo: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly gutter: {
                                                readonly type: "string";
                                            };
                                            readonly maxHeight: {
                                                readonly type: "string";
                                            };
                                            readonly maxWidth: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly fab: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly color: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly overrides: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly DownloadButton: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly custom: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly NextSectionButton: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly custom: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly rightPanel: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly panelBackgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly panelControlsBackgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly showAtBreakpoint: {
                                                readonly type: "string";
                                            };
                                            readonly textColor: {
                                                readonly type: "string";
                                            };
                                            readonly width: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly schema: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly breakFieldNames: {
                                                readonly type: "boolean";
                                            };
                                            readonly caretColor: {
                                                readonly type: "string";
                                            };
                                            readonly caretSize: {
                                                readonly type: "string";
                                            };
                                            readonly constraints: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly border: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly defaultDetailsWidth: {
                                                readonly type: "string";
                                            };
                                            readonly examples: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly border: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly labelsTextSize: {
                                                readonly type: "string";
                                            };
                                            readonly linesColor: {
                                                readonly type: "string";
                                            };
                                            readonly nestedBackground: {
                                                readonly type: "string";
                                            };
                                            readonly nestingSpacing: {
                                                readonly type: "string";
                                            };
                                            readonly requireLabelColor: {
                                                readonly type: "string";
                                            };
                                            readonly typeNameColor: {
                                                readonly type: "string";
                                            };
                                            readonly typeTitleColor: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly shape: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly borderRadius: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly sidebar: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly activeBgColor: {
                                                readonly type: "string";
                                            };
                                            readonly activeTextColor: {
                                                readonly type: "string";
                                            };
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly borderRadius: {
                                                readonly type: "string";
                                            };
                                            readonly breakPath: {
                                                readonly type: "boolean";
                                            };
                                            readonly caretColor: {
                                                readonly type: "string";
                                            };
                                            readonly caretSize: {
                                                readonly type: "string";
                                            };
                                            readonly groupItems: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly subItemsColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly textTransform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly level1items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly subItemsColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly textTransform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly rightLineColor: {
                                                readonly type: "string";
                                            };
                                            readonly separatorLabelColor: {
                                                readonly type: "string";
                                            };
                                            readonly showAtBreakpoint: {
                                                readonly type: "string";
                                            };
                                            readonly spacing: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly unit: {
                                                        readonly type: "number";
                                                    };
                                                    readonly paddingHorizontal: {
                                                        readonly type: "string";
                                                    };
                                                    readonly paddingVertical: {
                                                        readonly type: "string";
                                                    };
                                                    readonly offsetTop: {
                                                        readonly type: "string";
                                                    };
                                                    readonly offsetLeft: {
                                                        readonly type: "string";
                                                    };
                                                    readonly offsetNesting: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly textColor: {
                                                readonly type: "string";
                                            };
                                            readonly width: {
                                                readonly type: "string";
                                            };
                                            readonly fontFamily: {
                                                readonly type: "string";
                                            };
                                            readonly fontSize: {
                                                readonly type: "string";
                                            };
                                            readonly fontWeight: {
                                                readonly type: "string";
                                            };
                                            readonly lineHeight: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly spacing: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly sectionHorizontal: {
                                                readonly type: "number";
                                            };
                                            readonly sectionVertical: {
                                                readonly type: "number";
                                            };
                                            readonly unit: {
                                                readonly type: "number";
                                            };
                                        };
                                    };
                                    readonly typography: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly fontWeightBold: {
                                                readonly type: "string";
                                            };
                                            readonly fontWeightLight: {
                                                readonly type: "string";
                                            };
                                            readonly fontWeightRegular: {
                                                readonly type: "string";
                                            };
                                            readonly heading1: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly transform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly heading2: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly transform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly heading3: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly transform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly headings: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly lineHeight: {
                                                readonly type: "string";
                                            };
                                            readonly links: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly hover: {
                                                        readonly type: "string";
                                                    };
                                                    readonly textDecoration: {
                                                        readonly type: "string";
                                                    };
                                                    readonly hoverTextDecoration: {
                                                        readonly type: "string";
                                                    };
                                                    readonly visited: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly optimizeSpeed: {
                                                readonly type: "boolean";
                                            };
                                            readonly rightPanelHeading: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly transform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly smoothing: {
                                                readonly type: "string";
                                                readonly enum: readonly ["auto", "none", "antialiased", "subpixel-antialiased", "grayscale"];
                                            };
                                            readonly fontFamily: {
                                                readonly type: "string";
                                            };
                                            readonly fontSize: {
                                                readonly type: "string";
                                            };
                                            readonly fontWeight: {
                                                readonly type: "string";
                                            };
                                            readonly code: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly wordBreak: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["break-all", "break-word", "keep-all", "normal", "revert", "unset", "inherit", "initial"];
                                                    };
                                                    readonly wrap: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly fieldName: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly links: {
                                        readonly properties: {
                                            readonly color: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly codeSample: {
                                        readonly properties: {
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly ctrlFHijack: {
                                readonly type: "boolean";
                            };
                            readonly defaultSampleLanguage: {
                                readonly type: "string";
                            };
                            readonly disableDeepLinks: {
                                readonly type: "boolean";
                            };
                            readonly disableSearch: {
                                readonly type: "boolean";
                            };
                            readonly disableSidebar: {
                                readonly type: "boolean";
                            };
                            readonly downloadDefinitionUrl: {
                                readonly type: "string";
                            };
                            readonly expandDefaultServerVariables: {
                                readonly type: "boolean";
                            };
                            readonly enumSkipQuotes: {
                                readonly type: "boolean";
                            };
                            readonly expandDefaultRequest: {
                                readonly type: "boolean";
                            };
                            readonly expandDefaultResponse: {
                                readonly type: "boolean";
                            };
                            readonly expandResponses: {
                                readonly type: "string";
                            };
                            readonly expandSingleSchemaField: {
                                readonly type: "boolean";
                            };
                            readonly generateCodeSamples: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly skipOptionalParameters: {
                                        readonly type: "boolean";
                                    };
                                    readonly languages: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly lang: {
                                                    readonly enum: readonly ["curl", "C#", "Go", "Java", "Java8+Apache", "JavaScript", "Node.js", "PHP", "Python", "R", "Ruby"];
                                                };
                                            };
                                            readonly required: readonly ["lang"];
                                        };
                                    };
                                };
                                readonly required: readonly ["languages"];
                            };
                            readonly generatedPayloadSamplesMaxDepth: {
                                readonly type: "number";
                            };
                            readonly hideDownloadButton: {
                                readonly type: "boolean";
                            };
                            readonly hideHostname: {
                                readonly type: "boolean";
                            };
                            readonly hideInfoSection: {
                                readonly type: "boolean";
                            };
                            readonly hideLogo: {
                                readonly type: "boolean";
                            };
                            readonly hideRequestPayloadSample: {
                                readonly type: "boolean";
                            };
                            readonly hideRightPanel: {
                                readonly type: "boolean";
                            };
                            readonly hideSchemaPattern: {
                                readonly type: "boolean";
                            };
                            readonly hideSingleRequestSampleTab: {
                                readonly type: "boolean";
                            };
                            readonly hideSecuritySection: {
                                readonly type: "boolean";
                            };
                            readonly hideTryItPanel: {
                                readonly type: "boolean";
                            };
                            readonly hideFab: {
                                readonly type: "boolean";
                            };
                            readonly hideOneOfDescription: {
                                readonly type: "boolean";
                            };
                            readonly htmlTemplate: {
                                readonly type: "string";
                            };
                            readonly jsonSampleExpandLevel: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                    readonly minimum: 1;
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly labels: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly enum: {
                                        readonly type: "string";
                                    };
                                    readonly enumSingleValue: {
                                        readonly type: "string";
                                    };
                                    readonly enumArray: {
                                        readonly type: "string";
                                    };
                                    readonly default: {
                                        readonly type: "string";
                                    };
                                    readonly deprecated: {
                                        readonly type: "string";
                                    };
                                    readonly example: {
                                        readonly type: "string";
                                    };
                                    readonly examples: {
                                        readonly type: "string";
                                    };
                                    readonly nullable: {
                                        readonly type: "string";
                                    };
                                    readonly recursive: {
                                        readonly type: "string";
                                    };
                                    readonly arrayOf: {
                                        readonly type: "string";
                                    };
                                    readonly webhook: {
                                        readonly type: "string";
                                    };
                                    readonly authorizations: {
                                        readonly type: "string";
                                    };
                                    readonly tryItAuthBasicUsername: {
                                        readonly type: "string";
                                    };
                                    readonly tryItAuthBasicPassword: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly menuToggle: {
                                readonly type: "boolean";
                            };
                            readonly nativeScrollbars: {
                                readonly type: "boolean";
                            };
                            readonly noAutoAuth: {
                                readonly type: "boolean";
                            };
                            readonly onDeepLinkClick: {
                                readonly type: "object";
                            };
                            readonly pagination: {
                                readonly enum: readonly ["none", "section", "item"];
                            };
                            readonly pathInMiddlePanel: {
                                readonly type: "boolean";
                            };
                            readonly payloadSampleIdx: {
                                readonly type: "number";
                                readonly minimum: 0;
                            };
                            readonly requestInterceptor: {
                                readonly type: "object";
                            };
                            readonly requiredPropsFirst: {
                                readonly type: "boolean";
                            };
                            readonly routingStrategy: {
                                readonly type: "string";
                            };
                            readonly samplesTabsMaxCount: {
                                readonly type: "number";
                            };
                            readonly schemaExpansionLevel: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                    readonly minimum: 0;
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly minCharacterLengthToInitSearch: {
                                readonly type: "number";
                                readonly minimum: 1;
                            };
                            readonly maxResponseHeadersToShowInTryIt: {
                                readonly type: "number";
                                readonly minimum: 0;
                            };
                            readonly scrollYOffset: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly searchAutoExpand: {
                                readonly type: "boolean";
                            };
                            readonly searchFieldLevelBoost: {
                                readonly type: "number";
                                readonly minimum: 0;
                            };
                            readonly searchMaxDepth: {
                                readonly type: "number";
                                readonly minimum: 1;
                            };
                            readonly searchMode: {
                                readonly type: "string";
                                readonly enum: readonly ["default", "path-only"];
                            };
                            readonly searchOperationTitleBoost: {
                                readonly type: "number";
                            };
                            readonly searchTagTitleBoost: {
                                readonly type: "number";
                            };
                            readonly sendXUserAgentInTryIt: {
                                readonly type: "boolean";
                            };
                            readonly showChangeLayoutButton: {
                                readonly type: "boolean";
                            };
                            readonly showConsole: {
                                readonly type: "boolean";
                            };
                            readonly showNextButton: {
                                readonly type: "boolean";
                            };
                            readonly showRightPanelToggle: {
                                readonly type: "boolean";
                            };
                            readonly showSecuritySchemeType: {
                                readonly type: "boolean";
                            };
                            readonly showWebhookVerb: {
                                readonly type: "boolean";
                            };
                            readonly showObjectSchemaExamples: {
                                readonly type: "boolean";
                            };
                            readonly disableTryItRequestUrlEncoding: {
                                readonly type: "boolean";
                            };
                            readonly sidebarLinks: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly beforeInfo: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly link: {
                                                    readonly type: "string";
                                                };
                                                readonly target: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["label", "link"];
                                        };
                                    };
                                    readonly end: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly link: {
                                                    readonly type: "string";
                                                };
                                                readonly target: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["label", "link"];
                                        };
                                    };
                                };
                            };
                            readonly sideNavStyle: {
                                readonly type: "string";
                                readonly enum: readonly ["summary-only", "path-first", "id-only", "path-only"];
                            };
                            readonly simpleOneOfTypeLabel: {
                                readonly type: "boolean";
                            };
                            readonly sortEnumValuesAlphabetically: {
                                readonly type: "boolean";
                            };
                            readonly sortOperationsAlphabetically: {
                                readonly type: "boolean";
                            };
                            readonly sortPropsAlphabetically: {
                                readonly type: "boolean";
                            };
                            readonly sortTagsAlphabetically: {
                                readonly type: "boolean";
                            };
                            readonly suppressWarnings: {
                                readonly type: "boolean";
                            };
                            readonly unstable_externalDescription: {
                                readonly type: "boolean";
                            };
                            readonly unstable_ignoreMimeParameters: {
                                readonly type: "boolean";
                            };
                            readonly untrustedDefinition: {
                                readonly type: "boolean";
                            };
                            readonly showAccessMode: {
                                readonly type: "boolean";
                            };
                            readonly preserveOriginalExtensionsName: {
                                readonly type: "boolean";
                            };
                            readonly markdownHeadingsAnchorLevel: {
                                readonly type: "number";
                            };
                            readonly licenseKey: {
                                readonly type: "string";
                            };
                            readonly hideLoading: {
                                readonly type: "boolean";
                            };
                            readonly disableRouter: {
                                readonly type: "boolean";
                            };
                            readonly hideSidebar: {
                                readonly type: "boolean";
                            };
                            readonly feedback: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                        readonly default: "sentiment";
                                    };
                                    readonly settings: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly submitText: {
                                                readonly type: "string";
                                            };
                                            readonly buttonText: {
                                                readonly type: "string";
                                            };
                                            readonly component: {
                                                readonly type: "string";
                                                readonly enum: readonly ["radio", "checkbox"];
                                                readonly default: "checkbox";
                                            };
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                                readonly minItems: 1;
                                            };
                                            readonly leftScaleLabel: {
                                                readonly type: "string";
                                            };
                                            readonly rightScaleLabel: {
                                                readonly type: "string";
                                            };
                                            readonly reasons: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly like: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly dislike: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly satisfied: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly neutral: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly dissatisfied: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly comment: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly likeLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dislikeLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly satisfiedLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly neutralLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dissatisfiedLabel: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly optionalEmail: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly placeholder: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                            readonly hideReplay: {
                                readonly type: "boolean";
                            };
                            readonly oAuth2RedirectURI: {
                                readonly type: "string";
                                readonly nullable: true;
                            };
                            readonly corsProxyUrl: {
                                readonly type: "string";
                            };
                            readonly sortRequiredPropsFirst: {
                                readonly type: "boolean";
                            };
                            readonly sanitize: {
                                readonly type: "boolean";
                            };
                            readonly hideDownloadButtons: {
                                readonly type: "boolean";
                            };
                            readonly downloadUrls: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly title: {
                                            readonly type: "string";
                                        };
                                        readonly url: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["url"];
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly onlyRequiredInSamples: {
                                readonly type: "boolean";
                            };
                            readonly generatedSamplesMaxDepth: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly showExtensions: {
                                readonly oneOf: readonly [{
                                    readonly type: "boolean";
                                }, {
                                    readonly type: "string";
                                }, {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                }];
                            };
                            readonly hideSchemaTitles: {
                                readonly type: "boolean";
                            };
                            readonly jsonSamplesExpandLevel: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly schemasExpansionLevel: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly mockServer: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly url: {
                                        readonly type: "string";
                                    };
                                    readonly position: {
                                        readonly type: "string";
                                        readonly enum: readonly ["first", "last", "replace", "off"];
                                    };
                                    readonly description: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly maxDisplayedEnumValues: {
                                readonly type: "number";
                            };
                            readonly schemaDefinitionsTagName: {
                                readonly type: "string";
                            };
                            readonly layout: {
                                readonly type: "string";
                                readonly enum: readonly ["stacked", "three-panel"];
                            };
                            readonly hideInfoMetadata: {
                                readonly type: "boolean";
                            };
                            readonly events: {
                                readonly type: "object";
                            };
                            readonly skipBundle: {
                                readonly type: "boolean";
                            };
                            readonly routingBasePath: {
                                readonly type: "string";
                            };
                            readonly codeSamples: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly languages: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly lang: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly options: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly indent: {
                                                            readonly type: "string";
                                                        };
                                                        readonly withImports: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly withComments: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly binary: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly credentials: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["omit", "same-origin", "include"];
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly required: readonly ["lang"];
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly skipOptionalParameters: {
                                        readonly type: "boolean";
                                    };
                                    readonly withOAuth2Call: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly required: readonly ["languages"];
                                readonly additionalProperties: false;
                            };
                            readonly ignoreNamedSchemas: {
                                readonly oneOf: readonly [{
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly hidePropertiesPrefix: {
                                readonly type: "boolean";
                            };
                            readonly excludeFromSearch: {
                                readonly type: "boolean";
                            };
                        };
                        readonly type: "object";
                        readonly additionalProperties: false;
                    };
                    readonly graphql: {
                        readonly type: "object";
                        readonly properties: {
                            readonly hidePaginationButtons: {
                                readonly type: "boolean";
                            };
                            readonly menu: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly requireExactGroups: {
                                        readonly type: "boolean";
                                    };
                                    readonly groups: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly name: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly queries: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly mutations: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly subscriptions: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly types: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly directives: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly required: readonly ["name"];
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly otherItemsGroupName: {
                                        readonly type: "string";
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                            readonly sidebar: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                    };
                                };
                            };
                            readonly apiLogo: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly imageUrl: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly altText: {
                                        readonly type: "string";
                                    };
                                    readonly backgroundColor: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly jsonSamplesDepth: {
                                readonly type: "number";
                            };
                            readonly samplesMaxInlineArgs: {
                                readonly type: "number";
                            };
                            readonly licenseKey: {
                                readonly type: "string";
                            };
                            readonly fieldExpandLevel: {
                                readonly type: "number";
                            };
                            readonly baseUrlPath: {
                                readonly type: "string";
                            };
                            readonly feedback: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                        readonly default: "sentiment";
                                    };
                                    readonly settings: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly submitText: {
                                                readonly type: "string";
                                            };
                                            readonly buttonText: {
                                                readonly type: "string";
                                            };
                                            readonly component: {
                                                readonly type: "string";
                                                readonly enum: readonly ["radio", "checkbox"];
                                                readonly default: "checkbox";
                                            };
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                                readonly minItems: 1;
                                            };
                                            readonly leftScaleLabel: {
                                                readonly type: "string";
                                            };
                                            readonly rightScaleLabel: {
                                                readonly type: "string";
                                            };
                                            readonly reasons: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly like: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly dislike: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly satisfied: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly neutral: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly dissatisfied: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly comment: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly likeLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dislikeLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly satisfiedLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly neutralLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dissatisfiedLabel: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly optionalEmail: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly placeholder: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                    /**
                     * @deprecated left for backwards compatibility
                     */
                    readonly theme: {
                        readonly type: "object";
                        readonly properties: {
                            readonly openapi: {
                                readonly properties: {
                                    readonly theme: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly breakpoints: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly small: {
                                                        readonly type: "string";
                                                    };
                                                    readonly medium: {
                                                        readonly type: "string";
                                                    };
                                                    readonly large: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly codeBlock: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                    readonly tokens: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly colors: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly accent: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly border: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly error: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly http: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly basic: {
                                                                readonly type: "string";
                                                            };
                                                            readonly delete: {
                                                                readonly type: "string";
                                                            };
                                                            readonly get: {
                                                                readonly type: "string";
                                                            };
                                                            readonly head: {
                                                                readonly type: "string";
                                                            };
                                                            readonly link: {
                                                                readonly type: "string";
                                                            };
                                                            readonly options: {
                                                                readonly type: "string";
                                                            };
                                                            readonly patch: {
                                                                readonly type: "string";
                                                            };
                                                            readonly post: {
                                                                readonly type: "string";
                                                            };
                                                            readonly put: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly primary: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly responses: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly error: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly backgroundColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly borderColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly color: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly tabTextColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly info: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly backgroundColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly borderColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly color: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly tabTextColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly redirect: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly backgroundColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly borderColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly color: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly tabTextColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly success: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly backgroundColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly borderColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly color: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly tabTextColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                    readonly secondary: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly success: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly text: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly primary: {
                                                                readonly type: "string";
                                                            };
                                                            readonly secondary: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly tonalOffset: {
                                                        readonly type: "number";
                                                    };
                                                    readonly warning: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly components: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly buttons: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly borderRadius: {
                                                                readonly type: "string";
                                                            };
                                                            readonly hoverStyle: {
                                                                readonly type: "string";
                                                            };
                                                            readonly boxShadow: {
                                                                readonly type: "string";
                                                            };
                                                            readonly hoverBoxShadow: {
                                                                readonly type: "string";
                                                            };
                                                            readonly sizes: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly small: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly padding: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly minWidth: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                    readonly medium: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly padding: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly minWidth: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                    readonly large: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly padding: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly minWidth: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                    readonly xlarge: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly padding: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly minWidth: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly httpBadges: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly borderRadius: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly sizes: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly medium: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontFamily: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly fontWeight: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly lineHeight: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                    readonly small: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontFamily: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly fontWeight: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly lineHeight: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly layoutControls: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly top: {
                                                                readonly type: "string";
                                                            };
                                                            readonly width: {
                                                                readonly type: "string";
                                                            };
                                                            readonly height: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly panels: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly borderRadius: {
                                                                readonly type: "string";
                                                            };
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly tryItButton: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly fullWidth: {
                                                                readonly type: "boolean";
                                                            };
                                                        };
                                                    };
                                                    readonly tryItSendButton: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly fullWidth: {
                                                                readonly type: "boolean";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly layout: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly showDarkRightPanel: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly stacked: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly maxWidth: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly small: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly medium: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly large: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                    readonly 'three-panel': {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly maxWidth: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly small: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly medium: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly large: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly middlePanelMaxWidth: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly small: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly medium: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly large: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly logo: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly gutter: {
                                                        readonly type: "string";
                                                    };
                                                    readonly maxHeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly maxWidth: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly fab: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly overrides: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly DownloadButton: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly custom: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly NextSectionButton: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly custom: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly rightPanel: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly panelBackgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly panelControlsBackgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly showAtBreakpoint: {
                                                        readonly type: "string";
                                                    };
                                                    readonly textColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly width: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly schema: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly breakFieldNames: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly caretColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly caretSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly constraints: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly border: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly defaultDetailsWidth: {
                                                        readonly type: "string";
                                                    };
                                                    readonly examples: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly border: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly labelsTextSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly linesColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly nestedBackground: {
                                                        readonly type: "string";
                                                    };
                                                    readonly nestingSpacing: {
                                                        readonly type: "string";
                                                    };
                                                    readonly requireLabelColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly typeNameColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly typeTitleColor: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly shape: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly sidebar: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly activeBgColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly activeTextColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                    readonly breakPath: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly caretColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly caretSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly groupItems: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly subItemsColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly textTransform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly level1items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly subItemsColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly textTransform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly rightLineColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly separatorLabelColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly showAtBreakpoint: {
                                                        readonly type: "string";
                                                    };
                                                    readonly spacing: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly unit: {
                                                                readonly type: "number";
                                                            };
                                                            readonly paddingHorizontal: {
                                                                readonly type: "string";
                                                            };
                                                            readonly paddingVertical: {
                                                                readonly type: "string";
                                                            };
                                                            readonly offsetTop: {
                                                                readonly type: "string";
                                                            };
                                                            readonly offsetLeft: {
                                                                readonly type: "string";
                                                            };
                                                            readonly offsetNesting: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly textColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly width: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly spacing: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly sectionHorizontal: {
                                                        readonly type: "number";
                                                    };
                                                    readonly sectionVertical: {
                                                        readonly type: "number";
                                                    };
                                                    readonly unit: {
                                                        readonly type: "number";
                                                    };
                                                };
                                            };
                                            readonly typography: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fontWeightBold: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeightLight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeightRegular: {
                                                        readonly type: "string";
                                                    };
                                                    readonly heading1: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly transform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly heading2: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly transform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly heading3: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly transform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly headings: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly links: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly hover: {
                                                                readonly type: "string";
                                                            };
                                                            readonly textDecoration: {
                                                                readonly type: "string";
                                                            };
                                                            readonly hoverTextDecoration: {
                                                                readonly type: "string";
                                                            };
                                                            readonly visited: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly optimizeSpeed: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly rightPanelHeading: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly transform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly smoothing: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["auto", "none", "antialiased", "subpixel-antialiased", "grayscale"];
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly code: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly wordBreak: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["break-all", "break-word", "keep-all", "normal", "revert", "unset", "inherit", "initial"];
                                                            };
                                                            readonly wrap: {
                                                                readonly type: "boolean";
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly fieldName: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly links: {
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly codeSample: {
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly ctrlFHijack: {
                                        readonly type: "boolean";
                                    };
                                    readonly defaultSampleLanguage: {
                                        readonly type: "string";
                                    };
                                    readonly disableDeepLinks: {
                                        readonly type: "boolean";
                                    };
                                    readonly disableSearch: {
                                        readonly type: "boolean";
                                    };
                                    readonly disableSidebar: {
                                        readonly type: "boolean";
                                    };
                                    readonly downloadDefinitionUrl: {
                                        readonly type: "string";
                                    };
                                    readonly expandDefaultServerVariables: {
                                        readonly type: "boolean";
                                    };
                                    readonly enumSkipQuotes: {
                                        readonly type: "boolean";
                                    };
                                    readonly expandDefaultRequest: {
                                        readonly type: "boolean";
                                    };
                                    readonly expandDefaultResponse: {
                                        readonly type: "boolean";
                                    };
                                    readonly expandResponses: {
                                        readonly type: "string";
                                    };
                                    readonly expandSingleSchemaField: {
                                        readonly type: "boolean";
                                    };
                                    readonly generateCodeSamples: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly skipOptionalParameters: {
                                                readonly type: "boolean";
                                            };
                                            readonly languages: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly lang: {
                                                            readonly enum: readonly ["curl", "C#", "Go", "Java", "Java8+Apache", "JavaScript", "Node.js", "PHP", "Python", "R", "Ruby"];
                                                        };
                                                    };
                                                    readonly required: readonly ["lang"];
                                                };
                                            };
                                        };
                                        readonly required: readonly ["languages"];
                                    };
                                    readonly generatedPayloadSamplesMaxDepth: {
                                        readonly type: "number";
                                    };
                                    readonly hideDownloadButton: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideHostname: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideInfoSection: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideLogo: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideRequestPayloadSample: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideRightPanel: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideSchemaPattern: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideSingleRequestSampleTab: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideSecuritySection: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideTryItPanel: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideFab: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideOneOfDescription: {
                                        readonly type: "boolean";
                                    };
                                    readonly htmlTemplate: {
                                        readonly type: "string";
                                    };
                                    readonly jsonSampleExpandLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                            readonly minimum: 1;
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly labels: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly enum: {
                                                readonly type: "string";
                                            };
                                            readonly enumSingleValue: {
                                                readonly type: "string";
                                            };
                                            readonly enumArray: {
                                                readonly type: "string";
                                            };
                                            readonly default: {
                                                readonly type: "string";
                                            };
                                            readonly deprecated: {
                                                readonly type: "string";
                                            };
                                            readonly example: {
                                                readonly type: "string";
                                            };
                                            readonly examples: {
                                                readonly type: "string";
                                            };
                                            readonly nullable: {
                                                readonly type: "string";
                                            };
                                            readonly recursive: {
                                                readonly type: "string";
                                            };
                                            readonly arrayOf: {
                                                readonly type: "string";
                                            };
                                            readonly webhook: {
                                                readonly type: "string";
                                            };
                                            readonly authorizations: {
                                                readonly type: "string";
                                            };
                                            readonly tryItAuthBasicUsername: {
                                                readonly type: "string";
                                            };
                                            readonly tryItAuthBasicPassword: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly menuToggle: {
                                        readonly type: "boolean";
                                    };
                                    readonly nativeScrollbars: {
                                        readonly type: "boolean";
                                    };
                                    readonly noAutoAuth: {
                                        readonly type: "boolean";
                                    };
                                    readonly onDeepLinkClick: {
                                        readonly type: "object";
                                    };
                                    readonly pagination: {
                                        readonly enum: readonly ["none", "section", "item"];
                                    };
                                    readonly pathInMiddlePanel: {
                                        readonly type: "boolean";
                                    };
                                    readonly payloadSampleIdx: {
                                        readonly type: "number";
                                        readonly minimum: 0;
                                    };
                                    readonly requestInterceptor: {
                                        readonly type: "object";
                                    };
                                    readonly requiredPropsFirst: {
                                        readonly type: "boolean";
                                    };
                                    readonly routingStrategy: {
                                        readonly type: "string";
                                    };
                                    readonly samplesTabsMaxCount: {
                                        readonly type: "number";
                                    };
                                    readonly schemaExpansionLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                            readonly minimum: 0;
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly minCharacterLengthToInitSearch: {
                                        readonly type: "number";
                                        readonly minimum: 1;
                                    };
                                    readonly maxResponseHeadersToShowInTryIt: {
                                        readonly type: "number";
                                        readonly minimum: 0;
                                    };
                                    readonly scrollYOffset: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly searchAutoExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly searchFieldLevelBoost: {
                                        readonly type: "number";
                                        readonly minimum: 0;
                                    };
                                    readonly searchMaxDepth: {
                                        readonly type: "number";
                                        readonly minimum: 1;
                                    };
                                    readonly searchMode: {
                                        readonly type: "string";
                                        readonly enum: readonly ["default", "path-only"];
                                    };
                                    readonly searchOperationTitleBoost: {
                                        readonly type: "number";
                                    };
                                    readonly searchTagTitleBoost: {
                                        readonly type: "number";
                                    };
                                    readonly sendXUserAgentInTryIt: {
                                        readonly type: "boolean";
                                    };
                                    readonly showChangeLayoutButton: {
                                        readonly type: "boolean";
                                    };
                                    readonly showConsole: {
                                        readonly type: "boolean";
                                    };
                                    readonly showNextButton: {
                                        readonly type: "boolean";
                                    };
                                    readonly showRightPanelToggle: {
                                        readonly type: "boolean";
                                    };
                                    readonly showSecuritySchemeType: {
                                        readonly type: "boolean";
                                    };
                                    readonly showWebhookVerb: {
                                        readonly type: "boolean";
                                    };
                                    readonly showObjectSchemaExamples: {
                                        readonly type: "boolean";
                                    };
                                    readonly disableTryItRequestUrlEncoding: {
                                        readonly type: "boolean";
                                    };
                                    readonly sidebarLinks: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly beforeInfo: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly link: {
                                                            readonly type: "string";
                                                        };
                                                        readonly target: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["label", "link"];
                                                };
                                            };
                                            readonly end: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly link: {
                                                            readonly type: "string";
                                                        };
                                                        readonly target: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["label", "link"];
                                                };
                                            };
                                        };
                                    };
                                    readonly sideNavStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["summary-only", "path-first", "id-only", "path-only"];
                                    };
                                    readonly simpleOneOfTypeLabel: {
                                        readonly type: "boolean";
                                    };
                                    readonly sortEnumValuesAlphabetically: {
                                        readonly type: "boolean";
                                    };
                                    readonly sortOperationsAlphabetically: {
                                        readonly type: "boolean";
                                    };
                                    readonly sortPropsAlphabetically: {
                                        readonly type: "boolean";
                                    };
                                    readonly sortTagsAlphabetically: {
                                        readonly type: "boolean";
                                    };
                                    readonly suppressWarnings: {
                                        readonly type: "boolean";
                                    };
                                    readonly unstable_externalDescription: {
                                        readonly type: "boolean";
                                    };
                                    readonly unstable_ignoreMimeParameters: {
                                        readonly type: "boolean";
                                    };
                                    readonly untrustedDefinition: {
                                        readonly type: "boolean";
                                    };
                                    readonly showAccessMode: {
                                        readonly type: "boolean";
                                    };
                                    readonly preserveOriginalExtensionsName: {
                                        readonly type: "boolean";
                                    };
                                    readonly markdownHeadingsAnchorLevel: {
                                        readonly type: "number";
                                    };
                                    readonly licenseKey: {
                                        readonly type: "string";
                                    };
                                    readonly hideLoading: {
                                        readonly type: "boolean";
                                    };
                                    readonly disableRouter: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideSidebar: {
                                        readonly type: "boolean";
                                    };
                                    readonly feedback: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                                readonly default: "sentiment";
                                            };
                                            readonly settings: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly submitText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly buttonText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minItems: 1;
                                                    };
                                                    readonly leftScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly rightScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly reasons: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly like: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly dislike: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly satisfied: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly neutral: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly dissatisfied: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly comment: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly likeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dislikeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly satisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly neutralLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dissatisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly optionalEmail: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly placeholder: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly hideReplay: {
                                        readonly type: "boolean";
                                    };
                                    readonly oAuth2RedirectURI: {
                                        readonly type: "string";
                                        readonly nullable: true;
                                    };
                                    readonly corsProxyUrl: {
                                        readonly type: "string";
                                    };
                                    readonly sortRequiredPropsFirst: {
                                        readonly type: "boolean";
                                    };
                                    readonly sanitize: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideDownloadButtons: {
                                        readonly type: "boolean";
                                    };
                                    readonly downloadUrls: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly title: {
                                                    readonly type: "string";
                                                };
                                                readonly url: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["url"];
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly onlyRequiredInSamples: {
                                        readonly type: "boolean";
                                    };
                                    readonly generatedSamplesMaxDepth: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly showExtensions: {
                                        readonly oneOf: readonly [{
                                            readonly type: "boolean";
                                        }, {
                                            readonly type: "string";
                                        }, {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        }];
                                    };
                                    readonly hideSchemaTitles: {
                                        readonly type: "boolean";
                                    };
                                    readonly jsonSamplesExpandLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly schemasExpansionLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly mockServer: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly url: {
                                                readonly type: "string";
                                            };
                                            readonly position: {
                                                readonly type: "string";
                                                readonly enum: readonly ["first", "last", "replace", "off"];
                                            };
                                            readonly description: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly maxDisplayedEnumValues: {
                                        readonly type: "number";
                                    };
                                    readonly schemaDefinitionsTagName: {
                                        readonly type: "string";
                                    };
                                    readonly layout: {
                                        readonly type: "string";
                                        readonly enum: readonly ["stacked", "three-panel"];
                                    };
                                    readonly hideInfoMetadata: {
                                        readonly type: "boolean";
                                    };
                                    readonly events: {
                                        readonly type: "object";
                                    };
                                    readonly skipBundle: {
                                        readonly type: "boolean";
                                    };
                                    readonly routingBasePath: {
                                        readonly type: "string";
                                    };
                                    readonly codeSamples: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly languages: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly lang: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly options: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly indent: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly withImports: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly withComments: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly binary: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly credentials: {
                                                                    readonly type: "string";
                                                                    readonly enum: readonly ["omit", "same-origin", "include"];
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                    };
                                                    readonly required: readonly ["lang"];
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly skipOptionalParameters: {
                                                readonly type: "boolean";
                                            };
                                            readonly withOAuth2Call: {
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["languages"];
                                        readonly additionalProperties: false;
                                    };
                                    readonly ignoreNamedSchemas: {
                                        readonly oneOf: readonly [{
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly hidePropertiesPrefix: {
                                        readonly type: "boolean";
                                    };
                                    readonly excludeFromSearch: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly type: "object";
                                readonly additionalProperties: false;
                            };
                            readonly graphql: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hidePaginationButtons: {
                                        readonly type: "boolean";
                                    };
                                    readonly menu: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly requireExactGroups: {
                                                readonly type: "boolean";
                                            };
                                            readonly groups: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly queries: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly mutations: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly subscriptions: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly types: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly directives: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                    };
                                                    readonly required: readonly ["name"];
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly otherItemsGroupName: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly sidebar: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                        };
                                    };
                                    readonly apiLogo: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly imageUrl: {
                                                readonly type: "string";
                                            };
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                            readonly altText: {
                                                readonly type: "string";
                                            };
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly jsonSamplesDepth: {
                                        readonly type: "number";
                                    };
                                    readonly samplesMaxInlineArgs: {
                                        readonly type: "number";
                                    };
                                    readonly licenseKey: {
                                        readonly type: "string";
                                    };
                                    readonly fieldExpandLevel: {
                                        readonly type: "number";
                                    };
                                    readonly baseUrlPath: {
                                        readonly type: "string";
                                    };
                                    readonly feedback: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                                readonly default: "sentiment";
                                            };
                                            readonly settings: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly submitText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly buttonText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minItems: 1;
                                                    };
                                                    readonly leftScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly rightScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly reasons: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly like: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly dislike: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly satisfied: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly neutral: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly dissatisfied: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly comment: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly likeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dislikeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly satisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly neutralLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dissatisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly optionalEmail: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly placeholder: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                    readonly title: {
                        readonly type: "string";
                    };
                    readonly metadata: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly rules: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly oneOf: readonly [{
                                readonly type: "string";
                            }, {
                                readonly type: "object";
                            }];
                        };
                    };
                    readonly decorators: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly preprocessors: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly required: readonly ["root"];
            };
        };
        readonly rules: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "string";
                }, {
                    readonly type: "object";
                }];
            };
        };
        readonly decorators: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly preprocessors: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly ssoDirect: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.OIDC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly pkce: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly configurationUrl: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly configuration: {
                            readonly type: "object";
                            readonly properties: {
                                readonly end_session_endpoint: {
                                    readonly type: "string";
                                };
                                readonly token_endpoint: {
                                    readonly type: "string";
                                };
                                readonly authorization_endpoint: {
                                    readonly type: "string";
                                };
                                readonly jwks_uri: {
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                            readonly additionalProperties: true;
                        };
                        readonly clientId: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                            readonly minLength: 0;
                        };
                        readonly teamsClaimName: {
                            readonly type: "string";
                        };
                        readonly teamsClaimMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly scopes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenExpirationTime: {
                            readonly type: "number";
                        };
                        readonly authorizationRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly audience: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly required: readonly ["type", "clientId"];
                    readonly oneOf: readonly [{
                        readonly required: readonly ["configurationUrl"];
                    }, {
                        readonly required: readonly ["configuration"];
                    }];
                    readonly additionalProperties: false;
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.SAML2;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly issuerId: {
                            readonly type: "string";
                        };
                        readonly entityId: {
                            readonly type: "string";
                        };
                        readonly ssoUrl: {
                            readonly type: "string";
                        };
                        readonly x509PublicCert: {
                            readonly type: "string";
                        };
                        readonly teamsAttributeName: {
                            readonly type: "string";
                            readonly default: "https://redocly.com/sso/teams";
                        };
                        readonly teamsAttributeMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly sso: {
            readonly oneOf: readonly [{
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                    readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
                };
                readonly uniqueItems: true;
            }, {
                readonly type: "string";
                readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
            }];
        };
        readonly residency: {
            readonly type: "string";
        };
        readonly developerOnboarding: {
            readonly type: "object";
            readonly required: readonly ["adapters"];
            readonly additionalProperties: false;
            readonly properties: {
                readonly adapters: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_X";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_EDGE";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly type: "object";
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "GRAVITEE";
                                };
                                readonly apiBaseUrl: {
                                    readonly type: "string";
                                };
                                readonly env: {
                                    readonly type: "string";
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly auth: {
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly static: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["static"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly idp: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["idp"];
                                    }];
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "apiBaseUrl"];
                        }];
                        readonly discriminator: {
                            readonly propertyName: "type";
                        };
                    };
                };
            };
        };
        readonly removeAttribution: {
            readonly type: "boolean";
        };
        readonly i18n: {
            readonly type: "object";
            readonly properties: {
                readonly defaultLocale: {
                    readonly type: "string";
                };
                readonly locales: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["code"];
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["defaultLocale"];
        };
        readonly l10n: {
            readonly type: "object";
            readonly properties: {
                readonly defaultLocale: {
                    readonly type: "string";
                };
                readonly locales: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["code"];
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["defaultLocale"];
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly metadataGlobs: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: true;
            };
        };
        readonly ignore: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        /**
         * @deprecated properties moved to the root of the config
         */
        readonly theme: {
            readonly type: "object";
            readonly properties: {
                readonly imports: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly logo: {
                    readonly type: "object";
                    readonly properties: {
                        readonly image: {
                            readonly type: "string";
                        };
                        readonly srcSet: {
                            readonly type: "string";
                        };
                        readonly altText: {
                            readonly type: "string";
                        };
                        readonly link: {
                            readonly type: "string";
                        };
                        readonly favicon: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly navbar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                                readonly rbac: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rbac: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly products: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly icon: {
                                readonly type: "string";
                            };
                            readonly folder: {
                                readonly type: "string";
                            };
                        };
                        readonly additionalProperties: false;
                        readonly required: readonly ["name", "folder"];
                    };
                };
                readonly footer: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                                readonly rbac: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rbac: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                        readonly copyrightText: {
                            readonly type: "string";
                        };
                        readonly logo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly sidebar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly separatorLine: {
                            readonly type: "boolean";
                        };
                        readonly linePosition: {
                            readonly type: "string";
                            readonly enum: readonly ["top", "bottom"];
                            readonly default: "bottom";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly scripts: {
                    readonly type: "object";
                    readonly properties: {
                        readonly head: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly body: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly links: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly as: {
                                readonly type: "string";
                            };
                            readonly crossorigin: {
                                readonly type: "string";
                            };
                            readonly fetchpriority: {
                                readonly type: "string";
                            };
                            readonly hreflang: {
                                readonly type: "string";
                            };
                            readonly imagesizes: {
                                readonly type: "string";
                            };
                            readonly imagesrcset: {
                                readonly type: "string";
                            };
                            readonly integrity: {
                                readonly type: "string";
                            };
                            readonly media: {
                                readonly type: "string";
                            };
                            readonly prefetch: {
                                readonly type: "string";
                            };
                            readonly referrerpolicy: {
                                readonly type: "string";
                            };
                            readonly rel: {
                                readonly type: "string";
                            };
                            readonly sizes: {
                                readonly type: "string";
                            };
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["href"];
                        readonly additionalProperties: true;
                    };
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly like: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dislike: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly satisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly neutral: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dissatisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly optionalEmail: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly placeholder: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly search: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly engine: {
                            readonly type: "string";
                            readonly enum: readonly ["flexsearch", "typesense"];
                            readonly default: "flexsearch";
                        };
                        readonly ai: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly suggestions: {
                                    readonly default: readonly [];
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly prompt: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly filters: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly facets: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly required: readonly ["name", "field", "type"];
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly field: {
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["multi-select", "select", "tags"];
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly placement: {
                            readonly type: "string";
                            readonly default: "navbar";
                        };
                        readonly shortcuts: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["/"];
                        };
                        readonly suggestedPages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["page"];
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly colorMode: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly ignoreDetection: {
                            readonly type: "boolean";
                        };
                        readonly modes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["light", "dark"];
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly navigation: {
                    readonly type: "object";
                    readonly properties: {
                        readonly nextButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Next page";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly previousButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Previous page";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly codeSnippet: {
                    readonly type: "object";
                    readonly properties: {
                        readonly elementFormat: {
                            readonly type: "string";
                            readonly default: "icon";
                        };
                        readonly copy: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly report: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly tooltipText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly expand: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly collapse: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly markdown: {
                    readonly type: "object";
                    readonly properties: {
                        readonly frontMatterKeysToResolve: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["image", "links"];
                        };
                        readonly partialsFolders: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["_partials"];
                        };
                        readonly lastUpdatedBlock: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly format: {
                                    readonly type: "string";
                                    readonly enum: readonly ["timeago", "iso", "long", "short"];
                                    readonly default: "timeago";
                                };
                                readonly locale: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly toc: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly header: {
                                    readonly type: "string";
                                    readonly default: "On this page";
                                };
                                readonly depth: {
                                    readonly type: "integer";
                                    readonly default: 3;
                                    readonly minimum: 1;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly editPage: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly baseUrl: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly openapi: {
                    readonly properties: {
                        readonly theme: {
                            readonly type: "object";
                            readonly properties: {
                                readonly breakpoints: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly small: {
                                            readonly type: "string";
                                        };
                                        readonly medium: {
                                            readonly type: "string";
                                        };
                                        readonly large: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly codeBlock: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly tokens: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly colors: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly accent: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly border: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly error: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly http: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly basic: {
                                                    readonly type: "string";
                                                };
                                                readonly delete: {
                                                    readonly type: "string";
                                                };
                                                readonly get: {
                                                    readonly type: "string";
                                                };
                                                readonly head: {
                                                    readonly type: "string";
                                                };
                                                readonly link: {
                                                    readonly type: "string";
                                                };
                                                readonly options: {
                                                    readonly type: "string";
                                                };
                                                readonly patch: {
                                                    readonly type: "string";
                                                };
                                                readonly post: {
                                                    readonly type: "string";
                                                };
                                                readonly put: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly primary: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly responses: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly error: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly info: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly redirect: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly success: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly secondary: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly success: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly text: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly primary: {
                                                    readonly type: "string";
                                                };
                                                readonly secondary: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly tonalOffset: {
                                            readonly type: "number";
                                        };
                                        readonly warning: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly components: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly buttons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly borderRadius: {
                                                    readonly type: "string";
                                                };
                                                readonly hoverStyle: {
                                                    readonly type: "string";
                                                };
                                                readonly boxShadow: {
                                                    readonly type: "string";
                                                };
                                                readonly hoverBoxShadow: {
                                                    readonly type: "string";
                                                };
                                                readonly sizes: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly medium: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly large: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly xlarge: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly httpBadges: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly borderRadius: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly sizes: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly medium: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontFamily: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontWeight: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly lineHeight: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly small: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontFamily: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontWeight: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly lineHeight: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly layoutControls: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly top: {
                                                    readonly type: "string";
                                                };
                                                readonly width: {
                                                    readonly type: "string";
                                                };
                                                readonly height: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly panels: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly borderRadius: {
                                                    readonly type: "string";
                                                };
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly tryItButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fullWidth: {
                                                    readonly type: "boolean";
                                                };
                                            };
                                        };
                                        readonly tryItSendButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fullWidth: {
                                                    readonly type: "boolean";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly layout: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly showDarkRightPanel: {
                                            readonly type: "boolean";
                                        };
                                        readonly stacked: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly maxWidth: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "string";
                                                        };
                                                        readonly medium: {
                                                            readonly type: "string";
                                                        };
                                                        readonly large: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly 'three-panel': {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly maxWidth: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "string";
                                                        };
                                                        readonly medium: {
                                                            readonly type: "string";
                                                        };
                                                        readonly large: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly middlePanelMaxWidth: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "string";
                                                        };
                                                        readonly medium: {
                                                            readonly type: "string";
                                                        };
                                                        readonly large: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly logo: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly gutter: {
                                            readonly type: "string";
                                        };
                                        readonly maxHeight: {
                                            readonly type: "string";
                                        };
                                        readonly maxWidth: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly fab: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly overrides: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly DownloadButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly custom: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly NextSectionButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly custom: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly rightPanel: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly panelBackgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly panelControlsBackgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly showAtBreakpoint: {
                                            readonly type: "string";
                                        };
                                        readonly textColor: {
                                            readonly type: "string";
                                        };
                                        readonly width: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly schema: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly breakFieldNames: {
                                            readonly type: "boolean";
                                        };
                                        readonly caretColor: {
                                            readonly type: "string";
                                        };
                                        readonly caretSize: {
                                            readonly type: "string";
                                        };
                                        readonly constraints: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly border: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly defaultDetailsWidth: {
                                            readonly type: "string";
                                        };
                                        readonly examples: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly border: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly labelsTextSize: {
                                            readonly type: "string";
                                        };
                                        readonly linesColor: {
                                            readonly type: "string";
                                        };
                                        readonly nestedBackground: {
                                            readonly type: "string";
                                        };
                                        readonly nestingSpacing: {
                                            readonly type: "string";
                                        };
                                        readonly requireLabelColor: {
                                            readonly type: "string";
                                        };
                                        readonly typeNameColor: {
                                            readonly type: "string";
                                        };
                                        readonly typeTitleColor: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly shape: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly sidebar: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly activeBgColor: {
                                            readonly type: "string";
                                        };
                                        readonly activeTextColor: {
                                            readonly type: "string";
                                        };
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly breakPath: {
                                            readonly type: "boolean";
                                        };
                                        readonly caretColor: {
                                            readonly type: "string";
                                        };
                                        readonly caretSize: {
                                            readonly type: "string";
                                        };
                                        readonly groupItems: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly subItemsColor: {
                                                    readonly type: "string";
                                                };
                                                readonly textTransform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly level1items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly subItemsColor: {
                                                    readonly type: "string";
                                                };
                                                readonly textTransform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly rightLineColor: {
                                            readonly type: "string";
                                        };
                                        readonly separatorLabelColor: {
                                            readonly type: "string";
                                        };
                                        readonly showAtBreakpoint: {
                                            readonly type: "string";
                                        };
                                        readonly spacing: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly unit: {
                                                    readonly type: "number";
                                                };
                                                readonly paddingHorizontal: {
                                                    readonly type: "string";
                                                };
                                                readonly paddingVertical: {
                                                    readonly type: "string";
                                                };
                                                readonly offsetTop: {
                                                    readonly type: "string";
                                                };
                                                readonly offsetLeft: {
                                                    readonly type: "string";
                                                };
                                                readonly offsetNesting: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly textColor: {
                                            readonly type: "string";
                                        };
                                        readonly width: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly spacing: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly sectionHorizontal: {
                                            readonly type: "number";
                                        };
                                        readonly sectionVertical: {
                                            readonly type: "number";
                                        };
                                        readonly unit: {
                                            readonly type: "number";
                                        };
                                    };
                                };
                                readonly typography: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontWeightBold: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeightLight: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeightRegular: {
                                            readonly type: "string";
                                        };
                                        readonly heading1: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly heading2: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly heading3: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly headings: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                        readonly links: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly hover: {
                                                    readonly type: "string";
                                                };
                                                readonly textDecoration: {
                                                    readonly type: "string";
                                                };
                                                readonly hoverTextDecoration: {
                                                    readonly type: "string";
                                                };
                                                readonly visited: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly optimizeSpeed: {
                                            readonly type: "boolean";
                                        };
                                        readonly rightPanelHeading: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly smoothing: {
                                            readonly type: "string";
                                            readonly enum: readonly ["auto", "none", "antialiased", "subpixel-antialiased", "grayscale"];
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly code: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly wordBreak: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["break-all", "break-word", "keep-all", "normal", "revert", "unset", "inherit", "initial"];
                                                };
                                                readonly wrap: {
                                                    readonly type: "boolean";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly fieldName: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly links: {
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly codeSample: {
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly ctrlFHijack: {
                            readonly type: "boolean";
                        };
                        readonly defaultSampleLanguage: {
                            readonly type: "string";
                        };
                        readonly disableDeepLinks: {
                            readonly type: "boolean";
                        };
                        readonly disableSearch: {
                            readonly type: "boolean";
                        };
                        readonly disableSidebar: {
                            readonly type: "boolean";
                        };
                        readonly downloadDefinitionUrl: {
                            readonly type: "string";
                        };
                        readonly expandDefaultServerVariables: {
                            readonly type: "boolean";
                        };
                        readonly enumSkipQuotes: {
                            readonly type: "boolean";
                        };
                        readonly expandDefaultRequest: {
                            readonly type: "boolean";
                        };
                        readonly expandDefaultResponse: {
                            readonly type: "boolean";
                        };
                        readonly expandResponses: {
                            readonly type: "string";
                        };
                        readonly expandSingleSchemaField: {
                            readonly type: "boolean";
                        };
                        readonly generateCodeSamples: {
                            readonly type: "object";
                            readonly properties: {
                                readonly skipOptionalParameters: {
                                    readonly type: "boolean";
                                };
                                readonly languages: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly lang: {
                                                readonly enum: readonly ["curl", "C#", "Go", "Java", "Java8+Apache", "JavaScript", "Node.js", "PHP", "Python", "R", "Ruby"];
                                            };
                                        };
                                        readonly required: readonly ["lang"];
                                    };
                                };
                            };
                            readonly required: readonly ["languages"];
                        };
                        readonly generatedPayloadSamplesMaxDepth: {
                            readonly type: "number";
                        };
                        readonly hideDownloadButton: {
                            readonly type: "boolean";
                        };
                        readonly hideHostname: {
                            readonly type: "boolean";
                        };
                        readonly hideInfoSection: {
                            readonly type: "boolean";
                        };
                        readonly hideLogo: {
                            readonly type: "boolean";
                        };
                        readonly hideRequestPayloadSample: {
                            readonly type: "boolean";
                        };
                        readonly hideRightPanel: {
                            readonly type: "boolean";
                        };
                        readonly hideSchemaPattern: {
                            readonly type: "boolean";
                        };
                        readonly hideSingleRequestSampleTab: {
                            readonly type: "boolean";
                        };
                        readonly hideSecuritySection: {
                            readonly type: "boolean";
                        };
                        readonly hideTryItPanel: {
                            readonly type: "boolean";
                        };
                        readonly hideFab: {
                            readonly type: "boolean";
                        };
                        readonly hideOneOfDescription: {
                            readonly type: "boolean";
                        };
                        readonly htmlTemplate: {
                            readonly type: "string";
                        };
                        readonly jsonSampleExpandLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                                readonly minimum: 1;
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly labels: {
                            readonly type: "object";
                            readonly properties: {
                                readonly enum: {
                                    readonly type: "string";
                                };
                                readonly enumSingleValue: {
                                    readonly type: "string";
                                };
                                readonly enumArray: {
                                    readonly type: "string";
                                };
                                readonly default: {
                                    readonly type: "string";
                                };
                                readonly deprecated: {
                                    readonly type: "string";
                                };
                                readonly example: {
                                    readonly type: "string";
                                };
                                readonly examples: {
                                    readonly type: "string";
                                };
                                readonly nullable: {
                                    readonly type: "string";
                                };
                                readonly recursive: {
                                    readonly type: "string";
                                };
                                readonly arrayOf: {
                                    readonly type: "string";
                                };
                                readonly webhook: {
                                    readonly type: "string";
                                };
                                readonly authorizations: {
                                    readonly type: "string";
                                };
                                readonly tryItAuthBasicUsername: {
                                    readonly type: "string";
                                };
                                readonly tryItAuthBasicPassword: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly menuToggle: {
                            readonly type: "boolean";
                        };
                        readonly nativeScrollbars: {
                            readonly type: "boolean";
                        };
                        readonly noAutoAuth: {
                            readonly type: "boolean";
                        };
                        readonly onDeepLinkClick: {
                            readonly type: "object";
                        };
                        readonly pagination: {
                            readonly enum: readonly ["none", "section", "item"];
                        };
                        readonly pathInMiddlePanel: {
                            readonly type: "boolean";
                        };
                        readonly payloadSampleIdx: {
                            readonly type: "number";
                            readonly minimum: 0;
                        };
                        readonly requestInterceptor: {
                            readonly type: "object";
                        };
                        readonly requiredPropsFirst: {
                            readonly type: "boolean";
                        };
                        readonly routingStrategy: {
                            readonly type: "string";
                        };
                        readonly samplesTabsMaxCount: {
                            readonly type: "number";
                        };
                        readonly schemaExpansionLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                                readonly minimum: 0;
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly minCharacterLengthToInitSearch: {
                            readonly type: "number";
                            readonly minimum: 1;
                        };
                        readonly maxResponseHeadersToShowInTryIt: {
                            readonly type: "number";
                            readonly minimum: 0;
                        };
                        readonly scrollYOffset: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly searchAutoExpand: {
                            readonly type: "boolean";
                        };
                        readonly searchFieldLevelBoost: {
                            readonly type: "number";
                            readonly minimum: 0;
                        };
                        readonly searchMaxDepth: {
                            readonly type: "number";
                            readonly minimum: 1;
                        };
                        readonly searchMode: {
                            readonly type: "string";
                            readonly enum: readonly ["default", "path-only"];
                        };
                        readonly searchOperationTitleBoost: {
                            readonly type: "number";
                        };
                        readonly searchTagTitleBoost: {
                            readonly type: "number";
                        };
                        readonly sendXUserAgentInTryIt: {
                            readonly type: "boolean";
                        };
                        readonly showChangeLayoutButton: {
                            readonly type: "boolean";
                        };
                        readonly showConsole: {
                            readonly type: "boolean";
                        };
                        readonly showNextButton: {
                            readonly type: "boolean";
                        };
                        readonly showRightPanelToggle: {
                            readonly type: "boolean";
                        };
                        readonly showSecuritySchemeType: {
                            readonly type: "boolean";
                        };
                        readonly showWebhookVerb: {
                            readonly type: "boolean";
                        };
                        readonly showObjectSchemaExamples: {
                            readonly type: "boolean";
                        };
                        readonly disableTryItRequestUrlEncoding: {
                            readonly type: "boolean";
                        };
                        readonly sidebarLinks: {
                            readonly type: "object";
                            readonly properties: {
                                readonly beforeInfo: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly link: {
                                                readonly type: "string";
                                            };
                                            readonly target: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["label", "link"];
                                    };
                                };
                                readonly end: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly link: {
                                                readonly type: "string";
                                            };
                                            readonly target: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["label", "link"];
                                    };
                                };
                            };
                        };
                        readonly sideNavStyle: {
                            readonly type: "string";
                            readonly enum: readonly ["summary-only", "path-first", "id-only", "path-only"];
                        };
                        readonly simpleOneOfTypeLabel: {
                            readonly type: "boolean";
                        };
                        readonly sortEnumValuesAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly sortOperationsAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly sortPropsAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly sortTagsAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly suppressWarnings: {
                            readonly type: "boolean";
                        };
                        readonly unstable_externalDescription: {
                            readonly type: "boolean";
                        };
                        readonly unstable_ignoreMimeParameters: {
                            readonly type: "boolean";
                        };
                        readonly untrustedDefinition: {
                            readonly type: "boolean";
                        };
                        readonly showAccessMode: {
                            readonly type: "boolean";
                        };
                        readonly preserveOriginalExtensionsName: {
                            readonly type: "boolean";
                        };
                        readonly markdownHeadingsAnchorLevel: {
                            readonly type: "number";
                        };
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly hideLoading: {
                            readonly type: "boolean";
                        };
                        readonly disableRouter: {
                            readonly type: "boolean";
                        };
                        readonly hideSidebar: {
                            readonly type: "boolean";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly like: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dislike: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly satisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly neutral: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dissatisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly optionalEmail: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly placeholder: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly hideReplay: {
                            readonly type: "boolean";
                        };
                        readonly oAuth2RedirectURI: {
                            readonly type: "string";
                            readonly nullable: true;
                        };
                        readonly corsProxyUrl: {
                            readonly type: "string";
                        };
                        readonly sortRequiredPropsFirst: {
                            readonly type: "boolean";
                        };
                        readonly sanitize: {
                            readonly type: "boolean";
                        };
                        readonly hideDownloadButtons: {
                            readonly type: "boolean";
                        };
                        readonly downloadUrls: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly url: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["url"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly onlyRequiredInSamples: {
                            readonly type: "boolean";
                        };
                        readonly generatedSamplesMaxDepth: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly showExtensions: {
                            readonly oneOf: readonly [{
                                readonly type: "boolean";
                            }, {
                                readonly type: "string";
                            }, {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }];
                        };
                        readonly hideSchemaTitles: {
                            readonly type: "boolean";
                        };
                        readonly jsonSamplesExpandLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly schemasExpansionLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly mockServer: {
                            readonly type: "object";
                            readonly properties: {
                                readonly url: {
                                    readonly type: "string";
                                };
                                readonly position: {
                                    readonly type: "string";
                                    readonly enum: readonly ["first", "last", "replace", "off"];
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly maxDisplayedEnumValues: {
                            readonly type: "number";
                        };
                        readonly schemaDefinitionsTagName: {
                            readonly type: "string";
                        };
                        readonly layout: {
                            readonly type: "string";
                            readonly enum: readonly ["stacked", "three-panel"];
                        };
                        readonly hideInfoMetadata: {
                            readonly type: "boolean";
                        };
                        readonly events: {
                            readonly type: "object";
                        };
                        readonly skipBundle: {
                            readonly type: "boolean";
                        };
                        readonly routingBasePath: {
                            readonly type: "string";
                        };
                        readonly codeSamples: {
                            readonly type: "object";
                            readonly properties: {
                                readonly languages: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly lang: {
                                                readonly type: "string";
                                                readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly indent: {
                                                        readonly type: "string";
                                                    };
                                                    readonly withImports: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly withComments: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly binary: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly credentials: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["omit", "same-origin", "include"];
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["lang"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly skipOptionalParameters: {
                                    readonly type: "boolean";
                                };
                                readonly withOAuth2Call: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly required: readonly ["languages"];
                            readonly additionalProperties: false;
                        };
                        readonly ignoreNamedSchemas: {
                            readonly oneOf: readonly [{
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly hidePropertiesPrefix: {
                            readonly type: "boolean";
                        };
                        readonly excludeFromSearch: {
                            readonly type: "boolean";
                        };
                    };
                    readonly type: "object";
                    readonly additionalProperties: false;
                };
                readonly graphql: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hidePaginationButtons: {
                            readonly type: "boolean";
                        };
                        readonly menu: {
                            readonly type: "object";
                            readonly properties: {
                                readonly requireExactGroups: {
                                    readonly type: "boolean";
                                };
                                readonly groups: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly queries: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly mutations: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly subscriptions: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly types: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly directives: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["name"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly otherItemsGroupName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly sidebar: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                        };
                        readonly apiLogo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly imageUrl: {
                                    readonly type: "string";
                                };
                                readonly href: {
                                    readonly type: "string";
                                };
                                readonly altText: {
                                    readonly type: "string";
                                };
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly jsonSamplesDepth: {
                            readonly type: "number";
                        };
                        readonly samplesMaxInlineArgs: {
                            readonly type: "number";
                        };
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly fieldExpandLevel: {
                            readonly type: "number";
                        };
                        readonly baseUrlPath: {
                            readonly type: "string";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly like: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dislike: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly satisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly neutral: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dissatisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly optionalEmail: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly placeholder: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly analytics: {
                    readonly type: "object";
                    readonly properties: {
                        readonly adobe: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly scriptUrl: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["scriptUrl"];
                        };
                        readonly amplitude: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly apiKey: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly outboundClickEventName: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                                readonly amplitudeConfig: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["apiKey"];
                        };
                        readonly fullstory: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly orgId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["orgId"];
                        };
                        readonly heap: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly appId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["appId"];
                        };
                        readonly rudderstack: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly dataPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly controlPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly sdkUrl: {
                                    readonly type: "string";
                                };
                                readonly loadOptions: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly segment: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly includeTitleInPageCall: {
                                    readonly type: "boolean";
                                };
                                readonly host: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly gtm: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly gtmAuth: {
                                    readonly type: "string";
                                };
                                readonly gtmPreview: {
                                    readonly type: "string";
                                };
                                readonly defaultDataLayer: {};
                                readonly dataLayerName: {
                                    readonly type: "string";
                                };
                                readonly enableWebVitalsTracking: {
                                    readonly type: "boolean";
                                };
                                readonly selfHostedOrigin: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                        readonly ga: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly conversionId: {
                                    readonly type: "string";
                                };
                                readonly floodlightId: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly optimizeId: {
                                    readonly type: "string";
                                };
                                readonly anonymizeIp: {
                                    readonly type: "boolean";
                                };
                                readonly cookieExpires: {
                                    readonly type: "number";
                                };
                                readonly trackers: {
                                    readonly type: "object";
                                    readonly additionalProperties: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly trackingId: {
                                                readonly type: "string";
                                            };
                                            readonly conversionId: {
                                                readonly type: "string";
                                            };
                                            readonly floodlightId: {
                                                readonly type: "string";
                                            };
                                            readonly optimizeId: {
                                                readonly type: "string";
                                            };
                                            readonly exclude: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["trackingId"];
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                    };
                };
                readonly userMenu: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly additionalProperties: true;
                            };
                            readonly default: readonly [];
                        };
                        readonly hideLoginButton: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly versionPicker: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly showForUnversioned: {
                            readonly type: "boolean";
                        };
                    };
                };
                readonly breadcrumbs: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly prefixItems: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly catalog: {
                    readonly type: "object";
                    readonly patternProperties: {
                        readonly '.*': {
                            readonly type: "object";
                            readonly additionalProperties: true;
                            readonly required: readonly ["slug", "items"];
                            readonly properties: {
                                readonly slug: {
                                    readonly type: "string";
                                };
                                readonly filters: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["title", "property"];
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["select", "checkboxes", "date-range"];
                                                readonly default: "checkboxes";
                                            };
                                            readonly title: {
                                                readonly type: "string";
                                            };
                                            readonly titleTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly property: {
                                                readonly type: "string";
                                            };
                                            readonly parentFilter: {
                                                readonly type: "string";
                                            };
                                            readonly valuesMapping: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly missingCategoryName: {
                                                readonly type: "string";
                                            };
                                            readonly missingCategoryNameTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly groupByFirstFilter: {
                                    readonly type: "boolean";
                                };
                                readonly filterValuesCasing: {
                                    readonly type: "string";
                                    readonly enum: readonly ["sentence", "original", "lowercase", "uppercase"];
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly properties: {
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly page: {
                                                            readonly type: "string";
                                                        };
                                                        readonly directory: {
                                                            readonly type: "string";
                                                        };
                                                        readonly disconnect: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly group: {
                                                            readonly type: "string";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                        readonly external: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly labelTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly groupTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly icon: {
                                                            readonly oneOf: readonly [{
                                                                readonly type: "string";
                                                            }, {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly srcSet: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly required: readonly ["srcSet"];
                                                            }];
                                                        };
                                                        readonly separator: {
                                                            readonly type: "string";
                                                        };
                                                        readonly separatorLine: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linePosition: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["top", "bottom"];
                                                            readonly default: "top";
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                        };
                                                        readonly menuStyle: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["drilldown"];
                                                        };
                                                        readonly expanded: {
                                                            readonly type: "string";
                                                            readonly const: "always";
                                                        };
                                                        readonly selectFirstItemOnExpand: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly flatten: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linkedSidebars: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "object";
                                                                readonly additionalProperties: true;
                                                            };
                                                        };
                                                        readonly rbac: {
                                                            readonly type: "object";
                                                            readonly additionalProperties: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly page: {
                                                readonly type: "string";
                                            };
                                            readonly directory: {
                                                readonly type: "string";
                                            };
                                            readonly disconnect: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly group: {
                                                readonly type: "string";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                            readonly external: {
                                                readonly type: "boolean";
                                            };
                                            readonly labelTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly groupTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly icon: {
                                                readonly oneOf: readonly [{
                                                    readonly type: "string";
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly srcSet: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["srcSet"];
                                                }];
                                            };
                                            readonly separator: {
                                                readonly type: "string";
                                            };
                                            readonly separatorLine: {
                                                readonly type: "boolean";
                                            };
                                            readonly linePosition: {
                                                readonly type: "string";
                                                readonly enum: readonly ["top", "bottom"];
                                                readonly default: "top";
                                            };
                                            readonly version: {
                                                readonly type: "string";
                                            };
                                            readonly menuStyle: {
                                                readonly type: "string";
                                                readonly enum: readonly ["drilldown"];
                                            };
                                            readonly expanded: {
                                                readonly type: "string";
                                                readonly const: "always";
                                            };
                                            readonly selectFirstItemOnExpand: {
                                                readonly type: "boolean";
                                            };
                                            readonly flatten: {
                                                readonly type: "boolean";
                                            };
                                            readonly linkedSidebars: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly rbac: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly type: "object";
                                    };
                                };
                                readonly requiredPermission: {
                                    readonly type: "string";
                                };
                                readonly separateVersions: {
                                    readonly type: "boolean";
                                };
                                readonly title: {
                                    readonly type: "string";
                                };
                                readonly titleTranslationKey: {
                                    readonly type: "string";
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                                readonly descriptionTranslationKey: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly scorecard: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly required: readonly [];
                    readonly properties: {
                        readonly ignoreNonCompliant: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly teamMetadataProperty: {
                            readonly type: "object";
                            readonly properties: {
                                readonly property: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly default: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly levels: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["name"];
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly color: {
                                        readonly type: "string";
                                    };
                                    readonly extends: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rules: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                            }, {
                                                readonly type: "object";
                                            }];
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly targets: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["where"];
                                readonly properties: {
                                    readonly minimumLevel: {
                                        readonly type: "string";
                                    };
                                    readonly rules: {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly where: {
                                        readonly type: "object";
                                        readonly required: readonly ["metadata"];
                                        readonly properties: {
                                            readonly metadata: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly ignore: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                };
            };
            readonly additionalProperties: true;
        };
        readonly reunite: {
            readonly type: "object";
            readonly properties: {
                readonly ignoreLint: {
                    readonly oneOf: readonly [{
                        readonly type: "boolean";
                        readonly default: false;
                    }, {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "boolean";
                        };
                    }];
                };
                readonly ignoreLinkChecker: {
                    readonly type: "boolean";
                };
                readonly ignoreMarkdocErrors: {
                    readonly type: "boolean";
                };
                readonly jobs: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly path: {
                                readonly type: "string";
                                readonly pattern: "^(?!\\.\\./)(/[a-zA-Z0-9_\\-\\./]+|./[a-zA-Z0-9_\\-\\./]+|[a-zA-Z0-9_\\-\\./]+)$";
                            };
                            readonly agent: {
                                readonly type: "string";
                                readonly enum: readonly ["respect"];
                            };
                            readonly trigger: {
                                readonly type: "object";
                                readonly additionalProperties: false;
                                readonly properties: {
                                    readonly event: {
                                        readonly type: "string";
                                        readonly enum: readonly ["schedule"];
                                    };
                                    readonly interval: {
                                        readonly type: "string";
                                        readonly pattern: "^[1-9]\\d*[mhdw]$";
                                    };
                                };
                                readonly required: readonly ["event"];
                            };
                            readonly inputs: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                            readonly servers: {
                                readonly type: "object";
                                readonly additionalProperties: false;
                                readonly patternProperties: {
                                    readonly '^[a-zA-Z0-9_-]+$': {
                                        readonly type: "string";
                                        readonly pattern: "^https?://[^\\s/$.?#].[^\\s]*$";
                                    };
                                };
                            };
                            readonly severity: {
                                readonly type: "object";
                                readonly additionalProperties: false;
                                readonly properties: {
                                    readonly schemaCheck: {
                                        readonly type: "string";
                                        readonly enum: readonly ["error", "warn", "off"];
                                    };
                                    readonly statusCodeCheck: {
                                        readonly type: "string";
                                        readonly enum: readonly ["error", "warn", "off"];
                                    };
                                    readonly contentTypeCheck: {
                                        readonly type: "string";
                                        readonly enum: readonly ["error", "warn", "off"];
                                    };
                                    readonly successCriteriaCheck: {
                                        readonly type: "string";
                                        readonly enum: readonly ["error", "warn", "off"];
                                    };
                                };
                            };
                        };
                        readonly required: readonly ["path", "trigger", "agent"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly logo: {
            readonly type: "object";
            readonly properties: {
                readonly image: {
                    readonly type: "string";
                };
                readonly srcSet: {
                    readonly type: "string";
                };
                readonly altText: {
                    readonly type: "string";
                };
                readonly link: {
                    readonly type: "string";
                };
                readonly favicon: {
                    readonly type: "string";
                };
            };
            readonly additionalProperties: false;
        };
        readonly navbar: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly items: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly items: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly page: {
                                            readonly type: "string";
                                        };
                                        readonly directory: {
                                            readonly type: "string";
                                        };
                                        readonly disconnect: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly group: {
                                            readonly type: "string";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly href: {
                                            readonly type: "string";
                                        };
                                        readonly external: {
                                            readonly type: "boolean";
                                        };
                                        readonly labelTranslationKey: {
                                            readonly type: "string";
                                        };
                                        readonly groupTranslationKey: {
                                            readonly type: "string";
                                        };
                                        readonly icon: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                            }, {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly srcSet: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["srcSet"];
                                            }];
                                        };
                                        readonly separator: {
                                            readonly type: "string";
                                        };
                                        readonly separatorLine: {
                                            readonly type: "boolean";
                                        };
                                        readonly linePosition: {
                                            readonly type: "string";
                                            readonly enum: readonly ["top", "bottom"];
                                            readonly default: "top";
                                        };
                                        readonly version: {
                                            readonly type: "string";
                                        };
                                        readonly menuStyle: {
                                            readonly type: "string";
                                            readonly enum: readonly ["drilldown"];
                                        };
                                        readonly expanded: {
                                            readonly type: "string";
                                            readonly const: "always";
                                        };
                                        readonly selectFirstItemOnExpand: {
                                            readonly type: "boolean";
                                        };
                                        readonly flatten: {
                                            readonly type: "boolean";
                                        };
                                        readonly linkedSidebars: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly additionalProperties: true;
                                            };
                                        };
                                        readonly rbac: {
                                            readonly type: "object";
                                            readonly additionalProperties: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly page: {
                                readonly type: "string";
                            };
                            readonly directory: {
                                readonly type: "string";
                            };
                            readonly disconnect: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly group: {
                                readonly type: "string";
                            };
                            readonly label: {
                                readonly type: "string";
                            };
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly external: {
                                readonly type: "boolean";
                            };
                            readonly labelTranslationKey: {
                                readonly type: "string";
                            };
                            readonly groupTranslationKey: {
                                readonly type: "string";
                            };
                            readonly icon: {
                                readonly oneOf: readonly [{
                                    readonly type: "string";
                                }, {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly srcSet: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["srcSet"];
                                }];
                            };
                            readonly separator: {
                                readonly type: "string";
                            };
                            readonly separatorLine: {
                                readonly type: "boolean";
                            };
                            readonly linePosition: {
                                readonly type: "string";
                                readonly enum: readonly ["top", "bottom"];
                                readonly default: "top";
                            };
                            readonly version: {
                                readonly type: "string";
                            };
                            readonly menuStyle: {
                                readonly type: "string";
                                readonly enum: readonly ["drilldown"];
                            };
                            readonly expanded: {
                                readonly type: "string";
                                readonly const: "always";
                            };
                            readonly selectFirstItemOnExpand: {
                                readonly type: "boolean";
                            };
                            readonly flatten: {
                                readonly type: "boolean";
                            };
                            readonly linkedSidebars: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly rbac: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly type: "object";
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly products: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly name: {
                        readonly type: "string";
                    };
                    readonly icon: {
                        readonly type: "string";
                    };
                    readonly folder: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["name", "folder"];
            };
        };
        readonly footer: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly items: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly items: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly page: {
                                            readonly type: "string";
                                        };
                                        readonly directory: {
                                            readonly type: "string";
                                        };
                                        readonly disconnect: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly group: {
                                            readonly type: "string";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly href: {
                                            readonly type: "string";
                                        };
                                        readonly external: {
                                            readonly type: "boolean";
                                        };
                                        readonly labelTranslationKey: {
                                            readonly type: "string";
                                        };
                                        readonly groupTranslationKey: {
                                            readonly type: "string";
                                        };
                                        readonly icon: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                            }, {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly srcSet: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["srcSet"];
                                            }];
                                        };
                                        readonly separator: {
                                            readonly type: "string";
                                        };
                                        readonly separatorLine: {
                                            readonly type: "boolean";
                                        };
                                        readonly linePosition: {
                                            readonly type: "string";
                                            readonly enum: readonly ["top", "bottom"];
                                            readonly default: "top";
                                        };
                                        readonly version: {
                                            readonly type: "string";
                                        };
                                        readonly menuStyle: {
                                            readonly type: "string";
                                            readonly enum: readonly ["drilldown"];
                                        };
                                        readonly expanded: {
                                            readonly type: "string";
                                            readonly const: "always";
                                        };
                                        readonly selectFirstItemOnExpand: {
                                            readonly type: "boolean";
                                        };
                                        readonly flatten: {
                                            readonly type: "boolean";
                                        };
                                        readonly linkedSidebars: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly additionalProperties: true;
                                            };
                                        };
                                        readonly rbac: {
                                            readonly type: "object";
                                            readonly additionalProperties: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly page: {
                                readonly type: "string";
                            };
                            readonly directory: {
                                readonly type: "string";
                            };
                            readonly disconnect: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly group: {
                                readonly type: "string";
                            };
                            readonly label: {
                                readonly type: "string";
                            };
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly external: {
                                readonly type: "boolean";
                            };
                            readonly labelTranslationKey: {
                                readonly type: "string";
                            };
                            readonly groupTranslationKey: {
                                readonly type: "string";
                            };
                            readonly icon: {
                                readonly oneOf: readonly [{
                                    readonly type: "string";
                                }, {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly srcSet: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["srcSet"];
                                }];
                            };
                            readonly separator: {
                                readonly type: "string";
                            };
                            readonly separatorLine: {
                                readonly type: "boolean";
                            };
                            readonly linePosition: {
                                readonly type: "string";
                                readonly enum: readonly ["top", "bottom"];
                                readonly default: "top";
                            };
                            readonly version: {
                                readonly type: "string";
                            };
                            readonly menuStyle: {
                                readonly type: "string";
                                readonly enum: readonly ["drilldown"];
                            };
                            readonly expanded: {
                                readonly type: "string";
                                readonly const: "always";
                            };
                            readonly selectFirstItemOnExpand: {
                                readonly type: "boolean";
                            };
                            readonly flatten: {
                                readonly type: "boolean";
                            };
                            readonly linkedSidebars: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly rbac: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly copyrightText: {
                    readonly type: "string";
                };
                readonly logo: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                };
            };
            readonly additionalProperties: false;
        };
        readonly sidebar: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly separatorLine: {
                    readonly type: "boolean";
                };
                readonly linePosition: {
                    readonly type: "string";
                    readonly enum: readonly ["top", "bottom"];
                    readonly default: "bottom";
                };
            };
            readonly additionalProperties: false;
        };
        readonly scripts: {
            readonly type: "object";
            readonly properties: {
                readonly head: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly src: {
                                readonly type: "string";
                            };
                            readonly async: {
                                readonly type: "boolean";
                            };
                            readonly crossorigin: {
                                readonly type: "string";
                            };
                            readonly defer: {
                                readonly type: "boolean";
                            };
                            readonly fetchpriority: {
                                readonly type: "string";
                            };
                            readonly integrity: {
                                readonly type: "string";
                            };
                            readonly module: {
                                readonly type: "boolean";
                            };
                            readonly nomodule: {
                                readonly type: "boolean";
                            };
                            readonly nonce: {
                                readonly type: "string";
                            };
                            readonly referrerpolicy: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["src"];
                        readonly additionalProperties: true;
                    };
                };
                readonly body: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly src: {
                                readonly type: "string";
                            };
                            readonly async: {
                                readonly type: "boolean";
                            };
                            readonly crossorigin: {
                                readonly type: "string";
                            };
                            readonly defer: {
                                readonly type: "boolean";
                            };
                            readonly fetchpriority: {
                                readonly type: "string";
                            };
                            readonly integrity: {
                                readonly type: "string";
                            };
                            readonly module: {
                                readonly type: "boolean";
                            };
                            readonly nomodule: {
                                readonly type: "boolean";
                            };
                            readonly nonce: {
                                readonly type: "string";
                            };
                            readonly referrerpolicy: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["src"];
                        readonly additionalProperties: true;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly links: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly href: {
                        readonly type: "string";
                    };
                    readonly as: {
                        readonly type: "string";
                    };
                    readonly crossorigin: {
                        readonly type: "string";
                    };
                    readonly fetchpriority: {
                        readonly type: "string";
                    };
                    readonly hreflang: {
                        readonly type: "string";
                    };
                    readonly imagesizes: {
                        readonly type: "string";
                    };
                    readonly imagesrcset: {
                        readonly type: "string";
                    };
                    readonly integrity: {
                        readonly type: "string";
                    };
                    readonly media: {
                        readonly type: "string";
                    };
                    readonly prefetch: {
                        readonly type: "string";
                    };
                    readonly referrerpolicy: {
                        readonly type: "string";
                    };
                    readonly rel: {
                        readonly type: "string";
                    };
                    readonly sizes: {
                        readonly type: "string";
                    };
                    readonly title: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["href"];
                readonly additionalProperties: true;
            };
        };
        readonly feedback: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly type: {
                    readonly type: "string";
                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                    readonly default: "sentiment";
                };
                readonly settings: {
                    readonly type: "object";
                    readonly properties: {
                        readonly label: {
                            readonly type: "string";
                        };
                        readonly submitText: {
                            readonly type: "string";
                        };
                        readonly buttonText: {
                            readonly type: "string";
                        };
                        readonly component: {
                            readonly type: "string";
                            readonly enum: readonly ["radio", "checkbox"];
                            readonly default: "checkbox";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                        };
                        readonly leftScaleLabel: {
                            readonly type: "string";
                        };
                        readonly rightScaleLabel: {
                            readonly type: "string";
                        };
                        readonly reasons: {
                            readonly type: "object";
                            readonly properties: {
                                readonly like: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly dislike: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly satisfied: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly neutral: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly dissatisfied: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly comment: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly likeLabel: {
                                    readonly type: "string";
                                };
                                readonly dislikeLabel: {
                                    readonly type: "string";
                                };
                                readonly satisfiedLabel: {
                                    readonly type: "string";
                                };
                                readonly neutralLabel: {
                                    readonly type: "string";
                                };
                                readonly dissatisfiedLabel: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly optionalEmail: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly placeholder: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
            };
            readonly additionalProperties: false;
        };
        readonly search: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly engine: {
                    readonly type: "string";
                    readonly enum: readonly ["flexsearch", "typesense"];
                    readonly default: "flexsearch";
                };
                readonly ai: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly suggestions: {
                            readonly default: readonly [];
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly prompt: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly filters: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly facets: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["name", "field", "type"];
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly field: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["multi-select", "select", "tags"];
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly placement: {
                    readonly type: "string";
                    readonly default: "navbar";
                };
                readonly shortcuts: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly ["/"];
                };
                readonly suggestedPages: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly page: {
                                readonly type: "string";
                            };
                            readonly label: {
                                readonly type: "string";
                            };
                            readonly labelTranslationKey: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["page"];
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly colorMode: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly ignoreDetection: {
                    readonly type: "boolean";
                };
                readonly modes: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly ["light", "dark"];
                };
            };
            readonly additionalProperties: false;
        };
        readonly navigation: {
            readonly type: "object";
            readonly properties: {
                readonly nextButton: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly text: {
                            readonly type: "string";
                            readonly default: "Next page";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly previousButton: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly text: {
                            readonly type: "string";
                            readonly default: "Previous page";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
            };
            readonly additionalProperties: false;
        };
        readonly codeSnippet: {
            readonly type: "object";
            readonly properties: {
                readonly elementFormat: {
                    readonly type: "string";
                    readonly default: "icon";
                };
                readonly copy: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {
                        readonly hide: false;
                    };
                };
                readonly report: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly tooltipText: {
                            readonly type: "string";
                        };
                        readonly buttonText: {
                            readonly type: "string";
                        };
                        readonly label: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {
                        readonly hide: false;
                    };
                };
                readonly expand: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {
                        readonly hide: false;
                    };
                };
                readonly collapse: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {
                        readonly hide: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly markdown: {
            readonly type: "object";
            readonly properties: {
                readonly frontMatterKeysToResolve: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly ["image", "links"];
                };
                readonly partialsFolders: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly ["_partials"];
                };
                readonly lastUpdatedBlock: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly format: {
                            readonly type: "string";
                            readonly enum: readonly ["timeago", "iso", "long", "short"];
                            readonly default: "timeago";
                        };
                        readonly locale: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly toc: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly header: {
                            readonly type: "string";
                            readonly default: "On this page";
                        };
                        readonly depth: {
                            readonly type: "integer";
                            readonly default: 3;
                            readonly minimum: 1;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly editPage: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly baseUrl: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
            };
            readonly additionalProperties: false;
            readonly default: {};
        };
        readonly openapi: {
            readonly properties: {
                readonly theme: {
                    readonly type: "object";
                    readonly properties: {
                        readonly breakpoints: {
                            readonly type: "object";
                            readonly properties: {
                                readonly small: {
                                    readonly type: "string";
                                };
                                readonly medium: {
                                    readonly type: "string";
                                };
                                readonly large: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly codeBlock: {
                            readonly type: "object";
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly borderRadius: {
                                    readonly type: "string";
                                };
                                readonly tokens: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly colors: {
                            readonly type: "object";
                            readonly properties: {
                                readonly accent: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly border: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly error: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly http: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly basic: {
                                            readonly type: "string";
                                        };
                                        readonly delete: {
                                            readonly type: "string";
                                        };
                                        readonly get: {
                                            readonly type: "string";
                                        };
                                        readonly head: {
                                            readonly type: "string";
                                        };
                                        readonly link: {
                                            readonly type: "string";
                                        };
                                        readonly options: {
                                            readonly type: "string";
                                        };
                                        readonly patch: {
                                            readonly type: "string";
                                        };
                                        readonly post: {
                                            readonly type: "string";
                                        };
                                        readonly put: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly primary: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly responses: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly error: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly info: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly redirect: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly success: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly secondary: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly success: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly text: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly primary: {
                                            readonly type: "string";
                                        };
                                        readonly secondary: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly tonalOffset: {
                                    readonly type: "number";
                                };
                                readonly warning: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly components: {
                            readonly type: "object";
                            readonly properties: {
                                readonly buttons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly hoverStyle: {
                                            readonly type: "string";
                                        };
                                        readonly boxShadow: {
                                            readonly type: "string";
                                        };
                                        readonly hoverBoxShadow: {
                                            readonly type: "string";
                                        };
                                        readonly sizes: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly medium: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly large: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly xlarge: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly httpBadges: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly sizes: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly medium: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontFamily: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontWeight: {
                                                            readonly type: "string";
                                                        };
                                                        readonly lineHeight: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly small: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontFamily: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontWeight: {
                                                            readonly type: "string";
                                                        };
                                                        readonly lineHeight: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly layoutControls: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly top: {
                                            readonly type: "string";
                                        };
                                        readonly width: {
                                            readonly type: "string";
                                        };
                                        readonly height: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly panels: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly tryItButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fullWidth: {
                                            readonly type: "boolean";
                                        };
                                    };
                                };
                                readonly tryItSendButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fullWidth: {
                                            readonly type: "boolean";
                                        };
                                    };
                                };
                            };
                        };
                        readonly layout: {
                            readonly type: "object";
                            readonly properties: {
                                readonly showDarkRightPanel: {
                                    readonly type: "boolean";
                                };
                                readonly stacked: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly maxWidth: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "string";
                                                };
                                                readonly medium: {
                                                    readonly type: "string";
                                                };
                                                readonly large: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly 'three-panel': {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly maxWidth: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "string";
                                                };
                                                readonly medium: {
                                                    readonly type: "string";
                                                };
                                                readonly large: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly middlePanelMaxWidth: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "string";
                                                };
                                                readonly medium: {
                                                    readonly type: "string";
                                                };
                                                readonly large: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly logo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly gutter: {
                                    readonly type: "string";
                                };
                                readonly maxHeight: {
                                    readonly type: "string";
                                };
                                readonly maxWidth: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly fab: {
                            readonly type: "object";
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly color: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly overrides: {
                            readonly type: "object";
                            readonly properties: {
                                readonly DownloadButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly custom: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly NextSectionButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly custom: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly rightPanel: {
                            readonly type: "object";
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly panelBackgroundColor: {
                                    readonly type: "string";
                                };
                                readonly panelControlsBackgroundColor: {
                                    readonly type: "string";
                                };
                                readonly showAtBreakpoint: {
                                    readonly type: "string";
                                };
                                readonly textColor: {
                                    readonly type: "string";
                                };
                                readonly width: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly schema: {
                            readonly type: "object";
                            readonly properties: {
                                readonly breakFieldNames: {
                                    readonly type: "boolean";
                                };
                                readonly caretColor: {
                                    readonly type: "string";
                                };
                                readonly caretSize: {
                                    readonly type: "string";
                                };
                                readonly constraints: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly border: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly defaultDetailsWidth: {
                                    readonly type: "string";
                                };
                                readonly examples: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly border: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly labelsTextSize: {
                                    readonly type: "string";
                                };
                                readonly linesColor: {
                                    readonly type: "string";
                                };
                                readonly nestedBackground: {
                                    readonly type: "string";
                                };
                                readonly nestingSpacing: {
                                    readonly type: "string";
                                };
                                readonly requireLabelColor: {
                                    readonly type: "string";
                                };
                                readonly typeNameColor: {
                                    readonly type: "string";
                                };
                                readonly typeTitleColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly shape: {
                            readonly type: "object";
                            readonly properties: {
                                readonly borderRadius: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly sidebar: {
                            readonly type: "object";
                            readonly properties: {
                                readonly activeBgColor: {
                                    readonly type: "string";
                                };
                                readonly activeTextColor: {
                                    readonly type: "string";
                                };
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly borderRadius: {
                                    readonly type: "string";
                                };
                                readonly breakPath: {
                                    readonly type: "boolean";
                                };
                                readonly caretColor: {
                                    readonly type: "string";
                                };
                                readonly caretSize: {
                                    readonly type: "string";
                                };
                                readonly groupItems: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly subItemsColor: {
                                            readonly type: "string";
                                        };
                                        readonly textTransform: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly level1items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly subItemsColor: {
                                            readonly type: "string";
                                        };
                                        readonly textTransform: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly rightLineColor: {
                                    readonly type: "string";
                                };
                                readonly separatorLabelColor: {
                                    readonly type: "string";
                                };
                                readonly showAtBreakpoint: {
                                    readonly type: "string";
                                };
                                readonly spacing: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly unit: {
                                            readonly type: "number";
                                        };
                                        readonly paddingHorizontal: {
                                            readonly type: "string";
                                        };
                                        readonly paddingVertical: {
                                            readonly type: "string";
                                        };
                                        readonly offsetTop: {
                                            readonly type: "string";
                                        };
                                        readonly offsetLeft: {
                                            readonly type: "string";
                                        };
                                        readonly offsetNesting: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly textColor: {
                                    readonly type: "string";
                                };
                                readonly width: {
                                    readonly type: "string";
                                };
                                readonly fontFamily: {
                                    readonly type: "string";
                                };
                                readonly fontSize: {
                                    readonly type: "string";
                                };
                                readonly fontWeight: {
                                    readonly type: "string";
                                };
                                readonly lineHeight: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly spacing: {
                            readonly type: "object";
                            readonly properties: {
                                readonly sectionHorizontal: {
                                    readonly type: "number";
                                };
                                readonly sectionVertical: {
                                    readonly type: "number";
                                };
                                readonly unit: {
                                    readonly type: "number";
                                };
                            };
                        };
                        readonly typography: {
                            readonly type: "object";
                            readonly properties: {
                                readonly fontWeightBold: {
                                    readonly type: "string";
                                };
                                readonly fontWeightLight: {
                                    readonly type: "string";
                                };
                                readonly fontWeightRegular: {
                                    readonly type: "string";
                                };
                                readonly heading1: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly heading2: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly heading3: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly headings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly lineHeight: {
                                    readonly type: "string";
                                };
                                readonly links: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly hover: {
                                            readonly type: "string";
                                        };
                                        readonly textDecoration: {
                                            readonly type: "string";
                                        };
                                        readonly hoverTextDecoration: {
                                            readonly type: "string";
                                        };
                                        readonly visited: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly optimizeSpeed: {
                                    readonly type: "boolean";
                                };
                                readonly rightPanelHeading: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly smoothing: {
                                    readonly type: "string";
                                    readonly enum: readonly ["auto", "none", "antialiased", "subpixel-antialiased", "grayscale"];
                                };
                                readonly fontFamily: {
                                    readonly type: "string";
                                };
                                readonly fontSize: {
                                    readonly type: "string";
                                };
                                readonly fontWeight: {
                                    readonly type: "string";
                                };
                                readonly code: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly wordBreak: {
                                            readonly type: "string";
                                            readonly enum: readonly ["break-all", "break-word", "keep-all", "normal", "revert", "unset", "inherit", "initial"];
                                        };
                                        readonly wrap: {
                                            readonly type: "boolean";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly fieldName: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly links: {
                            readonly properties: {
                                readonly color: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly codeSample: {
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly ctrlFHijack: {
                    readonly type: "boolean";
                };
                readonly defaultSampleLanguage: {
                    readonly type: "string";
                };
                readonly disableDeepLinks: {
                    readonly type: "boolean";
                };
                readonly disableSearch: {
                    readonly type: "boolean";
                };
                readonly disableSidebar: {
                    readonly type: "boolean";
                };
                readonly downloadDefinitionUrl: {
                    readonly type: "string";
                };
                readonly expandDefaultServerVariables: {
                    readonly type: "boolean";
                };
                readonly enumSkipQuotes: {
                    readonly type: "boolean";
                };
                readonly expandDefaultRequest: {
                    readonly type: "boolean";
                };
                readonly expandDefaultResponse: {
                    readonly type: "boolean";
                };
                readonly expandResponses: {
                    readonly type: "string";
                };
                readonly expandSingleSchemaField: {
                    readonly type: "boolean";
                };
                readonly generateCodeSamples: {
                    readonly type: "object";
                    readonly properties: {
                        readonly skipOptionalParameters: {
                            readonly type: "boolean";
                        };
                        readonly languages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly lang: {
                                        readonly enum: readonly ["curl", "C#", "Go", "Java", "Java8+Apache", "JavaScript", "Node.js", "PHP", "Python", "R", "Ruby"];
                                    };
                                };
                                readonly required: readonly ["lang"];
                            };
                        };
                    };
                    readonly required: readonly ["languages"];
                };
                readonly generatedPayloadSamplesMaxDepth: {
                    readonly type: "number";
                };
                readonly hideDownloadButton: {
                    readonly type: "boolean";
                };
                readonly hideHostname: {
                    readonly type: "boolean";
                };
                readonly hideInfoSection: {
                    readonly type: "boolean";
                };
                readonly hideLogo: {
                    readonly type: "boolean";
                };
                readonly hideRequestPayloadSample: {
                    readonly type: "boolean";
                };
                readonly hideRightPanel: {
                    readonly type: "boolean";
                };
                readonly hideSchemaPattern: {
                    readonly type: "boolean";
                };
                readonly hideSingleRequestSampleTab: {
                    readonly type: "boolean";
                };
                readonly hideSecuritySection: {
                    readonly type: "boolean";
                };
                readonly hideTryItPanel: {
                    readonly type: "boolean";
                };
                readonly hideFab: {
                    readonly type: "boolean";
                };
                readonly hideOneOfDescription: {
                    readonly type: "boolean";
                };
                readonly htmlTemplate: {
                    readonly type: "string";
                };
                readonly jsonSampleExpandLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                        readonly minimum: 1;
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly labels: {
                    readonly type: "object";
                    readonly properties: {
                        readonly enum: {
                            readonly type: "string";
                        };
                        readonly enumSingleValue: {
                            readonly type: "string";
                        };
                        readonly enumArray: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "string";
                        };
                        readonly deprecated: {
                            readonly type: "string";
                        };
                        readonly example: {
                            readonly type: "string";
                        };
                        readonly examples: {
                            readonly type: "string";
                        };
                        readonly nullable: {
                            readonly type: "string";
                        };
                        readonly recursive: {
                            readonly type: "string";
                        };
                        readonly arrayOf: {
                            readonly type: "string";
                        };
                        readonly webhook: {
                            readonly type: "string";
                        };
                        readonly authorizations: {
                            readonly type: "string";
                        };
                        readonly tryItAuthBasicUsername: {
                            readonly type: "string";
                        };
                        readonly tryItAuthBasicPassword: {
                            readonly type: "string";
                        };
                    };
                };
                readonly menuToggle: {
                    readonly type: "boolean";
                };
                readonly nativeScrollbars: {
                    readonly type: "boolean";
                };
                readonly noAutoAuth: {
                    readonly type: "boolean";
                };
                readonly onDeepLinkClick: {
                    readonly type: "object";
                };
                readonly pagination: {
                    readonly enum: readonly ["none", "section", "item"];
                };
                readonly pathInMiddlePanel: {
                    readonly type: "boolean";
                };
                readonly payloadSampleIdx: {
                    readonly type: "number";
                    readonly minimum: 0;
                };
                readonly requestInterceptor: {
                    readonly type: "object";
                };
                readonly requiredPropsFirst: {
                    readonly type: "boolean";
                };
                readonly routingStrategy: {
                    readonly type: "string";
                };
                readonly samplesTabsMaxCount: {
                    readonly type: "number";
                };
                readonly schemaExpansionLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                        readonly minimum: 0;
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly minCharacterLengthToInitSearch: {
                    readonly type: "number";
                    readonly minimum: 1;
                };
                readonly maxResponseHeadersToShowInTryIt: {
                    readonly type: "number";
                    readonly minimum: 0;
                };
                readonly scrollYOffset: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly searchAutoExpand: {
                    readonly type: "boolean";
                };
                readonly searchFieldLevelBoost: {
                    readonly type: "number";
                    readonly minimum: 0;
                };
                readonly searchMaxDepth: {
                    readonly type: "number";
                    readonly minimum: 1;
                };
                readonly searchMode: {
                    readonly type: "string";
                    readonly enum: readonly ["default", "path-only"];
                };
                readonly searchOperationTitleBoost: {
                    readonly type: "number";
                };
                readonly searchTagTitleBoost: {
                    readonly type: "number";
                };
                readonly sendXUserAgentInTryIt: {
                    readonly type: "boolean";
                };
                readonly showChangeLayoutButton: {
                    readonly type: "boolean";
                };
                readonly showConsole: {
                    readonly type: "boolean";
                };
                readonly showNextButton: {
                    readonly type: "boolean";
                };
                readonly showRightPanelToggle: {
                    readonly type: "boolean";
                };
                readonly showSecuritySchemeType: {
                    readonly type: "boolean";
                };
                readonly showWebhookVerb: {
                    readonly type: "boolean";
                };
                readonly showObjectSchemaExamples: {
                    readonly type: "boolean";
                };
                readonly disableTryItRequestUrlEncoding: {
                    readonly type: "boolean";
                };
                readonly sidebarLinks: {
                    readonly type: "object";
                    readonly properties: {
                        readonly beforeInfo: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly target: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["label", "link"];
                            };
                        };
                        readonly end: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly target: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["label", "link"];
                            };
                        };
                    };
                };
                readonly sideNavStyle: {
                    readonly type: "string";
                    readonly enum: readonly ["summary-only", "path-first", "id-only", "path-only"];
                };
                readonly simpleOneOfTypeLabel: {
                    readonly type: "boolean";
                };
                readonly sortEnumValuesAlphabetically: {
                    readonly type: "boolean";
                };
                readonly sortOperationsAlphabetically: {
                    readonly type: "boolean";
                };
                readonly sortPropsAlphabetically: {
                    readonly type: "boolean";
                };
                readonly sortTagsAlphabetically: {
                    readonly type: "boolean";
                };
                readonly suppressWarnings: {
                    readonly type: "boolean";
                };
                readonly unstable_externalDescription: {
                    readonly type: "boolean";
                };
                readonly unstable_ignoreMimeParameters: {
                    readonly type: "boolean";
                };
                readonly untrustedDefinition: {
                    readonly type: "boolean";
                };
                readonly showAccessMode: {
                    readonly type: "boolean";
                };
                readonly preserveOriginalExtensionsName: {
                    readonly type: "boolean";
                };
                readonly markdownHeadingsAnchorLevel: {
                    readonly type: "number";
                };
                readonly licenseKey: {
                    readonly type: "string";
                };
                readonly hideLoading: {
                    readonly type: "boolean";
                };
                readonly disableRouter: {
                    readonly type: "boolean";
                };
                readonly hideSidebar: {
                    readonly type: "boolean";
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly like: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dislike: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly satisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly neutral: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dissatisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly optionalEmail: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly placeholder: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly hideReplay: {
                    readonly type: "boolean";
                };
                readonly oAuth2RedirectURI: {
                    readonly type: "string";
                    readonly nullable: true;
                };
                readonly corsProxyUrl: {
                    readonly type: "string";
                };
                readonly sortRequiredPropsFirst: {
                    readonly type: "boolean";
                };
                readonly sanitize: {
                    readonly type: "boolean";
                };
                readonly hideDownloadButtons: {
                    readonly type: "boolean";
                };
                readonly downloadUrls: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["url"];
                        readonly additionalProperties: false;
                    };
                };
                readonly onlyRequiredInSamples: {
                    readonly type: "boolean";
                };
                readonly generatedSamplesMaxDepth: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly showExtensions: {
                    readonly oneOf: readonly [{
                        readonly type: "boolean";
                    }, {
                        readonly type: "string";
                    }, {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }];
                };
                readonly hideSchemaTitles: {
                    readonly type: "boolean";
                };
                readonly jsonSamplesExpandLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly schemasExpansionLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly mockServer: {
                    readonly type: "object";
                    readonly properties: {
                        readonly url: {
                            readonly type: "string";
                        };
                        readonly position: {
                            readonly type: "string";
                            readonly enum: readonly ["first", "last", "replace", "off"];
                        };
                        readonly description: {
                            readonly type: "string";
                        };
                    };
                };
                readonly maxDisplayedEnumValues: {
                    readonly type: "number";
                };
                readonly schemaDefinitionsTagName: {
                    readonly type: "string";
                };
                readonly layout: {
                    readonly type: "string";
                    readonly enum: readonly ["stacked", "three-panel"];
                };
                readonly hideInfoMetadata: {
                    readonly type: "boolean";
                };
                readonly events: {
                    readonly type: "object";
                };
                readonly skipBundle: {
                    readonly type: "boolean";
                };
                readonly routingBasePath: {
                    readonly type: "string";
                };
                readonly codeSamples: {
                    readonly type: "object";
                    readonly properties: {
                        readonly languages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly lang: {
                                        readonly type: "string";
                                        readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly options: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly indent: {
                                                readonly type: "string";
                                            };
                                            readonly withImports: {
                                                readonly type: "boolean";
                                            };
                                            readonly withComments: {
                                                readonly type: "boolean";
                                            };
                                            readonly binary: {
                                                readonly type: "boolean";
                                            };
                                            readonly credentials: {
                                                readonly type: "string";
                                                readonly enum: readonly ["omit", "same-origin", "include"];
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly required: readonly ["lang"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly skipOptionalParameters: {
                            readonly type: "boolean";
                        };
                        readonly withOAuth2Call: {
                            readonly type: "boolean";
                        };
                    };
                    readonly required: readonly ["languages"];
                    readonly additionalProperties: false;
                };
                readonly ignoreNamedSchemas: {
                    readonly oneOf: readonly [{
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly hidePropertiesPrefix: {
                    readonly type: "boolean";
                };
                readonly excludeFromSearch: {
                    readonly type: "boolean";
                };
            };
            readonly type: "object";
            readonly additionalProperties: false;
        };
        readonly graphql: {
            readonly type: "object";
            readonly properties: {
                readonly hidePaginationButtons: {
                    readonly type: "boolean";
                };
                readonly menu: {
                    readonly type: "object";
                    readonly properties: {
                        readonly requireExactGroups: {
                            readonly type: "boolean";
                        };
                        readonly groups: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly queries: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly mutations: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly subscriptions: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly types: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly directives: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly required: readonly ["name"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly otherItemsGroupName: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly sidebar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                    };
                };
                readonly apiLogo: {
                    readonly type: "object";
                    readonly properties: {
                        readonly imageUrl: {
                            readonly type: "string";
                        };
                        readonly href: {
                            readonly type: "string";
                        };
                        readonly altText: {
                            readonly type: "string";
                        };
                        readonly backgroundColor: {
                            readonly type: "string";
                        };
                    };
                };
                readonly jsonSamplesDepth: {
                    readonly type: "number";
                };
                readonly samplesMaxInlineArgs: {
                    readonly type: "number";
                };
                readonly licenseKey: {
                    readonly type: "string";
                };
                readonly fieldExpandLevel: {
                    readonly type: "number";
                };
                readonly baseUrlPath: {
                    readonly type: "string";
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly like: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dislike: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly satisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly neutral: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dissatisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly optionalEmail: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly placeholder: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
            };
            readonly additionalProperties: false;
        };
        readonly analytics: {
            readonly type: "object";
            readonly properties: {
                readonly adobe: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly scriptUrl: {
                            readonly type: "string";
                        };
                        readonly pageViewEventName: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["scriptUrl"];
                };
                readonly amplitude: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly apiKey: {
                            readonly type: "string";
                        };
                        readonly head: {
                            readonly type: "boolean";
                        };
                        readonly respectDNT: {
                            readonly type: "boolean";
                        };
                        readonly exclude: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly outboundClickEventName: {
                            readonly type: "string";
                        };
                        readonly pageViewEventName: {
                            readonly type: "string";
                        };
                        readonly amplitudeConfig: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["apiKey"];
                };
                readonly fullstory: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly orgId: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["orgId"];
                };
                readonly heap: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly appId: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["appId"];
                };
                readonly rudderstack: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly writeKey: {
                            readonly type: "string";
                            readonly minLength: 10;
                        };
                        readonly trackPage: {
                            readonly type: "boolean";
                        };
                        readonly dataPlaneUrl: {
                            readonly type: "string";
                        };
                        readonly controlPlaneUrl: {
                            readonly type: "string";
                        };
                        readonly sdkUrl: {
                            readonly type: "string";
                        };
                        readonly loadOptions: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["writeKey"];
                };
                readonly segment: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly writeKey: {
                            readonly type: "string";
                            readonly minLength: 10;
                        };
                        readonly trackPage: {
                            readonly type: "boolean";
                        };
                        readonly includeTitleInPageCall: {
                            readonly type: "boolean";
                        };
                        readonly host: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["writeKey"];
                };
                readonly gtm: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly trackingId: {
                            readonly type: "string";
                        };
                        readonly gtmAuth: {
                            readonly type: "string";
                        };
                        readonly gtmPreview: {
                            readonly type: "string";
                        };
                        readonly defaultDataLayer: {};
                        readonly dataLayerName: {
                            readonly type: "string";
                        };
                        readonly enableWebVitalsTracking: {
                            readonly type: "boolean";
                        };
                        readonly selfHostedOrigin: {
                            readonly type: "string";
                        };
                        readonly pageViewEventName: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["trackingId"];
                };
                readonly ga: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly trackingId: {
                            readonly type: "string";
                        };
                        readonly conversionId: {
                            readonly type: "string";
                        };
                        readonly floodlightId: {
                            readonly type: "string";
                        };
                        readonly head: {
                            readonly type: "boolean";
                        };
                        readonly respectDNT: {
                            readonly type: "boolean";
                        };
                        readonly exclude: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly optimizeId: {
                            readonly type: "string";
                        };
                        readonly anonymizeIp: {
                            readonly type: "boolean";
                        };
                        readonly cookieExpires: {
                            readonly type: "number";
                        };
                        readonly trackers: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly includeInDevelopment: {
                                        readonly type: "boolean";
                                    };
                                    readonly trackingId: {
                                        readonly type: "string";
                                    };
                                    readonly conversionId: {
                                        readonly type: "string";
                                    };
                                    readonly floodlightId: {
                                        readonly type: "string";
                                    };
                                    readonly optimizeId: {
                                        readonly type: "string";
                                    };
                                    readonly exclude: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly required: readonly ["trackingId"];
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["trackingId"];
                };
            };
        };
        readonly userMenu: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly items: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly label: {
                                readonly type: "string";
                            };
                            readonly external: {
                                readonly type: "boolean";
                            };
                            readonly link: {
                                readonly type: "string";
                            };
                            readonly separatorLine: {
                                readonly type: "boolean";
                            };
                        };
                        readonly additionalProperties: true;
                    };
                    readonly default: readonly [];
                };
                readonly hideLoginButton: {
                    readonly type: "boolean";
                };
            };
            readonly additionalProperties: false;
        };
        readonly versionPicker: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly showForUnversioned: {
                    readonly type: "boolean";
                };
            };
        };
        readonly breadcrumbs: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly prefixItems: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly label: {
                                readonly type: "string";
                            };
                            readonly labelTranslationKey: {
                                readonly type: "string";
                            };
                            readonly page: {
                                readonly type: "string";
                            };
                        };
                        readonly additionalProperties: false;
                        readonly default: {};
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly catalog: {
            readonly type: "object";
            readonly patternProperties: {
                readonly '.*': {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly required: readonly ["slug", "items"];
                    readonly properties: {
                        readonly slug: {
                            readonly type: "string";
                        };
                        readonly filters: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly additionalProperties: false;
                                readonly required: readonly ["title", "property"];
                                readonly properties: {
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["select", "checkboxes", "date-range"];
                                        readonly default: "checkboxes";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly titleTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly property: {
                                        readonly type: "string";
                                    };
                                    readonly parentFilter: {
                                        readonly type: "string";
                                    };
                                    readonly valuesMapping: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly missingCategoryName: {
                                        readonly type: "string";
                                    };
                                    readonly missingCategoryNameTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly options: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly groupByFirstFilter: {
                            readonly type: "boolean";
                        };
                        readonly filterValuesCasing: {
                            readonly type: "string";
                            readonly enum: readonly ["sentence", "original", "lowercase", "uppercase"];
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                                readonly rbac: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rbac: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                        readonly requiredPermission: {
                            readonly type: "string";
                        };
                        readonly separateVersions: {
                            readonly type: "boolean";
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly titleTranslationKey: {
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly type: "string";
                        };
                        readonly descriptionTranslationKey: {
                            readonly type: "string";
                        };
                    };
                };
            };
        };
        readonly scorecard: {
            readonly type: "object";
            readonly additionalProperties: true;
            readonly required: readonly [];
            readonly properties: {
                readonly ignoreNonCompliant: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly teamMetadataProperty: {
                    readonly type: "object";
                    readonly properties: {
                        readonly property: {
                            readonly type: "string";
                        };
                        readonly label: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "string";
                        };
                    };
                };
                readonly levels: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly required: readonly ["name"];
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly color: {
                                readonly type: "string";
                            };
                            readonly extends: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly rules: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly oneOf: readonly [{
                                        readonly type: "string";
                                    }, {
                                        readonly type: "object";
                                    }];
                                };
                            };
                        };
                        readonly additionalProperties: false;
                    };
                };
                readonly targets: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly required: readonly ["where"];
                        readonly properties: {
                            readonly minimumLevel: {
                                readonly type: "string";
                            };
                            readonly rules: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly where: {
                                readonly type: "object";
                                readonly required: readonly ["metadata"];
                                readonly properties: {
                                    readonly metadata: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                };
                readonly ignore: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
        };
    };
    readonly default: {
        readonly redirects: {};
    };
    readonly additionalProperties: true;
};
export declare const rootRedoclyConfigSchema: {
    readonly properties: {
        readonly env: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly additionalProperties: false;
                readonly properties: {
                    theme: {
                        properties: {
                            logo: {
                                properties: {
                                    link: {
                                        type: "string";
                                    };
                                    srcSet: {
                                        type: "string";
                                    };
                                    image: {
                                        type: "string";
                                    };
                                    altText: {
                                        type: "string";
                                    };
                                    favicon: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            sidebar: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    separatorLine: {
                                        type: "boolean";
                                    };
                                    linePosition: {
                                        enum: ("top" | "bottom")[];
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            links: {
                                items: {
                                    properties: {
                                        type: {
                                            type: "string";
                                        };
                                        title: {
                                            type: "string";
                                        };
                                        sizes: {
                                            type: "string";
                                        };
                                        href: {
                                            type: "string";
                                        };
                                        crossorigin: {
                                            type: "string";
                                        };
                                        fetchpriority: {
                                            type: "string";
                                        };
                                        integrity: {
                                            type: "string";
                                        };
                                        referrerpolicy: {
                                            type: "string";
                                        };
                                        as: {
                                            type: "string";
                                        };
                                        hreflang: {
                                            type: "string";
                                        };
                                        imagesizes: {
                                            type: "string";
                                        };
                                        imagesrcset: {
                                            type: "string";
                                        };
                                        media: {
                                            type: "string";
                                        };
                                        prefetch: {
                                            type: "string";
                                        };
                                        rel: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: true;
                                    type: "object";
                                    required: "href"[];
                                };
                                type: "array";
                            };
                            navbar: {
                                properties: {
                                    items: {
                                        items: {
                                            properties: {
                                                label: {
                                                    type: "string";
                                                };
                                                items: {
                                                    items: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: any;
                                                            page: any;
                                                            href: any;
                                                            icon: any;
                                                            rbac: any;
                                                            directory: any;
                                                            disconnect: any;
                                                            group: any;
                                                            external: any;
                                                            labelTranslationKey: any;
                                                            groupTranslationKey: any;
                                                            separator: any;
                                                            separatorLine: any;
                                                            linePosition: any;
                                                            version: any;
                                                            menuStyle: any;
                                                            expanded: any;
                                                            selectFirstItemOnExpand: any;
                                                            flatten: any;
                                                            linkedSidebars: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    type: "array";
                                                };
                                                page: {
                                                    type: "string";
                                                };
                                                href: {
                                                    type: "string";
                                                };
                                                icon: {
                                                    oneOf: ({
                                                        type: "string";
                                                    } | {
                                                        properties: {
                                                            srcSet: any;
                                                        };
                                                        type: "object";
                                                        required: "srcSet"[];
                                                    })[];
                                                };
                                                rbac: {
                                                    additionalProperties: {
                                                        type: "string";
                                                    };
                                                    type: "object";
                                                };
                                                directory: {
                                                    type: "string";
                                                };
                                                disconnect: {
                                                    type: "boolean";
                                                };
                                                group: {
                                                    type: "string";
                                                };
                                                external: {
                                                    type: "boolean";
                                                };
                                                labelTranslationKey: {
                                                    type: "string";
                                                };
                                                groupTranslationKey: {
                                                    type: "string";
                                                };
                                                separator: {
                                                    type: "string";
                                                };
                                                separatorLine: {
                                                    type: "boolean";
                                                };
                                                linePosition: {
                                                    enum: ("top" | "bottom")[];
                                                    type: "string";
                                                };
                                                version: {
                                                    type: "string";
                                                };
                                                menuStyle: {
                                                    enum: "drilldown"[];
                                                    type: "string";
                                                };
                                                expanded: {
                                                    const: "always";
                                                    type: "string";
                                                };
                                                selectFirstItemOnExpand: {
                                                    type: "boolean";
                                                };
                                                flatten: {
                                                    type: "boolean";
                                                };
                                                linkedSidebars: {
                                                    items: {
                                                        type: "string";
                                                    };
                                                    type: "array";
                                                };
                                            };
                                            type: "object";
                                        };
                                        type: "array";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            imports: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                            products: {
                                additionalProperties: {
                                    properties: {
                                        name: {
                                            type: "string";
                                        };
                                        folder: {
                                            type: "string";
                                        };
                                        icon: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                    required: ("name" | "folder")[];
                                };
                                type: "object";
                            };
                            footer: {
                                properties: {
                                    items: {
                                        items: {
                                            properties: {
                                                label: {
                                                    type: "string";
                                                };
                                                items: {
                                                    items: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: any;
                                                            page: any;
                                                            href: any;
                                                            icon: any;
                                                            rbac: any;
                                                            directory: any;
                                                            disconnect: any;
                                                            group: any;
                                                            external: any;
                                                            labelTranslationKey: any;
                                                            groupTranslationKey: any;
                                                            separator: any;
                                                            separatorLine: any;
                                                            linePosition: any;
                                                            version: any;
                                                            menuStyle: any;
                                                            expanded: any;
                                                            selectFirstItemOnExpand: any;
                                                            flatten: any;
                                                            linkedSidebars: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    type: "array";
                                                };
                                                page: {
                                                    type: "string";
                                                };
                                                href: {
                                                    type: "string";
                                                };
                                                icon: {
                                                    oneOf: ({
                                                        type: "string";
                                                    } | {
                                                        properties: {
                                                            srcSet: any;
                                                        };
                                                        type: "object";
                                                        required: "srcSet"[];
                                                    })[];
                                                };
                                                rbac: {
                                                    additionalProperties: {
                                                        type: "string";
                                                    };
                                                    type: "object";
                                                };
                                                directory: {
                                                    type: "string";
                                                };
                                                disconnect: {
                                                    type: "boolean";
                                                };
                                                group: {
                                                    type: "string";
                                                };
                                                external: {
                                                    type: "boolean";
                                                };
                                                labelTranslationKey: {
                                                    type: "string";
                                                };
                                                groupTranslationKey: {
                                                    type: "string";
                                                };
                                                separator: {
                                                    type: "string";
                                                };
                                                separatorLine: {
                                                    type: "boolean";
                                                };
                                                linePosition: {
                                                    enum: ("top" | "bottom")[];
                                                    type: "string";
                                                };
                                                version: {
                                                    type: "string";
                                                };
                                                menuStyle: {
                                                    enum: "drilldown"[];
                                                    type: "string";
                                                };
                                                expanded: {
                                                    const: "always";
                                                    type: "string";
                                                };
                                                selectFirstItemOnExpand: {
                                                    type: "boolean";
                                                };
                                                flatten: {
                                                    type: "boolean";
                                                };
                                                linkedSidebars: {
                                                    items: {
                                                        type: "string";
                                                    };
                                                    type: "array";
                                                };
                                            };
                                            type: "object";
                                        };
                                        type: "array";
                                    };
                                    logo: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                    copyrightText: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            scripts: {
                                properties: {
                                    head: {
                                        items: {
                                            properties: {
                                                type: {
                                                    type: "string";
                                                };
                                                src: {
                                                    type: "string";
                                                };
                                                async: {
                                                    type: "boolean";
                                                };
                                                crossorigin: {
                                                    type: "string";
                                                };
                                                defer: {
                                                    type: "boolean";
                                                };
                                                fetchpriority: {
                                                    type: "string";
                                                };
                                                integrity: {
                                                    type: "string";
                                                };
                                                module: {
                                                    type: "boolean";
                                                };
                                                nomodule: {
                                                    type: "boolean";
                                                };
                                                nonce: {
                                                    type: "string";
                                                };
                                                referrerpolicy: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: true;
                                            type: "object";
                                            required: "src"[];
                                        };
                                        type: "array";
                                    };
                                    body: {
                                        items: {
                                            properties: {
                                                type: {
                                                    type: "string";
                                                };
                                                src: {
                                                    type: "string";
                                                };
                                                async: {
                                                    type: "boolean";
                                                };
                                                crossorigin: {
                                                    type: "string";
                                                };
                                                defer: {
                                                    type: "boolean";
                                                };
                                                fetchpriority: {
                                                    type: "string";
                                                };
                                                integrity: {
                                                    type: "string";
                                                };
                                                module: {
                                                    type: "boolean";
                                                };
                                                nomodule: {
                                                    type: "boolean";
                                                };
                                                nonce: {
                                                    type: "string";
                                                };
                                                referrerpolicy: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: true;
                                            type: "object";
                                            required: "src"[];
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            feedback: {
                                properties: {
                                    type: {
                                        enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                        type: "string";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                    settings: {
                                        properties: {
                                            comment: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    likeLabel: {
                                                        type: "string";
                                                    };
                                                    dislikeLabel: {
                                                        type: "string";
                                                    };
                                                    satisfiedLabel: {
                                                        type: "string";
                                                    };
                                                    neutralLabel: {
                                                        type: "string";
                                                    };
                                                    dissatisfiedLabel: {
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            reasons: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    component: {
                                                        enum: ("radio" | "checkbox")[];
                                                        type: "string";
                                                    };
                                                    like: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    dislike: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    satisfied: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    neutral: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    dissatisfied: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            label: {
                                                type: "string";
                                            };
                                            items: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                                minItems: 1;
                                            };
                                            submitText: {
                                                type: "string";
                                            };
                                            buttonText: {
                                                type: "string";
                                            };
                                            component: {
                                                enum: ("radio" | "checkbox")[];
                                                type: "string";
                                            };
                                            leftScaleLabel: {
                                                type: "string";
                                            };
                                            rightScaleLabel: {
                                                type: "string";
                                            };
                                            optionalEmail: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    placeholder: {
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            search: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    engine: {
                                        enum: ("flexsearch" | "typesense")[];
                                        type: "string";
                                    };
                                    ai: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                            suggestions: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            };
                                            prompt: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    filters: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                            facets: {
                                                items: {
                                                    properties: {
                                                        name: {
                                                            type: "string";
                                                        };
                                                        type: {
                                                            enum: ("multi-select" | "select" | "tags")[];
                                                            type: "string";
                                                        };
                                                        field: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: ("name" | "type" | "field")[];
                                                };
                                                type: "array";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    placement: {
                                        type: "string";
                                    };
                                    shortcuts: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    suggestedPages: {
                                        items: {
                                            properties: {
                                                label: {
                                                    type: "string";
                                                };
                                                page: {
                                                    type: "string";
                                                };
                                                labelTranslationKey: {
                                                    type: "string";
                                                };
                                            };
                                            type: "object";
                                            required: "page"[];
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            colorMode: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    ignoreDetection: {
                                        type: "boolean";
                                    };
                                    modes: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            navigation: {
                                properties: {
                                    nextButton: {
                                        properties: {
                                            text: {
                                                type: "string";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    previousButton: {
                                        properties: {
                                            text: {
                                                type: "string";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            codeSnippet: {
                                properties: {
                                    elementFormat: {
                                        type: "string";
                                    };
                                    copy: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    report: {
                                        properties: {
                                            label: {
                                                type: "string";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                            buttonText: {
                                                type: "string";
                                            };
                                            tooltipText: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    expand: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    collapse: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            markdown: {
                                properties: {
                                    frontMatterKeysToResolve: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    partialsFolders: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    lastUpdatedBlock: {
                                        properties: {
                                            format: {
                                                enum: ("timeago" | "iso" | "long" | "short")[];
                                                type: "string";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                            locale: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    toc: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                            header: {
                                                type: "string";
                                            };
                                            depth: {
                                                type: "integer";
                                                minimum: 1;
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    editPage: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                            baseUrl: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            openapi: {
                                properties: {
                                    theme: {
                                        properties: {
                                            breakpoints: {
                                                properties: {
                                                    small: {
                                                        type: "string";
                                                    };
                                                    medium: {
                                                        type: "string";
                                                    };
                                                    large: {
                                                        type: "string";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            codeBlock: {
                                                properties: {
                                                    backgroundColor: {
                                                        type: "string";
                                                    };
                                                    borderRadius: {
                                                        type: "string";
                                                    };
                                                    tokens: {
                                                        properties: {
                                                            fontFamily: any;
                                                            fontSize: any;
                                                            fontWeight: any;
                                                            lineHeight: any;
                                                            color: any;
                                                        };
                                                        type: "object";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            colors: {
                                                properties: {
                                                    accent: {
                                                        properties: {
                                                            main: any;
                                                            light: any;
                                                            dark: any;
                                                            contrastText: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    border: {
                                                        properties: {
                                                            main: any;
                                                            light: any;
                                                            dark: any;
                                                            contrastText: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    error: {
                                                        properties: {
                                                            main: any;
                                                            light: any;
                                                            dark: any;
                                                            contrastText: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    http: {
                                                        properties: {
                                                            link: any;
                                                            basic: any;
                                                            delete: any;
                                                            get: any;
                                                            head: any;
                                                            options: any;
                                                            patch: any;
                                                            post: any;
                                                            put: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    primary: {
                                                        properties: {
                                                            main: any;
                                                            light: any;
                                                            dark: any;
                                                            contrastText: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    responses: {
                                                        properties: {
                                                            error: any;
                                                            success: any;
                                                            info: any;
                                                            redirect: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    secondary: {
                                                        properties: {
                                                            main: any;
                                                            light: any;
                                                            dark: any;
                                                            contrastText: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    success: {
                                                        properties: {
                                                            main: any;
                                                            light: any;
                                                            dark: any;
                                                            contrastText: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    text: {
                                                        properties: {
                                                            light: any;
                                                            primary: any;
                                                            secondary: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    tonalOffset: {
                                                        type: "number";
                                                    };
                                                    warning: {
                                                        properties: {
                                                            main: any;
                                                            light: any;
                                                            dark: any;
                                                            contrastText: any;
                                                        };
                                                        type: "object";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            components: {
                                                properties: {
                                                    buttons: {
                                                        properties: {
                                                            fontFamily: any;
                                                            fontSize: any;
                                                            fontWeight: any;
                                                            lineHeight: any;
                                                            borderRadius: any;
                                                            hoverStyle: any;
                                                            boxShadow: any;
                                                            hoverBoxShadow: any;
                                                            sizes: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    httpBadges: {
                                                        properties: {
                                                            fontFamily: any;
                                                            fontSize: any;
                                                            fontWeight: any;
                                                            lineHeight: any;
                                                            borderRadius: any;
                                                            color: any;
                                                            sizes: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    layoutControls: {
                                                        properties: {
                                                            top: any;
                                                            width: any;
                                                            height: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    panels: {
                                                        properties: {
                                                            backgroundColor: any;
                                                            borderRadius: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    tryItButton: {
                                                        properties: {
                                                            fullWidth: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    tryItSendButton: {
                                                        properties: {
                                                            fullWidth: any;
                                                        };
                                                        type: "object";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            layout: {
                                                properties: {
                                                    stacked: {
                                                        properties: {
                                                            maxWidth: {
                                                                properties: {
                                                                    small: {
                                                                        type: "string";
                                                                    };
                                                                    medium: {
                                                                        type: "string";
                                                                    };
                                                                    large: {
                                                                        type: "string";
                                                                    };
                                                                };
                                                                type: "object";
                                                            };
                                                        };
                                                        type: "object";
                                                    };
                                                    "three-panel": {
                                                        properties: {
                                                            maxWidth: {
                                                                properties: {
                                                                    small: {
                                                                        type: "string";
                                                                    };
                                                                    medium: {
                                                                        type: "string";
                                                                    };
                                                                    large: {
                                                                        type: "string";
                                                                    };
                                                                };
                                                                type: "object";
                                                            };
                                                            middlePanelMaxWidth: {
                                                                properties: {
                                                                    small: {
                                                                        type: "string";
                                                                    };
                                                                    medium: {
                                                                        type: "string";
                                                                    };
                                                                    large: {
                                                                        type: "string";
                                                                    };
                                                                };
                                                                type: "object";
                                                            };
                                                        };
                                                        type: "object";
                                                    };
                                                    showDarkRightPanel: {
                                                        type: "boolean";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            logo: {
                                                properties: {
                                                    maxWidth: {
                                                        type: "string";
                                                    };
                                                    gutter: {
                                                        type: "string";
                                                    };
                                                    maxHeight: {
                                                        type: "string";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            fab: {
                                                properties: {
                                                    backgroundColor: {
                                                        type: "string";
                                                    };
                                                    color: {
                                                        type: "string";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            overrides: {
                                                properties: {
                                                    DownloadButton: {
                                                        properties: {
                                                            custom: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    NextSectionButton: {
                                                        properties: {
                                                            custom: any;
                                                        };
                                                        type: "object";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            rightPanel: {
                                                properties: {
                                                    backgroundColor: {
                                                        type: "string";
                                                    };
                                                    width: {
                                                        type: "string";
                                                    };
                                                    panelBackgroundColor: {
                                                        type: "string";
                                                    };
                                                    panelControlsBackgroundColor: {
                                                        type: "string";
                                                    };
                                                    showAtBreakpoint: {
                                                        type: "string";
                                                    };
                                                    textColor: {
                                                        type: "string";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            schema: {
                                                properties: {
                                                    examples: {
                                                        properties: {
                                                            backgroundColor: any;
                                                            border: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    breakFieldNames: {
                                                        type: "boolean";
                                                    };
                                                    caretColor: {
                                                        type: "string";
                                                    };
                                                    caretSize: {
                                                        type: "string";
                                                    };
                                                    constraints: {
                                                        properties: {
                                                            backgroundColor: any;
                                                            border: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    defaultDetailsWidth: {
                                                        type: "string";
                                                    };
                                                    labelsTextSize: {
                                                        type: "string";
                                                    };
                                                    linesColor: {
                                                        type: "string";
                                                    };
                                                    nestedBackground: {
                                                        type: "string";
                                                    };
                                                    nestingSpacing: {
                                                        type: "string";
                                                    };
                                                    requireLabelColor: {
                                                        type: "string";
                                                    };
                                                    typeNameColor: {
                                                        type: "string";
                                                    };
                                                    typeTitleColor: {
                                                        type: "string";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            shape: {
                                                properties: {
                                                    borderRadius: {
                                                        type: "string";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            sidebar: {
                                                properties: {
                                                    fontFamily: {
                                                        type: "string";
                                                    };
                                                    fontSize: {
                                                        type: "string";
                                                    };
                                                    fontWeight: {
                                                        type: "string";
                                                    };
                                                    lineHeight: {
                                                        type: "string";
                                                    };
                                                    spacing: {
                                                        properties: {
                                                            unit: any;
                                                            paddingHorizontal: any;
                                                            paddingVertical: any;
                                                            offsetTop: any;
                                                            offsetLeft: any;
                                                            offsetNesting: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    backgroundColor: {
                                                        type: "string";
                                                    };
                                                    borderRadius: {
                                                        type: "string";
                                                    };
                                                    width: {
                                                        type: "string";
                                                    };
                                                    showAtBreakpoint: {
                                                        type: "string";
                                                    };
                                                    textColor: {
                                                        type: "string";
                                                    };
                                                    caretColor: {
                                                        type: "string";
                                                    };
                                                    caretSize: {
                                                        type: "string";
                                                    };
                                                    activeBgColor: {
                                                        type: "string";
                                                    };
                                                    activeTextColor: {
                                                        type: "string";
                                                    };
                                                    breakPath: {
                                                        type: "boolean";
                                                    };
                                                    groupItems: {
                                                        properties: {
                                                            fontWeight: any;
                                                            subItemsColor: any;
                                                            textTransform: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    level1items: {
                                                        properties: {
                                                            fontWeight: any;
                                                            subItemsColor: any;
                                                            textTransform: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    rightLineColor: {
                                                        type: "string";
                                                    };
                                                    separatorLabelColor: {
                                                        type: "string";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            spacing: {
                                                properties: {
                                                    unit: {
                                                        type: "number";
                                                    };
                                                    sectionHorizontal: {
                                                        type: "number";
                                                    };
                                                    sectionVertical: {
                                                        type: "number";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            typography: {
                                                properties: {
                                                    fontFamily: {
                                                        type: "string";
                                                    };
                                                    fontSize: {
                                                        type: "string";
                                                    };
                                                    fontWeight: {
                                                        type: "string";
                                                    };
                                                    lineHeight: {
                                                        type: "string";
                                                    };
                                                    links: {
                                                        properties: {
                                                            color: any;
                                                            hover: any;
                                                            textDecoration: any;
                                                            hoverTextDecoration: any;
                                                            visited: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    fontWeightBold: {
                                                        type: "string";
                                                    };
                                                    fontWeightLight: {
                                                        type: "string";
                                                    };
                                                    fontWeightRegular: {
                                                        type: "string";
                                                    };
                                                    heading1: {
                                                        properties: {
                                                            fontFamily: {
                                                                type: "string";
                                                            };
                                                            fontSize: {
                                                                type: "string";
                                                            };
                                                            fontWeight: {
                                                                type: "string";
                                                            };
                                                            lineHeight: {
                                                                type: "string";
                                                            };
                                                            color: any;
                                                            transform: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    heading2: {
                                                        properties: {
                                                            fontFamily: {
                                                                type: "string";
                                                            };
                                                            fontSize: {
                                                                type: "string";
                                                            };
                                                            fontWeight: {
                                                                type: "string";
                                                            };
                                                            lineHeight: {
                                                                type: "string";
                                                            };
                                                            color: any;
                                                            transform: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    heading3: {
                                                        properties: {
                                                            fontFamily: {
                                                                type: "string";
                                                            };
                                                            fontSize: {
                                                                type: "string";
                                                            };
                                                            fontWeight: {
                                                                type: "string";
                                                            };
                                                            lineHeight: {
                                                                type: "string";
                                                            };
                                                            color: any;
                                                            transform: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    headings: {
                                                        properties: {
                                                            fontFamily: {
                                                                type: "string";
                                                            };
                                                            fontSize: {
                                                                type: "string";
                                                            };
                                                            fontWeight: {
                                                                type: "string";
                                                            };
                                                            lineHeight: {
                                                                type: "string";
                                                            };
                                                        };
                                                        type: "object";
                                                    };
                                                    optimizeSpeed: {
                                                        type: "boolean";
                                                    };
                                                    rightPanelHeading: {
                                                        properties: {
                                                            fontFamily: {
                                                                type: "string";
                                                            };
                                                            fontSize: {
                                                                type: "string";
                                                            };
                                                            fontWeight: {
                                                                type: "string";
                                                            };
                                                            lineHeight: {
                                                                type: "string";
                                                            };
                                                            color: any;
                                                            transform: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    smoothing: {
                                                        enum: ("auto" | "none" | "antialiased" | "subpixel-antialiased" | "grayscale")[];
                                                        type: "string";
                                                    };
                                                    code: {
                                                        properties: {
                                                            fontFamily: {
                                                                type: "string";
                                                            };
                                                            fontSize: {
                                                                type: "string";
                                                            };
                                                            fontWeight: {
                                                                type: "string";
                                                            };
                                                            lineHeight: {
                                                                type: "string";
                                                            };
                                                            backgroundColor: any;
                                                            color: any;
                                                            wordBreak: any;
                                                            wrap: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    fieldName: {
                                                        properties: {
                                                            fontFamily: {
                                                                type: "string";
                                                            };
                                                            fontSize: {
                                                                type: "string";
                                                            };
                                                            fontWeight: {
                                                                type: "string";
                                                            };
                                                            lineHeight: {
                                                                type: "string";
                                                            };
                                                        };
                                                        type: "object";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            links: {
                                                properties: {
                                                    color: {
                                                        type: "string";
                                                    };
                                                };
                                            };
                                            codeSample: {
                                                properties: {
                                                    backgroundColor: {
                                                        type: "string";
                                                    };
                                                };
                                            };
                                        };
                                        type: "object";
                                    };
                                    ctrlFHijack: {
                                        type: "boolean";
                                    };
                                    defaultSampleLanguage: {
                                        type: "string";
                                    };
                                    disableDeepLinks: {
                                        type: "boolean";
                                    };
                                    disableSearch: {
                                        type: "boolean";
                                    };
                                    disableSidebar: {
                                        type: "boolean";
                                    };
                                    downloadDefinitionUrl: {
                                        type: "string";
                                    };
                                    expandDefaultServerVariables: {
                                        type: "boolean";
                                    };
                                    enumSkipQuotes: {
                                        type: "boolean";
                                    };
                                    expandDefaultRequest: {
                                        type: "boolean";
                                    };
                                    expandDefaultResponse: {
                                        type: "boolean";
                                    };
                                    expandResponses: {
                                        type: "string";
                                    };
                                    expandSingleSchemaField: {
                                        type: "boolean";
                                    };
                                    generateCodeSamples: {
                                        properties: {
                                            languages: {
                                                items: {
                                                    properties: {
                                                        lang: {
                                                            enum: ("curl" | "JavaScript" | "Node.js" | "Python" | "Java8+Apache" | "Java" | "C#" | "PHP" | "Go" | "Ruby" | "R")[];
                                                        };
                                                        label: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                    required: "lang"[];
                                                };
                                                type: "array";
                                            };
                                            skipOptionalParameters: {
                                                type: "boolean";
                                            };
                                        };
                                        type: "object";
                                        required: "languages"[];
                                    };
                                    generatedPayloadSamplesMaxDepth: {
                                        type: "number";
                                    };
                                    hideDownloadButton: {
                                        type: "boolean";
                                    };
                                    hideHostname: {
                                        type: "boolean";
                                    };
                                    hideInfoSection: {
                                        type: "boolean";
                                    };
                                    hideLogo: {
                                        type: "boolean";
                                    };
                                    hideRequestPayloadSample: {
                                        type: "boolean";
                                    };
                                    hideRightPanel: {
                                        type: "boolean";
                                    };
                                    hideSchemaPattern: {
                                        type: "boolean";
                                    };
                                    hideSingleRequestSampleTab: {
                                        type: "boolean";
                                    };
                                    hideSecuritySection: {
                                        type: "boolean";
                                    };
                                    hideTryItPanel: {
                                        type: "boolean";
                                    };
                                    hideFab: {
                                        type: "boolean";
                                    };
                                    hideOneOfDescription: {
                                        type: "boolean";
                                    };
                                    htmlTemplate: {
                                        type: "string";
                                    };
                                    jsonSampleExpandLevel: {
                                        oneOf: ({
                                            type: "number";
                                            minimum: 1;
                                        } | {
                                            type: "string";
                                        })[];
                                    };
                                    labels: {
                                        properties: {
                                            enum: {
                                                type: "string";
                                            };
                                            examples: {
                                                type: "string";
                                            };
                                            enumSingleValue: {
                                                type: "string";
                                            };
                                            enumArray: {
                                                type: "string";
                                            };
                                            deprecated: {
                                                type: "string";
                                            };
                                            example: {
                                                type: "string";
                                            };
                                            nullable: {
                                                type: "string";
                                            };
                                            recursive: {
                                                type: "string";
                                            };
                                            arrayOf: {
                                                type: "string";
                                            };
                                            webhook: {
                                                type: "string";
                                            };
                                            authorizations: {
                                                type: "string";
                                            };
                                            tryItAuthBasicUsername: {
                                                type: "string";
                                            };
                                            tryItAuthBasicPassword: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    menuToggle: {
                                        type: "boolean";
                                    };
                                    nativeScrollbars: {
                                        type: "boolean";
                                    };
                                    noAutoAuth: {
                                        type: "boolean";
                                    };
                                    onDeepLinkClick: {
                                        type: "object";
                                    };
                                    pagination: {
                                        enum: ("none" | "section" | "item")[];
                                    };
                                    pathInMiddlePanel: {
                                        type: "boolean";
                                    };
                                    payloadSampleIdx: {
                                        type: "number";
                                        minimum: 0;
                                    };
                                    requestInterceptor: {
                                        type: "object";
                                    };
                                    requiredPropsFirst: {
                                        type: "boolean";
                                    };
                                    routingStrategy: {
                                        type: "string";
                                    };
                                    samplesTabsMaxCount: {
                                        type: "number";
                                    };
                                    schemaExpansionLevel: {
                                        oneOf: ({
                                            type: "number";
                                            minimum: 0;
                                        } | {
                                            type: "string";
                                        })[];
                                    };
                                    minCharacterLengthToInitSearch: {
                                        type: "number";
                                        minimum: 1;
                                    };
                                    maxResponseHeadersToShowInTryIt: {
                                        type: "number";
                                        minimum: 0;
                                    };
                                    scrollYOffset: {
                                        oneOf: ({
                                            type: "number";
                                        } | {
                                            type: "string";
                                        })[];
                                    };
                                    searchAutoExpand: {
                                        type: "boolean";
                                    };
                                    searchFieldLevelBoost: {
                                        type: "number";
                                        minimum: 0;
                                    };
                                    searchMaxDepth: {
                                        type: "number";
                                        minimum: 1;
                                    };
                                    searchMode: {
                                        enum: ("default" | "path-only")[];
                                        type: "string";
                                    };
                                    searchOperationTitleBoost: {
                                        type: "number";
                                    };
                                    searchTagTitleBoost: {
                                        type: "number";
                                    };
                                    sendXUserAgentInTryIt: {
                                        type: "boolean";
                                    };
                                    showChangeLayoutButton: {
                                        type: "boolean";
                                    };
                                    showConsole: {
                                        type: "boolean";
                                    };
                                    showNextButton: {
                                        type: "boolean";
                                    };
                                    showRightPanelToggle: {
                                        type: "boolean";
                                    };
                                    showSecuritySchemeType: {
                                        type: "boolean";
                                    };
                                    showWebhookVerb: {
                                        type: "boolean";
                                    };
                                    showObjectSchemaExamples: {
                                        type: "boolean";
                                    };
                                    disableTryItRequestUrlEncoding: {
                                        type: "boolean";
                                    };
                                    sidebarLinks: {
                                        properties: {
                                            beforeInfo: {
                                                items: {
                                                    properties: {
                                                        label: {
                                                            type: "string";
                                                        };
                                                        link: {
                                                            type: "string";
                                                        };
                                                        target: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                    required: ("label" | "link")[];
                                                };
                                                type: "array";
                                            };
                                            end: {
                                                items: {
                                                    properties: {
                                                        label: {
                                                            type: "string";
                                                        };
                                                        link: {
                                                            type: "string";
                                                        };
                                                        target: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                    required: ("label" | "link")[];
                                                };
                                                type: "array";
                                            };
                                        };
                                        type: "object";
                                    };
                                    sideNavStyle: {
                                        enum: ("path-only" | "summary-only" | "path-first" | "id-only")[];
                                        type: "string";
                                    };
                                    simpleOneOfTypeLabel: {
                                        type: "boolean";
                                    };
                                    sortEnumValuesAlphabetically: {
                                        type: "boolean";
                                    };
                                    sortOperationsAlphabetically: {
                                        type: "boolean";
                                    };
                                    sortPropsAlphabetically: {
                                        type: "boolean";
                                    };
                                    sortTagsAlphabetically: {
                                        type: "boolean";
                                    };
                                    suppressWarnings: {
                                        type: "boolean";
                                    };
                                    unstable_externalDescription: {
                                        type: "boolean";
                                    };
                                    unstable_ignoreMimeParameters: {
                                        type: "boolean";
                                    };
                                    untrustedDefinition: {
                                        type: "boolean";
                                    };
                                    showAccessMode: {
                                        type: "boolean";
                                    };
                                    preserveOriginalExtensionsName: {
                                        type: "boolean";
                                    };
                                    markdownHeadingsAnchorLevel: {
                                        type: "number";
                                    };
                                    layout: {
                                        enum: ("stacked" | "three-panel")[];
                                        type: "string";
                                    };
                                    licenseKey: {
                                        type: "string";
                                    };
                                    mockServer: {
                                        properties: {
                                            url: {
                                                type: "string";
                                            };
                                            description: {
                                                type: "string";
                                            };
                                            position: {
                                                enum: ("first" | "last" | "replace" | "off")[];
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    feedback: {
                                        properties: {
                                            type: {
                                                enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                                type: "string";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                            settings: {
                                                properties: {
                                                    comment: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            likeLabel: {
                                                                type: "string";
                                                            };
                                                            dislikeLabel: {
                                                                type: "string";
                                                            };
                                                            satisfiedLabel: {
                                                                type: "string";
                                                            };
                                                            neutralLabel: {
                                                                type: "string";
                                                            };
                                                            dissatisfiedLabel: {
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    reasons: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                            like: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    items: {
                                                                        items: {
                                                                            type: "string";
                                                                        };
                                                                        type: "array";
                                                                    };
                                                                    hide: {
                                                                        type: "boolean";
                                                                    };
                                                                    component: {
                                                                        enum: ("radio" | "checkbox")[];
                                                                        type: "string";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            dislike: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    items: {
                                                                        items: {
                                                                            type: "string";
                                                                        };
                                                                        type: "array";
                                                                    };
                                                                    hide: {
                                                                        type: "boolean";
                                                                    };
                                                                    component: {
                                                                        enum: ("radio" | "checkbox")[];
                                                                        type: "string";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            satisfied: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    items: {
                                                                        items: {
                                                                            type: "string";
                                                                        };
                                                                        type: "array";
                                                                    };
                                                                    hide: {
                                                                        type: "boolean";
                                                                    };
                                                                    component: {
                                                                        enum: ("radio" | "checkbox")[];
                                                                        type: "string";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            neutral: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    items: {
                                                                        items: {
                                                                            type: "string";
                                                                        };
                                                                        type: "array";
                                                                    };
                                                                    hide: {
                                                                        type: "boolean";
                                                                    };
                                                                    component: {
                                                                        enum: ("radio" | "checkbox")[];
                                                                        type: "string";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            dissatisfied: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    items: {
                                                                        items: {
                                                                            type: "string";
                                                                        };
                                                                        type: "array";
                                                                    };
                                                                    hide: {
                                                                        type: "boolean";
                                                                    };
                                                                    component: {
                                                                        enum: ("radio" | "checkbox")[];
                                                                        type: "string";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                        minItems: 1;
                                                    };
                                                    submitText: {
                                                        type: "string";
                                                    };
                                                    buttonText: {
                                                        type: "string";
                                                    };
                                                    component: {
                                                        enum: ("radio" | "checkbox")[];
                                                        type: "string";
                                                    };
                                                    leftScaleLabel: {
                                                        type: "string";
                                                    };
                                                    rightScaleLabel: {
                                                        type: "string";
                                                    };
                                                    optionalEmail: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            placeholder: {
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    hideLoading: {
                                        type: "boolean";
                                    };
                                    disableRouter: {
                                        type: "boolean";
                                    };
                                    hideSidebar: {
                                        type: "boolean";
                                    };
                                    hideReplay: {
                                        type: "boolean";
                                    };
                                    oAuth2RedirectURI: {
                                        type: "string";
                                        nullable: true;
                                    };
                                    corsProxyUrl: {
                                        type: "string";
                                    };
                                    sortRequiredPropsFirst: {
                                        type: "boolean";
                                    };
                                    sanitize: {
                                        type: "boolean";
                                    };
                                    hideDownloadButtons: {
                                        type: "boolean";
                                    };
                                    downloadUrls: {
                                        items: {
                                            properties: {
                                                url: {
                                                    type: "string";
                                                };
                                                title: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "url"[];
                                        };
                                        type: "array";
                                    };
                                    onlyRequiredInSamples: {
                                        type: "boolean";
                                    };
                                    generatedSamplesMaxDepth: {
                                        oneOf: ({
                                            type: "number";
                                        } | {
                                            type: "string";
                                        })[];
                                    };
                                    showExtensions: {
                                        oneOf: ({
                                            type: "boolean";
                                        } | {
                                            type: "string";
                                        } | {
                                            items: {
                                                type: "string";
                                            };
                                            type: "array";
                                        })[];
                                    };
                                    hideSchemaTitles: {
                                        type: "boolean";
                                    };
                                    jsonSamplesExpandLevel: {
                                        oneOf: ({
                                            type: "number";
                                        } | {
                                            type: "string";
                                        })[];
                                    };
                                    schemasExpansionLevel: {
                                        oneOf: ({
                                            type: "number";
                                        } | {
                                            type: "string";
                                        })[];
                                    };
                                    maxDisplayedEnumValues: {
                                        type: "number";
                                    };
                                    schemaDefinitionsTagName: {
                                        type: "string";
                                    };
                                    hideInfoMetadata: {
                                        type: "boolean";
                                    };
                                    events: {
                                        type: "object";
                                    };
                                    skipBundle: {
                                        type: "boolean";
                                    };
                                    routingBasePath: {
                                        type: "string";
                                    };
                                    codeSamples: {
                                        properties: {
                                            languages: {
                                                items: {
                                                    properties: {
                                                        lang: {
                                                            enum: ("curl" | "JavaScript" | "Node.js" | "Python" | "Java8+Apache" | "Java" | "C#" | "C#+Newtonsoft" | "PHP" | "Go" | "Ruby" | "R" | "Payload")[];
                                                            type: "string";
                                                        };
                                                        label: {
                                                            type: "string";
                                                        };
                                                        options: {
                                                            properties: any;
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: "lang"[];
                                                };
                                                type: "array";
                                            };
                                            skipOptionalParameters: {
                                                type: "boolean";
                                            };
                                            withOAuth2Call: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "languages"[];
                                    };
                                    ignoreNamedSchemas: {
                                        oneOf: ({
                                            items: {
                                                type: "string";
                                            };
                                            type: "array";
                                        } | {
                                            type: "string";
                                        })[];
                                    };
                                    hidePropertiesPrefix: {
                                        type: "boolean";
                                    };
                                    excludeFromSearch: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            graphql: {
                                properties: {
                                    sidebar: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        type: "object";
                                    };
                                    licenseKey: {
                                        type: "string";
                                    };
                                    feedback: {
                                        properties: {
                                            type: {
                                                enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                                type: "string";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                            settings: {
                                                properties: {
                                                    comment: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            likeLabel: {
                                                                type: "string";
                                                            };
                                                            dislikeLabel: {
                                                                type: "string";
                                                            };
                                                            satisfiedLabel: {
                                                                type: "string";
                                                            };
                                                            neutralLabel: {
                                                                type: "string";
                                                            };
                                                            dissatisfiedLabel: {
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    reasons: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                            like: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    items: {
                                                                        items: {
                                                                            type: "string";
                                                                        };
                                                                        type: "array";
                                                                    };
                                                                    hide: {
                                                                        type: "boolean";
                                                                    };
                                                                    component: {
                                                                        enum: ("radio" | "checkbox")[];
                                                                        type: "string";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            dislike: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    items: {
                                                                        items: {
                                                                            type: "string";
                                                                        };
                                                                        type: "array";
                                                                    };
                                                                    hide: {
                                                                        type: "boolean";
                                                                    };
                                                                    component: {
                                                                        enum: ("radio" | "checkbox")[];
                                                                        type: "string";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            satisfied: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    items: {
                                                                        items: {
                                                                            type: "string";
                                                                        };
                                                                        type: "array";
                                                                    };
                                                                    hide: {
                                                                        type: "boolean";
                                                                    };
                                                                    component: {
                                                                        enum: ("radio" | "checkbox")[];
                                                                        type: "string";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            neutral: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    items: {
                                                                        items: {
                                                                            type: "string";
                                                                        };
                                                                        type: "array";
                                                                    };
                                                                    hide: {
                                                                        type: "boolean";
                                                                    };
                                                                    component: {
                                                                        enum: ("radio" | "checkbox")[];
                                                                        type: "string";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            dissatisfied: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    items: {
                                                                        items: {
                                                                            type: "string";
                                                                        };
                                                                        type: "array";
                                                                    };
                                                                    hide: {
                                                                        type: "boolean";
                                                                    };
                                                                    component: {
                                                                        enum: ("radio" | "checkbox")[];
                                                                        type: "string";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                        minItems: 1;
                                                    };
                                                    submitText: {
                                                        type: "string";
                                                    };
                                                    buttonText: {
                                                        type: "string";
                                                    };
                                                    component: {
                                                        enum: ("radio" | "checkbox")[];
                                                        type: "string";
                                                    };
                                                    leftScaleLabel: {
                                                        type: "string";
                                                    };
                                                    rightScaleLabel: {
                                                        type: "string";
                                                    };
                                                    optionalEmail: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            placeholder: {
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    hidePaginationButtons: {
                                        type: "boolean";
                                    };
                                    menu: {
                                        properties: {
                                            requireExactGroups: {
                                                type: "boolean";
                                            };
                                            groups: {
                                                items: {
                                                    properties: {
                                                        name: {
                                                            type: "string";
                                                        };
                                                        items: {
                                                            properties: any;
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                        queries: {
                                                            properties: any;
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                        mutations: {
                                                            properties: any;
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                        subscriptions: {
                                                            properties: any;
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                        types: {
                                                            properties: any;
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                        directives: {
                                                            properties: any;
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: "name"[];
                                                };
                                                type: "array";
                                            };
                                            otherItemsGroupName: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    apiLogo: {
                                        properties: {
                                            backgroundColor: {
                                                type: "string";
                                            };
                                            href: {
                                                type: "string";
                                            };
                                            imageUrl: {
                                                type: "string";
                                            };
                                            altText: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    jsonSamplesDepth: {
                                        type: "number";
                                    };
                                    samplesMaxInlineArgs: {
                                        type: "number";
                                    };
                                    fieldExpandLevel: {
                                        type: "number";
                                    };
                                    baseUrlPath: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            analytics: {
                                properties: {
                                    adobe: {
                                        properties: {
                                            scriptUrl: {
                                                type: "string";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            pageViewEventName: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "scriptUrl"[];
                                    };
                                    amplitude: {
                                        properties: {
                                            head: {
                                                type: "boolean";
                                            };
                                            apiKey: {
                                                type: "string";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            pageViewEventName: {
                                                type: "string";
                                            };
                                            respectDNT: {
                                                type: "boolean";
                                            };
                                            exclude: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            };
                                            outboundClickEventName: {
                                                type: "string";
                                            };
                                            amplitudeConfig: {
                                                additionalProperties: true;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "apiKey"[];
                                    };
                                    fullstory: {
                                        properties: {
                                            orgId: {
                                                type: "string";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "orgId"[];
                                    };
                                    heap: {
                                        properties: {
                                            appId: {
                                                type: "string";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "appId"[];
                                    };
                                    rudderstack: {
                                        properties: {
                                            writeKey: {
                                                type: "string";
                                                minLength: 10;
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            trackPage: {
                                                type: "boolean";
                                            };
                                            dataPlaneUrl: {
                                                type: "string";
                                            };
                                            controlPlaneUrl: {
                                                type: "string";
                                            };
                                            sdkUrl: {
                                                type: "string";
                                            };
                                            loadOptions: {
                                                additionalProperties: true;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "writeKey"[];
                                    };
                                    segment: {
                                        properties: {
                                            writeKey: {
                                                type: "string";
                                                minLength: 10;
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            trackPage: {
                                                type: "boolean";
                                            };
                                            includeTitleInPageCall: {
                                                type: "boolean";
                                            };
                                            host: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "writeKey"[];
                                    };
                                    gtm: {
                                        properties: {
                                            trackingId: {
                                                type: "string";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            pageViewEventName: {
                                                type: "string";
                                            };
                                            gtmAuth: {
                                                type: "string";
                                            };
                                            gtmPreview: {
                                                type: "string";
                                            };
                                            defaultDataLayer: {};
                                            dataLayerName: {
                                                type: "string";
                                            };
                                            enableWebVitalsTracking: {
                                                type: "boolean";
                                            };
                                            selfHostedOrigin: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "trackingId"[];
                                    };
                                    ga: {
                                        properties: {
                                            head: {
                                                type: "boolean";
                                            };
                                            trackingId: {
                                                type: "string";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            respectDNT: {
                                                type: "boolean";
                                            };
                                            exclude: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            };
                                            conversionId: {
                                                type: "string";
                                            };
                                            floodlightId: {
                                                type: "string";
                                            };
                                            optimizeId: {
                                                type: "string";
                                            };
                                            anonymizeIp: {
                                                type: "boolean";
                                            };
                                            cookieExpires: {
                                                type: "number";
                                            };
                                            trackers: {
                                                additionalProperties: {
                                                    properties: {
                                                        trackingId: {
                                                            type: "string";
                                                        };
                                                        includeInDevelopment: {
                                                            type: "boolean";
                                                        };
                                                        exclude: {
                                                            items: any;
                                                            type: "array";
                                                        };
                                                        conversionId: {
                                                            type: "string";
                                                        };
                                                        floodlightId: {
                                                            type: "string";
                                                        };
                                                        optimizeId: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: "trackingId"[];
                                                };
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "trackingId"[];
                                    };
                                };
                                type: "object";
                            };
                            userMenu: {
                                properties: {
                                    items: {
                                        items: {
                                            properties: {
                                                label: {
                                                    type: "string";
                                                };
                                                link: {
                                                    type: "string";
                                                };
                                                external: {
                                                    type: "boolean";
                                                };
                                                separatorLine: {
                                                    type: "boolean";
                                                };
                                            };
                                            additionalProperties: true;
                                            type: "object";
                                        };
                                        type: "array";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                    hideLoginButton: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            versionPicker: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    showForUnversioned: {
                                        type: "boolean";
                                    };
                                };
                                type: "object";
                            };
                            breadcrumbs: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    prefixItems: {
                                        items: {
                                            properties: {
                                                label: {
                                                    type: "string";
                                                };
                                                page: {
                                                    type: "string";
                                                };
                                                labelTranslationKey: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            catalog: {
                                patternProperties: {
                                    ".*": {
                                        properties: {
                                            items: {
                                                items: {
                                                    properties: {
                                                        label: {
                                                            type: "string";
                                                        };
                                                        items: {
                                                            items: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    items: any;
                                                                    page: any;
                                                                    href: any;
                                                                    icon: any;
                                                                    rbac: any;
                                                                    directory: any;
                                                                    disconnect: any;
                                                                    group: any;
                                                                    external: any;
                                                                    labelTranslationKey: any;
                                                                    groupTranslationKey: any;
                                                                    separator: any;
                                                                    separatorLine: any;
                                                                    linePosition: any;
                                                                    version: any;
                                                                    menuStyle: any;
                                                                    expanded: any;
                                                                    selectFirstItemOnExpand: any;
                                                                    flatten: any;
                                                                    linkedSidebars: any;
                                                                };
                                                                type: "object";
                                                            };
                                                            type: "array";
                                                        };
                                                        page: {
                                                            type: "string";
                                                        };
                                                        href: {
                                                            type: "string";
                                                        };
                                                        icon: {
                                                            oneOf: ({
                                                                type: "string";
                                                            } | {
                                                                properties: {
                                                                    srcSet: any;
                                                                };
                                                                type: "object";
                                                                required: "srcSet"[];
                                                            })[];
                                                        };
                                                        rbac: {
                                                            additionalProperties: {
                                                                type: "string";
                                                            };
                                                            type: "object";
                                                        };
                                                        directory: {
                                                            type: "string";
                                                        };
                                                        disconnect: {
                                                            type: "boolean";
                                                        };
                                                        group: {
                                                            type: "string";
                                                        };
                                                        external: {
                                                            type: "boolean";
                                                        };
                                                        labelTranslationKey: {
                                                            type: "string";
                                                        };
                                                        groupTranslationKey: {
                                                            type: "string";
                                                        };
                                                        separator: {
                                                            type: "string";
                                                        };
                                                        separatorLine: {
                                                            type: "boolean";
                                                        };
                                                        linePosition: {
                                                            enum: ("top" | "bottom")[];
                                                            type: "string";
                                                        };
                                                        version: {
                                                            type: "string";
                                                        };
                                                        menuStyle: {
                                                            enum: "drilldown"[];
                                                            type: "string";
                                                        };
                                                        expanded: {
                                                            const: "always";
                                                            type: "string";
                                                        };
                                                        selectFirstItemOnExpand: {
                                                            type: "boolean";
                                                        };
                                                        flatten: {
                                                            type: "boolean";
                                                        };
                                                        linkedSidebars: {
                                                            items: {
                                                                type: "string";
                                                            };
                                                            type: "array";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                type: "array";
                                            };
                                            title: {
                                                type: "string";
                                            };
                                            description: {
                                                type: "string";
                                            };
                                            slug: {
                                                type: "string";
                                            };
                                            filters: {
                                                items: {
                                                    properties: {
                                                        type: {
                                                            enum: ("select" | "checkboxes" | "date-range")[];
                                                            type: "string";
                                                        };
                                                        title: {
                                                            type: "string";
                                                        };
                                                        options: {
                                                            items: any;
                                                            type: "array";
                                                        };
                                                        property: {
                                                            type: "string";
                                                        };
                                                        titleTranslationKey: {
                                                            type: "string";
                                                        };
                                                        parentFilter: {
                                                            type: "string";
                                                        };
                                                        valuesMapping: {
                                                            additionalProperties: any;
                                                            type: "object";
                                                        };
                                                        missingCategoryName: {
                                                            type: "string";
                                                        };
                                                        missingCategoryNameTranslationKey: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: ("title" | "property")[];
                                                };
                                                type: "array";
                                            };
                                            groupByFirstFilter: {
                                                type: "boolean";
                                            };
                                            filterValuesCasing: {
                                                enum: ("sentence" | "original" | "lowercase" | "uppercase")[];
                                                type: "string";
                                            };
                                            requiredPermission: {
                                                type: "string";
                                            };
                                            separateVersions: {
                                                type: "boolean";
                                            };
                                            titleTranslationKey: {
                                                type: "string";
                                            };
                                            descriptionTranslationKey: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: true;
                                        type: "object";
                                        required: ("items" | "slug")[];
                                    };
                                };
                                type: "object";
                            };
                            scorecard: {
                                properties: {
                                    ignore: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    ignoreNonCompliant: {
                                        type: "boolean";
                                    };
                                    teamMetadataProperty: {
                                        properties: {
                                            label: {
                                                type: "string";
                                            };
                                            property: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    levels: {
                                        items: {
                                            properties: {
                                                name: {
                                                    type: "string";
                                                };
                                                color: {
                                                    type: "string";
                                                };
                                                rules: {
                                                    additionalProperties: {
                                                        oneOf: ({
                                                            type: "string";
                                                        } | {
                                                            type: "object";
                                                        })[];
                                                    };
                                                    type: "object";
                                                };
                                                extends: {
                                                    items: {
                                                        type: "string";
                                                    };
                                                    type: "array";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "name"[];
                                        };
                                        type: "array";
                                    };
                                    targets: {
                                        items: {
                                            properties: {
                                                where: {
                                                    properties: {
                                                        metadata: {
                                                            additionalProperties: any;
                                                            type: "object";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: "metadata"[];
                                                };
                                                rules: {
                                                    additionalProperties: true;
                                                    type: "object";
                                                };
                                                minimumLevel: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "where"[];
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: true;
                                type: "object";
                                required: never[];
                            };
                        };
                        additionalProperties: true;
                        type: "object";
                    };
                    logo: {
                        properties: {
                            link: {
                                type: "string";
                            };
                            srcSet: {
                                type: "string";
                            };
                            image: {
                                type: "string";
                            };
                            altText: {
                                type: "string";
                            };
                            favicon: {
                                type: "string";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    sidebar: {
                        properties: {
                            hide: {
                                type: "boolean";
                            };
                            separatorLine: {
                                type: "boolean";
                            };
                            linePosition: {
                                enum: ("top" | "bottom")[];
                                type: "string";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    links: {
                        items: {
                            properties: {
                                type: {
                                    type: "string";
                                };
                                title: {
                                    type: "string";
                                };
                                sizes: {
                                    type: "string";
                                };
                                href: {
                                    type: "string";
                                };
                                crossorigin: {
                                    type: "string";
                                };
                                fetchpriority: {
                                    type: "string";
                                };
                                integrity: {
                                    type: "string";
                                };
                                referrerpolicy: {
                                    type: "string";
                                };
                                as: {
                                    type: "string";
                                };
                                hreflang: {
                                    type: "string";
                                };
                                imagesizes: {
                                    type: "string";
                                };
                                imagesrcset: {
                                    type: "string";
                                };
                                media: {
                                    type: "string";
                                };
                                prefetch: {
                                    type: "string";
                                };
                                rel: {
                                    type: "string";
                                };
                            };
                            additionalProperties: true;
                            type: "object";
                            required: "href"[];
                        };
                        type: "array";
                    };
                    navbar: {
                        properties: {
                            items: {
                                items: {
                                    properties: {
                                        label: {
                                            type: "string";
                                        };
                                        items: {
                                            items: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: any;
                                                    page: any;
                                                    href: any;
                                                    icon: any;
                                                    rbac: any;
                                                    directory: any;
                                                    disconnect: any;
                                                    group: any;
                                                    external: any;
                                                    labelTranslationKey: any;
                                                    groupTranslationKey: any;
                                                    separator: any;
                                                    separatorLine: any;
                                                    linePosition: any;
                                                    version: any;
                                                    menuStyle: any;
                                                    expanded: any;
                                                    selectFirstItemOnExpand: any;
                                                    flatten: any;
                                                    linkedSidebars: any;
                                                };
                                                type: "object";
                                            };
                                            type: "array";
                                        };
                                        page: {
                                            type: "string";
                                        };
                                        href: {
                                            type: "string";
                                        };
                                        icon: {
                                            oneOf: ({
                                                type: "string";
                                            } | {
                                                properties: {
                                                    srcSet: any;
                                                };
                                                type: "object";
                                                required: "srcSet"[];
                                            })[];
                                        };
                                        rbac: {
                                            additionalProperties: {
                                                type: "string";
                                            };
                                            type: "object";
                                        };
                                        directory: {
                                            type: "string";
                                        };
                                        disconnect: {
                                            type: "boolean";
                                        };
                                        group: {
                                            type: "string";
                                        };
                                        external: {
                                            type: "boolean";
                                        };
                                        labelTranslationKey: {
                                            type: "string";
                                        };
                                        groupTranslationKey: {
                                            type: "string";
                                        };
                                        separator: {
                                            type: "string";
                                        };
                                        separatorLine: {
                                            type: "boolean";
                                        };
                                        linePosition: {
                                            enum: ("top" | "bottom")[];
                                            type: "string";
                                        };
                                        version: {
                                            type: "string";
                                        };
                                        menuStyle: {
                                            enum: "drilldown"[];
                                            type: "string";
                                        };
                                        expanded: {
                                            const: "always";
                                            type: "string";
                                        };
                                        selectFirstItemOnExpand: {
                                            type: "boolean";
                                        };
                                        flatten: {
                                            type: "boolean";
                                        };
                                        linkedSidebars: {
                                            items: {
                                                type: "string";
                                            };
                                            type: "array";
                                        };
                                    };
                                    type: "object";
                                };
                                type: "array";
                            };
                            hide: {
                                type: "boolean";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    metadata: {
                        additionalProperties: true;
                        type: "object";
                    };
                    imports: {
                        items: {
                            type: "string";
                        };
                        type: "array";
                    };
                    licenseKey: {
                        type: "string";
                    };
                    redirects: {
                        additionalProperties: {
                            properties: {
                                type: {
                                    type: "number";
                                };
                                to: {
                                    type: "string";
                                };
                            };
                            additionalProperties: false;
                            type: "object";
                        };
                        type: "object";
                    };
                    seo: {
                        properties: {
                            lang: {
                                type: "string";
                            };
                            title: {
                                type: "string";
                            };
                            description: {
                                type: "string";
                            };
                            image: {
                                type: "string";
                            };
                            siteUrl: {
                                type: "string";
                            };
                            keywords: {
                                oneOf: ({
                                    items: {
                                        type: "string";
                                    };
                                    type: "array";
                                } | {
                                    type: "string";
                                })[];
                            };
                            jsonLd: {
                                type: "object";
                            };
                            meta: {
                                items: {
                                    properties: {
                                        name: {
                                            type: "string";
                                        };
                                        content: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                    required: ("name" | "content")[];
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    rbac: {
                        properties: {
                            content: {
                                properties: {
                                    "**": {
                                        additionalProperties: {
                                            type: "string";
                                        };
                                        type: "object";
                                    };
                                };
                                additionalProperties: {
                                    additionalProperties: {
                                        type: "string";
                                    };
                                    type: "object";
                                };
                                type: "object";
                            };
                            reunite: {
                                additionalProperties: {
                                    type: "string";
                                };
                                type: "object";
                            };
                            teamNamePatterns: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                            teamFolders: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                            teamFoldersBaseRoles: {
                                additionalProperties: {
                                    type: "string";
                                };
                                type: "object";
                            };
                            cms: {
                                additionalProperties: {
                                    type: "string";
                                };
                                type: "object";
                            };
                            features: {
                                properties: {
                                    aiSearch: {
                                        additionalProperties: {
                                            type: "string";
                                        };
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                        };
                        additionalProperties: {
                            additionalProperties: {
                                type: "string";
                            };
                            type: "object";
                        };
                        type: "object";
                    };
                    apiFunctions: {
                        properties: {
                            folders: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    requiresLogin: {
                        type: "boolean";
                    };
                    responseHeaders: {
                        additionalProperties: {
                            items: {
                                properties: {
                                    name: {
                                        type: "string";
                                    };
                                    value: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: ("name" | "value")[];
                            };
                            type: "array";
                        };
                        type: "object";
                    };
                    mockServer: {
                        properties: {
                            off: {
                                type: "boolean";
                            };
                            description: {
                                type: "string";
                            };
                            position: {
                                enum: ("first" | "last" | "replace" | "off")[];
                                type: "string";
                            };
                            strictExamples: {
                                type: "boolean";
                            };
                            errorIfForcedExampleNotFound: {
                                type: "boolean";
                            };
                        };
                        type: "object";
                    };
                    apis: {
                        additionalProperties: {
                            properties: {
                                title: {
                                    type: "string";
                                };
                                theme: {
                                    properties: {
                                        openapi: {
                                            properties: {
                                                theme: {
                                                    properties: {
                                                        breakpoints: {
                                                            properties: {
                                                                small: {
                                                                    type: "string";
                                                                };
                                                                medium: {
                                                                    type: "string";
                                                                };
                                                                large: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        codeBlock: {
                                                            properties: {
                                                                backgroundColor: {
                                                                    type: "string";
                                                                };
                                                                borderRadius: {
                                                                    type: "string";
                                                                };
                                                                tokens: {
                                                                    properties: {
                                                                        fontFamily: any;
                                                                        fontSize: any;
                                                                        fontWeight: any;
                                                                        lineHeight: any;
                                                                        color: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        colors: {
                                                            properties: {
                                                                accent: {
                                                                    properties: {
                                                                        main: any;
                                                                        light: any;
                                                                        dark: any;
                                                                        contrastText: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                border: {
                                                                    properties: {
                                                                        main: any;
                                                                        light: any;
                                                                        dark: any;
                                                                        contrastText: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                error: {
                                                                    properties: {
                                                                        main: any;
                                                                        light: any;
                                                                        dark: any;
                                                                        contrastText: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                http: {
                                                                    properties: {
                                                                        link: any;
                                                                        basic: any;
                                                                        delete: any;
                                                                        get: any;
                                                                        head: any;
                                                                        options: any;
                                                                        patch: any;
                                                                        post: any;
                                                                        put: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                primary: {
                                                                    properties: {
                                                                        main: any;
                                                                        light: any;
                                                                        dark: any;
                                                                        contrastText: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                responses: {
                                                                    properties: {
                                                                        error: any;
                                                                        success: any;
                                                                        info: any;
                                                                        redirect: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                secondary: {
                                                                    properties: {
                                                                        main: any;
                                                                        light: any;
                                                                        dark: any;
                                                                        contrastText: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                success: {
                                                                    properties: {
                                                                        main: any;
                                                                        light: any;
                                                                        dark: any;
                                                                        contrastText: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                text: {
                                                                    properties: {
                                                                        light: any;
                                                                        primary: any;
                                                                        secondary: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                tonalOffset: {
                                                                    type: "number";
                                                                };
                                                                warning: {
                                                                    properties: {
                                                                        main: any;
                                                                        light: any;
                                                                        dark: any;
                                                                        contrastText: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        components: {
                                                            properties: {
                                                                buttons: {
                                                                    properties: {
                                                                        fontFamily: any;
                                                                        fontSize: any;
                                                                        fontWeight: any;
                                                                        lineHeight: any;
                                                                        borderRadius: any;
                                                                        hoverStyle: any;
                                                                        boxShadow: any;
                                                                        hoverBoxShadow: any;
                                                                        sizes: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                httpBadges: {
                                                                    properties: {
                                                                        fontFamily: any;
                                                                        fontSize: any;
                                                                        fontWeight: any;
                                                                        lineHeight: any;
                                                                        borderRadius: any;
                                                                        color: any;
                                                                        sizes: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                layoutControls: {
                                                                    properties: {
                                                                        top: any;
                                                                        width: any;
                                                                        height: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                panels: {
                                                                    properties: {
                                                                        backgroundColor: any;
                                                                        borderRadius: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                tryItButton: {
                                                                    properties: {
                                                                        fullWidth: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                tryItSendButton: {
                                                                    properties: {
                                                                        fullWidth: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        layout: {
                                                            properties: {
                                                                stacked: {
                                                                    properties: {
                                                                        maxWidth: {
                                                                            properties: {
                                                                                small: {
                                                                                    type: "string";
                                                                                };
                                                                                medium: {
                                                                                    type: "string";
                                                                                };
                                                                                large: {
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            type: "object";
                                                                        };
                                                                    };
                                                                    type: "object";
                                                                };
                                                                "three-panel": {
                                                                    properties: {
                                                                        maxWidth: {
                                                                            properties: {
                                                                                small: {
                                                                                    type: "string";
                                                                                };
                                                                                medium: {
                                                                                    type: "string";
                                                                                };
                                                                                large: {
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            type: "object";
                                                                        };
                                                                        middlePanelMaxWidth: {
                                                                            properties: {
                                                                                small: {
                                                                                    type: "string";
                                                                                };
                                                                                medium: {
                                                                                    type: "string";
                                                                                };
                                                                                large: {
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            type: "object";
                                                                        };
                                                                    };
                                                                    type: "object";
                                                                };
                                                                showDarkRightPanel: {
                                                                    type: "boolean";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        logo: {
                                                            properties: {
                                                                maxWidth: {
                                                                    type: "string";
                                                                };
                                                                gutter: {
                                                                    type: "string";
                                                                };
                                                                maxHeight: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        fab: {
                                                            properties: {
                                                                backgroundColor: {
                                                                    type: "string";
                                                                };
                                                                color: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        overrides: {
                                                            properties: {
                                                                DownloadButton: {
                                                                    properties: {
                                                                        custom: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                NextSectionButton: {
                                                                    properties: {
                                                                        custom: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        rightPanel: {
                                                            properties: {
                                                                backgroundColor: {
                                                                    type: "string";
                                                                };
                                                                width: {
                                                                    type: "string";
                                                                };
                                                                panelBackgroundColor: {
                                                                    type: "string";
                                                                };
                                                                panelControlsBackgroundColor: {
                                                                    type: "string";
                                                                };
                                                                showAtBreakpoint: {
                                                                    type: "string";
                                                                };
                                                                textColor: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        schema: {
                                                            properties: {
                                                                examples: {
                                                                    properties: {
                                                                        backgroundColor: any;
                                                                        border: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                breakFieldNames: {
                                                                    type: "boolean";
                                                                };
                                                                caretColor: {
                                                                    type: "string";
                                                                };
                                                                caretSize: {
                                                                    type: "string";
                                                                };
                                                                constraints: {
                                                                    properties: {
                                                                        backgroundColor: any;
                                                                        border: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                defaultDetailsWidth: {
                                                                    type: "string";
                                                                };
                                                                labelsTextSize: {
                                                                    type: "string";
                                                                };
                                                                linesColor: {
                                                                    type: "string";
                                                                };
                                                                nestedBackground: {
                                                                    type: "string";
                                                                };
                                                                nestingSpacing: {
                                                                    type: "string";
                                                                };
                                                                requireLabelColor: {
                                                                    type: "string";
                                                                };
                                                                typeNameColor: {
                                                                    type: "string";
                                                                };
                                                                typeTitleColor: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        shape: {
                                                            properties: {
                                                                borderRadius: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        sidebar: {
                                                            properties: {
                                                                fontFamily: {
                                                                    type: "string";
                                                                };
                                                                fontSize: {
                                                                    type: "string";
                                                                };
                                                                fontWeight: {
                                                                    type: "string";
                                                                };
                                                                lineHeight: {
                                                                    type: "string";
                                                                };
                                                                spacing: {
                                                                    properties: {
                                                                        unit: any;
                                                                        paddingHorizontal: any;
                                                                        paddingVertical: any;
                                                                        offsetTop: any;
                                                                        offsetLeft: any;
                                                                        offsetNesting: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                backgroundColor: {
                                                                    type: "string";
                                                                };
                                                                borderRadius: {
                                                                    type: "string";
                                                                };
                                                                width: {
                                                                    type: "string";
                                                                };
                                                                showAtBreakpoint: {
                                                                    type: "string";
                                                                };
                                                                textColor: {
                                                                    type: "string";
                                                                };
                                                                caretColor: {
                                                                    type: "string";
                                                                };
                                                                caretSize: {
                                                                    type: "string";
                                                                };
                                                                activeBgColor: {
                                                                    type: "string";
                                                                };
                                                                activeTextColor: {
                                                                    type: "string";
                                                                };
                                                                breakPath: {
                                                                    type: "boolean";
                                                                };
                                                                groupItems: {
                                                                    properties: {
                                                                        fontWeight: any;
                                                                        subItemsColor: any;
                                                                        textTransform: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                level1items: {
                                                                    properties: {
                                                                        fontWeight: any;
                                                                        subItemsColor: any;
                                                                        textTransform: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                rightLineColor: {
                                                                    type: "string";
                                                                };
                                                                separatorLabelColor: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        spacing: {
                                                            properties: {
                                                                unit: {
                                                                    type: "number";
                                                                };
                                                                sectionHorizontal: {
                                                                    type: "number";
                                                                };
                                                                sectionVertical: {
                                                                    type: "number";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        typography: {
                                                            properties: {
                                                                fontFamily: {
                                                                    type: "string";
                                                                };
                                                                fontSize: {
                                                                    type: "string";
                                                                };
                                                                fontWeight: {
                                                                    type: "string";
                                                                };
                                                                lineHeight: {
                                                                    type: "string";
                                                                };
                                                                links: {
                                                                    properties: {
                                                                        color: any;
                                                                        hover: any;
                                                                        textDecoration: any;
                                                                        hoverTextDecoration: any;
                                                                        visited: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                fontWeightBold: {
                                                                    type: "string";
                                                                };
                                                                fontWeightLight: {
                                                                    type: "string";
                                                                };
                                                                fontWeightRegular: {
                                                                    type: "string";
                                                                };
                                                                heading1: {
                                                                    properties: {
                                                                        fontFamily: {
                                                                            type: "string";
                                                                        };
                                                                        fontSize: {
                                                                            type: "string";
                                                                        };
                                                                        fontWeight: {
                                                                            type: "string";
                                                                        };
                                                                        lineHeight: {
                                                                            type: "string";
                                                                        };
                                                                        color: any;
                                                                        transform: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                heading2: {
                                                                    properties: {
                                                                        fontFamily: {
                                                                            type: "string";
                                                                        };
                                                                        fontSize: {
                                                                            type: "string";
                                                                        };
                                                                        fontWeight: {
                                                                            type: "string";
                                                                        };
                                                                        lineHeight: {
                                                                            type: "string";
                                                                        };
                                                                        color: any;
                                                                        transform: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                heading3: {
                                                                    properties: {
                                                                        fontFamily: {
                                                                            type: "string";
                                                                        };
                                                                        fontSize: {
                                                                            type: "string";
                                                                        };
                                                                        fontWeight: {
                                                                            type: "string";
                                                                        };
                                                                        lineHeight: {
                                                                            type: "string";
                                                                        };
                                                                        color: any;
                                                                        transform: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                headings: {
                                                                    properties: {
                                                                        fontFamily: {
                                                                            type: "string";
                                                                        };
                                                                        fontSize: {
                                                                            type: "string";
                                                                        };
                                                                        fontWeight: {
                                                                            type: "string";
                                                                        };
                                                                        lineHeight: {
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    type: "object";
                                                                };
                                                                optimizeSpeed: {
                                                                    type: "boolean";
                                                                };
                                                                rightPanelHeading: {
                                                                    properties: {
                                                                        fontFamily: {
                                                                            type: "string";
                                                                        };
                                                                        fontSize: {
                                                                            type: "string";
                                                                        };
                                                                        fontWeight: {
                                                                            type: "string";
                                                                        };
                                                                        lineHeight: {
                                                                            type: "string";
                                                                        };
                                                                        color: any;
                                                                        transform: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                smoothing: {
                                                                    enum: ("auto" | "none" | "antialiased" | "subpixel-antialiased" | "grayscale")[];
                                                                    type: "string";
                                                                };
                                                                code: {
                                                                    properties: {
                                                                        fontFamily: {
                                                                            type: "string";
                                                                        };
                                                                        fontSize: {
                                                                            type: "string";
                                                                        };
                                                                        fontWeight: {
                                                                            type: "string";
                                                                        };
                                                                        lineHeight: {
                                                                            type: "string";
                                                                        };
                                                                        backgroundColor: any;
                                                                        color: any;
                                                                        wordBreak: any;
                                                                        wrap: any;
                                                                    };
                                                                    type: "object";
                                                                };
                                                                fieldName: {
                                                                    properties: {
                                                                        fontFamily: {
                                                                            type: "string";
                                                                        };
                                                                        fontSize: {
                                                                            type: "string";
                                                                        };
                                                                        fontWeight: {
                                                                            type: "string";
                                                                        };
                                                                        lineHeight: {
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    type: "object";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        links: {
                                                            properties: {
                                                                color: {
                                                                    type: "string";
                                                                };
                                                            };
                                                        };
                                                        codeSample: {
                                                            properties: {
                                                                backgroundColor: {
                                                                    type: "string";
                                                                };
                                                            };
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                ctrlFHijack: {
                                                    type: "boolean";
                                                };
                                                defaultSampleLanguage: {
                                                    type: "string";
                                                };
                                                disableDeepLinks: {
                                                    type: "boolean";
                                                };
                                                disableSearch: {
                                                    type: "boolean";
                                                };
                                                disableSidebar: {
                                                    type: "boolean";
                                                };
                                                downloadDefinitionUrl: {
                                                    type: "string";
                                                };
                                                expandDefaultServerVariables: {
                                                    type: "boolean";
                                                };
                                                enumSkipQuotes: {
                                                    type: "boolean";
                                                };
                                                expandDefaultRequest: {
                                                    type: "boolean";
                                                };
                                                expandDefaultResponse: {
                                                    type: "boolean";
                                                };
                                                expandResponses: {
                                                    type: "string";
                                                };
                                                expandSingleSchemaField: {
                                                    type: "boolean";
                                                };
                                                generateCodeSamples: {
                                                    properties: {
                                                        languages: {
                                                            items: {
                                                                properties: {
                                                                    lang: {
                                                                        enum: ("curl" | "JavaScript" | "Node.js" | "Python" | "Java8+Apache" | "Java" | "C#" | "PHP" | "Go" | "Ruby" | "R")[];
                                                                    };
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                };
                                                                type: "object";
                                                                required: "lang"[];
                                                            };
                                                            type: "array";
                                                        };
                                                        skipOptionalParameters: {
                                                            type: "boolean";
                                                        };
                                                    };
                                                    type: "object";
                                                    required: "languages"[];
                                                };
                                                generatedPayloadSamplesMaxDepth: {
                                                    type: "number";
                                                };
                                                hideDownloadButton: {
                                                    type: "boolean";
                                                };
                                                hideHostname: {
                                                    type: "boolean";
                                                };
                                                hideInfoSection: {
                                                    type: "boolean";
                                                };
                                                hideLogo: {
                                                    type: "boolean";
                                                };
                                                hideRequestPayloadSample: {
                                                    type: "boolean";
                                                };
                                                hideRightPanel: {
                                                    type: "boolean";
                                                };
                                                hideSchemaPattern: {
                                                    type: "boolean";
                                                };
                                                hideSingleRequestSampleTab: {
                                                    type: "boolean";
                                                };
                                                hideSecuritySection: {
                                                    type: "boolean";
                                                };
                                                hideTryItPanel: {
                                                    type: "boolean";
                                                };
                                                hideFab: {
                                                    type: "boolean";
                                                };
                                                hideOneOfDescription: {
                                                    type: "boolean";
                                                };
                                                htmlTemplate: {
                                                    type: "string";
                                                };
                                                jsonSampleExpandLevel: {
                                                    oneOf: ({
                                                        type: "number";
                                                        minimum: 1;
                                                    } | {
                                                        type: "string";
                                                    })[];
                                                };
                                                labels: {
                                                    properties: {
                                                        enum: {
                                                            type: "string";
                                                        };
                                                        examples: {
                                                            type: "string";
                                                        };
                                                        enumSingleValue: {
                                                            type: "string";
                                                        };
                                                        enumArray: {
                                                            type: "string";
                                                        };
                                                        deprecated: {
                                                            type: "string";
                                                        };
                                                        example: {
                                                            type: "string";
                                                        };
                                                        nullable: {
                                                            type: "string";
                                                        };
                                                        recursive: {
                                                            type: "string";
                                                        };
                                                        arrayOf: {
                                                            type: "string";
                                                        };
                                                        webhook: {
                                                            type: "string";
                                                        };
                                                        authorizations: {
                                                            type: "string";
                                                        };
                                                        tryItAuthBasicUsername: {
                                                            type: "string";
                                                        };
                                                        tryItAuthBasicPassword: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                menuToggle: {
                                                    type: "boolean";
                                                };
                                                nativeScrollbars: {
                                                    type: "boolean";
                                                };
                                                noAutoAuth: {
                                                    type: "boolean";
                                                };
                                                onDeepLinkClick: {
                                                    type: "object";
                                                };
                                                pagination: {
                                                    enum: ("none" | "section" | "item")[];
                                                };
                                                pathInMiddlePanel: {
                                                    type: "boolean";
                                                };
                                                payloadSampleIdx: {
                                                    type: "number";
                                                    minimum: 0;
                                                };
                                                requestInterceptor: {
                                                    type: "object";
                                                };
                                                requiredPropsFirst: {
                                                    type: "boolean";
                                                };
                                                routingStrategy: {
                                                    type: "string";
                                                };
                                                samplesTabsMaxCount: {
                                                    type: "number";
                                                };
                                                schemaExpansionLevel: {
                                                    oneOf: ({
                                                        type: "number";
                                                        minimum: 0;
                                                    } | {
                                                        type: "string";
                                                    })[];
                                                };
                                                minCharacterLengthToInitSearch: {
                                                    type: "number";
                                                    minimum: 1;
                                                };
                                                maxResponseHeadersToShowInTryIt: {
                                                    type: "number";
                                                    minimum: 0;
                                                };
                                                scrollYOffset: {
                                                    oneOf: ({
                                                        type: "number";
                                                    } | {
                                                        type: "string";
                                                    })[];
                                                };
                                                searchAutoExpand: {
                                                    type: "boolean";
                                                };
                                                searchFieldLevelBoost: {
                                                    type: "number";
                                                    minimum: 0;
                                                };
                                                searchMaxDepth: {
                                                    type: "number";
                                                    minimum: 1;
                                                };
                                                searchMode: {
                                                    enum: ("default" | "path-only")[];
                                                    type: "string";
                                                };
                                                searchOperationTitleBoost: {
                                                    type: "number";
                                                };
                                                searchTagTitleBoost: {
                                                    type: "number";
                                                };
                                                sendXUserAgentInTryIt: {
                                                    type: "boolean";
                                                };
                                                showChangeLayoutButton: {
                                                    type: "boolean";
                                                };
                                                showConsole: {
                                                    type: "boolean";
                                                };
                                                showNextButton: {
                                                    type: "boolean";
                                                };
                                                showRightPanelToggle: {
                                                    type: "boolean";
                                                };
                                                showSecuritySchemeType: {
                                                    type: "boolean";
                                                };
                                                showWebhookVerb: {
                                                    type: "boolean";
                                                };
                                                showObjectSchemaExamples: {
                                                    type: "boolean";
                                                };
                                                disableTryItRequestUrlEncoding: {
                                                    type: "boolean";
                                                };
                                                sidebarLinks: {
                                                    properties: {
                                                        beforeInfo: {
                                                            items: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    link: {
                                                                        type: "string";
                                                                    };
                                                                    target: {
                                                                        type: "string";
                                                                    };
                                                                };
                                                                type: "object";
                                                                required: ("label" | "link")[];
                                                            };
                                                            type: "array";
                                                        };
                                                        end: {
                                                            items: {
                                                                properties: {
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    link: {
                                                                        type: "string";
                                                                    };
                                                                    target: {
                                                                        type: "string";
                                                                    };
                                                                };
                                                                type: "object";
                                                                required: ("label" | "link")[];
                                                            };
                                                            type: "array";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                sideNavStyle: {
                                                    enum: ("path-only" | "summary-only" | "path-first" | "id-only")[];
                                                    type: "string";
                                                };
                                                simpleOneOfTypeLabel: {
                                                    type: "boolean";
                                                };
                                                sortEnumValuesAlphabetically: {
                                                    type: "boolean";
                                                };
                                                sortOperationsAlphabetically: {
                                                    type: "boolean";
                                                };
                                                sortPropsAlphabetically: {
                                                    type: "boolean";
                                                };
                                                sortTagsAlphabetically: {
                                                    type: "boolean";
                                                };
                                                suppressWarnings: {
                                                    type: "boolean";
                                                };
                                                unstable_externalDescription: {
                                                    type: "boolean";
                                                };
                                                unstable_ignoreMimeParameters: {
                                                    type: "boolean";
                                                };
                                                untrustedDefinition: {
                                                    type: "boolean";
                                                };
                                                showAccessMode: {
                                                    type: "boolean";
                                                };
                                                preserveOriginalExtensionsName: {
                                                    type: "boolean";
                                                };
                                                markdownHeadingsAnchorLevel: {
                                                    type: "number";
                                                };
                                                layout: {
                                                    enum: ("stacked" | "three-panel")[];
                                                    type: "string";
                                                };
                                                licenseKey: {
                                                    type: "string";
                                                };
                                                mockServer: {
                                                    properties: {
                                                        url: {
                                                            type: "string";
                                                        };
                                                        description: {
                                                            type: "string";
                                                        };
                                                        position: {
                                                            enum: ("first" | "last" | "replace" | "off")[];
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                feedback: {
                                                    properties: {
                                                        type: {
                                                            enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                                            type: "string";
                                                        };
                                                        hide: {
                                                            type: "boolean";
                                                        };
                                                        settings: {
                                                            properties: {
                                                                comment: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        likeLabel: {
                                                                            type: "string";
                                                                        };
                                                                        dislikeLabel: {
                                                                            type: "string";
                                                                        };
                                                                        satisfiedLabel: {
                                                                            type: "string";
                                                                        };
                                                                        neutralLabel: {
                                                                            type: "string";
                                                                        };
                                                                        dissatisfiedLabel: {
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                reasons: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                        like: {
                                                                            properties: {
                                                                                label: {
                                                                                    type: "string";
                                                                                };
                                                                                items: {
                                                                                    items: {
                                                                                        type: "string";
                                                                                    };
                                                                                    type: "array";
                                                                                };
                                                                                hide: {
                                                                                    type: "boolean";
                                                                                };
                                                                                component: {
                                                                                    enum: ("radio" | "checkbox")[];
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            additionalProperties: false;
                                                                            type: "object";
                                                                        };
                                                                        dislike: {
                                                                            properties: {
                                                                                label: {
                                                                                    type: "string";
                                                                                };
                                                                                items: {
                                                                                    items: {
                                                                                        type: "string";
                                                                                    };
                                                                                    type: "array";
                                                                                };
                                                                                hide: {
                                                                                    type: "boolean";
                                                                                };
                                                                                component: {
                                                                                    enum: ("radio" | "checkbox")[];
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            additionalProperties: false;
                                                                            type: "object";
                                                                        };
                                                                        satisfied: {
                                                                            properties: {
                                                                                label: {
                                                                                    type: "string";
                                                                                };
                                                                                items: {
                                                                                    items: {
                                                                                        type: "string";
                                                                                    };
                                                                                    type: "array";
                                                                                };
                                                                                hide: {
                                                                                    type: "boolean";
                                                                                };
                                                                                component: {
                                                                                    enum: ("radio" | "checkbox")[];
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            additionalProperties: false;
                                                                            type: "object";
                                                                        };
                                                                        neutral: {
                                                                            properties: {
                                                                                label: {
                                                                                    type: "string";
                                                                                };
                                                                                items: {
                                                                                    items: {
                                                                                        type: "string";
                                                                                    };
                                                                                    type: "array";
                                                                                };
                                                                                hide: {
                                                                                    type: "boolean";
                                                                                };
                                                                                component: {
                                                                                    enum: ("radio" | "checkbox")[];
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            additionalProperties: false;
                                                                            type: "object";
                                                                        };
                                                                        dissatisfied: {
                                                                            properties: {
                                                                                label: {
                                                                                    type: "string";
                                                                                };
                                                                                items: {
                                                                                    items: {
                                                                                        type: "string";
                                                                                    };
                                                                                    type: "array";
                                                                                };
                                                                                hide: {
                                                                                    type: "boolean";
                                                                                };
                                                                                component: {
                                                                                    enum: ("radio" | "checkbox")[];
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            additionalProperties: false;
                                                                            type: "object";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                label: {
                                                                    type: "string";
                                                                };
                                                                items: {
                                                                    items: {
                                                                        type: "string";
                                                                    };
                                                                    type: "array";
                                                                    minItems: 1;
                                                                };
                                                                submitText: {
                                                                    type: "string";
                                                                };
                                                                buttonText: {
                                                                    type: "string";
                                                                };
                                                                component: {
                                                                    enum: ("radio" | "checkbox")[];
                                                                    type: "string";
                                                                };
                                                                leftScaleLabel: {
                                                                    type: "string";
                                                                };
                                                                rightScaleLabel: {
                                                                    type: "string";
                                                                };
                                                                optionalEmail: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        placeholder: {
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                            };
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                                hideLoading: {
                                                    type: "boolean";
                                                };
                                                disableRouter: {
                                                    type: "boolean";
                                                };
                                                hideSidebar: {
                                                    type: "boolean";
                                                };
                                                hideReplay: {
                                                    type: "boolean";
                                                };
                                                oAuth2RedirectURI: {
                                                    type: "string";
                                                    nullable: true;
                                                };
                                                corsProxyUrl: {
                                                    type: "string";
                                                };
                                                sortRequiredPropsFirst: {
                                                    type: "boolean";
                                                };
                                                sanitize: {
                                                    type: "boolean";
                                                };
                                                hideDownloadButtons: {
                                                    type: "boolean";
                                                };
                                                downloadUrls: {
                                                    items: {
                                                        properties: {
                                                            url: {
                                                                type: "string";
                                                            };
                                                            title: {
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                        required: "url"[];
                                                    };
                                                    type: "array";
                                                };
                                                onlyRequiredInSamples: {
                                                    type: "boolean";
                                                };
                                                generatedSamplesMaxDepth: {
                                                    oneOf: ({
                                                        type: "number";
                                                    } | {
                                                        type: "string";
                                                    })[];
                                                };
                                                showExtensions: {
                                                    oneOf: ({
                                                        type: "boolean";
                                                    } | {
                                                        type: "string";
                                                    } | {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    })[];
                                                };
                                                hideSchemaTitles: {
                                                    type: "boolean";
                                                };
                                                jsonSamplesExpandLevel: {
                                                    oneOf: ({
                                                        type: "number";
                                                    } | {
                                                        type: "string";
                                                    })[];
                                                };
                                                schemasExpansionLevel: {
                                                    oneOf: ({
                                                        type: "number";
                                                    } | {
                                                        type: "string";
                                                    })[];
                                                };
                                                maxDisplayedEnumValues: {
                                                    type: "number";
                                                };
                                                schemaDefinitionsTagName: {
                                                    type: "string";
                                                };
                                                hideInfoMetadata: {
                                                    type: "boolean";
                                                };
                                                events: {
                                                    type: "object";
                                                };
                                                skipBundle: {
                                                    type: "boolean";
                                                };
                                                routingBasePath: {
                                                    type: "string";
                                                };
                                                codeSamples: {
                                                    properties: {
                                                        languages: {
                                                            items: {
                                                                properties: {
                                                                    lang: {
                                                                        enum: ("curl" | "JavaScript" | "Node.js" | "Python" | "Java8+Apache" | "Java" | "C#" | "C#+Newtonsoft" | "PHP" | "Go" | "Ruby" | "R" | "Payload")[];
                                                                        type: "string";
                                                                    };
                                                                    label: {
                                                                        type: "string";
                                                                    };
                                                                    options: {
                                                                        properties: any;
                                                                        additionalProperties: false;
                                                                        type: "object";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                                required: "lang"[];
                                                            };
                                                            type: "array";
                                                        };
                                                        skipOptionalParameters: {
                                                            type: "boolean";
                                                        };
                                                        withOAuth2Call: {
                                                            type: "boolean";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: "languages"[];
                                                };
                                                ignoreNamedSchemas: {
                                                    oneOf: ({
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    } | {
                                                        type: "string";
                                                    })[];
                                                };
                                                hidePropertiesPrefix: {
                                                    type: "boolean";
                                                };
                                                excludeFromSearch: {
                                                    type: "boolean";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                        };
                                        graphql: {
                                            properties: {
                                                sidebar: {
                                                    properties: {
                                                        hide: {
                                                            type: "boolean";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                licenseKey: {
                                                    type: "string";
                                                };
                                                feedback: {
                                                    properties: {
                                                        type: {
                                                            enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                                            type: "string";
                                                        };
                                                        hide: {
                                                            type: "boolean";
                                                        };
                                                        settings: {
                                                            properties: {
                                                                comment: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        likeLabel: {
                                                                            type: "string";
                                                                        };
                                                                        dislikeLabel: {
                                                                            type: "string";
                                                                        };
                                                                        satisfiedLabel: {
                                                                            type: "string";
                                                                        };
                                                                        neutralLabel: {
                                                                            type: "string";
                                                                        };
                                                                        dissatisfiedLabel: {
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                reasons: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                        like: {
                                                                            properties: {
                                                                                label: {
                                                                                    type: "string";
                                                                                };
                                                                                items: {
                                                                                    items: {
                                                                                        type: "string";
                                                                                    };
                                                                                    type: "array";
                                                                                };
                                                                                hide: {
                                                                                    type: "boolean";
                                                                                };
                                                                                component: {
                                                                                    enum: ("radio" | "checkbox")[];
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            additionalProperties: false;
                                                                            type: "object";
                                                                        };
                                                                        dislike: {
                                                                            properties: {
                                                                                label: {
                                                                                    type: "string";
                                                                                };
                                                                                items: {
                                                                                    items: {
                                                                                        type: "string";
                                                                                    };
                                                                                    type: "array";
                                                                                };
                                                                                hide: {
                                                                                    type: "boolean";
                                                                                };
                                                                                component: {
                                                                                    enum: ("radio" | "checkbox")[];
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            additionalProperties: false;
                                                                            type: "object";
                                                                        };
                                                                        satisfied: {
                                                                            properties: {
                                                                                label: {
                                                                                    type: "string";
                                                                                };
                                                                                items: {
                                                                                    items: {
                                                                                        type: "string";
                                                                                    };
                                                                                    type: "array";
                                                                                };
                                                                                hide: {
                                                                                    type: "boolean";
                                                                                };
                                                                                component: {
                                                                                    enum: ("radio" | "checkbox")[];
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            additionalProperties: false;
                                                                            type: "object";
                                                                        };
                                                                        neutral: {
                                                                            properties: {
                                                                                label: {
                                                                                    type: "string";
                                                                                };
                                                                                items: {
                                                                                    items: {
                                                                                        type: "string";
                                                                                    };
                                                                                    type: "array";
                                                                                };
                                                                                hide: {
                                                                                    type: "boolean";
                                                                                };
                                                                                component: {
                                                                                    enum: ("radio" | "checkbox")[];
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            additionalProperties: false;
                                                                            type: "object";
                                                                        };
                                                                        dissatisfied: {
                                                                            properties: {
                                                                                label: {
                                                                                    type: "string";
                                                                                };
                                                                                items: {
                                                                                    items: {
                                                                                        type: "string";
                                                                                    };
                                                                                    type: "array";
                                                                                };
                                                                                hide: {
                                                                                    type: "boolean";
                                                                                };
                                                                                component: {
                                                                                    enum: ("radio" | "checkbox")[];
                                                                                    type: "string";
                                                                                };
                                                                            };
                                                                            additionalProperties: false;
                                                                            type: "object";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                label: {
                                                                    type: "string";
                                                                };
                                                                items: {
                                                                    items: {
                                                                        type: "string";
                                                                    };
                                                                    type: "array";
                                                                    minItems: 1;
                                                                };
                                                                submitText: {
                                                                    type: "string";
                                                                };
                                                                buttonText: {
                                                                    type: "string";
                                                                };
                                                                component: {
                                                                    enum: ("radio" | "checkbox")[];
                                                                    type: "string";
                                                                };
                                                                leftScaleLabel: {
                                                                    type: "string";
                                                                };
                                                                rightScaleLabel: {
                                                                    type: "string";
                                                                };
                                                                optionalEmail: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        placeholder: {
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                            };
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                                hidePaginationButtons: {
                                                    type: "boolean";
                                                };
                                                menu: {
                                                    properties: {
                                                        requireExactGroups: {
                                                            type: "boolean";
                                                        };
                                                        groups: {
                                                            items: {
                                                                properties: {
                                                                    name: {
                                                                        type: "string";
                                                                    };
                                                                    items: {
                                                                        properties: any;
                                                                        additionalProperties: false;
                                                                        type: "object";
                                                                    };
                                                                    queries: {
                                                                        properties: any;
                                                                        additionalProperties: false;
                                                                        type: "object";
                                                                    };
                                                                    mutations: {
                                                                        properties: any;
                                                                        additionalProperties: false;
                                                                        type: "object";
                                                                    };
                                                                    subscriptions: {
                                                                        properties: any;
                                                                        additionalProperties: false;
                                                                        type: "object";
                                                                    };
                                                                    types: {
                                                                        properties: any;
                                                                        additionalProperties: false;
                                                                        type: "object";
                                                                    };
                                                                    directives: {
                                                                        properties: any;
                                                                        additionalProperties: false;
                                                                        type: "object";
                                                                    };
                                                                };
                                                                additionalProperties: false;
                                                                type: "object";
                                                                required: "name"[];
                                                            };
                                                            type: "array";
                                                        };
                                                        otherItemsGroupName: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                                apiLogo: {
                                                    properties: {
                                                        backgroundColor: {
                                                            type: "string";
                                                        };
                                                        href: {
                                                            type: "string";
                                                        };
                                                        imageUrl: {
                                                            type: "string";
                                                        };
                                                        altText: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                jsonSamplesDepth: {
                                                    type: "number";
                                                };
                                                samplesMaxInlineArgs: {
                                                    type: "number";
                                                };
                                                fieldExpandLevel: {
                                                    type: "number";
                                                };
                                                baseUrlPath: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                };
                                metadata: {
                                    additionalProperties: true;
                                    type: "object";
                                };
                                root: {
                                    type: "string";
                                };
                                rbac: {
                                    additionalProperties: true;
                                    type: "object";
                                };
                                rules: {
                                    additionalProperties: {
                                        oneOf: ({
                                            type: "string";
                                        } | {
                                            type: "object";
                                        })[];
                                    };
                                    type: "object";
                                };
                                decorators: {
                                    additionalProperties: true;
                                    type: "object";
                                };
                                preprocessors: {
                                    additionalProperties: true;
                                    type: "object";
                                };
                                openapi: {
                                    properties: {
                                        theme: {
                                            properties: {
                                                breakpoints: {
                                                    properties: {
                                                        small: {
                                                            type: "string";
                                                        };
                                                        medium: {
                                                            type: "string";
                                                        };
                                                        large: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                codeBlock: {
                                                    properties: {
                                                        backgroundColor: {
                                                            type: "string";
                                                        };
                                                        borderRadius: {
                                                            type: "string";
                                                        };
                                                        tokens: {
                                                            properties: {
                                                                fontFamily: any;
                                                                fontSize: any;
                                                                fontWeight: any;
                                                                lineHeight: any;
                                                                color: any;
                                                            };
                                                            type: "object";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                colors: {
                                                    properties: {
                                                        accent: {
                                                            properties: {
                                                                main: any;
                                                                light: any;
                                                                dark: any;
                                                                contrastText: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        border: {
                                                            properties: {
                                                                main: any;
                                                                light: any;
                                                                dark: any;
                                                                contrastText: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        error: {
                                                            properties: {
                                                                main: any;
                                                                light: any;
                                                                dark: any;
                                                                contrastText: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        http: {
                                                            properties: {
                                                                link: any;
                                                                basic: any;
                                                                delete: any;
                                                                get: any;
                                                                head: any;
                                                                options: any;
                                                                patch: any;
                                                                post: any;
                                                                put: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        primary: {
                                                            properties: {
                                                                main: any;
                                                                light: any;
                                                                dark: any;
                                                                contrastText: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        responses: {
                                                            properties: {
                                                                error: any;
                                                                success: any;
                                                                info: any;
                                                                redirect: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        secondary: {
                                                            properties: {
                                                                main: any;
                                                                light: any;
                                                                dark: any;
                                                                contrastText: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        success: {
                                                            properties: {
                                                                main: any;
                                                                light: any;
                                                                dark: any;
                                                                contrastText: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        text: {
                                                            properties: {
                                                                light: any;
                                                                primary: any;
                                                                secondary: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        tonalOffset: {
                                                            type: "number";
                                                        };
                                                        warning: {
                                                            properties: {
                                                                main: any;
                                                                light: any;
                                                                dark: any;
                                                                contrastText: any;
                                                            };
                                                            type: "object";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                components: {
                                                    properties: {
                                                        buttons: {
                                                            properties: {
                                                                fontFamily: any;
                                                                fontSize: any;
                                                                fontWeight: any;
                                                                lineHeight: any;
                                                                borderRadius: any;
                                                                hoverStyle: any;
                                                                boxShadow: any;
                                                                hoverBoxShadow: any;
                                                                sizes: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        httpBadges: {
                                                            properties: {
                                                                fontFamily: any;
                                                                fontSize: any;
                                                                fontWeight: any;
                                                                lineHeight: any;
                                                                borderRadius: any;
                                                                color: any;
                                                                sizes: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        layoutControls: {
                                                            properties: {
                                                                top: any;
                                                                width: any;
                                                                height: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        panels: {
                                                            properties: {
                                                                backgroundColor: any;
                                                                borderRadius: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        tryItButton: {
                                                            properties: {
                                                                fullWidth: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        tryItSendButton: {
                                                            properties: {
                                                                fullWidth: any;
                                                            };
                                                            type: "object";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                layout: {
                                                    properties: {
                                                        stacked: {
                                                            properties: {
                                                                maxWidth: {
                                                                    properties: {
                                                                        small: {
                                                                            type: "string";
                                                                        };
                                                                        medium: {
                                                                            type: "string";
                                                                        };
                                                                        large: {
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    type: "object";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        "three-panel": {
                                                            properties: {
                                                                maxWidth: {
                                                                    properties: {
                                                                        small: {
                                                                            type: "string";
                                                                        };
                                                                        medium: {
                                                                            type: "string";
                                                                        };
                                                                        large: {
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    type: "object";
                                                                };
                                                                middlePanelMaxWidth: {
                                                                    properties: {
                                                                        small: {
                                                                            type: "string";
                                                                        };
                                                                        medium: {
                                                                            type: "string";
                                                                        };
                                                                        large: {
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    type: "object";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        showDarkRightPanel: {
                                                            type: "boolean";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                logo: {
                                                    properties: {
                                                        maxWidth: {
                                                            type: "string";
                                                        };
                                                        gutter: {
                                                            type: "string";
                                                        };
                                                        maxHeight: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                fab: {
                                                    properties: {
                                                        backgroundColor: {
                                                            type: "string";
                                                        };
                                                        color: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                overrides: {
                                                    properties: {
                                                        DownloadButton: {
                                                            properties: {
                                                                custom: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        NextSectionButton: {
                                                            properties: {
                                                                custom: any;
                                                            };
                                                            type: "object";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                rightPanel: {
                                                    properties: {
                                                        backgroundColor: {
                                                            type: "string";
                                                        };
                                                        width: {
                                                            type: "string";
                                                        };
                                                        panelBackgroundColor: {
                                                            type: "string";
                                                        };
                                                        panelControlsBackgroundColor: {
                                                            type: "string";
                                                        };
                                                        showAtBreakpoint: {
                                                            type: "string";
                                                        };
                                                        textColor: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                schema: {
                                                    properties: {
                                                        examples: {
                                                            properties: {
                                                                backgroundColor: any;
                                                                border: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        breakFieldNames: {
                                                            type: "boolean";
                                                        };
                                                        caretColor: {
                                                            type: "string";
                                                        };
                                                        caretSize: {
                                                            type: "string";
                                                        };
                                                        constraints: {
                                                            properties: {
                                                                backgroundColor: any;
                                                                border: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        defaultDetailsWidth: {
                                                            type: "string";
                                                        };
                                                        labelsTextSize: {
                                                            type: "string";
                                                        };
                                                        linesColor: {
                                                            type: "string";
                                                        };
                                                        nestedBackground: {
                                                            type: "string";
                                                        };
                                                        nestingSpacing: {
                                                            type: "string";
                                                        };
                                                        requireLabelColor: {
                                                            type: "string";
                                                        };
                                                        typeNameColor: {
                                                            type: "string";
                                                        };
                                                        typeTitleColor: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                shape: {
                                                    properties: {
                                                        borderRadius: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                sidebar: {
                                                    properties: {
                                                        fontFamily: {
                                                            type: "string";
                                                        };
                                                        fontSize: {
                                                            type: "string";
                                                        };
                                                        fontWeight: {
                                                            type: "string";
                                                        };
                                                        lineHeight: {
                                                            type: "string";
                                                        };
                                                        spacing: {
                                                            properties: {
                                                                unit: any;
                                                                paddingHorizontal: any;
                                                                paddingVertical: any;
                                                                offsetTop: any;
                                                                offsetLeft: any;
                                                                offsetNesting: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        backgroundColor: {
                                                            type: "string";
                                                        };
                                                        borderRadius: {
                                                            type: "string";
                                                        };
                                                        width: {
                                                            type: "string";
                                                        };
                                                        showAtBreakpoint: {
                                                            type: "string";
                                                        };
                                                        textColor: {
                                                            type: "string";
                                                        };
                                                        caretColor: {
                                                            type: "string";
                                                        };
                                                        caretSize: {
                                                            type: "string";
                                                        };
                                                        activeBgColor: {
                                                            type: "string";
                                                        };
                                                        activeTextColor: {
                                                            type: "string";
                                                        };
                                                        breakPath: {
                                                            type: "boolean";
                                                        };
                                                        groupItems: {
                                                            properties: {
                                                                fontWeight: any;
                                                                subItemsColor: any;
                                                                textTransform: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        level1items: {
                                                            properties: {
                                                                fontWeight: any;
                                                                subItemsColor: any;
                                                                textTransform: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        rightLineColor: {
                                                            type: "string";
                                                        };
                                                        separatorLabelColor: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                spacing: {
                                                    properties: {
                                                        unit: {
                                                            type: "number";
                                                        };
                                                        sectionHorizontal: {
                                                            type: "number";
                                                        };
                                                        sectionVertical: {
                                                            type: "number";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                typography: {
                                                    properties: {
                                                        fontFamily: {
                                                            type: "string";
                                                        };
                                                        fontSize: {
                                                            type: "string";
                                                        };
                                                        fontWeight: {
                                                            type: "string";
                                                        };
                                                        lineHeight: {
                                                            type: "string";
                                                        };
                                                        links: {
                                                            properties: {
                                                                color: any;
                                                                hover: any;
                                                                textDecoration: any;
                                                                hoverTextDecoration: any;
                                                                visited: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        fontWeightBold: {
                                                            type: "string";
                                                        };
                                                        fontWeightLight: {
                                                            type: "string";
                                                        };
                                                        fontWeightRegular: {
                                                            type: "string";
                                                        };
                                                        heading1: {
                                                            properties: {
                                                                fontFamily: {
                                                                    type: "string";
                                                                };
                                                                fontSize: {
                                                                    type: "string";
                                                                };
                                                                fontWeight: {
                                                                    type: "string";
                                                                };
                                                                lineHeight: {
                                                                    type: "string";
                                                                };
                                                                color: any;
                                                                transform: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        heading2: {
                                                            properties: {
                                                                fontFamily: {
                                                                    type: "string";
                                                                };
                                                                fontSize: {
                                                                    type: "string";
                                                                };
                                                                fontWeight: {
                                                                    type: "string";
                                                                };
                                                                lineHeight: {
                                                                    type: "string";
                                                                };
                                                                color: any;
                                                                transform: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        heading3: {
                                                            properties: {
                                                                fontFamily: {
                                                                    type: "string";
                                                                };
                                                                fontSize: {
                                                                    type: "string";
                                                                };
                                                                fontWeight: {
                                                                    type: "string";
                                                                };
                                                                lineHeight: {
                                                                    type: "string";
                                                                };
                                                                color: any;
                                                                transform: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        headings: {
                                                            properties: {
                                                                fontFamily: {
                                                                    type: "string";
                                                                };
                                                                fontSize: {
                                                                    type: "string";
                                                                };
                                                                fontWeight: {
                                                                    type: "string";
                                                                };
                                                                lineHeight: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                        optimizeSpeed: {
                                                            type: "boolean";
                                                        };
                                                        rightPanelHeading: {
                                                            properties: {
                                                                fontFamily: {
                                                                    type: "string";
                                                                };
                                                                fontSize: {
                                                                    type: "string";
                                                                };
                                                                fontWeight: {
                                                                    type: "string";
                                                                };
                                                                lineHeight: {
                                                                    type: "string";
                                                                };
                                                                color: any;
                                                                transform: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        smoothing: {
                                                            enum: ("auto" | "none" | "antialiased" | "subpixel-antialiased" | "grayscale")[];
                                                            type: "string";
                                                        };
                                                        code: {
                                                            properties: {
                                                                fontFamily: {
                                                                    type: "string";
                                                                };
                                                                fontSize: {
                                                                    type: "string";
                                                                };
                                                                fontWeight: {
                                                                    type: "string";
                                                                };
                                                                lineHeight: {
                                                                    type: "string";
                                                                };
                                                                backgroundColor: any;
                                                                color: any;
                                                                wordBreak: any;
                                                                wrap: any;
                                                            };
                                                            type: "object";
                                                        };
                                                        fieldName: {
                                                            properties: {
                                                                fontFamily: {
                                                                    type: "string";
                                                                };
                                                                fontSize: {
                                                                    type: "string";
                                                                };
                                                                fontWeight: {
                                                                    type: "string";
                                                                };
                                                                lineHeight: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            type: "object";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                links: {
                                                    properties: {
                                                        color: {
                                                            type: "string";
                                                        };
                                                    };
                                                };
                                                codeSample: {
                                                    properties: {
                                                        backgroundColor: {
                                                            type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                            type: "object";
                                        };
                                        ctrlFHijack: {
                                            type: "boolean";
                                        };
                                        defaultSampleLanguage: {
                                            type: "string";
                                        };
                                        disableDeepLinks: {
                                            type: "boolean";
                                        };
                                        disableSearch: {
                                            type: "boolean";
                                        };
                                        disableSidebar: {
                                            type: "boolean";
                                        };
                                        downloadDefinitionUrl: {
                                            type: "string";
                                        };
                                        expandDefaultServerVariables: {
                                            type: "boolean";
                                        };
                                        enumSkipQuotes: {
                                            type: "boolean";
                                        };
                                        expandDefaultRequest: {
                                            type: "boolean";
                                        };
                                        expandDefaultResponse: {
                                            type: "boolean";
                                        };
                                        expandResponses: {
                                            type: "string";
                                        };
                                        expandSingleSchemaField: {
                                            type: "boolean";
                                        };
                                        generateCodeSamples: {
                                            properties: {
                                                languages: {
                                                    items: {
                                                        properties: {
                                                            lang: {
                                                                enum: ("curl" | "JavaScript" | "Node.js" | "Python" | "Java8+Apache" | "Java" | "C#" | "PHP" | "Go" | "Ruby" | "R")[];
                                                            };
                                                            label: {
                                                                type: "string";
                                                            };
                                                        };
                                                        type: "object";
                                                        required: "lang"[];
                                                    };
                                                    type: "array";
                                                };
                                                skipOptionalParameters: {
                                                    type: "boolean";
                                                };
                                            };
                                            type: "object";
                                            required: "languages"[];
                                        };
                                        generatedPayloadSamplesMaxDepth: {
                                            type: "number";
                                        };
                                        hideDownloadButton: {
                                            type: "boolean";
                                        };
                                        hideHostname: {
                                            type: "boolean";
                                        };
                                        hideInfoSection: {
                                            type: "boolean";
                                        };
                                        hideLogo: {
                                            type: "boolean";
                                        };
                                        hideRequestPayloadSample: {
                                            type: "boolean";
                                        };
                                        hideRightPanel: {
                                            type: "boolean";
                                        };
                                        hideSchemaPattern: {
                                            type: "boolean";
                                        };
                                        hideSingleRequestSampleTab: {
                                            type: "boolean";
                                        };
                                        hideSecuritySection: {
                                            type: "boolean";
                                        };
                                        hideTryItPanel: {
                                            type: "boolean";
                                        };
                                        hideFab: {
                                            type: "boolean";
                                        };
                                        hideOneOfDescription: {
                                            type: "boolean";
                                        };
                                        htmlTemplate: {
                                            type: "string";
                                        };
                                        jsonSampleExpandLevel: {
                                            oneOf: ({
                                                type: "number";
                                                minimum: 1;
                                            } | {
                                                type: "string";
                                            })[];
                                        };
                                        labels: {
                                            properties: {
                                                enum: {
                                                    type: "string";
                                                };
                                                examples: {
                                                    type: "string";
                                                };
                                                enumSingleValue: {
                                                    type: "string";
                                                };
                                                enumArray: {
                                                    type: "string";
                                                };
                                                deprecated: {
                                                    type: "string";
                                                };
                                                example: {
                                                    type: "string";
                                                };
                                                nullable: {
                                                    type: "string";
                                                };
                                                recursive: {
                                                    type: "string";
                                                };
                                                arrayOf: {
                                                    type: "string";
                                                };
                                                webhook: {
                                                    type: "string";
                                                };
                                                authorizations: {
                                                    type: "string";
                                                };
                                                tryItAuthBasicUsername: {
                                                    type: "string";
                                                };
                                                tryItAuthBasicPassword: {
                                                    type: "string";
                                                };
                                            };
                                            type: "object";
                                        };
                                        menuToggle: {
                                            type: "boolean";
                                        };
                                        nativeScrollbars: {
                                            type: "boolean";
                                        };
                                        noAutoAuth: {
                                            type: "boolean";
                                        };
                                        onDeepLinkClick: {
                                            type: "object";
                                        };
                                        pagination: {
                                            enum: ("none" | "section" | "item")[];
                                        };
                                        pathInMiddlePanel: {
                                            type: "boolean";
                                        };
                                        payloadSampleIdx: {
                                            type: "number";
                                            minimum: 0;
                                        };
                                        requestInterceptor: {
                                            type: "object";
                                        };
                                        requiredPropsFirst: {
                                            type: "boolean";
                                        };
                                        routingStrategy: {
                                            type: "string";
                                        };
                                        samplesTabsMaxCount: {
                                            type: "number";
                                        };
                                        schemaExpansionLevel: {
                                            oneOf: ({
                                                type: "number";
                                                minimum: 0;
                                            } | {
                                                type: "string";
                                            })[];
                                        };
                                        minCharacterLengthToInitSearch: {
                                            type: "number";
                                            minimum: 1;
                                        };
                                        maxResponseHeadersToShowInTryIt: {
                                            type: "number";
                                            minimum: 0;
                                        };
                                        scrollYOffset: {
                                            oneOf: ({
                                                type: "number";
                                            } | {
                                                type: "string";
                                            })[];
                                        };
                                        searchAutoExpand: {
                                            type: "boolean";
                                        };
                                        searchFieldLevelBoost: {
                                            type: "number";
                                            minimum: 0;
                                        };
                                        searchMaxDepth: {
                                            type: "number";
                                            minimum: 1;
                                        };
                                        searchMode: {
                                            enum: ("default" | "path-only")[];
                                            type: "string";
                                        };
                                        searchOperationTitleBoost: {
                                            type: "number";
                                        };
                                        searchTagTitleBoost: {
                                            type: "number";
                                        };
                                        sendXUserAgentInTryIt: {
                                            type: "boolean";
                                        };
                                        showChangeLayoutButton: {
                                            type: "boolean";
                                        };
                                        showConsole: {
                                            type: "boolean";
                                        };
                                        showNextButton: {
                                            type: "boolean";
                                        };
                                        showRightPanelToggle: {
                                            type: "boolean";
                                        };
                                        showSecuritySchemeType: {
                                            type: "boolean";
                                        };
                                        showWebhookVerb: {
                                            type: "boolean";
                                        };
                                        showObjectSchemaExamples: {
                                            type: "boolean";
                                        };
                                        disableTryItRequestUrlEncoding: {
                                            type: "boolean";
                                        };
                                        sidebarLinks: {
                                            properties: {
                                                beforeInfo: {
                                                    items: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            link: {
                                                                type: "string";
                                                            };
                                                            target: {
                                                                type: "string";
                                                            };
                                                        };
                                                        type: "object";
                                                        required: ("label" | "link")[];
                                                    };
                                                    type: "array";
                                                };
                                                end: {
                                                    items: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            link: {
                                                                type: "string";
                                                            };
                                                            target: {
                                                                type: "string";
                                                            };
                                                        };
                                                        type: "object";
                                                        required: ("label" | "link")[];
                                                    };
                                                    type: "array";
                                                };
                                            };
                                            type: "object";
                                        };
                                        sideNavStyle: {
                                            enum: ("path-only" | "summary-only" | "path-first" | "id-only")[];
                                            type: "string";
                                        };
                                        simpleOneOfTypeLabel: {
                                            type: "boolean";
                                        };
                                        sortEnumValuesAlphabetically: {
                                            type: "boolean";
                                        };
                                        sortOperationsAlphabetically: {
                                            type: "boolean";
                                        };
                                        sortPropsAlphabetically: {
                                            type: "boolean";
                                        };
                                        sortTagsAlphabetically: {
                                            type: "boolean";
                                        };
                                        suppressWarnings: {
                                            type: "boolean";
                                        };
                                        unstable_externalDescription: {
                                            type: "boolean";
                                        };
                                        unstable_ignoreMimeParameters: {
                                            type: "boolean";
                                        };
                                        untrustedDefinition: {
                                            type: "boolean";
                                        };
                                        showAccessMode: {
                                            type: "boolean";
                                        };
                                        preserveOriginalExtensionsName: {
                                            type: "boolean";
                                        };
                                        markdownHeadingsAnchorLevel: {
                                            type: "number";
                                        };
                                        layout: {
                                            enum: ("stacked" | "three-panel")[];
                                            type: "string";
                                        };
                                        licenseKey: {
                                            type: "string";
                                        };
                                        mockServer: {
                                            properties: {
                                                url: {
                                                    type: "string";
                                                };
                                                description: {
                                                    type: "string";
                                                };
                                                position: {
                                                    enum: ("first" | "last" | "replace" | "off")[];
                                                    type: "string";
                                                };
                                            };
                                            type: "object";
                                        };
                                        feedback: {
                                            properties: {
                                                type: {
                                                    enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                                    type: "string";
                                                };
                                                hide: {
                                                    type: "boolean";
                                                };
                                                settings: {
                                                    properties: {
                                                        comment: {
                                                            properties: {
                                                                label: {
                                                                    type: "string";
                                                                };
                                                                hide: {
                                                                    type: "boolean";
                                                                };
                                                                likeLabel: {
                                                                    type: "string";
                                                                };
                                                                dislikeLabel: {
                                                                    type: "string";
                                                                };
                                                                satisfiedLabel: {
                                                                    type: "string";
                                                                };
                                                                neutralLabel: {
                                                                    type: "string";
                                                                };
                                                                dissatisfiedLabel: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                        reasons: {
                                                            properties: {
                                                                label: {
                                                                    type: "string";
                                                                };
                                                                items: {
                                                                    items: {
                                                                        type: "string";
                                                                    };
                                                                    type: "array";
                                                                };
                                                                hide: {
                                                                    type: "boolean";
                                                                };
                                                                component: {
                                                                    enum: ("radio" | "checkbox")[];
                                                                    type: "string";
                                                                };
                                                                like: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                dislike: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                satisfied: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                neutral: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                dissatisfied: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                            };
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                        label: {
                                                            type: "string";
                                                        };
                                                        items: {
                                                            items: {
                                                                type: "string";
                                                            };
                                                            type: "array";
                                                            minItems: 1;
                                                        };
                                                        submitText: {
                                                            type: "string";
                                                        };
                                                        buttonText: {
                                                            type: "string";
                                                        };
                                                        component: {
                                                            enum: ("radio" | "checkbox")[];
                                                            type: "string";
                                                        };
                                                        leftScaleLabel: {
                                                            type: "string";
                                                        };
                                                        rightScaleLabel: {
                                                            type: "string";
                                                        };
                                                        optionalEmail: {
                                                            properties: {
                                                                label: {
                                                                    type: "string";
                                                                };
                                                                hide: {
                                                                    type: "boolean";
                                                                };
                                                                placeholder: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                        };
                                        hideLoading: {
                                            type: "boolean";
                                        };
                                        disableRouter: {
                                            type: "boolean";
                                        };
                                        hideSidebar: {
                                            type: "boolean";
                                        };
                                        hideReplay: {
                                            type: "boolean";
                                        };
                                        oAuth2RedirectURI: {
                                            type: "string";
                                            nullable: true;
                                        };
                                        corsProxyUrl: {
                                            type: "string";
                                        };
                                        sortRequiredPropsFirst: {
                                            type: "boolean";
                                        };
                                        sanitize: {
                                            type: "boolean";
                                        };
                                        hideDownloadButtons: {
                                            type: "boolean";
                                        };
                                        downloadUrls: {
                                            items: {
                                                properties: {
                                                    url: {
                                                        type: "string";
                                                    };
                                                    title: {
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                                required: "url"[];
                                            };
                                            type: "array";
                                        };
                                        onlyRequiredInSamples: {
                                            type: "boolean";
                                        };
                                        generatedSamplesMaxDepth: {
                                            oneOf: ({
                                                type: "number";
                                            } | {
                                                type: "string";
                                            })[];
                                        };
                                        showExtensions: {
                                            oneOf: ({
                                                type: "boolean";
                                            } | {
                                                type: "string";
                                            } | {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            })[];
                                        };
                                        hideSchemaTitles: {
                                            type: "boolean";
                                        };
                                        jsonSamplesExpandLevel: {
                                            oneOf: ({
                                                type: "number";
                                            } | {
                                                type: "string";
                                            })[];
                                        };
                                        schemasExpansionLevel: {
                                            oneOf: ({
                                                type: "number";
                                            } | {
                                                type: "string";
                                            })[];
                                        };
                                        maxDisplayedEnumValues: {
                                            type: "number";
                                        };
                                        schemaDefinitionsTagName: {
                                            type: "string";
                                        };
                                        hideInfoMetadata: {
                                            type: "boolean";
                                        };
                                        events: {
                                            type: "object";
                                        };
                                        skipBundle: {
                                            type: "boolean";
                                        };
                                        routingBasePath: {
                                            type: "string";
                                        };
                                        codeSamples: {
                                            properties: {
                                                languages: {
                                                    items: {
                                                        properties: {
                                                            lang: {
                                                                enum: ("curl" | "JavaScript" | "Node.js" | "Python" | "Java8+Apache" | "Java" | "C#" | "C#+Newtonsoft" | "PHP" | "Go" | "Ruby" | "R" | "Payload")[];
                                                                type: "string";
                                                            };
                                                            label: {
                                                                type: "string";
                                                            };
                                                            options: {
                                                                properties: any;
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                        required: "lang"[];
                                                    };
                                                    type: "array";
                                                };
                                                skipOptionalParameters: {
                                                    type: "boolean";
                                                };
                                                withOAuth2Call: {
                                                    type: "boolean";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "languages"[];
                                        };
                                        ignoreNamedSchemas: {
                                            oneOf: ({
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            } | {
                                                type: "string";
                                            })[];
                                        };
                                        hidePropertiesPrefix: {
                                            type: "boolean";
                                        };
                                        excludeFromSearch: {
                                            type: "boolean";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                };
                                graphql: {
                                    properties: {
                                        sidebar: {
                                            properties: {
                                                hide: {
                                                    type: "boolean";
                                                };
                                            };
                                            type: "object";
                                        };
                                        licenseKey: {
                                            type: "string";
                                        };
                                        feedback: {
                                            properties: {
                                                type: {
                                                    enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                                    type: "string";
                                                };
                                                hide: {
                                                    type: "boolean";
                                                };
                                                settings: {
                                                    properties: {
                                                        comment: {
                                                            properties: {
                                                                label: {
                                                                    type: "string";
                                                                };
                                                                hide: {
                                                                    type: "boolean";
                                                                };
                                                                likeLabel: {
                                                                    type: "string";
                                                                };
                                                                dislikeLabel: {
                                                                    type: "string";
                                                                };
                                                                satisfiedLabel: {
                                                                    type: "string";
                                                                };
                                                                neutralLabel: {
                                                                    type: "string";
                                                                };
                                                                dissatisfiedLabel: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                        reasons: {
                                                            properties: {
                                                                label: {
                                                                    type: "string";
                                                                };
                                                                items: {
                                                                    items: {
                                                                        type: "string";
                                                                    };
                                                                    type: "array";
                                                                };
                                                                hide: {
                                                                    type: "boolean";
                                                                };
                                                                component: {
                                                                    enum: ("radio" | "checkbox")[];
                                                                    type: "string";
                                                                };
                                                                like: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                dislike: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                satisfied: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                neutral: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                                dissatisfied: {
                                                                    properties: {
                                                                        label: {
                                                                            type: "string";
                                                                        };
                                                                        items: {
                                                                            items: {
                                                                                type: "string";
                                                                            };
                                                                            type: "array";
                                                                        };
                                                                        hide: {
                                                                            type: "boolean";
                                                                        };
                                                                        component: {
                                                                            enum: ("radio" | "checkbox")[];
                                                                            type: "string";
                                                                        };
                                                                    };
                                                                    additionalProperties: false;
                                                                    type: "object";
                                                                };
                                                            };
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                        label: {
                                                            type: "string";
                                                        };
                                                        items: {
                                                            items: {
                                                                type: "string";
                                                            };
                                                            type: "array";
                                                            minItems: 1;
                                                        };
                                                        submitText: {
                                                            type: "string";
                                                        };
                                                        buttonText: {
                                                            type: "string";
                                                        };
                                                        component: {
                                                            enum: ("radio" | "checkbox")[];
                                                            type: "string";
                                                        };
                                                        leftScaleLabel: {
                                                            type: "string";
                                                        };
                                                        rightScaleLabel: {
                                                            type: "string";
                                                        };
                                                        optionalEmail: {
                                                            properties: {
                                                                label: {
                                                                    type: "string";
                                                                };
                                                                hide: {
                                                                    type: "boolean";
                                                                };
                                                                placeholder: {
                                                                    type: "string";
                                                                };
                                                            };
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                        };
                                        hidePaginationButtons: {
                                            type: "boolean";
                                        };
                                        menu: {
                                            properties: {
                                                requireExactGroups: {
                                                    type: "boolean";
                                                };
                                                groups: {
                                                    items: {
                                                        properties: {
                                                            name: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                properties: any;
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            queries: {
                                                                properties: any;
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            mutations: {
                                                                properties: any;
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            subscriptions: {
                                                                properties: any;
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            types: {
                                                                properties: any;
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                            directives: {
                                                                properties: any;
                                                                additionalProperties: false;
                                                                type: "object";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                        required: "name"[];
                                                    };
                                                    type: "array";
                                                };
                                                otherItemsGroupName: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                        };
                                        apiLogo: {
                                            properties: {
                                                backgroundColor: {
                                                    type: "string";
                                                };
                                                href: {
                                                    type: "string";
                                                };
                                                imageUrl: {
                                                    type: "string";
                                                };
                                                altText: {
                                                    type: "string";
                                                };
                                            };
                                            type: "object";
                                        };
                                        jsonSamplesDepth: {
                                            type: "number";
                                        };
                                        samplesMaxInlineArgs: {
                                            type: "number";
                                        };
                                        fieldExpandLevel: {
                                            type: "number";
                                        };
                                        baseUrlPath: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                };
                                output: {
                                    type: "string";
                                    pattern: "(.ya?ml|.json)$";
                                };
                            };
                            type: "object";
                            required: "root"[];
                        };
                        type: "object";
                    };
                    rules: {
                        additionalProperties: {
                            oneOf: ({
                                type: "string";
                            } | {
                                type: "object";
                            })[];
                        };
                        type: "object";
                    };
                    decorators: {
                        additionalProperties: true;
                        type: "object";
                    };
                    preprocessors: {
                        additionalProperties: true;
                        type: "object";
                    };
                    ssoDirect: {
                        additionalProperties: {
                            oneOf: ({
                                properties: {
                                    type: {
                                        const: AuthProviderType.OIDC;
                                        type: "string";
                                    };
                                    title: {
                                        type: "string";
                                    };
                                    clientId: {
                                        type: "string";
                                        minLength: 1;
                                    };
                                    configurationUrl: {
                                        type: "string";
                                        minLength: 1;
                                    };
                                    configuration: {
                                        properties: {
                                            token_endpoint: {
                                                type: "string";
                                            };
                                            authorization_endpoint: {
                                                type: "string";
                                            };
                                            end_session_endpoint: {
                                                type: "string";
                                            };
                                            jwks_uri: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: true;
                                        type: "object";
                                        required: ("token_endpoint" | "authorization_endpoint")[];
                                    };
                                    clientSecret: {
                                        type: "string";
                                        minLength: 0;
                                    };
                                    pkce: {
                                        type: "boolean";
                                    };
                                    teamsClaimName: {
                                        type: "string";
                                    };
                                    teamsClaimMap: {
                                        additionalProperties: {
                                            type: "string";
                                        };
                                        type: "object";
                                    };
                                    defaultTeams: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    scopes: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    tokenExpirationTime: {
                                        type: "number";
                                    };
                                    authorizationRequestCustomParams: {
                                        additionalProperties: {
                                            type: "string";
                                        };
                                        type: "object";
                                    };
                                    tokenRequestCustomParams: {
                                        additionalProperties: {
                                            type: "string";
                                        };
                                        type: "object";
                                    };
                                    audience: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: false;
                                oneOf: ({
                                    required: "configurationUrl"[];
                                } | {
                                    required: "configuration"[];
                                })[];
                                type: "object";
                                required: ("type" | "clientId")[];
                            } | {
                                properties: {
                                    type: {
                                        const: AuthProviderType.SAML2;
                                        type: "string";
                                    };
                                    title: {
                                        type: "string";
                                    };
                                    issuerId: {
                                        type: "string";
                                    };
                                    ssoUrl: {
                                        type: "string";
                                    };
                                    x509PublicCert: {
                                        type: "string";
                                    };
                                    defaultTeams: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    entityId: {
                                        type: "string";
                                    };
                                    teamsAttributeName: {
                                        type: "string";
                                    };
                                    teamsAttributeMap: {
                                        additionalProperties: {
                                            type: "string";
                                        };
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: ("type" | "issuerId" | "ssoUrl" | "x509PublicCert")[];
                            })[];
                            discriminator: {
                                propertyName: "type";
                            };
                        };
                        type: "object";
                    };
                    sso: {
                        oneOf: ({
                            items: {
                                enum: ("REDOCLY" | "CORPORATE" | "GUEST")[];
                                type: "string";
                            };
                            type: "array";
                            uniqueItems: true;
                        } | {
                            enum: ("REDOCLY" | "CORPORATE" | "GUEST")[];
                            type: "string";
                        })[];
                    };
                    residency: {
                        type: "string";
                    };
                    developerOnboarding: {
                        properties: {
                            adapters: {
                                items: {
                                    oneOf: ({
                                        properties: {
                                            type: {
                                                const: "GRAVITEE";
                                                type: "string";
                                            };
                                            apiBaseUrl: {
                                                type: "string";
                                            };
                                            auth: {
                                                oneOf: ({
                                                    properties: {
                                                        static: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: "static"[];
                                                } | {
                                                    properties: {
                                                        idp: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: "idp"[];
                                                })[];
                                            };
                                            env: {
                                                type: "string";
                                            };
                                            stage: {
                                                type: "string";
                                            };
                                            allowApiProductsOutsideCatalog: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: ("type" | "apiBaseUrl")[];
                                    } | {
                                        properties: {
                                            type: {
                                                const: "APIGEE_X";
                                                type: "string";
                                            };
                                            organizationName: {
                                                type: "string";
                                            };
                                            auth: {
                                                oneOf: ({
                                                    properties: {
                                                        type: {
                                                            const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                                            type: "string";
                                                        };
                                                        clientId: {
                                                            type: "string";
                                                        };
                                                        tokenEndpoint: {
                                                            type: "string";
                                                        };
                                                        clientSecret: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: ("type" | "clientId" | "tokenEndpoint" | "clientSecret")[];
                                                } | {
                                                    properties: {
                                                        type: {
                                                            const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                                            type: "string";
                                                        };
                                                        serviceAccountEmail: {
                                                            type: "string";
                                                        };
                                                        serviceAccountPrivateKey: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: ("type" | "serviceAccountEmail" | "serviceAccountPrivateKey")[];
                                                })[];
                                                type: "object";
                                                discriminator: {
                                                    propertyName: "type";
                                                };
                                            };
                                            apiUrl: {
                                                type: "string";
                                            };
                                            stage: {
                                                type: "string";
                                            };
                                            ignoreApiProducts: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            };
                                            allowApiProductsOutsideCatalog: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: ("type" | "organizationName" | "auth")[];
                                    } | {
                                        properties: {
                                            type: {
                                                const: "APIGEE_EDGE";
                                                type: "string";
                                            };
                                            organizationName: {
                                                type: "string";
                                            };
                                            auth: {
                                                oneOf: ({
                                                    properties: {
                                                        type: {
                                                            const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                                            type: "string";
                                                        };
                                                        clientId: {
                                                            type: "string";
                                                        };
                                                        tokenEndpoint: {
                                                            type: "string";
                                                        };
                                                        clientSecret: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: ("type" | "clientId" | "tokenEndpoint" | "clientSecret")[];
                                                } | {
                                                    properties: {
                                                        type: {
                                                            const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                                            type: "string";
                                                        };
                                                        serviceAccountEmail: {
                                                            type: "string";
                                                        };
                                                        serviceAccountPrivateKey: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: ("type" | "serviceAccountEmail" | "serviceAccountPrivateKey")[];
                                                })[];
                                                type: "object";
                                                discriminator: {
                                                    propertyName: "type";
                                                };
                                            };
                                            apiUrl: {
                                                type: "string";
                                            };
                                            stage: {
                                                type: "string";
                                            };
                                            ignoreApiProducts: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            };
                                            allowApiProductsOutsideCatalog: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: ("type" | "organizationName" | "auth")[];
                                    })[];
                                    type: "object";
                                    discriminator: {
                                        propertyName: "type";
                                    };
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                        required: "adapters"[];
                    };
                    removeAttribution: {
                        type: "boolean";
                    };
                    i18n: {
                        properties: {
                            defaultLocale: {
                                type: "string";
                            };
                            locales: {
                                items: {
                                    properties: {
                                        name: {
                                            type: "string";
                                        };
                                        code: {
                                            type: "string";
                                        };
                                    };
                                    type: "object";
                                    required: "code"[];
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                        required: "defaultLocale"[];
                    };
                    l10n: {
                        properties: {
                            defaultLocale: {
                                type: "string";
                            };
                            locales: {
                                items: {
                                    properties: {
                                        name: {
                                            type: "string";
                                        };
                                        code: {
                                            type: "string";
                                        };
                                    };
                                    type: "object";
                                    required: "code"[];
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                        required: "defaultLocale"[];
                    };
                    metadataGlobs: {
                        additionalProperties: {
                            additionalProperties: true;
                            type: "object";
                        };
                        type: "object";
                    };
                    ignore: {
                        items: {
                            type: "string";
                        };
                        type: "array";
                    };
                    reunite: {
                        properties: {
                            ignoreLint: {
                                oneOf: ({
                                    type: "boolean";
                                } | {
                                    additionalProperties: {
                                        type: "boolean";
                                    };
                                    type: "object";
                                })[];
                            };
                            ignoreLinkChecker: {
                                type: "boolean";
                            };
                            ignoreMarkdocErrors: {
                                type: "boolean";
                            };
                            jobs: {
                                items: {
                                    properties: {
                                        path: {
                                            type: "string";
                                            pattern: "^(?!\\.\\./)(/[a-zA-Z0-9_\\-\\./]+|./[a-zA-Z0-9_\\-\\./]+|[a-zA-Z0-9_\\-\\./]+)$";
                                        };
                                        trigger: {
                                            properties: {
                                                event: {
                                                    enum: "schedule"[];
                                                    type: "string";
                                                };
                                                interval: {
                                                    type: "string";
                                                    pattern: "^[1-9]\\d*[mhdw]$";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "event"[];
                                        };
                                        agent: {
                                            enum: "respect"[];
                                            type: "string";
                                        };
                                        inputs: {
                                            additionalProperties: {
                                                type: "string";
                                            };
                                            type: "object";
                                        };
                                        servers: {
                                            patternProperties: {
                                                "^[a-zA-Z0-9_-]+$": {
                                                    type: "string";
                                                    pattern: "^https?://[^\\s/$.?#].[^\\s]*$";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                        };
                                        severity: {
                                            properties: {
                                                schemaCheck: {
                                                    enum: ("off" | "error" | "warn")[];
                                                    type: "string";
                                                };
                                                statusCodeCheck: {
                                                    enum: ("off" | "error" | "warn")[];
                                                    type: "string";
                                                };
                                                contentTypeCheck: {
                                                    enum: ("off" | "error" | "warn")[];
                                                    type: "string";
                                                };
                                                successCriteriaCheck: {
                                                    enum: ("off" | "error" | "warn")[];
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                    required: ("path" | "trigger" | "agent")[];
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    products: {
                        additionalProperties: {
                            properties: {
                                name: {
                                    type: "string";
                                };
                                folder: {
                                    type: "string";
                                };
                                icon: {
                                    type: "string";
                                };
                            };
                            additionalProperties: false;
                            type: "object";
                            required: ("name" | "folder")[];
                        };
                        type: "object";
                    };
                    footer: {
                        properties: {
                            items: {
                                items: {
                                    properties: {
                                        label: {
                                            type: "string";
                                        };
                                        items: {
                                            items: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: any;
                                                    page: any;
                                                    href: any;
                                                    icon: any;
                                                    rbac: any;
                                                    directory: any;
                                                    disconnect: any;
                                                    group: any;
                                                    external: any;
                                                    labelTranslationKey: any;
                                                    groupTranslationKey: any;
                                                    separator: any;
                                                    separatorLine: any;
                                                    linePosition: any;
                                                    version: any;
                                                    menuStyle: any;
                                                    expanded: any;
                                                    selectFirstItemOnExpand: any;
                                                    flatten: any;
                                                    linkedSidebars: any;
                                                };
                                                type: "object";
                                            };
                                            type: "array";
                                        };
                                        page: {
                                            type: "string";
                                        };
                                        href: {
                                            type: "string";
                                        };
                                        icon: {
                                            oneOf: ({
                                                type: "string";
                                            } | {
                                                properties: {
                                                    srcSet: any;
                                                };
                                                type: "object";
                                                required: "srcSet"[];
                                            })[];
                                        };
                                        rbac: {
                                            additionalProperties: {
                                                type: "string";
                                            };
                                            type: "object";
                                        };
                                        directory: {
                                            type: "string";
                                        };
                                        disconnect: {
                                            type: "boolean";
                                        };
                                        group: {
                                            type: "string";
                                        };
                                        external: {
                                            type: "boolean";
                                        };
                                        labelTranslationKey: {
                                            type: "string";
                                        };
                                        groupTranslationKey: {
                                            type: "string";
                                        };
                                        separator: {
                                            type: "string";
                                        };
                                        separatorLine: {
                                            type: "boolean";
                                        };
                                        linePosition: {
                                            enum: ("top" | "bottom")[];
                                            type: "string";
                                        };
                                        version: {
                                            type: "string";
                                        };
                                        menuStyle: {
                                            enum: "drilldown"[];
                                            type: "string";
                                        };
                                        expanded: {
                                            const: "always";
                                            type: "string";
                                        };
                                        selectFirstItemOnExpand: {
                                            type: "boolean";
                                        };
                                        flatten: {
                                            type: "boolean";
                                        };
                                        linkedSidebars: {
                                            items: {
                                                type: "string";
                                            };
                                            type: "array";
                                        };
                                    };
                                    type: "object";
                                };
                                type: "array";
                            };
                            logo: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            hide: {
                                type: "boolean";
                            };
                            copyrightText: {
                                type: "string";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    scripts: {
                        properties: {
                            head: {
                                items: {
                                    properties: {
                                        type: {
                                            type: "string";
                                        };
                                        src: {
                                            type: "string";
                                        };
                                        async: {
                                            type: "boolean";
                                        };
                                        crossorigin: {
                                            type: "string";
                                        };
                                        defer: {
                                            type: "boolean";
                                        };
                                        fetchpriority: {
                                            type: "string";
                                        };
                                        integrity: {
                                            type: "string";
                                        };
                                        module: {
                                            type: "boolean";
                                        };
                                        nomodule: {
                                            type: "boolean";
                                        };
                                        nonce: {
                                            type: "string";
                                        };
                                        referrerpolicy: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: true;
                                    type: "object";
                                    required: "src"[];
                                };
                                type: "array";
                            };
                            body: {
                                items: {
                                    properties: {
                                        type: {
                                            type: "string";
                                        };
                                        src: {
                                            type: "string";
                                        };
                                        async: {
                                            type: "boolean";
                                        };
                                        crossorigin: {
                                            type: "string";
                                        };
                                        defer: {
                                            type: "boolean";
                                        };
                                        fetchpriority: {
                                            type: "string";
                                        };
                                        integrity: {
                                            type: "string";
                                        };
                                        module: {
                                            type: "boolean";
                                        };
                                        nomodule: {
                                            type: "boolean";
                                        };
                                        nonce: {
                                            type: "string";
                                        };
                                        referrerpolicy: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: true;
                                    type: "object";
                                    required: "src"[];
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    feedback: {
                        properties: {
                            type: {
                                enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                type: "string";
                            };
                            hide: {
                                type: "boolean";
                            };
                            settings: {
                                properties: {
                                    comment: {
                                        properties: {
                                            label: {
                                                type: "string";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                            likeLabel: {
                                                type: "string";
                                            };
                                            dislikeLabel: {
                                                type: "string";
                                            };
                                            satisfiedLabel: {
                                                type: "string";
                                            };
                                            neutralLabel: {
                                                type: "string";
                                            };
                                            dissatisfiedLabel: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    reasons: {
                                        properties: {
                                            label: {
                                                type: "string";
                                            };
                                            items: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                            component: {
                                                enum: ("radio" | "checkbox")[];
                                                type: "string";
                                            };
                                            like: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    component: {
                                                        enum: ("radio" | "checkbox")[];
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            dislike: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    component: {
                                                        enum: ("radio" | "checkbox")[];
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            satisfied: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    component: {
                                                        enum: ("radio" | "checkbox")[];
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            neutral: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    component: {
                                                        enum: ("radio" | "checkbox")[];
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            dissatisfied: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    component: {
                                                        enum: ("radio" | "checkbox")[];
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    label: {
                                        type: "string";
                                    };
                                    items: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                        minItems: 1;
                                    };
                                    submitText: {
                                        type: "string";
                                    };
                                    buttonText: {
                                        type: "string";
                                    };
                                    component: {
                                        enum: ("radio" | "checkbox")[];
                                        type: "string";
                                    };
                                    leftScaleLabel: {
                                        type: "string";
                                    };
                                    rightScaleLabel: {
                                        type: "string";
                                    };
                                    optionalEmail: {
                                        properties: {
                                            label: {
                                                type: "string";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                            placeholder: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    search: {
                        properties: {
                            hide: {
                                type: "boolean";
                            };
                            engine: {
                                enum: ("flexsearch" | "typesense")[];
                                type: "string";
                            };
                            ai: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    suggestions: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    prompt: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            filters: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    facets: {
                                        items: {
                                            properties: {
                                                name: {
                                                    type: "string";
                                                };
                                                type: {
                                                    enum: ("multi-select" | "select" | "tags")[];
                                                    type: "string";
                                                };
                                                field: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: ("name" | "type" | "field")[];
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            placement: {
                                type: "string";
                            };
                            shortcuts: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                            suggestedPages: {
                                items: {
                                    properties: {
                                        label: {
                                            type: "string";
                                        };
                                        page: {
                                            type: "string";
                                        };
                                        labelTranslationKey: {
                                            type: "string";
                                        };
                                    };
                                    type: "object";
                                    required: "page"[];
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    colorMode: {
                        properties: {
                            hide: {
                                type: "boolean";
                            };
                            ignoreDetection: {
                                type: "boolean";
                            };
                            modes: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    navigation: {
                        properties: {
                            nextButton: {
                                properties: {
                                    text: {
                                        type: "string";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            previousButton: {
                                properties: {
                                    text: {
                                        type: "string";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    codeSnippet: {
                        properties: {
                            elementFormat: {
                                type: "string";
                            };
                            copy: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            report: {
                                properties: {
                                    label: {
                                        type: "string";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                    buttonText: {
                                        type: "string";
                                    };
                                    tooltipText: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            expand: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            collapse: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    markdown: {
                        properties: {
                            frontMatterKeysToResolve: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                            partialsFolders: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                            lastUpdatedBlock: {
                                properties: {
                                    format: {
                                        enum: ("timeago" | "iso" | "long" | "short")[];
                                        type: "string";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                    locale: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            toc: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    header: {
                                        type: "string";
                                    };
                                    depth: {
                                        type: "integer";
                                        minimum: 1;
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            editPage: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    baseUrl: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    openapi: {
                        properties: {
                            theme: {
                                properties: {
                                    breakpoints: {
                                        properties: {
                                            small: {
                                                type: "string";
                                            };
                                            medium: {
                                                type: "string";
                                            };
                                            large: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    codeBlock: {
                                        properties: {
                                            backgroundColor: {
                                                type: "string";
                                            };
                                            borderRadius: {
                                                type: "string";
                                            };
                                            tokens: {
                                                properties: {
                                                    fontFamily: any;
                                                    fontSize: any;
                                                    fontWeight: any;
                                                    lineHeight: any;
                                                    color: any;
                                                };
                                                type: "object";
                                            };
                                        };
                                        type: "object";
                                    };
                                    colors: {
                                        properties: {
                                            accent: {
                                                properties: {
                                                    main: any;
                                                    light: any;
                                                    dark: any;
                                                    contrastText: any;
                                                };
                                                type: "object";
                                            };
                                            border: {
                                                properties: {
                                                    main: any;
                                                    light: any;
                                                    dark: any;
                                                    contrastText: any;
                                                };
                                                type: "object";
                                            };
                                            error: {
                                                properties: {
                                                    main: any;
                                                    light: any;
                                                    dark: any;
                                                    contrastText: any;
                                                };
                                                type: "object";
                                            };
                                            http: {
                                                properties: {
                                                    link: any;
                                                    basic: any;
                                                    delete: any;
                                                    get: any;
                                                    head: any;
                                                    options: any;
                                                    patch: any;
                                                    post: any;
                                                    put: any;
                                                };
                                                type: "object";
                                            };
                                            primary: {
                                                properties: {
                                                    main: any;
                                                    light: any;
                                                    dark: any;
                                                    contrastText: any;
                                                };
                                                type: "object";
                                            };
                                            responses: {
                                                properties: {
                                                    error: any;
                                                    success: any;
                                                    info: any;
                                                    redirect: any;
                                                };
                                                type: "object";
                                            };
                                            secondary: {
                                                properties: {
                                                    main: any;
                                                    light: any;
                                                    dark: any;
                                                    contrastText: any;
                                                };
                                                type: "object";
                                            };
                                            success: {
                                                properties: {
                                                    main: any;
                                                    light: any;
                                                    dark: any;
                                                    contrastText: any;
                                                };
                                                type: "object";
                                            };
                                            text: {
                                                properties: {
                                                    light: any;
                                                    primary: any;
                                                    secondary: any;
                                                };
                                                type: "object";
                                            };
                                            tonalOffset: {
                                                type: "number";
                                            };
                                            warning: {
                                                properties: {
                                                    main: any;
                                                    light: any;
                                                    dark: any;
                                                    contrastText: any;
                                                };
                                                type: "object";
                                            };
                                        };
                                        type: "object";
                                    };
                                    components: {
                                        properties: {
                                            buttons: {
                                                properties: {
                                                    fontFamily: any;
                                                    fontSize: any;
                                                    fontWeight: any;
                                                    lineHeight: any;
                                                    borderRadius: any;
                                                    hoverStyle: any;
                                                    boxShadow: any;
                                                    hoverBoxShadow: any;
                                                    sizes: any;
                                                };
                                                type: "object";
                                            };
                                            httpBadges: {
                                                properties: {
                                                    fontFamily: any;
                                                    fontSize: any;
                                                    fontWeight: any;
                                                    lineHeight: any;
                                                    borderRadius: any;
                                                    color: any;
                                                    sizes: any;
                                                };
                                                type: "object";
                                            };
                                            layoutControls: {
                                                properties: {
                                                    top: any;
                                                    width: any;
                                                    height: any;
                                                };
                                                type: "object";
                                            };
                                            panels: {
                                                properties: {
                                                    backgroundColor: any;
                                                    borderRadius: any;
                                                };
                                                type: "object";
                                            };
                                            tryItButton: {
                                                properties: {
                                                    fullWidth: any;
                                                };
                                                type: "object";
                                            };
                                            tryItSendButton: {
                                                properties: {
                                                    fullWidth: any;
                                                };
                                                type: "object";
                                            };
                                        };
                                        type: "object";
                                    };
                                    layout: {
                                        properties: {
                                            stacked: {
                                                properties: {
                                                    maxWidth: {
                                                        properties: {
                                                            small: {
                                                                type: "string";
                                                            };
                                                            medium: {
                                                                type: "string";
                                                            };
                                                            large: {
                                                                type: "string";
                                                            };
                                                        };
                                                        type: "object";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            "three-panel": {
                                                properties: {
                                                    maxWidth: {
                                                        properties: {
                                                            small: {
                                                                type: "string";
                                                            };
                                                            medium: {
                                                                type: "string";
                                                            };
                                                            large: {
                                                                type: "string";
                                                            };
                                                        };
                                                        type: "object";
                                                    };
                                                    middlePanelMaxWidth: {
                                                        properties: {
                                                            small: {
                                                                type: "string";
                                                            };
                                                            medium: {
                                                                type: "string";
                                                            };
                                                            large: {
                                                                type: "string";
                                                            };
                                                        };
                                                        type: "object";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            showDarkRightPanel: {
                                                type: "boolean";
                                            };
                                        };
                                        type: "object";
                                    };
                                    logo: {
                                        properties: {
                                            maxWidth: {
                                                type: "string";
                                            };
                                            gutter: {
                                                type: "string";
                                            };
                                            maxHeight: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    fab: {
                                        properties: {
                                            backgroundColor: {
                                                type: "string";
                                            };
                                            color: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    overrides: {
                                        properties: {
                                            DownloadButton: {
                                                properties: {
                                                    custom: any;
                                                };
                                                type: "object";
                                            };
                                            NextSectionButton: {
                                                properties: {
                                                    custom: any;
                                                };
                                                type: "object";
                                            };
                                        };
                                        type: "object";
                                    };
                                    rightPanel: {
                                        properties: {
                                            backgroundColor: {
                                                type: "string";
                                            };
                                            width: {
                                                type: "string";
                                            };
                                            panelBackgroundColor: {
                                                type: "string";
                                            };
                                            panelControlsBackgroundColor: {
                                                type: "string";
                                            };
                                            showAtBreakpoint: {
                                                type: "string";
                                            };
                                            textColor: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    schema: {
                                        properties: {
                                            examples: {
                                                properties: {
                                                    backgroundColor: any;
                                                    border: any;
                                                };
                                                type: "object";
                                            };
                                            breakFieldNames: {
                                                type: "boolean";
                                            };
                                            caretColor: {
                                                type: "string";
                                            };
                                            caretSize: {
                                                type: "string";
                                            };
                                            constraints: {
                                                properties: {
                                                    backgroundColor: any;
                                                    border: any;
                                                };
                                                type: "object";
                                            };
                                            defaultDetailsWidth: {
                                                type: "string";
                                            };
                                            labelsTextSize: {
                                                type: "string";
                                            };
                                            linesColor: {
                                                type: "string";
                                            };
                                            nestedBackground: {
                                                type: "string";
                                            };
                                            nestingSpacing: {
                                                type: "string";
                                            };
                                            requireLabelColor: {
                                                type: "string";
                                            };
                                            typeNameColor: {
                                                type: "string";
                                            };
                                            typeTitleColor: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    shape: {
                                        properties: {
                                            borderRadius: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    sidebar: {
                                        properties: {
                                            fontFamily: {
                                                type: "string";
                                            };
                                            fontSize: {
                                                type: "string";
                                            };
                                            fontWeight: {
                                                type: "string";
                                            };
                                            lineHeight: {
                                                type: "string";
                                            };
                                            spacing: {
                                                properties: {
                                                    unit: any;
                                                    paddingHorizontal: any;
                                                    paddingVertical: any;
                                                    offsetTop: any;
                                                    offsetLeft: any;
                                                    offsetNesting: any;
                                                };
                                                type: "object";
                                            };
                                            backgroundColor: {
                                                type: "string";
                                            };
                                            borderRadius: {
                                                type: "string";
                                            };
                                            width: {
                                                type: "string";
                                            };
                                            showAtBreakpoint: {
                                                type: "string";
                                            };
                                            textColor: {
                                                type: "string";
                                            };
                                            caretColor: {
                                                type: "string";
                                            };
                                            caretSize: {
                                                type: "string";
                                            };
                                            activeBgColor: {
                                                type: "string";
                                            };
                                            activeTextColor: {
                                                type: "string";
                                            };
                                            breakPath: {
                                                type: "boolean";
                                            };
                                            groupItems: {
                                                properties: {
                                                    fontWeight: any;
                                                    subItemsColor: any;
                                                    textTransform: any;
                                                };
                                                type: "object";
                                            };
                                            level1items: {
                                                properties: {
                                                    fontWeight: any;
                                                    subItemsColor: any;
                                                    textTransform: any;
                                                };
                                                type: "object";
                                            };
                                            rightLineColor: {
                                                type: "string";
                                            };
                                            separatorLabelColor: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    spacing: {
                                        properties: {
                                            unit: {
                                                type: "number";
                                            };
                                            sectionHorizontal: {
                                                type: "number";
                                            };
                                            sectionVertical: {
                                                type: "number";
                                            };
                                        };
                                        type: "object";
                                    };
                                    typography: {
                                        properties: {
                                            fontFamily: {
                                                type: "string";
                                            };
                                            fontSize: {
                                                type: "string";
                                            };
                                            fontWeight: {
                                                type: "string";
                                            };
                                            lineHeight: {
                                                type: "string";
                                            };
                                            links: {
                                                properties: {
                                                    color: any;
                                                    hover: any;
                                                    textDecoration: any;
                                                    hoverTextDecoration: any;
                                                    visited: any;
                                                };
                                                type: "object";
                                            };
                                            fontWeightBold: {
                                                type: "string";
                                            };
                                            fontWeightLight: {
                                                type: "string";
                                            };
                                            fontWeightRegular: {
                                                type: "string";
                                            };
                                            heading1: {
                                                properties: {
                                                    fontFamily: {
                                                        type: "string";
                                                    };
                                                    fontSize: {
                                                        type: "string";
                                                    };
                                                    fontWeight: {
                                                        type: "string";
                                                    };
                                                    lineHeight: {
                                                        type: "string";
                                                    };
                                                    color: any;
                                                    transform: any;
                                                };
                                                type: "object";
                                            };
                                            heading2: {
                                                properties: {
                                                    fontFamily: {
                                                        type: "string";
                                                    };
                                                    fontSize: {
                                                        type: "string";
                                                    };
                                                    fontWeight: {
                                                        type: "string";
                                                    };
                                                    lineHeight: {
                                                        type: "string";
                                                    };
                                                    color: any;
                                                    transform: any;
                                                };
                                                type: "object";
                                            };
                                            heading3: {
                                                properties: {
                                                    fontFamily: {
                                                        type: "string";
                                                    };
                                                    fontSize: {
                                                        type: "string";
                                                    };
                                                    fontWeight: {
                                                        type: "string";
                                                    };
                                                    lineHeight: {
                                                        type: "string";
                                                    };
                                                    color: any;
                                                    transform: any;
                                                };
                                                type: "object";
                                            };
                                            headings: {
                                                properties: {
                                                    fontFamily: {
                                                        type: "string";
                                                    };
                                                    fontSize: {
                                                        type: "string";
                                                    };
                                                    fontWeight: {
                                                        type: "string";
                                                    };
                                                    lineHeight: {
                                                        type: "string";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            optimizeSpeed: {
                                                type: "boolean";
                                            };
                                            rightPanelHeading: {
                                                properties: {
                                                    fontFamily: {
                                                        type: "string";
                                                    };
                                                    fontSize: {
                                                        type: "string";
                                                    };
                                                    fontWeight: {
                                                        type: "string";
                                                    };
                                                    lineHeight: {
                                                        type: "string";
                                                    };
                                                    color: any;
                                                    transform: any;
                                                };
                                                type: "object";
                                            };
                                            smoothing: {
                                                enum: ("auto" | "none" | "antialiased" | "subpixel-antialiased" | "grayscale")[];
                                                type: "string";
                                            };
                                            code: {
                                                properties: {
                                                    fontFamily: {
                                                        type: "string";
                                                    };
                                                    fontSize: {
                                                        type: "string";
                                                    };
                                                    fontWeight: {
                                                        type: "string";
                                                    };
                                                    lineHeight: {
                                                        type: "string";
                                                    };
                                                    backgroundColor: any;
                                                    color: any;
                                                    wordBreak: any;
                                                    wrap: any;
                                                };
                                                type: "object";
                                            };
                                            fieldName: {
                                                properties: {
                                                    fontFamily: {
                                                        type: "string";
                                                    };
                                                    fontSize: {
                                                        type: "string";
                                                    };
                                                    fontWeight: {
                                                        type: "string";
                                                    };
                                                    lineHeight: {
                                                        type: "string";
                                                    };
                                                };
                                                type: "object";
                                            };
                                        };
                                        type: "object";
                                    };
                                    links: {
                                        properties: {
                                            color: {
                                                type: "string";
                                            };
                                        };
                                    };
                                    codeSample: {
                                        properties: {
                                            backgroundColor: {
                                                type: "string";
                                            };
                                        };
                                    };
                                };
                                type: "object";
                            };
                            ctrlFHijack: {
                                type: "boolean";
                            };
                            defaultSampleLanguage: {
                                type: "string";
                            };
                            disableDeepLinks: {
                                type: "boolean";
                            };
                            disableSearch: {
                                type: "boolean";
                            };
                            disableSidebar: {
                                type: "boolean";
                            };
                            downloadDefinitionUrl: {
                                type: "string";
                            };
                            expandDefaultServerVariables: {
                                type: "boolean";
                            };
                            enumSkipQuotes: {
                                type: "boolean";
                            };
                            expandDefaultRequest: {
                                type: "boolean";
                            };
                            expandDefaultResponse: {
                                type: "boolean";
                            };
                            expandResponses: {
                                type: "string";
                            };
                            expandSingleSchemaField: {
                                type: "boolean";
                            };
                            generateCodeSamples: {
                                properties: {
                                    languages: {
                                        items: {
                                            properties: {
                                                lang: {
                                                    enum: ("curl" | "JavaScript" | "Node.js" | "Python" | "Java8+Apache" | "Java" | "C#" | "PHP" | "Go" | "Ruby" | "R")[];
                                                };
                                                label: {
                                                    type: "string";
                                                };
                                            };
                                            type: "object";
                                            required: "lang"[];
                                        };
                                        type: "array";
                                    };
                                    skipOptionalParameters: {
                                        type: "boolean";
                                    };
                                };
                                type: "object";
                                required: "languages"[];
                            };
                            generatedPayloadSamplesMaxDepth: {
                                type: "number";
                            };
                            hideDownloadButton: {
                                type: "boolean";
                            };
                            hideHostname: {
                                type: "boolean";
                            };
                            hideInfoSection: {
                                type: "boolean";
                            };
                            hideLogo: {
                                type: "boolean";
                            };
                            hideRequestPayloadSample: {
                                type: "boolean";
                            };
                            hideRightPanel: {
                                type: "boolean";
                            };
                            hideSchemaPattern: {
                                type: "boolean";
                            };
                            hideSingleRequestSampleTab: {
                                type: "boolean";
                            };
                            hideSecuritySection: {
                                type: "boolean";
                            };
                            hideTryItPanel: {
                                type: "boolean";
                            };
                            hideFab: {
                                type: "boolean";
                            };
                            hideOneOfDescription: {
                                type: "boolean";
                            };
                            htmlTemplate: {
                                type: "string";
                            };
                            jsonSampleExpandLevel: {
                                oneOf: ({
                                    type: "number";
                                    minimum: 1;
                                } | {
                                    type: "string";
                                })[];
                            };
                            labels: {
                                properties: {
                                    enum: {
                                        type: "string";
                                    };
                                    examples: {
                                        type: "string";
                                    };
                                    enumSingleValue: {
                                        type: "string";
                                    };
                                    enumArray: {
                                        type: "string";
                                    };
                                    deprecated: {
                                        type: "string";
                                    };
                                    example: {
                                        type: "string";
                                    };
                                    nullable: {
                                        type: "string";
                                    };
                                    recursive: {
                                        type: "string";
                                    };
                                    arrayOf: {
                                        type: "string";
                                    };
                                    webhook: {
                                        type: "string";
                                    };
                                    authorizations: {
                                        type: "string";
                                    };
                                    tryItAuthBasicUsername: {
                                        type: "string";
                                    };
                                    tryItAuthBasicPassword: {
                                        type: "string";
                                    };
                                };
                                type: "object";
                            };
                            menuToggle: {
                                type: "boolean";
                            };
                            nativeScrollbars: {
                                type: "boolean";
                            };
                            noAutoAuth: {
                                type: "boolean";
                            };
                            onDeepLinkClick: {
                                type: "object";
                            };
                            pagination: {
                                enum: ("none" | "section" | "item")[];
                            };
                            pathInMiddlePanel: {
                                type: "boolean";
                            };
                            payloadSampleIdx: {
                                type: "number";
                                minimum: 0;
                            };
                            requestInterceptor: {
                                type: "object";
                            };
                            requiredPropsFirst: {
                                type: "boolean";
                            };
                            routingStrategy: {
                                type: "string";
                            };
                            samplesTabsMaxCount: {
                                type: "number";
                            };
                            schemaExpansionLevel: {
                                oneOf: ({
                                    type: "number";
                                    minimum: 0;
                                } | {
                                    type: "string";
                                })[];
                            };
                            minCharacterLengthToInitSearch: {
                                type: "number";
                                minimum: 1;
                            };
                            maxResponseHeadersToShowInTryIt: {
                                type: "number";
                                minimum: 0;
                            };
                            scrollYOffset: {
                                oneOf: ({
                                    type: "number";
                                } | {
                                    type: "string";
                                })[];
                            };
                            searchAutoExpand: {
                                type: "boolean";
                            };
                            searchFieldLevelBoost: {
                                type: "number";
                                minimum: 0;
                            };
                            searchMaxDepth: {
                                type: "number";
                                minimum: 1;
                            };
                            searchMode: {
                                enum: ("default" | "path-only")[];
                                type: "string";
                            };
                            searchOperationTitleBoost: {
                                type: "number";
                            };
                            searchTagTitleBoost: {
                                type: "number";
                            };
                            sendXUserAgentInTryIt: {
                                type: "boolean";
                            };
                            showChangeLayoutButton: {
                                type: "boolean";
                            };
                            showConsole: {
                                type: "boolean";
                            };
                            showNextButton: {
                                type: "boolean";
                            };
                            showRightPanelToggle: {
                                type: "boolean";
                            };
                            showSecuritySchemeType: {
                                type: "boolean";
                            };
                            showWebhookVerb: {
                                type: "boolean";
                            };
                            showObjectSchemaExamples: {
                                type: "boolean";
                            };
                            disableTryItRequestUrlEncoding: {
                                type: "boolean";
                            };
                            sidebarLinks: {
                                properties: {
                                    beforeInfo: {
                                        items: {
                                            properties: {
                                                label: {
                                                    type: "string";
                                                };
                                                link: {
                                                    type: "string";
                                                };
                                                target: {
                                                    type: "string";
                                                };
                                            };
                                            type: "object";
                                            required: ("label" | "link")[];
                                        };
                                        type: "array";
                                    };
                                    end: {
                                        items: {
                                            properties: {
                                                label: {
                                                    type: "string";
                                                };
                                                link: {
                                                    type: "string";
                                                };
                                                target: {
                                                    type: "string";
                                                };
                                            };
                                            type: "object";
                                            required: ("label" | "link")[];
                                        };
                                        type: "array";
                                    };
                                };
                                type: "object";
                            };
                            sideNavStyle: {
                                enum: ("path-only" | "summary-only" | "path-first" | "id-only")[];
                                type: "string";
                            };
                            simpleOneOfTypeLabel: {
                                type: "boolean";
                            };
                            sortEnumValuesAlphabetically: {
                                type: "boolean";
                            };
                            sortOperationsAlphabetically: {
                                type: "boolean";
                            };
                            sortPropsAlphabetically: {
                                type: "boolean";
                            };
                            sortTagsAlphabetically: {
                                type: "boolean";
                            };
                            suppressWarnings: {
                                type: "boolean";
                            };
                            unstable_externalDescription: {
                                type: "boolean";
                            };
                            unstable_ignoreMimeParameters: {
                                type: "boolean";
                            };
                            untrustedDefinition: {
                                type: "boolean";
                            };
                            showAccessMode: {
                                type: "boolean";
                            };
                            preserveOriginalExtensionsName: {
                                type: "boolean";
                            };
                            markdownHeadingsAnchorLevel: {
                                type: "number";
                            };
                            layout: {
                                enum: ("stacked" | "three-panel")[];
                                type: "string";
                            };
                            licenseKey: {
                                type: "string";
                            };
                            mockServer: {
                                properties: {
                                    url: {
                                        type: "string";
                                    };
                                    description: {
                                        type: "string";
                                    };
                                    position: {
                                        enum: ("first" | "last" | "replace" | "off")[];
                                        type: "string";
                                    };
                                };
                                type: "object";
                            };
                            feedback: {
                                properties: {
                                    type: {
                                        enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                        type: "string";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                    settings: {
                                        properties: {
                                            comment: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    likeLabel: {
                                                        type: "string";
                                                    };
                                                    dislikeLabel: {
                                                        type: "string";
                                                    };
                                                    satisfiedLabel: {
                                                        type: "string";
                                                    };
                                                    neutralLabel: {
                                                        type: "string";
                                                    };
                                                    dissatisfiedLabel: {
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            reasons: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    component: {
                                                        enum: ("radio" | "checkbox")[];
                                                        type: "string";
                                                    };
                                                    like: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    dislike: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    satisfied: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    neutral: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    dissatisfied: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            label: {
                                                type: "string";
                                            };
                                            items: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                                minItems: 1;
                                            };
                                            submitText: {
                                                type: "string";
                                            };
                                            buttonText: {
                                                type: "string";
                                            };
                                            component: {
                                                enum: ("radio" | "checkbox")[];
                                                type: "string";
                                            };
                                            leftScaleLabel: {
                                                type: "string";
                                            };
                                            rightScaleLabel: {
                                                type: "string";
                                            };
                                            optionalEmail: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    placeholder: {
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            hideLoading: {
                                type: "boolean";
                            };
                            disableRouter: {
                                type: "boolean";
                            };
                            hideSidebar: {
                                type: "boolean";
                            };
                            hideReplay: {
                                type: "boolean";
                            };
                            oAuth2RedirectURI: {
                                type: "string";
                                nullable: true;
                            };
                            corsProxyUrl: {
                                type: "string";
                            };
                            sortRequiredPropsFirst: {
                                type: "boolean";
                            };
                            sanitize: {
                                type: "boolean";
                            };
                            hideDownloadButtons: {
                                type: "boolean";
                            };
                            downloadUrls: {
                                items: {
                                    properties: {
                                        url: {
                                            type: "string";
                                        };
                                        title: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                    required: "url"[];
                                };
                                type: "array";
                            };
                            onlyRequiredInSamples: {
                                type: "boolean";
                            };
                            generatedSamplesMaxDepth: {
                                oneOf: ({
                                    type: "number";
                                } | {
                                    type: "string";
                                })[];
                            };
                            showExtensions: {
                                oneOf: ({
                                    type: "boolean";
                                } | {
                                    type: "string";
                                } | {
                                    items: {
                                        type: "string";
                                    };
                                    type: "array";
                                })[];
                            };
                            hideSchemaTitles: {
                                type: "boolean";
                            };
                            jsonSamplesExpandLevel: {
                                oneOf: ({
                                    type: "number";
                                } | {
                                    type: "string";
                                })[];
                            };
                            schemasExpansionLevel: {
                                oneOf: ({
                                    type: "number";
                                } | {
                                    type: "string";
                                })[];
                            };
                            maxDisplayedEnumValues: {
                                type: "number";
                            };
                            schemaDefinitionsTagName: {
                                type: "string";
                            };
                            hideInfoMetadata: {
                                type: "boolean";
                            };
                            events: {
                                type: "object";
                            };
                            skipBundle: {
                                type: "boolean";
                            };
                            routingBasePath: {
                                type: "string";
                            };
                            codeSamples: {
                                properties: {
                                    languages: {
                                        items: {
                                            properties: {
                                                lang: {
                                                    enum: ("curl" | "JavaScript" | "Node.js" | "Python" | "Java8+Apache" | "Java" | "C#" | "C#+Newtonsoft" | "PHP" | "Go" | "Ruby" | "R" | "Payload")[];
                                                    type: "string";
                                                };
                                                label: {
                                                    type: "string";
                                                };
                                                options: {
                                                    properties: any;
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "lang"[];
                                        };
                                        type: "array";
                                    };
                                    skipOptionalParameters: {
                                        type: "boolean";
                                    };
                                    withOAuth2Call: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: "languages"[];
                            };
                            ignoreNamedSchemas: {
                                oneOf: ({
                                    items: {
                                        type: "string";
                                    };
                                    type: "array";
                                } | {
                                    type: "string";
                                })[];
                            };
                            hidePropertiesPrefix: {
                                type: "boolean";
                            };
                            excludeFromSearch: {
                                type: "boolean";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    graphql: {
                        properties: {
                            sidebar: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                };
                                type: "object";
                            };
                            licenseKey: {
                                type: "string";
                            };
                            feedback: {
                                properties: {
                                    type: {
                                        enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                        type: "string";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                    settings: {
                                        properties: {
                                            comment: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    likeLabel: {
                                                        type: "string";
                                                    };
                                                    dislikeLabel: {
                                                        type: "string";
                                                    };
                                                    satisfiedLabel: {
                                                        type: "string";
                                                    };
                                                    neutralLabel: {
                                                        type: "string";
                                                    };
                                                    dissatisfiedLabel: {
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            reasons: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    items: {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    component: {
                                                        enum: ("radio" | "checkbox")[];
                                                        type: "string";
                                                    };
                                                    like: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    dislike: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    satisfied: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    neutral: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                    dissatisfied: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: {
                                                                items: {
                                                                    type: "string";
                                                                };
                                                                type: "array";
                                                            };
                                                            hide: {
                                                                type: "boolean";
                                                            };
                                                            component: {
                                                                enum: ("radio" | "checkbox")[];
                                                                type: "string";
                                                            };
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            label: {
                                                type: "string";
                                            };
                                            items: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                                minItems: 1;
                                            };
                                            submitText: {
                                                type: "string";
                                            };
                                            buttonText: {
                                                type: "string";
                                            };
                                            component: {
                                                enum: ("radio" | "checkbox")[];
                                                type: "string";
                                            };
                                            leftScaleLabel: {
                                                type: "string";
                                            };
                                            rightScaleLabel: {
                                                type: "string";
                                            };
                                            optionalEmail: {
                                                properties: {
                                                    label: {
                                                        type: "string";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    placeholder: {
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            hidePaginationButtons: {
                                type: "boolean";
                            };
                            menu: {
                                properties: {
                                    requireExactGroups: {
                                        type: "boolean";
                                    };
                                    groups: {
                                        items: {
                                            properties: {
                                                name: {
                                                    type: "string";
                                                };
                                                items: {
                                                    properties: any;
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                                queries: {
                                                    properties: any;
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                                mutations: {
                                                    properties: any;
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                                subscriptions: {
                                                    properties: any;
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                                types: {
                                                    properties: any;
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                                directives: {
                                                    properties: any;
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "name"[];
                                        };
                                        type: "array";
                                    };
                                    otherItemsGroupName: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            apiLogo: {
                                properties: {
                                    backgroundColor: {
                                        type: "string";
                                    };
                                    href: {
                                        type: "string";
                                    };
                                    imageUrl: {
                                        type: "string";
                                    };
                                    altText: {
                                        type: "string";
                                    };
                                };
                                type: "object";
                            };
                            jsonSamplesDepth: {
                                type: "number";
                            };
                            samplesMaxInlineArgs: {
                                type: "number";
                            };
                            fieldExpandLevel: {
                                type: "number";
                            };
                            baseUrlPath: {
                                type: "string";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    analytics: {
                        properties: {
                            adobe: {
                                properties: {
                                    scriptUrl: {
                                        type: "string";
                                    };
                                    includeInDevelopment: {
                                        type: "boolean";
                                    };
                                    pageViewEventName: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: "scriptUrl"[];
                            };
                            amplitude: {
                                properties: {
                                    head: {
                                        type: "boolean";
                                    };
                                    apiKey: {
                                        type: "string";
                                    };
                                    includeInDevelopment: {
                                        type: "boolean";
                                    };
                                    pageViewEventName: {
                                        type: "string";
                                    };
                                    respectDNT: {
                                        type: "boolean";
                                    };
                                    exclude: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    outboundClickEventName: {
                                        type: "string";
                                    };
                                    amplitudeConfig: {
                                        additionalProperties: true;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: "apiKey"[];
                            };
                            fullstory: {
                                properties: {
                                    orgId: {
                                        type: "string";
                                    };
                                    includeInDevelopment: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: "orgId"[];
                            };
                            heap: {
                                properties: {
                                    appId: {
                                        type: "string";
                                    };
                                    includeInDevelopment: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: "appId"[];
                            };
                            rudderstack: {
                                properties: {
                                    writeKey: {
                                        type: "string";
                                        minLength: 10;
                                    };
                                    includeInDevelopment: {
                                        type: "boolean";
                                    };
                                    trackPage: {
                                        type: "boolean";
                                    };
                                    dataPlaneUrl: {
                                        type: "string";
                                    };
                                    controlPlaneUrl: {
                                        type: "string";
                                    };
                                    sdkUrl: {
                                        type: "string";
                                    };
                                    loadOptions: {
                                        additionalProperties: true;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: "writeKey"[];
                            };
                            segment: {
                                properties: {
                                    writeKey: {
                                        type: "string";
                                        minLength: 10;
                                    };
                                    includeInDevelopment: {
                                        type: "boolean";
                                    };
                                    trackPage: {
                                        type: "boolean";
                                    };
                                    includeTitleInPageCall: {
                                        type: "boolean";
                                    };
                                    host: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: "writeKey"[];
                            };
                            gtm: {
                                properties: {
                                    trackingId: {
                                        type: "string";
                                    };
                                    includeInDevelopment: {
                                        type: "boolean";
                                    };
                                    pageViewEventName: {
                                        type: "string";
                                    };
                                    gtmAuth: {
                                        type: "string";
                                    };
                                    gtmPreview: {
                                        type: "string";
                                    };
                                    defaultDataLayer: {};
                                    dataLayerName: {
                                        type: "string";
                                    };
                                    enableWebVitalsTracking: {
                                        type: "boolean";
                                    };
                                    selfHostedOrigin: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: "trackingId"[];
                            };
                            ga: {
                                properties: {
                                    head: {
                                        type: "boolean";
                                    };
                                    trackingId: {
                                        type: "string";
                                    };
                                    includeInDevelopment: {
                                        type: "boolean";
                                    };
                                    respectDNT: {
                                        type: "boolean";
                                    };
                                    exclude: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    conversionId: {
                                        type: "string";
                                    };
                                    floodlightId: {
                                        type: "string";
                                    };
                                    optimizeId: {
                                        type: "string";
                                    };
                                    anonymizeIp: {
                                        type: "boolean";
                                    };
                                    cookieExpires: {
                                        type: "number";
                                    };
                                    trackers: {
                                        additionalProperties: {
                                            properties: {
                                                trackingId: {
                                                    type: "string";
                                                };
                                                includeInDevelopment: {
                                                    type: "boolean";
                                                };
                                                exclude: {
                                                    items: any;
                                                    type: "array";
                                                };
                                                conversionId: {
                                                    type: "string";
                                                };
                                                floodlightId: {
                                                    type: "string";
                                                };
                                                optimizeId: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "trackingId"[];
                                        };
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: "trackingId"[];
                            };
                        };
                        type: "object";
                    };
                    userMenu: {
                        properties: {
                            items: {
                                items: {
                                    properties: {
                                        label: {
                                            type: "string";
                                        };
                                        link: {
                                            type: "string";
                                        };
                                        external: {
                                            type: "boolean";
                                        };
                                        separatorLine: {
                                            type: "boolean";
                                        };
                                    };
                                    additionalProperties: true;
                                    type: "object";
                                };
                                type: "array";
                            };
                            hide: {
                                type: "boolean";
                            };
                            hideLoginButton: {
                                type: "boolean";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    versionPicker: {
                        properties: {
                            hide: {
                                type: "boolean";
                            };
                            showForUnversioned: {
                                type: "boolean";
                            };
                        };
                        type: "object";
                    };
                    breadcrumbs: {
                        properties: {
                            hide: {
                                type: "boolean";
                            };
                            prefixItems: {
                                items: {
                                    properties: {
                                        label: {
                                            type: "string";
                                        };
                                        page: {
                                            type: "string";
                                        };
                                        labelTranslationKey: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    catalog: {
                        patternProperties: {
                            ".*": {
                                properties: {
                                    items: {
                                        items: {
                                            properties: {
                                                label: {
                                                    type: "string";
                                                };
                                                items: {
                                                    items: {
                                                        properties: {
                                                            label: {
                                                                type: "string";
                                                            };
                                                            items: any;
                                                            page: any;
                                                            href: any;
                                                            icon: any;
                                                            rbac: any;
                                                            directory: any;
                                                            disconnect: any;
                                                            group: any;
                                                            external: any;
                                                            labelTranslationKey: any;
                                                            groupTranslationKey: any;
                                                            separator: any;
                                                            separatorLine: any;
                                                            linePosition: any;
                                                            version: any;
                                                            menuStyle: any;
                                                            expanded: any;
                                                            selectFirstItemOnExpand: any;
                                                            flatten: any;
                                                            linkedSidebars: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    type: "array";
                                                };
                                                page: {
                                                    type: "string";
                                                };
                                                href: {
                                                    type: "string";
                                                };
                                                icon: {
                                                    oneOf: ({
                                                        type: "string";
                                                    } | {
                                                        properties: {
                                                            srcSet: any;
                                                        };
                                                        type: "object";
                                                        required: "srcSet"[];
                                                    })[];
                                                };
                                                rbac: {
                                                    additionalProperties: {
                                                        type: "string";
                                                    };
                                                    type: "object";
                                                };
                                                directory: {
                                                    type: "string";
                                                };
                                                disconnect: {
                                                    type: "boolean";
                                                };
                                                group: {
                                                    type: "string";
                                                };
                                                external: {
                                                    type: "boolean";
                                                };
                                                labelTranslationKey: {
                                                    type: "string";
                                                };
                                                groupTranslationKey: {
                                                    type: "string";
                                                };
                                                separator: {
                                                    type: "string";
                                                };
                                                separatorLine: {
                                                    type: "boolean";
                                                };
                                                linePosition: {
                                                    enum: ("top" | "bottom")[];
                                                    type: "string";
                                                };
                                                version: {
                                                    type: "string";
                                                };
                                                menuStyle: {
                                                    enum: "drilldown"[];
                                                    type: "string";
                                                };
                                                expanded: {
                                                    const: "always";
                                                    type: "string";
                                                };
                                                selectFirstItemOnExpand: {
                                                    type: "boolean";
                                                };
                                                flatten: {
                                                    type: "boolean";
                                                };
                                                linkedSidebars: {
                                                    items: {
                                                        type: "string";
                                                    };
                                                    type: "array";
                                                };
                                            };
                                            type: "object";
                                        };
                                        type: "array";
                                    };
                                    title: {
                                        type: "string";
                                    };
                                    description: {
                                        type: "string";
                                    };
                                    slug: {
                                        type: "string";
                                    };
                                    filters: {
                                        items: {
                                            properties: {
                                                type: {
                                                    enum: ("select" | "checkboxes" | "date-range")[];
                                                    type: "string";
                                                };
                                                title: {
                                                    type: "string";
                                                };
                                                options: {
                                                    items: any;
                                                    type: "array";
                                                };
                                                property: {
                                                    type: "string";
                                                };
                                                titleTranslationKey: {
                                                    type: "string";
                                                };
                                                parentFilter: {
                                                    type: "string";
                                                };
                                                valuesMapping: {
                                                    additionalProperties: any;
                                                    type: "object";
                                                };
                                                missingCategoryName: {
                                                    type: "string";
                                                };
                                                missingCategoryNameTranslationKey: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: ("title" | "property")[];
                                        };
                                        type: "array";
                                    };
                                    groupByFirstFilter: {
                                        type: "boolean";
                                    };
                                    filterValuesCasing: {
                                        enum: ("sentence" | "original" | "lowercase" | "uppercase")[];
                                        type: "string";
                                    };
                                    requiredPermission: {
                                        type: "string";
                                    };
                                    separateVersions: {
                                        type: "boolean";
                                    };
                                    titleTranslationKey: {
                                        type: "string";
                                    };
                                    descriptionTranslationKey: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: true;
                                type: "object";
                                required: ("items" | "slug")[];
                            };
                        };
                        type: "object";
                    };
                    scorecard: {
                        properties: {
                            ignore: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                            ignoreNonCompliant: {
                                type: "boolean";
                            };
                            teamMetadataProperty: {
                                properties: {
                                    label: {
                                        type: "string";
                                    };
                                    property: {
                                        type: "string";
                                    };
                                };
                                type: "object";
                            };
                            levels: {
                                items: {
                                    properties: {
                                        name: {
                                            type: "string";
                                        };
                                        color: {
                                            type: "string";
                                        };
                                        rules: {
                                            additionalProperties: {
                                                oneOf: ({
                                                    type: "string";
                                                } | {
                                                    type: "object";
                                                })[];
                                            };
                                            type: "object";
                                        };
                                        extends: {
                                            items: {
                                                type: "string";
                                            };
                                            type: "array";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                    required: "name"[];
                                };
                                type: "array";
                            };
                            targets: {
                                items: {
                                    properties: {
                                        where: {
                                            properties: {
                                                metadata: {
                                                    additionalProperties: any;
                                                    type: "object";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "metadata"[];
                                        };
                                        rules: {
                                            additionalProperties: true;
                                            type: "object";
                                        };
                                        minimumLevel: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                    required: "where"[];
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: true;
                        type: "object";
                        required: never[];
                    };
                };
                readonly type: "object";
            };
        };
        /**
         * @deprecated Should use `plugins` instead
         */
        readonly imports: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly licenseKey: {
            readonly type: "string";
        };
        readonly redirects: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly to: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "number";
                        readonly default: 301;
                    };
                };
                readonly additionalProperties: false;
            };
            readonly default: {};
        };
        readonly seo: {
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly type: "string";
                };
                readonly description: {
                    readonly type: "string";
                };
                readonly siteUrl: {
                    readonly type: "string";
                };
                readonly image: {
                    readonly type: "string";
                };
                readonly keywords: {
                    readonly oneOf: readonly [{
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly lang: {
                    readonly type: "string";
                };
                readonly jsonLd: {
                    readonly type: "object";
                };
                readonly meta: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly content: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["name", "content"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly rbac: {
            readonly type: "object";
            readonly properties: {
                readonly teamNamePatterns: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFolders: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFoldersBaseRoles: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly cms: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly reunite: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly features: {
                    readonly type: "object";
                    readonly properties: {
                        readonly aiSearch: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly content: {
                    readonly type: "object";
                    readonly properties: {
                        readonly '**': {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "string";
                        };
                    };
                };
            };
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
        };
        readonly apiFunctions: {
            readonly type: "object";
            readonly properties: {
                readonly folders: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly requiresLogin: {
            readonly type: "boolean";
        };
        readonly responseHeaders: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly value: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["name", "value"];
                };
            };
        };
        readonly mockServer: {
            readonly type: "object";
            readonly properties: {
                readonly off: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly position: {
                    readonly type: "string";
                    readonly enum: readonly ["first", "last", "replace", "off"];
                    readonly default: "first";
                };
                readonly strictExamples: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly errorIfForcedExampleNotFound: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly description: {
                    readonly type: "string";
                };
            };
        };
        readonly apis: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly root: {
                        readonly type: "string";
                    };
                    readonly output: {
                        readonly type: "string";
                        readonly pattern: "(.ya?ml|.json)$";
                    };
                    readonly rbac: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly openapi: {
                        readonly properties: {
                            readonly theme: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly breakpoints: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly small: {
                                                readonly type: "string";
                                            };
                                            readonly medium: {
                                                readonly type: "string";
                                            };
                                            readonly large: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly codeBlock: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly borderRadius: {
                                                readonly type: "string";
                                            };
                                            readonly tokens: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly colors: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly accent: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly border: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly error: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly http: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly basic: {
                                                        readonly type: "string";
                                                    };
                                                    readonly delete: {
                                                        readonly type: "string";
                                                    };
                                                    readonly get: {
                                                        readonly type: "string";
                                                    };
                                                    readonly head: {
                                                        readonly type: "string";
                                                    };
                                                    readonly link: {
                                                        readonly type: "string";
                                                    };
                                                    readonly options: {
                                                        readonly type: "string";
                                                    };
                                                    readonly patch: {
                                                        readonly type: "string";
                                                    };
                                                    readonly post: {
                                                        readonly type: "string";
                                                    };
                                                    readonly put: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly primary: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly responses: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly error: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly borderColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly tabTextColor: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly info: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly borderColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly tabTextColor: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly redirect: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly borderColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly tabTextColor: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly success: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly borderColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly tabTextColor: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly secondary: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly success: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly text: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly primary: {
                                                        readonly type: "string";
                                                    };
                                                    readonly secondary: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly tonalOffset: {
                                                readonly type: "number";
                                            };
                                            readonly warning: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly main: {
                                                        readonly type: "string";
                                                    };
                                                    readonly light: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dark: {
                                                        readonly type: "string";
                                                    };
                                                    readonly contrastText: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly components: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly buttons: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                    readonly hoverStyle: {
                                                        readonly type: "string";
                                                    };
                                                    readonly boxShadow: {
                                                        readonly type: "string";
                                                    };
                                                    readonly hoverBoxShadow: {
                                                        readonly type: "string";
                                                    };
                                                    readonly sizes: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly small: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly padding: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly minWidth: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly medium: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly padding: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly minWidth: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly large: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly padding: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly minWidth: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly xlarge: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly padding: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly minWidth: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly httpBadges: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly sizes: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly medium: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontFamily: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly fontWeight: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly lineHeight: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly small: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly fontFamily: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly fontSize: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly fontWeight: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly lineHeight: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly layoutControls: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly top: {
                                                        readonly type: "string";
                                                    };
                                                    readonly width: {
                                                        readonly type: "string";
                                                    };
                                                    readonly height: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly panels: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly tryItButton: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fullWidth: {
                                                        readonly type: "boolean";
                                                    };
                                                };
                                            };
                                            readonly tryItSendButton: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fullWidth: {
                                                        readonly type: "boolean";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly layout: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly showDarkRightPanel: {
                                                readonly type: "boolean";
                                            };
                                            readonly stacked: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly maxWidth: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly small: {
                                                                readonly type: "string";
                                                            };
                                                            readonly medium: {
                                                                readonly type: "string";
                                                            };
                                                            readonly large: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly 'three-panel': {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly maxWidth: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly small: {
                                                                readonly type: "string";
                                                            };
                                                            readonly medium: {
                                                                readonly type: "string";
                                                            };
                                                            readonly large: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly middlePanelMaxWidth: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly small: {
                                                                readonly type: "string";
                                                            };
                                                            readonly medium: {
                                                                readonly type: "string";
                                                            };
                                                            readonly large: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly logo: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly gutter: {
                                                readonly type: "string";
                                            };
                                            readonly maxHeight: {
                                                readonly type: "string";
                                            };
                                            readonly maxWidth: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly fab: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly color: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly overrides: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly DownloadButton: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly custom: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly NextSectionButton: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly custom: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly rightPanel: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly panelBackgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly panelControlsBackgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly showAtBreakpoint: {
                                                readonly type: "string";
                                            };
                                            readonly textColor: {
                                                readonly type: "string";
                                            };
                                            readonly width: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly schema: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly breakFieldNames: {
                                                readonly type: "boolean";
                                            };
                                            readonly caretColor: {
                                                readonly type: "string";
                                            };
                                            readonly caretSize: {
                                                readonly type: "string";
                                            };
                                            readonly constraints: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly border: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly defaultDetailsWidth: {
                                                readonly type: "string";
                                            };
                                            readonly examples: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly border: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly labelsTextSize: {
                                                readonly type: "string";
                                            };
                                            readonly linesColor: {
                                                readonly type: "string";
                                            };
                                            readonly nestedBackground: {
                                                readonly type: "string";
                                            };
                                            readonly nestingSpacing: {
                                                readonly type: "string";
                                            };
                                            readonly requireLabelColor: {
                                                readonly type: "string";
                                            };
                                            readonly typeNameColor: {
                                                readonly type: "string";
                                            };
                                            readonly typeTitleColor: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly shape: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly borderRadius: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly sidebar: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly activeBgColor: {
                                                readonly type: "string";
                                            };
                                            readonly activeTextColor: {
                                                readonly type: "string";
                                            };
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                            readonly borderRadius: {
                                                readonly type: "string";
                                            };
                                            readonly breakPath: {
                                                readonly type: "boolean";
                                            };
                                            readonly caretColor: {
                                                readonly type: "string";
                                            };
                                            readonly caretSize: {
                                                readonly type: "string";
                                            };
                                            readonly groupItems: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly subItemsColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly textTransform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly level1items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly subItemsColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly textTransform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly rightLineColor: {
                                                readonly type: "string";
                                            };
                                            readonly separatorLabelColor: {
                                                readonly type: "string";
                                            };
                                            readonly showAtBreakpoint: {
                                                readonly type: "string";
                                            };
                                            readonly spacing: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly unit: {
                                                        readonly type: "number";
                                                    };
                                                    readonly paddingHorizontal: {
                                                        readonly type: "string";
                                                    };
                                                    readonly paddingVertical: {
                                                        readonly type: "string";
                                                    };
                                                    readonly offsetTop: {
                                                        readonly type: "string";
                                                    };
                                                    readonly offsetLeft: {
                                                        readonly type: "string";
                                                    };
                                                    readonly offsetNesting: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly textColor: {
                                                readonly type: "string";
                                            };
                                            readonly width: {
                                                readonly type: "string";
                                            };
                                            readonly fontFamily: {
                                                readonly type: "string";
                                            };
                                            readonly fontSize: {
                                                readonly type: "string";
                                            };
                                            readonly fontWeight: {
                                                readonly type: "string";
                                            };
                                            readonly lineHeight: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly spacing: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly sectionHorizontal: {
                                                readonly type: "number";
                                            };
                                            readonly sectionVertical: {
                                                readonly type: "number";
                                            };
                                            readonly unit: {
                                                readonly type: "number";
                                            };
                                        };
                                    };
                                    readonly typography: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly fontWeightBold: {
                                                readonly type: "string";
                                            };
                                            readonly fontWeightLight: {
                                                readonly type: "string";
                                            };
                                            readonly fontWeightRegular: {
                                                readonly type: "string";
                                            };
                                            readonly heading1: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly transform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly heading2: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly transform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly heading3: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly transform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly headings: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly lineHeight: {
                                                readonly type: "string";
                                            };
                                            readonly links: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly hover: {
                                                        readonly type: "string";
                                                    };
                                                    readonly textDecoration: {
                                                        readonly type: "string";
                                                    };
                                                    readonly hoverTextDecoration: {
                                                        readonly type: "string";
                                                    };
                                                    readonly visited: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly optimizeSpeed: {
                                                readonly type: "boolean";
                                            };
                                            readonly rightPanelHeading: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly transform: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly smoothing: {
                                                readonly type: "string";
                                                readonly enum: readonly ["auto", "none", "antialiased", "subpixel-antialiased", "grayscale"];
                                            };
                                            readonly fontFamily: {
                                                readonly type: "string";
                                            };
                                            readonly fontSize: {
                                                readonly type: "string";
                                            };
                                            readonly fontWeight: {
                                                readonly type: "string";
                                            };
                                            readonly code: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                    readonly wordBreak: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["break-all", "break-word", "keep-all", "normal", "revert", "unset", "inherit", "initial"];
                                                    };
                                                    readonly wrap: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly fieldName: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly links: {
                                        readonly properties: {
                                            readonly color: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly codeSample: {
                                        readonly properties: {
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly ctrlFHijack: {
                                readonly type: "boolean";
                            };
                            readonly defaultSampleLanguage: {
                                readonly type: "string";
                            };
                            readonly disableDeepLinks: {
                                readonly type: "boolean";
                            };
                            readonly disableSearch: {
                                readonly type: "boolean";
                            };
                            readonly disableSidebar: {
                                readonly type: "boolean";
                            };
                            readonly downloadDefinitionUrl: {
                                readonly type: "string";
                            };
                            readonly expandDefaultServerVariables: {
                                readonly type: "boolean";
                            };
                            readonly enumSkipQuotes: {
                                readonly type: "boolean";
                            };
                            readonly expandDefaultRequest: {
                                readonly type: "boolean";
                            };
                            readonly expandDefaultResponse: {
                                readonly type: "boolean";
                            };
                            readonly expandResponses: {
                                readonly type: "string";
                            };
                            readonly expandSingleSchemaField: {
                                readonly type: "boolean";
                            };
                            readonly generateCodeSamples: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly skipOptionalParameters: {
                                        readonly type: "boolean";
                                    };
                                    readonly languages: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly lang: {
                                                    readonly enum: readonly ["curl", "C#", "Go", "Java", "Java8+Apache", "JavaScript", "Node.js", "PHP", "Python", "R", "Ruby"];
                                                };
                                            };
                                            readonly required: readonly ["lang"];
                                        };
                                    };
                                };
                                readonly required: readonly ["languages"];
                            };
                            readonly generatedPayloadSamplesMaxDepth: {
                                readonly type: "number";
                            };
                            readonly hideDownloadButton: {
                                readonly type: "boolean";
                            };
                            readonly hideHostname: {
                                readonly type: "boolean";
                            };
                            readonly hideInfoSection: {
                                readonly type: "boolean";
                            };
                            readonly hideLogo: {
                                readonly type: "boolean";
                            };
                            readonly hideRequestPayloadSample: {
                                readonly type: "boolean";
                            };
                            readonly hideRightPanel: {
                                readonly type: "boolean";
                            };
                            readonly hideSchemaPattern: {
                                readonly type: "boolean";
                            };
                            readonly hideSingleRequestSampleTab: {
                                readonly type: "boolean";
                            };
                            readonly hideSecuritySection: {
                                readonly type: "boolean";
                            };
                            readonly hideTryItPanel: {
                                readonly type: "boolean";
                            };
                            readonly hideFab: {
                                readonly type: "boolean";
                            };
                            readonly hideOneOfDescription: {
                                readonly type: "boolean";
                            };
                            readonly htmlTemplate: {
                                readonly type: "string";
                            };
                            readonly jsonSampleExpandLevel: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                    readonly minimum: 1;
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly labels: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly enum: {
                                        readonly type: "string";
                                    };
                                    readonly enumSingleValue: {
                                        readonly type: "string";
                                    };
                                    readonly enumArray: {
                                        readonly type: "string";
                                    };
                                    readonly default: {
                                        readonly type: "string";
                                    };
                                    readonly deprecated: {
                                        readonly type: "string";
                                    };
                                    readonly example: {
                                        readonly type: "string";
                                    };
                                    readonly examples: {
                                        readonly type: "string";
                                    };
                                    readonly nullable: {
                                        readonly type: "string";
                                    };
                                    readonly recursive: {
                                        readonly type: "string";
                                    };
                                    readonly arrayOf: {
                                        readonly type: "string";
                                    };
                                    readonly webhook: {
                                        readonly type: "string";
                                    };
                                    readonly authorizations: {
                                        readonly type: "string";
                                    };
                                    readonly tryItAuthBasicUsername: {
                                        readonly type: "string";
                                    };
                                    readonly tryItAuthBasicPassword: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly menuToggle: {
                                readonly type: "boolean";
                            };
                            readonly nativeScrollbars: {
                                readonly type: "boolean";
                            };
                            readonly noAutoAuth: {
                                readonly type: "boolean";
                            };
                            readonly onDeepLinkClick: {
                                readonly type: "object";
                            };
                            readonly pagination: {
                                readonly enum: readonly ["none", "section", "item"];
                            };
                            readonly pathInMiddlePanel: {
                                readonly type: "boolean";
                            };
                            readonly payloadSampleIdx: {
                                readonly type: "number";
                                readonly minimum: 0;
                            };
                            readonly requestInterceptor: {
                                readonly type: "object";
                            };
                            readonly requiredPropsFirst: {
                                readonly type: "boolean";
                            };
                            readonly routingStrategy: {
                                readonly type: "string";
                            };
                            readonly samplesTabsMaxCount: {
                                readonly type: "number";
                            };
                            readonly schemaExpansionLevel: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                    readonly minimum: 0;
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly minCharacterLengthToInitSearch: {
                                readonly type: "number";
                                readonly minimum: 1;
                            };
                            readonly maxResponseHeadersToShowInTryIt: {
                                readonly type: "number";
                                readonly minimum: 0;
                            };
                            readonly scrollYOffset: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly searchAutoExpand: {
                                readonly type: "boolean";
                            };
                            readonly searchFieldLevelBoost: {
                                readonly type: "number";
                                readonly minimum: 0;
                            };
                            readonly searchMaxDepth: {
                                readonly type: "number";
                                readonly minimum: 1;
                            };
                            readonly searchMode: {
                                readonly type: "string";
                                readonly enum: readonly ["default", "path-only"];
                            };
                            readonly searchOperationTitleBoost: {
                                readonly type: "number";
                            };
                            readonly searchTagTitleBoost: {
                                readonly type: "number";
                            };
                            readonly sendXUserAgentInTryIt: {
                                readonly type: "boolean";
                            };
                            readonly showChangeLayoutButton: {
                                readonly type: "boolean";
                            };
                            readonly showConsole: {
                                readonly type: "boolean";
                            };
                            readonly showNextButton: {
                                readonly type: "boolean";
                            };
                            readonly showRightPanelToggle: {
                                readonly type: "boolean";
                            };
                            readonly showSecuritySchemeType: {
                                readonly type: "boolean";
                            };
                            readonly showWebhookVerb: {
                                readonly type: "boolean";
                            };
                            readonly showObjectSchemaExamples: {
                                readonly type: "boolean";
                            };
                            readonly disableTryItRequestUrlEncoding: {
                                readonly type: "boolean";
                            };
                            readonly sidebarLinks: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly beforeInfo: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly link: {
                                                    readonly type: "string";
                                                };
                                                readonly target: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["label", "link"];
                                        };
                                    };
                                    readonly end: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly link: {
                                                    readonly type: "string";
                                                };
                                                readonly target: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["label", "link"];
                                        };
                                    };
                                };
                            };
                            readonly sideNavStyle: {
                                readonly type: "string";
                                readonly enum: readonly ["summary-only", "path-first", "id-only", "path-only"];
                            };
                            readonly simpleOneOfTypeLabel: {
                                readonly type: "boolean";
                            };
                            readonly sortEnumValuesAlphabetically: {
                                readonly type: "boolean";
                            };
                            readonly sortOperationsAlphabetically: {
                                readonly type: "boolean";
                            };
                            readonly sortPropsAlphabetically: {
                                readonly type: "boolean";
                            };
                            readonly sortTagsAlphabetically: {
                                readonly type: "boolean";
                            };
                            readonly suppressWarnings: {
                                readonly type: "boolean";
                            };
                            readonly unstable_externalDescription: {
                                readonly type: "boolean";
                            };
                            readonly unstable_ignoreMimeParameters: {
                                readonly type: "boolean";
                            };
                            readonly untrustedDefinition: {
                                readonly type: "boolean";
                            };
                            readonly showAccessMode: {
                                readonly type: "boolean";
                            };
                            readonly preserveOriginalExtensionsName: {
                                readonly type: "boolean";
                            };
                            readonly markdownHeadingsAnchorLevel: {
                                readonly type: "number";
                            };
                            readonly licenseKey: {
                                readonly type: "string";
                            };
                            readonly hideLoading: {
                                readonly type: "boolean";
                            };
                            readonly disableRouter: {
                                readonly type: "boolean";
                            };
                            readonly hideSidebar: {
                                readonly type: "boolean";
                            };
                            readonly feedback: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                        readonly default: "sentiment";
                                    };
                                    readonly settings: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly submitText: {
                                                readonly type: "string";
                                            };
                                            readonly buttonText: {
                                                readonly type: "string";
                                            };
                                            readonly component: {
                                                readonly type: "string";
                                                readonly enum: readonly ["radio", "checkbox"];
                                                readonly default: "checkbox";
                                            };
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                                readonly minItems: 1;
                                            };
                                            readonly leftScaleLabel: {
                                                readonly type: "string";
                                            };
                                            readonly rightScaleLabel: {
                                                readonly type: "string";
                                            };
                                            readonly reasons: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly like: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly dislike: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly satisfied: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly neutral: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly dissatisfied: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly comment: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly likeLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dislikeLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly satisfiedLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly neutralLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dissatisfiedLabel: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly optionalEmail: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly placeholder: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                            readonly hideReplay: {
                                readonly type: "boolean";
                            };
                            readonly oAuth2RedirectURI: {
                                readonly type: "string";
                                readonly nullable: true;
                            };
                            readonly corsProxyUrl: {
                                readonly type: "string";
                            };
                            readonly sortRequiredPropsFirst: {
                                readonly type: "boolean";
                            };
                            readonly sanitize: {
                                readonly type: "boolean";
                            };
                            readonly hideDownloadButtons: {
                                readonly type: "boolean";
                            };
                            readonly downloadUrls: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly title: {
                                            readonly type: "string";
                                        };
                                        readonly url: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["url"];
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly onlyRequiredInSamples: {
                                readonly type: "boolean";
                            };
                            readonly generatedSamplesMaxDepth: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly showExtensions: {
                                readonly oneOf: readonly [{
                                    readonly type: "boolean";
                                }, {
                                    readonly type: "string";
                                }, {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                }];
                            };
                            readonly hideSchemaTitles: {
                                readonly type: "boolean";
                            };
                            readonly jsonSamplesExpandLevel: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly schemasExpansionLevel: {
                                readonly oneOf: readonly [{
                                    readonly type: "number";
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly mockServer: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly url: {
                                        readonly type: "string";
                                    };
                                    readonly position: {
                                        readonly type: "string";
                                        readonly enum: readonly ["first", "last", "replace", "off"];
                                    };
                                    readonly description: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly maxDisplayedEnumValues: {
                                readonly type: "number";
                            };
                            readonly schemaDefinitionsTagName: {
                                readonly type: "string";
                            };
                            readonly layout: {
                                readonly type: "string";
                                readonly enum: readonly ["stacked", "three-panel"];
                            };
                            readonly hideInfoMetadata: {
                                readonly type: "boolean";
                            };
                            readonly events: {
                                readonly type: "object";
                            };
                            readonly skipBundle: {
                                readonly type: "boolean";
                            };
                            readonly routingBasePath: {
                                readonly type: "string";
                            };
                            readonly codeSamples: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly languages: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly lang: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly options: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly indent: {
                                                            readonly type: "string";
                                                        };
                                                        readonly withImports: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly withComments: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly binary: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly credentials: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["omit", "same-origin", "include"];
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly required: readonly ["lang"];
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly skipOptionalParameters: {
                                        readonly type: "boolean";
                                    };
                                    readonly withOAuth2Call: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly required: readonly ["languages"];
                                readonly additionalProperties: false;
                            };
                            readonly ignoreNamedSchemas: {
                                readonly oneOf: readonly [{
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly hidePropertiesPrefix: {
                                readonly type: "boolean";
                            };
                            readonly excludeFromSearch: {
                                readonly type: "boolean";
                            };
                        };
                        readonly type: "object";
                        readonly additionalProperties: false;
                    };
                    readonly graphql: {
                        readonly type: "object";
                        readonly properties: {
                            readonly hidePaginationButtons: {
                                readonly type: "boolean";
                            };
                            readonly menu: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly requireExactGroups: {
                                        readonly type: "boolean";
                                    };
                                    readonly groups: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly name: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly queries: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly mutations: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly subscriptions: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly types: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly directives: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly excludeByName: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly required: readonly ["name"];
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly otherItemsGroupName: {
                                        readonly type: "string";
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                            readonly sidebar: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                    };
                                };
                            };
                            readonly apiLogo: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly imageUrl: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly altText: {
                                        readonly type: "string";
                                    };
                                    readonly backgroundColor: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly jsonSamplesDepth: {
                                readonly type: "number";
                            };
                            readonly samplesMaxInlineArgs: {
                                readonly type: "number";
                            };
                            readonly licenseKey: {
                                readonly type: "string";
                            };
                            readonly fieldExpandLevel: {
                                readonly type: "number";
                            };
                            readonly baseUrlPath: {
                                readonly type: "string";
                            };
                            readonly feedback: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                        readonly default: "sentiment";
                                    };
                                    readonly settings: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly submitText: {
                                                readonly type: "string";
                                            };
                                            readonly buttonText: {
                                                readonly type: "string";
                                            };
                                            readonly component: {
                                                readonly type: "string";
                                                readonly enum: readonly ["radio", "checkbox"];
                                                readonly default: "checkbox";
                                            };
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                                readonly minItems: 1;
                                            };
                                            readonly leftScaleLabel: {
                                                readonly type: "string";
                                            };
                                            readonly rightScaleLabel: {
                                                readonly type: "string";
                                            };
                                            readonly reasons: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly like: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly dislike: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly satisfied: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly neutral: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly dissatisfied: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly comment: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly likeLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dislikeLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly satisfiedLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly neutralLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dissatisfiedLabel: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly optionalEmail: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly placeholder: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                    /**
                     * @deprecated left for backwards compatibility
                     */
                    readonly theme: {
                        readonly type: "object";
                        readonly properties: {
                            readonly openapi: {
                                readonly properties: {
                                    readonly theme: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly breakpoints: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly small: {
                                                        readonly type: "string";
                                                    };
                                                    readonly medium: {
                                                        readonly type: "string";
                                                    };
                                                    readonly large: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly codeBlock: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                    readonly tokens: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly colors: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly accent: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly border: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly error: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly http: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly basic: {
                                                                readonly type: "string";
                                                            };
                                                            readonly delete: {
                                                                readonly type: "string";
                                                            };
                                                            readonly get: {
                                                                readonly type: "string";
                                                            };
                                                            readonly head: {
                                                                readonly type: "string";
                                                            };
                                                            readonly link: {
                                                                readonly type: "string";
                                                            };
                                                            readonly options: {
                                                                readonly type: "string";
                                                            };
                                                            readonly patch: {
                                                                readonly type: "string";
                                                            };
                                                            readonly post: {
                                                                readonly type: "string";
                                                            };
                                                            readonly put: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly primary: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly responses: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly error: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly backgroundColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly borderColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly color: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly tabTextColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly info: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly backgroundColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly borderColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly color: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly tabTextColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly redirect: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly backgroundColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly borderColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly color: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly tabTextColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly success: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly backgroundColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly borderColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly color: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly tabTextColor: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                    readonly secondary: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly success: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly text: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly primary: {
                                                                readonly type: "string";
                                                            };
                                                            readonly secondary: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly tonalOffset: {
                                                        readonly type: "number";
                                                    };
                                                    readonly warning: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly main: {
                                                                readonly type: "string";
                                                            };
                                                            readonly light: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dark: {
                                                                readonly type: "string";
                                                            };
                                                            readonly contrastText: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly components: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly buttons: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly borderRadius: {
                                                                readonly type: "string";
                                                            };
                                                            readonly hoverStyle: {
                                                                readonly type: "string";
                                                            };
                                                            readonly boxShadow: {
                                                                readonly type: "string";
                                                            };
                                                            readonly hoverBoxShadow: {
                                                                readonly type: "string";
                                                            };
                                                            readonly sizes: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly small: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly padding: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly minWidth: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                    readonly medium: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly padding: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly minWidth: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                    readonly large: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly padding: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly minWidth: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                    readonly xlarge: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly padding: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly minWidth: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly httpBadges: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly borderRadius: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly sizes: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly medium: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontFamily: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly fontWeight: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly lineHeight: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                    readonly small: {
                                                                        readonly type: "object";
                                                                        readonly properties: {
                                                                            readonly fontFamily: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly fontSize: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly fontWeight: {
                                                                                readonly type: "string";
                                                                            };
                                                                            readonly lineHeight: {
                                                                                readonly type: "string";
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly layoutControls: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly top: {
                                                                readonly type: "string";
                                                            };
                                                            readonly width: {
                                                                readonly type: "string";
                                                            };
                                                            readonly height: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly panels: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly borderRadius: {
                                                                readonly type: "string";
                                                            };
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly tryItButton: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly fullWidth: {
                                                                readonly type: "boolean";
                                                            };
                                                        };
                                                    };
                                                    readonly tryItSendButton: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly fullWidth: {
                                                                readonly type: "boolean";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly layout: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly showDarkRightPanel: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly stacked: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly maxWidth: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly small: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly medium: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly large: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                    readonly 'three-panel': {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly maxWidth: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly small: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly medium: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly large: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly middlePanelMaxWidth: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly small: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly medium: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly large: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly logo: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly gutter: {
                                                        readonly type: "string";
                                                    };
                                                    readonly maxHeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly maxWidth: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly fab: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly overrides: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly DownloadButton: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly custom: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly NextSectionButton: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly custom: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly rightPanel: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly panelBackgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly panelControlsBackgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly showAtBreakpoint: {
                                                        readonly type: "string";
                                                    };
                                                    readonly textColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly width: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly schema: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly breakFieldNames: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly caretColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly caretSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly constraints: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly border: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly defaultDetailsWidth: {
                                                        readonly type: "string";
                                                    };
                                                    readonly examples: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly border: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly labelsTextSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly linesColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly nestedBackground: {
                                                        readonly type: "string";
                                                    };
                                                    readonly nestingSpacing: {
                                                        readonly type: "string";
                                                    };
                                                    readonly requireLabelColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly typeNameColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly typeTitleColor: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly shape: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly sidebar: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly activeBgColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly activeTextColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly borderRadius: {
                                                        readonly type: "string";
                                                    };
                                                    readonly breakPath: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly caretColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly caretSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly groupItems: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly subItemsColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly textTransform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly level1items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly subItemsColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly textTransform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly rightLineColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly separatorLabelColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly showAtBreakpoint: {
                                                        readonly type: "string";
                                                    };
                                                    readonly spacing: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly unit: {
                                                                readonly type: "number";
                                                            };
                                                            readonly paddingHorizontal: {
                                                                readonly type: "string";
                                                            };
                                                            readonly paddingVertical: {
                                                                readonly type: "string";
                                                            };
                                                            readonly offsetTop: {
                                                                readonly type: "string";
                                                            };
                                                            readonly offsetLeft: {
                                                                readonly type: "string";
                                                            };
                                                            readonly offsetNesting: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly textColor: {
                                                        readonly type: "string";
                                                    };
                                                    readonly width: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly spacing: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly sectionHorizontal: {
                                                        readonly type: "number";
                                                    };
                                                    readonly sectionVertical: {
                                                        readonly type: "number";
                                                    };
                                                    readonly unit: {
                                                        readonly type: "number";
                                                    };
                                                };
                                            };
                                            readonly typography: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly fontWeightBold: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeightLight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeightRegular: {
                                                        readonly type: "string";
                                                    };
                                                    readonly heading1: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly transform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly heading2: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly transform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly heading3: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly transform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly headings: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly lineHeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly links: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly hover: {
                                                                readonly type: "string";
                                                            };
                                                            readonly textDecoration: {
                                                                readonly type: "string";
                                                            };
                                                            readonly hoverTextDecoration: {
                                                                readonly type: "string";
                                                            };
                                                            readonly visited: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly optimizeSpeed: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly rightPanelHeading: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly transform: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly smoothing: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["auto", "none", "antialiased", "subpixel-antialiased", "grayscale"];
                                                    };
                                                    readonly fontFamily: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontSize: {
                                                        readonly type: "string";
                                                    };
                                                    readonly fontWeight: {
                                                        readonly type: "string";
                                                    };
                                                    readonly code: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly backgroundColor: {
                                                                readonly type: "string";
                                                            };
                                                            readonly color: {
                                                                readonly type: "string";
                                                            };
                                                            readonly wordBreak: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["break-all", "break-word", "keep-all", "normal", "revert", "unset", "inherit", "initial"];
                                                            };
                                                            readonly wrap: {
                                                                readonly type: "boolean";
                                                            };
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly fieldName: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly fontFamily: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontSize: {
                                                                readonly type: "string";
                                                            };
                                                            readonly fontWeight: {
                                                                readonly type: "string";
                                                            };
                                                            readonly lineHeight: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly links: {
                                                readonly properties: {
                                                    readonly color: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly codeSample: {
                                                readonly properties: {
                                                    readonly backgroundColor: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly ctrlFHijack: {
                                        readonly type: "boolean";
                                    };
                                    readonly defaultSampleLanguage: {
                                        readonly type: "string";
                                    };
                                    readonly disableDeepLinks: {
                                        readonly type: "boolean";
                                    };
                                    readonly disableSearch: {
                                        readonly type: "boolean";
                                    };
                                    readonly disableSidebar: {
                                        readonly type: "boolean";
                                    };
                                    readonly downloadDefinitionUrl: {
                                        readonly type: "string";
                                    };
                                    readonly expandDefaultServerVariables: {
                                        readonly type: "boolean";
                                    };
                                    readonly enumSkipQuotes: {
                                        readonly type: "boolean";
                                    };
                                    readonly expandDefaultRequest: {
                                        readonly type: "boolean";
                                    };
                                    readonly expandDefaultResponse: {
                                        readonly type: "boolean";
                                    };
                                    readonly expandResponses: {
                                        readonly type: "string";
                                    };
                                    readonly expandSingleSchemaField: {
                                        readonly type: "boolean";
                                    };
                                    readonly generateCodeSamples: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly skipOptionalParameters: {
                                                readonly type: "boolean";
                                            };
                                            readonly languages: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly lang: {
                                                            readonly enum: readonly ["curl", "C#", "Go", "Java", "Java8+Apache", "JavaScript", "Node.js", "PHP", "Python", "R", "Ruby"];
                                                        };
                                                    };
                                                    readonly required: readonly ["lang"];
                                                };
                                            };
                                        };
                                        readonly required: readonly ["languages"];
                                    };
                                    readonly generatedPayloadSamplesMaxDepth: {
                                        readonly type: "number";
                                    };
                                    readonly hideDownloadButton: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideHostname: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideInfoSection: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideLogo: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideRequestPayloadSample: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideRightPanel: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideSchemaPattern: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideSingleRequestSampleTab: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideSecuritySection: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideTryItPanel: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideFab: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideOneOfDescription: {
                                        readonly type: "boolean";
                                    };
                                    readonly htmlTemplate: {
                                        readonly type: "string";
                                    };
                                    readonly jsonSampleExpandLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                            readonly minimum: 1;
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly labels: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly enum: {
                                                readonly type: "string";
                                            };
                                            readonly enumSingleValue: {
                                                readonly type: "string";
                                            };
                                            readonly enumArray: {
                                                readonly type: "string";
                                            };
                                            readonly default: {
                                                readonly type: "string";
                                            };
                                            readonly deprecated: {
                                                readonly type: "string";
                                            };
                                            readonly example: {
                                                readonly type: "string";
                                            };
                                            readonly examples: {
                                                readonly type: "string";
                                            };
                                            readonly nullable: {
                                                readonly type: "string";
                                            };
                                            readonly recursive: {
                                                readonly type: "string";
                                            };
                                            readonly arrayOf: {
                                                readonly type: "string";
                                            };
                                            readonly webhook: {
                                                readonly type: "string";
                                            };
                                            readonly authorizations: {
                                                readonly type: "string";
                                            };
                                            readonly tryItAuthBasicUsername: {
                                                readonly type: "string";
                                            };
                                            readonly tryItAuthBasicPassword: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly menuToggle: {
                                        readonly type: "boolean";
                                    };
                                    readonly nativeScrollbars: {
                                        readonly type: "boolean";
                                    };
                                    readonly noAutoAuth: {
                                        readonly type: "boolean";
                                    };
                                    readonly onDeepLinkClick: {
                                        readonly type: "object";
                                    };
                                    readonly pagination: {
                                        readonly enum: readonly ["none", "section", "item"];
                                    };
                                    readonly pathInMiddlePanel: {
                                        readonly type: "boolean";
                                    };
                                    readonly payloadSampleIdx: {
                                        readonly type: "number";
                                        readonly minimum: 0;
                                    };
                                    readonly requestInterceptor: {
                                        readonly type: "object";
                                    };
                                    readonly requiredPropsFirst: {
                                        readonly type: "boolean";
                                    };
                                    readonly routingStrategy: {
                                        readonly type: "string";
                                    };
                                    readonly samplesTabsMaxCount: {
                                        readonly type: "number";
                                    };
                                    readonly schemaExpansionLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                            readonly minimum: 0;
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly minCharacterLengthToInitSearch: {
                                        readonly type: "number";
                                        readonly minimum: 1;
                                    };
                                    readonly maxResponseHeadersToShowInTryIt: {
                                        readonly type: "number";
                                        readonly minimum: 0;
                                    };
                                    readonly scrollYOffset: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly searchAutoExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly searchFieldLevelBoost: {
                                        readonly type: "number";
                                        readonly minimum: 0;
                                    };
                                    readonly searchMaxDepth: {
                                        readonly type: "number";
                                        readonly minimum: 1;
                                    };
                                    readonly searchMode: {
                                        readonly type: "string";
                                        readonly enum: readonly ["default", "path-only"];
                                    };
                                    readonly searchOperationTitleBoost: {
                                        readonly type: "number";
                                    };
                                    readonly searchTagTitleBoost: {
                                        readonly type: "number";
                                    };
                                    readonly sendXUserAgentInTryIt: {
                                        readonly type: "boolean";
                                    };
                                    readonly showChangeLayoutButton: {
                                        readonly type: "boolean";
                                    };
                                    readonly showConsole: {
                                        readonly type: "boolean";
                                    };
                                    readonly showNextButton: {
                                        readonly type: "boolean";
                                    };
                                    readonly showRightPanelToggle: {
                                        readonly type: "boolean";
                                    };
                                    readonly showSecuritySchemeType: {
                                        readonly type: "boolean";
                                    };
                                    readonly showWebhookVerb: {
                                        readonly type: "boolean";
                                    };
                                    readonly showObjectSchemaExamples: {
                                        readonly type: "boolean";
                                    };
                                    readonly disableTryItRequestUrlEncoding: {
                                        readonly type: "boolean";
                                    };
                                    readonly sidebarLinks: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly beforeInfo: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly link: {
                                                            readonly type: "string";
                                                        };
                                                        readonly target: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["label", "link"];
                                                };
                                            };
                                            readonly end: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly link: {
                                                            readonly type: "string";
                                                        };
                                                        readonly target: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["label", "link"];
                                                };
                                            };
                                        };
                                    };
                                    readonly sideNavStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["summary-only", "path-first", "id-only", "path-only"];
                                    };
                                    readonly simpleOneOfTypeLabel: {
                                        readonly type: "boolean";
                                    };
                                    readonly sortEnumValuesAlphabetically: {
                                        readonly type: "boolean";
                                    };
                                    readonly sortOperationsAlphabetically: {
                                        readonly type: "boolean";
                                    };
                                    readonly sortPropsAlphabetically: {
                                        readonly type: "boolean";
                                    };
                                    readonly sortTagsAlphabetically: {
                                        readonly type: "boolean";
                                    };
                                    readonly suppressWarnings: {
                                        readonly type: "boolean";
                                    };
                                    readonly unstable_externalDescription: {
                                        readonly type: "boolean";
                                    };
                                    readonly unstable_ignoreMimeParameters: {
                                        readonly type: "boolean";
                                    };
                                    readonly untrustedDefinition: {
                                        readonly type: "boolean";
                                    };
                                    readonly showAccessMode: {
                                        readonly type: "boolean";
                                    };
                                    readonly preserveOriginalExtensionsName: {
                                        readonly type: "boolean";
                                    };
                                    readonly markdownHeadingsAnchorLevel: {
                                        readonly type: "number";
                                    };
                                    readonly licenseKey: {
                                        readonly type: "string";
                                    };
                                    readonly hideLoading: {
                                        readonly type: "boolean";
                                    };
                                    readonly disableRouter: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideSidebar: {
                                        readonly type: "boolean";
                                    };
                                    readonly feedback: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                                readonly default: "sentiment";
                                            };
                                            readonly settings: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly submitText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly buttonText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minItems: 1;
                                                    };
                                                    readonly leftScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly rightScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly reasons: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly like: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly dislike: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly satisfied: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly neutral: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly dissatisfied: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly comment: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly likeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dislikeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly satisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly neutralLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dissatisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly optionalEmail: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly placeholder: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly hideReplay: {
                                        readonly type: "boolean";
                                    };
                                    readonly oAuth2RedirectURI: {
                                        readonly type: "string";
                                        readonly nullable: true;
                                    };
                                    readonly corsProxyUrl: {
                                        readonly type: "string";
                                    };
                                    readonly sortRequiredPropsFirst: {
                                        readonly type: "boolean";
                                    };
                                    readonly sanitize: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideDownloadButtons: {
                                        readonly type: "boolean";
                                    };
                                    readonly downloadUrls: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly title: {
                                                    readonly type: "string";
                                                };
                                                readonly url: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["url"];
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly onlyRequiredInSamples: {
                                        readonly type: "boolean";
                                    };
                                    readonly generatedSamplesMaxDepth: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly showExtensions: {
                                        readonly oneOf: readonly [{
                                            readonly type: "boolean";
                                        }, {
                                            readonly type: "string";
                                        }, {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        }];
                                    };
                                    readonly hideSchemaTitles: {
                                        readonly type: "boolean";
                                    };
                                    readonly jsonSamplesExpandLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly schemasExpansionLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly mockServer: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly url: {
                                                readonly type: "string";
                                            };
                                            readonly position: {
                                                readonly type: "string";
                                                readonly enum: readonly ["first", "last", "replace", "off"];
                                            };
                                            readonly description: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly maxDisplayedEnumValues: {
                                        readonly type: "number";
                                    };
                                    readonly schemaDefinitionsTagName: {
                                        readonly type: "string";
                                    };
                                    readonly layout: {
                                        readonly type: "string";
                                        readonly enum: readonly ["stacked", "three-panel"];
                                    };
                                    readonly hideInfoMetadata: {
                                        readonly type: "boolean";
                                    };
                                    readonly events: {
                                        readonly type: "object";
                                    };
                                    readonly skipBundle: {
                                        readonly type: "boolean";
                                    };
                                    readonly routingBasePath: {
                                        readonly type: "string";
                                    };
                                    readonly codeSamples: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly languages: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly lang: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly options: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly indent: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly withImports: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly withComments: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly binary: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly credentials: {
                                                                    readonly type: "string";
                                                                    readonly enum: readonly ["omit", "same-origin", "include"];
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                    };
                                                    readonly required: readonly ["lang"];
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly skipOptionalParameters: {
                                                readonly type: "boolean";
                                            };
                                            readonly withOAuth2Call: {
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["languages"];
                                        readonly additionalProperties: false;
                                    };
                                    readonly ignoreNamedSchemas: {
                                        readonly oneOf: readonly [{
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly hidePropertiesPrefix: {
                                        readonly type: "boolean";
                                    };
                                    readonly excludeFromSearch: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly type: "object";
                                readonly additionalProperties: false;
                            };
                            readonly graphql: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hidePaginationButtons: {
                                        readonly type: "boolean";
                                    };
                                    readonly menu: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly requireExactGroups: {
                                                readonly type: "boolean";
                                            };
                                            readonly groups: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly queries: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly mutations: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly subscriptions: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly types: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly directives: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                    };
                                                    readonly required: readonly ["name"];
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly otherItemsGroupName: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly sidebar: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                        };
                                    };
                                    readonly apiLogo: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly imageUrl: {
                                                readonly type: "string";
                                            };
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                            readonly altText: {
                                                readonly type: "string";
                                            };
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly jsonSamplesDepth: {
                                        readonly type: "number";
                                    };
                                    readonly samplesMaxInlineArgs: {
                                        readonly type: "number";
                                    };
                                    readonly licenseKey: {
                                        readonly type: "string";
                                    };
                                    readonly fieldExpandLevel: {
                                        readonly type: "number";
                                    };
                                    readonly baseUrlPath: {
                                        readonly type: "string";
                                    };
                                    readonly feedback: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                                readonly default: "sentiment";
                                            };
                                            readonly settings: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly submitText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly buttonText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minItems: 1;
                                                    };
                                                    readonly leftScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly rightScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly reasons: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly like: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly dislike: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly satisfied: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly neutral: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly dissatisfied: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly hide: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly component: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["radio", "checkbox"];
                                                                        readonly default: "checkbox";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                };
                                                                readonly additionalProperties: false;
                                                            };
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly comment: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly likeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dislikeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly satisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly neutralLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dissatisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly optionalEmail: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly placeholder: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                    readonly title: {
                        readonly type: "string";
                    };
                    readonly metadata: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly rules: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly oneOf: readonly [{
                                readonly type: "string";
                            }, {
                                readonly type: "object";
                            }];
                        };
                    };
                    readonly decorators: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly preprocessors: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly required: readonly ["root"];
            };
        };
        readonly rules: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "string";
                }, {
                    readonly type: "object";
                }];
            };
        };
        readonly decorators: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly preprocessors: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly ssoDirect: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.OIDC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly pkce: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly configurationUrl: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly configuration: {
                            readonly type: "object";
                            readonly properties: {
                                readonly end_session_endpoint: {
                                    readonly type: "string";
                                };
                                readonly token_endpoint: {
                                    readonly type: "string";
                                };
                                readonly authorization_endpoint: {
                                    readonly type: "string";
                                };
                                readonly jwks_uri: {
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                            readonly additionalProperties: true;
                        };
                        readonly clientId: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                            readonly minLength: 0;
                        };
                        readonly teamsClaimName: {
                            readonly type: "string";
                        };
                        readonly teamsClaimMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly scopes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenExpirationTime: {
                            readonly type: "number";
                        };
                        readonly authorizationRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly audience: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly required: readonly ["type", "clientId"];
                    readonly oneOf: readonly [{
                        readonly required: readonly ["configurationUrl"];
                    }, {
                        readonly required: readonly ["configuration"];
                    }];
                    readonly additionalProperties: false;
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.SAML2;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly issuerId: {
                            readonly type: "string";
                        };
                        readonly entityId: {
                            readonly type: "string";
                        };
                        readonly ssoUrl: {
                            readonly type: "string";
                        };
                        readonly x509PublicCert: {
                            readonly type: "string";
                        };
                        readonly teamsAttributeName: {
                            readonly type: "string";
                            readonly default: "https://redocly.com/sso/teams";
                        };
                        readonly teamsAttributeMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly sso: {
            readonly oneOf: readonly [{
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                    readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
                };
                readonly uniqueItems: true;
            }, {
                readonly type: "string";
                readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
            }];
        };
        readonly residency: {
            readonly type: "string";
        };
        readonly developerOnboarding: {
            readonly type: "object";
            readonly required: readonly ["adapters"];
            readonly additionalProperties: false;
            readonly properties: {
                readonly adapters: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_X";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_EDGE";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly type: "object";
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "GRAVITEE";
                                };
                                readonly apiBaseUrl: {
                                    readonly type: "string";
                                };
                                readonly env: {
                                    readonly type: "string";
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly auth: {
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly static: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["static"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly idp: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["idp"];
                                    }];
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "apiBaseUrl"];
                        }];
                        readonly discriminator: {
                            readonly propertyName: "type";
                        };
                    };
                };
            };
        };
        readonly removeAttribution: {
            readonly type: "boolean";
        };
        readonly i18n: {
            readonly type: "object";
            readonly properties: {
                readonly defaultLocale: {
                    readonly type: "string";
                };
                readonly locales: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["code"];
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["defaultLocale"];
        };
        readonly l10n: {
            readonly type: "object";
            readonly properties: {
                readonly defaultLocale: {
                    readonly type: "string";
                };
                readonly locales: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["code"];
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["defaultLocale"];
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly metadataGlobs: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: true;
            };
        };
        readonly ignore: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        /**
         * @deprecated properties moved to the root of the config
         */
        readonly theme: {
            readonly type: "object";
            readonly properties: {
                readonly imports: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly logo: {
                    readonly type: "object";
                    readonly properties: {
                        readonly image: {
                            readonly type: "string";
                        };
                        readonly srcSet: {
                            readonly type: "string";
                        };
                        readonly altText: {
                            readonly type: "string";
                        };
                        readonly link: {
                            readonly type: "string";
                        };
                        readonly favicon: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly navbar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                                readonly rbac: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rbac: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly products: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly icon: {
                                readonly type: "string";
                            };
                            readonly folder: {
                                readonly type: "string";
                            };
                        };
                        readonly additionalProperties: false;
                        readonly required: readonly ["name", "folder"];
                    };
                };
                readonly footer: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                                readonly rbac: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rbac: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                        readonly copyrightText: {
                            readonly type: "string";
                        };
                        readonly logo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly sidebar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly separatorLine: {
                            readonly type: "boolean";
                        };
                        readonly linePosition: {
                            readonly type: "string";
                            readonly enum: readonly ["top", "bottom"];
                            readonly default: "bottom";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly scripts: {
                    readonly type: "object";
                    readonly properties: {
                        readonly head: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly body: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly links: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly as: {
                                readonly type: "string";
                            };
                            readonly crossorigin: {
                                readonly type: "string";
                            };
                            readonly fetchpriority: {
                                readonly type: "string";
                            };
                            readonly hreflang: {
                                readonly type: "string";
                            };
                            readonly imagesizes: {
                                readonly type: "string";
                            };
                            readonly imagesrcset: {
                                readonly type: "string";
                            };
                            readonly integrity: {
                                readonly type: "string";
                            };
                            readonly media: {
                                readonly type: "string";
                            };
                            readonly prefetch: {
                                readonly type: "string";
                            };
                            readonly referrerpolicy: {
                                readonly type: "string";
                            };
                            readonly rel: {
                                readonly type: "string";
                            };
                            readonly sizes: {
                                readonly type: "string";
                            };
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["href"];
                        readonly additionalProperties: true;
                    };
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly like: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dislike: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly satisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly neutral: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dissatisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly optionalEmail: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly placeholder: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly search: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly engine: {
                            readonly type: "string";
                            readonly enum: readonly ["flexsearch", "typesense"];
                            readonly default: "flexsearch";
                        };
                        readonly ai: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly suggestions: {
                                    readonly default: readonly [];
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly prompt: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly filters: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly facets: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly required: readonly ["name", "field", "type"];
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly field: {
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["multi-select", "select", "tags"];
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly placement: {
                            readonly type: "string";
                            readonly default: "navbar";
                        };
                        readonly shortcuts: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["/"];
                        };
                        readonly suggestedPages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["page"];
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly colorMode: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly ignoreDetection: {
                            readonly type: "boolean";
                        };
                        readonly modes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["light", "dark"];
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly navigation: {
                    readonly type: "object";
                    readonly properties: {
                        readonly nextButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Next page";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly previousButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Previous page";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly codeSnippet: {
                    readonly type: "object";
                    readonly properties: {
                        readonly elementFormat: {
                            readonly type: "string";
                            readonly default: "icon";
                        };
                        readonly copy: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly report: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly tooltipText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly expand: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly collapse: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly markdown: {
                    readonly type: "object";
                    readonly properties: {
                        readonly frontMatterKeysToResolve: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["image", "links"];
                        };
                        readonly partialsFolders: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["_partials"];
                        };
                        readonly lastUpdatedBlock: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly format: {
                                    readonly type: "string";
                                    readonly enum: readonly ["timeago", "iso", "long", "short"];
                                    readonly default: "timeago";
                                };
                                readonly locale: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly toc: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly header: {
                                    readonly type: "string";
                                    readonly default: "On this page";
                                };
                                readonly depth: {
                                    readonly type: "integer";
                                    readonly default: 3;
                                    readonly minimum: 1;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly editPage: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly baseUrl: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly openapi: {
                    readonly properties: {
                        readonly theme: {
                            readonly type: "object";
                            readonly properties: {
                                readonly breakpoints: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly small: {
                                            readonly type: "string";
                                        };
                                        readonly medium: {
                                            readonly type: "string";
                                        };
                                        readonly large: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly codeBlock: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly tokens: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly colors: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly accent: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly border: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly error: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly http: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly basic: {
                                                    readonly type: "string";
                                                };
                                                readonly delete: {
                                                    readonly type: "string";
                                                };
                                                readonly get: {
                                                    readonly type: "string";
                                                };
                                                readonly head: {
                                                    readonly type: "string";
                                                };
                                                readonly link: {
                                                    readonly type: "string";
                                                };
                                                readonly options: {
                                                    readonly type: "string";
                                                };
                                                readonly patch: {
                                                    readonly type: "string";
                                                };
                                                readonly post: {
                                                    readonly type: "string";
                                                };
                                                readonly put: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly primary: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly responses: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly error: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly info: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly redirect: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly success: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly backgroundColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly borderColor: {
                                                            readonly type: "string";
                                                        };
                                                        readonly color: {
                                                            readonly type: "string";
                                                        };
                                                        readonly tabTextColor: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly secondary: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly success: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly text: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly primary: {
                                                    readonly type: "string";
                                                };
                                                readonly secondary: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly tonalOffset: {
                                            readonly type: "number";
                                        };
                                        readonly warning: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly main: {
                                                    readonly type: "string";
                                                };
                                                readonly light: {
                                                    readonly type: "string";
                                                };
                                                readonly dark: {
                                                    readonly type: "string";
                                                };
                                                readonly contrastText: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly components: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly buttons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly borderRadius: {
                                                    readonly type: "string";
                                                };
                                                readonly hoverStyle: {
                                                    readonly type: "string";
                                                };
                                                readonly boxShadow: {
                                                    readonly type: "string";
                                                };
                                                readonly hoverBoxShadow: {
                                                    readonly type: "string";
                                                };
                                                readonly sizes: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly medium: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly large: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly xlarge: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly padding: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly minWidth: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly httpBadges: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly borderRadius: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly sizes: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly medium: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontFamily: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontWeight: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly lineHeight: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly small: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly fontFamily: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontSize: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly fontWeight: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly lineHeight: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly layoutControls: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly top: {
                                                    readonly type: "string";
                                                };
                                                readonly width: {
                                                    readonly type: "string";
                                                };
                                                readonly height: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly panels: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly borderRadius: {
                                                    readonly type: "string";
                                                };
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly tryItButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fullWidth: {
                                                    readonly type: "boolean";
                                                };
                                            };
                                        };
                                        readonly tryItSendButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fullWidth: {
                                                    readonly type: "boolean";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly layout: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly showDarkRightPanel: {
                                            readonly type: "boolean";
                                        };
                                        readonly stacked: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly maxWidth: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "string";
                                                        };
                                                        readonly medium: {
                                                            readonly type: "string";
                                                        };
                                                        readonly large: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly 'three-panel': {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly maxWidth: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "string";
                                                        };
                                                        readonly medium: {
                                                            readonly type: "string";
                                                        };
                                                        readonly large: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly middlePanelMaxWidth: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly small: {
                                                            readonly type: "string";
                                                        };
                                                        readonly medium: {
                                                            readonly type: "string";
                                                        };
                                                        readonly large: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly logo: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly gutter: {
                                            readonly type: "string";
                                        };
                                        readonly maxHeight: {
                                            readonly type: "string";
                                        };
                                        readonly maxWidth: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly fab: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly overrides: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly DownloadButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly custom: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly NextSectionButton: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly custom: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly rightPanel: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly panelBackgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly panelControlsBackgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly showAtBreakpoint: {
                                            readonly type: "string";
                                        };
                                        readonly textColor: {
                                            readonly type: "string";
                                        };
                                        readonly width: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly schema: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly breakFieldNames: {
                                            readonly type: "boolean";
                                        };
                                        readonly caretColor: {
                                            readonly type: "string";
                                        };
                                        readonly caretSize: {
                                            readonly type: "string";
                                        };
                                        readonly constraints: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly border: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly defaultDetailsWidth: {
                                            readonly type: "string";
                                        };
                                        readonly examples: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly border: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly labelsTextSize: {
                                            readonly type: "string";
                                        };
                                        readonly linesColor: {
                                            readonly type: "string";
                                        };
                                        readonly nestedBackground: {
                                            readonly type: "string";
                                        };
                                        readonly nestingSpacing: {
                                            readonly type: "string";
                                        };
                                        readonly requireLabelColor: {
                                            readonly type: "string";
                                        };
                                        readonly typeNameColor: {
                                            readonly type: "string";
                                        };
                                        readonly typeTitleColor: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly shape: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly sidebar: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly activeBgColor: {
                                            readonly type: "string";
                                        };
                                        readonly activeTextColor: {
                                            readonly type: "string";
                                        };
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly breakPath: {
                                            readonly type: "boolean";
                                        };
                                        readonly caretColor: {
                                            readonly type: "string";
                                        };
                                        readonly caretSize: {
                                            readonly type: "string";
                                        };
                                        readonly groupItems: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly subItemsColor: {
                                                    readonly type: "string";
                                                };
                                                readonly textTransform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly level1items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly subItemsColor: {
                                                    readonly type: "string";
                                                };
                                                readonly textTransform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly rightLineColor: {
                                            readonly type: "string";
                                        };
                                        readonly separatorLabelColor: {
                                            readonly type: "string";
                                        };
                                        readonly showAtBreakpoint: {
                                            readonly type: "string";
                                        };
                                        readonly spacing: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly unit: {
                                                    readonly type: "number";
                                                };
                                                readonly paddingHorizontal: {
                                                    readonly type: "string";
                                                };
                                                readonly paddingVertical: {
                                                    readonly type: "string";
                                                };
                                                readonly offsetTop: {
                                                    readonly type: "string";
                                                };
                                                readonly offsetLeft: {
                                                    readonly type: "string";
                                                };
                                                readonly offsetNesting: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly textColor: {
                                            readonly type: "string";
                                        };
                                        readonly width: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly spacing: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly sectionHorizontal: {
                                            readonly type: "number";
                                        };
                                        readonly sectionVertical: {
                                            readonly type: "number";
                                        };
                                        readonly unit: {
                                            readonly type: "number";
                                        };
                                    };
                                };
                                readonly typography: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontWeightBold: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeightLight: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeightRegular: {
                                            readonly type: "string";
                                        };
                                        readonly heading1: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly heading2: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly heading3: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly headings: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                        readonly links: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly hover: {
                                                    readonly type: "string";
                                                };
                                                readonly textDecoration: {
                                                    readonly type: "string";
                                                };
                                                readonly hoverTextDecoration: {
                                                    readonly type: "string";
                                                };
                                                readonly visited: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly optimizeSpeed: {
                                            readonly type: "boolean";
                                        };
                                        readonly rightPanelHeading: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly transform: {
                                                    readonly type: "string";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly smoothing: {
                                            readonly type: "string";
                                            readonly enum: readonly ["auto", "none", "antialiased", "subpixel-antialiased", "grayscale"];
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly code: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly wordBreak: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["break-all", "break-word", "keep-all", "normal", "revert", "unset", "inherit", "initial"];
                                                };
                                                readonly wrap: {
                                                    readonly type: "boolean";
                                                };
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly fieldName: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly fontFamily: {
                                                    readonly type: "string";
                                                };
                                                readonly fontSize: {
                                                    readonly type: "string";
                                                };
                                                readonly fontWeight: {
                                                    readonly type: "string";
                                                };
                                                readonly lineHeight: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly links: {
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly codeSample: {
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly ctrlFHijack: {
                            readonly type: "boolean";
                        };
                        readonly defaultSampleLanguage: {
                            readonly type: "string";
                        };
                        readonly disableDeepLinks: {
                            readonly type: "boolean";
                        };
                        readonly disableSearch: {
                            readonly type: "boolean";
                        };
                        readonly disableSidebar: {
                            readonly type: "boolean";
                        };
                        readonly downloadDefinitionUrl: {
                            readonly type: "string";
                        };
                        readonly expandDefaultServerVariables: {
                            readonly type: "boolean";
                        };
                        readonly enumSkipQuotes: {
                            readonly type: "boolean";
                        };
                        readonly expandDefaultRequest: {
                            readonly type: "boolean";
                        };
                        readonly expandDefaultResponse: {
                            readonly type: "boolean";
                        };
                        readonly expandResponses: {
                            readonly type: "string";
                        };
                        readonly expandSingleSchemaField: {
                            readonly type: "boolean";
                        };
                        readonly generateCodeSamples: {
                            readonly type: "object";
                            readonly properties: {
                                readonly skipOptionalParameters: {
                                    readonly type: "boolean";
                                };
                                readonly languages: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly lang: {
                                                readonly enum: readonly ["curl", "C#", "Go", "Java", "Java8+Apache", "JavaScript", "Node.js", "PHP", "Python", "R", "Ruby"];
                                            };
                                        };
                                        readonly required: readonly ["lang"];
                                    };
                                };
                            };
                            readonly required: readonly ["languages"];
                        };
                        readonly generatedPayloadSamplesMaxDepth: {
                            readonly type: "number";
                        };
                        readonly hideDownloadButton: {
                            readonly type: "boolean";
                        };
                        readonly hideHostname: {
                            readonly type: "boolean";
                        };
                        readonly hideInfoSection: {
                            readonly type: "boolean";
                        };
                        readonly hideLogo: {
                            readonly type: "boolean";
                        };
                        readonly hideRequestPayloadSample: {
                            readonly type: "boolean";
                        };
                        readonly hideRightPanel: {
                            readonly type: "boolean";
                        };
                        readonly hideSchemaPattern: {
                            readonly type: "boolean";
                        };
                        readonly hideSingleRequestSampleTab: {
                            readonly type: "boolean";
                        };
                        readonly hideSecuritySection: {
                            readonly type: "boolean";
                        };
                        readonly hideTryItPanel: {
                            readonly type: "boolean";
                        };
                        readonly hideFab: {
                            readonly type: "boolean";
                        };
                        readonly hideOneOfDescription: {
                            readonly type: "boolean";
                        };
                        readonly htmlTemplate: {
                            readonly type: "string";
                        };
                        readonly jsonSampleExpandLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                                readonly minimum: 1;
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly labels: {
                            readonly type: "object";
                            readonly properties: {
                                readonly enum: {
                                    readonly type: "string";
                                };
                                readonly enumSingleValue: {
                                    readonly type: "string";
                                };
                                readonly enumArray: {
                                    readonly type: "string";
                                };
                                readonly default: {
                                    readonly type: "string";
                                };
                                readonly deprecated: {
                                    readonly type: "string";
                                };
                                readonly example: {
                                    readonly type: "string";
                                };
                                readonly examples: {
                                    readonly type: "string";
                                };
                                readonly nullable: {
                                    readonly type: "string";
                                };
                                readonly recursive: {
                                    readonly type: "string";
                                };
                                readonly arrayOf: {
                                    readonly type: "string";
                                };
                                readonly webhook: {
                                    readonly type: "string";
                                };
                                readonly authorizations: {
                                    readonly type: "string";
                                };
                                readonly tryItAuthBasicUsername: {
                                    readonly type: "string";
                                };
                                readonly tryItAuthBasicPassword: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly menuToggle: {
                            readonly type: "boolean";
                        };
                        readonly nativeScrollbars: {
                            readonly type: "boolean";
                        };
                        readonly noAutoAuth: {
                            readonly type: "boolean";
                        };
                        readonly onDeepLinkClick: {
                            readonly type: "object";
                        };
                        readonly pagination: {
                            readonly enum: readonly ["none", "section", "item"];
                        };
                        readonly pathInMiddlePanel: {
                            readonly type: "boolean";
                        };
                        readonly payloadSampleIdx: {
                            readonly type: "number";
                            readonly minimum: 0;
                        };
                        readonly requestInterceptor: {
                            readonly type: "object";
                        };
                        readonly requiredPropsFirst: {
                            readonly type: "boolean";
                        };
                        readonly routingStrategy: {
                            readonly type: "string";
                        };
                        readonly samplesTabsMaxCount: {
                            readonly type: "number";
                        };
                        readonly schemaExpansionLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                                readonly minimum: 0;
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly minCharacterLengthToInitSearch: {
                            readonly type: "number";
                            readonly minimum: 1;
                        };
                        readonly maxResponseHeadersToShowInTryIt: {
                            readonly type: "number";
                            readonly minimum: 0;
                        };
                        readonly scrollYOffset: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly searchAutoExpand: {
                            readonly type: "boolean";
                        };
                        readonly searchFieldLevelBoost: {
                            readonly type: "number";
                            readonly minimum: 0;
                        };
                        readonly searchMaxDepth: {
                            readonly type: "number";
                            readonly minimum: 1;
                        };
                        readonly searchMode: {
                            readonly type: "string";
                            readonly enum: readonly ["default", "path-only"];
                        };
                        readonly searchOperationTitleBoost: {
                            readonly type: "number";
                        };
                        readonly searchTagTitleBoost: {
                            readonly type: "number";
                        };
                        readonly sendXUserAgentInTryIt: {
                            readonly type: "boolean";
                        };
                        readonly showChangeLayoutButton: {
                            readonly type: "boolean";
                        };
                        readonly showConsole: {
                            readonly type: "boolean";
                        };
                        readonly showNextButton: {
                            readonly type: "boolean";
                        };
                        readonly showRightPanelToggle: {
                            readonly type: "boolean";
                        };
                        readonly showSecuritySchemeType: {
                            readonly type: "boolean";
                        };
                        readonly showWebhookVerb: {
                            readonly type: "boolean";
                        };
                        readonly showObjectSchemaExamples: {
                            readonly type: "boolean";
                        };
                        readonly disableTryItRequestUrlEncoding: {
                            readonly type: "boolean";
                        };
                        readonly sidebarLinks: {
                            readonly type: "object";
                            readonly properties: {
                                readonly beforeInfo: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly link: {
                                                readonly type: "string";
                                            };
                                            readonly target: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["label", "link"];
                                    };
                                };
                                readonly end: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly link: {
                                                readonly type: "string";
                                            };
                                            readonly target: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["label", "link"];
                                    };
                                };
                            };
                        };
                        readonly sideNavStyle: {
                            readonly type: "string";
                            readonly enum: readonly ["summary-only", "path-first", "id-only", "path-only"];
                        };
                        readonly simpleOneOfTypeLabel: {
                            readonly type: "boolean";
                        };
                        readonly sortEnumValuesAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly sortOperationsAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly sortPropsAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly sortTagsAlphabetically: {
                            readonly type: "boolean";
                        };
                        readonly suppressWarnings: {
                            readonly type: "boolean";
                        };
                        readonly unstable_externalDescription: {
                            readonly type: "boolean";
                        };
                        readonly unstable_ignoreMimeParameters: {
                            readonly type: "boolean";
                        };
                        readonly untrustedDefinition: {
                            readonly type: "boolean";
                        };
                        readonly showAccessMode: {
                            readonly type: "boolean";
                        };
                        readonly preserveOriginalExtensionsName: {
                            readonly type: "boolean";
                        };
                        readonly markdownHeadingsAnchorLevel: {
                            readonly type: "number";
                        };
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly hideLoading: {
                            readonly type: "boolean";
                        };
                        readonly disableRouter: {
                            readonly type: "boolean";
                        };
                        readonly hideSidebar: {
                            readonly type: "boolean";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly like: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dislike: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly satisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly neutral: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dissatisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly optionalEmail: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly placeholder: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly hideReplay: {
                            readonly type: "boolean";
                        };
                        readonly oAuth2RedirectURI: {
                            readonly type: "string";
                            readonly nullable: true;
                        };
                        readonly corsProxyUrl: {
                            readonly type: "string";
                        };
                        readonly sortRequiredPropsFirst: {
                            readonly type: "boolean";
                        };
                        readonly sanitize: {
                            readonly type: "boolean";
                        };
                        readonly hideDownloadButtons: {
                            readonly type: "boolean";
                        };
                        readonly downloadUrls: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly url: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["url"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly onlyRequiredInSamples: {
                            readonly type: "boolean";
                        };
                        readonly generatedSamplesMaxDepth: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly showExtensions: {
                            readonly oneOf: readonly [{
                                readonly type: "boolean";
                            }, {
                                readonly type: "string";
                            }, {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }];
                        };
                        readonly hideSchemaTitles: {
                            readonly type: "boolean";
                        };
                        readonly jsonSamplesExpandLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly schemasExpansionLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly mockServer: {
                            readonly type: "object";
                            readonly properties: {
                                readonly url: {
                                    readonly type: "string";
                                };
                                readonly position: {
                                    readonly type: "string";
                                    readonly enum: readonly ["first", "last", "replace", "off"];
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly maxDisplayedEnumValues: {
                            readonly type: "number";
                        };
                        readonly schemaDefinitionsTagName: {
                            readonly type: "string";
                        };
                        readonly layout: {
                            readonly type: "string";
                            readonly enum: readonly ["stacked", "three-panel"];
                        };
                        readonly hideInfoMetadata: {
                            readonly type: "boolean";
                        };
                        readonly events: {
                            readonly type: "object";
                        };
                        readonly skipBundle: {
                            readonly type: "boolean";
                        };
                        readonly routingBasePath: {
                            readonly type: "string";
                        };
                        readonly codeSamples: {
                            readonly type: "object";
                            readonly properties: {
                                readonly languages: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly lang: {
                                                readonly type: "string";
                                                readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly indent: {
                                                        readonly type: "string";
                                                    };
                                                    readonly withImports: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly withComments: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly binary: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly credentials: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["omit", "same-origin", "include"];
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["lang"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly skipOptionalParameters: {
                                    readonly type: "boolean";
                                };
                                readonly withOAuth2Call: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly required: readonly ["languages"];
                            readonly additionalProperties: false;
                        };
                        readonly ignoreNamedSchemas: {
                            readonly oneOf: readonly [{
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly hidePropertiesPrefix: {
                            readonly type: "boolean";
                        };
                        readonly excludeFromSearch: {
                            readonly type: "boolean";
                        };
                    };
                    readonly type: "object";
                    readonly additionalProperties: false;
                };
                readonly graphql: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hidePaginationButtons: {
                            readonly type: "boolean";
                        };
                        readonly menu: {
                            readonly type: "object";
                            readonly properties: {
                                readonly requireExactGroups: {
                                    readonly type: "boolean";
                                };
                                readonly groups: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly queries: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly mutations: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly subscriptions: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly types: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly directives: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["name"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly otherItemsGroupName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly sidebar: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                        };
                        readonly apiLogo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly imageUrl: {
                                    readonly type: "string";
                                };
                                readonly href: {
                                    readonly type: "string";
                                };
                                readonly altText: {
                                    readonly type: "string";
                                };
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly jsonSamplesDepth: {
                            readonly type: "number";
                        };
                        readonly samplesMaxInlineArgs: {
                            readonly type: "number";
                        };
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly fieldExpandLevel: {
                            readonly type: "number";
                        };
                        readonly baseUrlPath: {
                            readonly type: "string";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly like: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dislike: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly satisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly neutral: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly dissatisfied: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly hide: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly component: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["radio", "checkbox"];
                                                            readonly default: "checkbox";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly optionalEmail: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly placeholder: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly analytics: {
                    readonly type: "object";
                    readonly properties: {
                        readonly adobe: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly scriptUrl: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["scriptUrl"];
                        };
                        readonly amplitude: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly apiKey: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly outboundClickEventName: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                                readonly amplitudeConfig: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["apiKey"];
                        };
                        readonly fullstory: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly orgId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["orgId"];
                        };
                        readonly heap: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly appId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["appId"];
                        };
                        readonly rudderstack: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly dataPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly controlPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly sdkUrl: {
                                    readonly type: "string";
                                };
                                readonly loadOptions: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly segment: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly includeTitleInPageCall: {
                                    readonly type: "boolean";
                                };
                                readonly host: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly gtm: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly gtmAuth: {
                                    readonly type: "string";
                                };
                                readonly gtmPreview: {
                                    readonly type: "string";
                                };
                                readonly defaultDataLayer: {};
                                readonly dataLayerName: {
                                    readonly type: "string";
                                };
                                readonly enableWebVitalsTracking: {
                                    readonly type: "boolean";
                                };
                                readonly selfHostedOrigin: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                        readonly ga: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly conversionId: {
                                    readonly type: "string";
                                };
                                readonly floodlightId: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly optimizeId: {
                                    readonly type: "string";
                                };
                                readonly anonymizeIp: {
                                    readonly type: "boolean";
                                };
                                readonly cookieExpires: {
                                    readonly type: "number";
                                };
                                readonly trackers: {
                                    readonly type: "object";
                                    readonly additionalProperties: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly trackingId: {
                                                readonly type: "string";
                                            };
                                            readonly conversionId: {
                                                readonly type: "string";
                                            };
                                            readonly floodlightId: {
                                                readonly type: "string";
                                            };
                                            readonly optimizeId: {
                                                readonly type: "string";
                                            };
                                            readonly exclude: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["trackingId"];
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                    };
                };
                readonly userMenu: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly additionalProperties: true;
                            };
                            readonly default: readonly [];
                        };
                        readonly hideLoginButton: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly versionPicker: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly showForUnversioned: {
                            readonly type: "boolean";
                        };
                    };
                };
                readonly breadcrumbs: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly prefixItems: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly catalog: {
                    readonly type: "object";
                    readonly patternProperties: {
                        readonly '.*': {
                            readonly type: "object";
                            readonly additionalProperties: true;
                            readonly required: readonly ["slug", "items"];
                            readonly properties: {
                                readonly slug: {
                                    readonly type: "string";
                                };
                                readonly filters: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["title", "property"];
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["select", "checkboxes", "date-range"];
                                                readonly default: "checkboxes";
                                            };
                                            readonly title: {
                                                readonly type: "string";
                                            };
                                            readonly titleTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly property: {
                                                readonly type: "string";
                                            };
                                            readonly parentFilter: {
                                                readonly type: "string";
                                            };
                                            readonly valuesMapping: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly missingCategoryName: {
                                                readonly type: "string";
                                            };
                                            readonly missingCategoryNameTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly groupByFirstFilter: {
                                    readonly type: "boolean";
                                };
                                readonly filterValuesCasing: {
                                    readonly type: "string";
                                    readonly enum: readonly ["sentence", "original", "lowercase", "uppercase"];
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly properties: {
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly page: {
                                                            readonly type: "string";
                                                        };
                                                        readonly directory: {
                                                            readonly type: "string";
                                                        };
                                                        readonly disconnect: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly group: {
                                                            readonly type: "string";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                        readonly external: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly labelTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly groupTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly icon: {
                                                            readonly oneOf: readonly [{
                                                                readonly type: "string";
                                                            }, {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly srcSet: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly required: readonly ["srcSet"];
                                                            }];
                                                        };
                                                        readonly separator: {
                                                            readonly type: "string";
                                                        };
                                                        readonly separatorLine: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linePosition: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["top", "bottom"];
                                                            readonly default: "top";
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                        };
                                                        readonly menuStyle: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["drilldown"];
                                                        };
                                                        readonly expanded: {
                                                            readonly type: "string";
                                                            readonly const: "always";
                                                        };
                                                        readonly selectFirstItemOnExpand: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly flatten: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linkedSidebars: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "object";
                                                                readonly additionalProperties: true;
                                                            };
                                                        };
                                                        readonly rbac: {
                                                            readonly type: "object";
                                                            readonly additionalProperties: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly page: {
                                                readonly type: "string";
                                            };
                                            readonly directory: {
                                                readonly type: "string";
                                            };
                                            readonly disconnect: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly group: {
                                                readonly type: "string";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                            readonly external: {
                                                readonly type: "boolean";
                                            };
                                            readonly labelTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly groupTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly icon: {
                                                readonly oneOf: readonly [{
                                                    readonly type: "string";
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly srcSet: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["srcSet"];
                                                }];
                                            };
                                            readonly separator: {
                                                readonly type: "string";
                                            };
                                            readonly separatorLine: {
                                                readonly type: "boolean";
                                            };
                                            readonly linePosition: {
                                                readonly type: "string";
                                                readonly enum: readonly ["top", "bottom"];
                                                readonly default: "top";
                                            };
                                            readonly version: {
                                                readonly type: "string";
                                            };
                                            readonly menuStyle: {
                                                readonly type: "string";
                                                readonly enum: readonly ["drilldown"];
                                            };
                                            readonly expanded: {
                                                readonly type: "string";
                                                readonly const: "always";
                                            };
                                            readonly selectFirstItemOnExpand: {
                                                readonly type: "boolean";
                                            };
                                            readonly flatten: {
                                                readonly type: "boolean";
                                            };
                                            readonly linkedSidebars: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly rbac: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly type: "object";
                                    };
                                };
                                readonly requiredPermission: {
                                    readonly type: "string";
                                };
                                readonly separateVersions: {
                                    readonly type: "boolean";
                                };
                                readonly title: {
                                    readonly type: "string";
                                };
                                readonly titleTranslationKey: {
                                    readonly type: "string";
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                                readonly descriptionTranslationKey: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly scorecard: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly required: readonly [];
                    readonly properties: {
                        readonly ignoreNonCompliant: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly teamMetadataProperty: {
                            readonly type: "object";
                            readonly properties: {
                                readonly property: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly default: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly levels: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["name"];
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly color: {
                                        readonly type: "string";
                                    };
                                    readonly extends: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rules: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                            }, {
                                                readonly type: "object";
                                            }];
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly targets: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["where"];
                                readonly properties: {
                                    readonly minimumLevel: {
                                        readonly type: "string";
                                    };
                                    readonly rules: {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly where: {
                                        readonly type: "object";
                                        readonly required: readonly ["metadata"];
                                        readonly properties: {
                                            readonly metadata: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly ignore: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                };
            };
            readonly additionalProperties: true;
        };
        readonly reunite: {
            readonly type: "object";
            readonly properties: {
                readonly ignoreLint: {
                    readonly oneOf: readonly [{
                        readonly type: "boolean";
                        readonly default: false;
                    }, {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "boolean";
                        };
                    }];
                };
                readonly ignoreLinkChecker: {
                    readonly type: "boolean";
                };
                readonly ignoreMarkdocErrors: {
                    readonly type: "boolean";
                };
                readonly jobs: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly path: {
                                readonly type: "string";
                                readonly pattern: "^(?!\\.\\./)(/[a-zA-Z0-9_\\-\\./]+|./[a-zA-Z0-9_\\-\\./]+|[a-zA-Z0-9_\\-\\./]+)$";
                            };
                            readonly agent: {
                                readonly type: "string";
                                readonly enum: readonly ["respect"];
                            };
                            readonly trigger: {
                                readonly type: "object";
                                readonly additionalProperties: false;
                                readonly properties: {
                                    readonly event: {
                                        readonly type: "string";
                                        readonly enum: readonly ["schedule"];
                                    };
                                    readonly interval: {
                                        readonly type: "string";
                                        readonly pattern: "^[1-9]\\d*[mhdw]$";
                                    };
                                };
                                readonly required: readonly ["event"];
                            };
                            readonly inputs: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                            readonly servers: {
                                readonly type: "object";
                                readonly additionalProperties: false;
                                readonly patternProperties: {
                                    readonly '^[a-zA-Z0-9_-]+$': {
                                        readonly type: "string";
                                        readonly pattern: "^https?://[^\\s/$.?#].[^\\s]*$";
                                    };
                                };
                            };
                            readonly severity: {
                                readonly type: "object";
                                readonly additionalProperties: false;
                                readonly properties: {
                                    readonly schemaCheck: {
                                        readonly type: "string";
                                        readonly enum: readonly ["error", "warn", "off"];
                                    };
                                    readonly statusCodeCheck: {
                                        readonly type: "string";
                                        readonly enum: readonly ["error", "warn", "off"];
                                    };
                                    readonly contentTypeCheck: {
                                        readonly type: "string";
                                        readonly enum: readonly ["error", "warn", "off"];
                                    };
                                    readonly successCriteriaCheck: {
                                        readonly type: "string";
                                        readonly enum: readonly ["error", "warn", "off"];
                                    };
                                };
                            };
                        };
                        readonly required: readonly ["path", "trigger", "agent"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly logo: {
            readonly type: "object";
            readonly properties: {
                readonly image: {
                    readonly type: "string";
                };
                readonly srcSet: {
                    readonly type: "string";
                };
                readonly altText: {
                    readonly type: "string";
                };
                readonly link: {
                    readonly type: "string";
                };
                readonly favicon: {
                    readonly type: "string";
                };
            };
            readonly additionalProperties: false;
        };
        readonly navbar: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly items: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly items: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly page: {
                                            readonly type: "string";
                                        };
                                        readonly directory: {
                                            readonly type: "string";
                                        };
                                        readonly disconnect: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly group: {
                                            readonly type: "string";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly href: {
                                            readonly type: "string";
                                        };
                                        readonly external: {
                                            readonly type: "boolean";
                                        };
                                        readonly labelTranslationKey: {
                                            readonly type: "string";
                                        };
                                        readonly groupTranslationKey: {
                                            readonly type: "string";
                                        };
                                        readonly icon: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                            }, {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly srcSet: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["srcSet"];
                                            }];
                                        };
                                        readonly separator: {
                                            readonly type: "string";
                                        };
                                        readonly separatorLine: {
                                            readonly type: "boolean";
                                        };
                                        readonly linePosition: {
                                            readonly type: "string";
                                            readonly enum: readonly ["top", "bottom"];
                                            readonly default: "top";
                                        };
                                        readonly version: {
                                            readonly type: "string";
                                        };
                                        readonly menuStyle: {
                                            readonly type: "string";
                                            readonly enum: readonly ["drilldown"];
                                        };
                                        readonly expanded: {
                                            readonly type: "string";
                                            readonly const: "always";
                                        };
                                        readonly selectFirstItemOnExpand: {
                                            readonly type: "boolean";
                                        };
                                        readonly flatten: {
                                            readonly type: "boolean";
                                        };
                                        readonly linkedSidebars: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly additionalProperties: true;
                                            };
                                        };
                                        readonly rbac: {
                                            readonly type: "object";
                                            readonly additionalProperties: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly page: {
                                readonly type: "string";
                            };
                            readonly directory: {
                                readonly type: "string";
                            };
                            readonly disconnect: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly group: {
                                readonly type: "string";
                            };
                            readonly label: {
                                readonly type: "string";
                            };
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly external: {
                                readonly type: "boolean";
                            };
                            readonly labelTranslationKey: {
                                readonly type: "string";
                            };
                            readonly groupTranslationKey: {
                                readonly type: "string";
                            };
                            readonly icon: {
                                readonly oneOf: readonly [{
                                    readonly type: "string";
                                }, {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly srcSet: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["srcSet"];
                                }];
                            };
                            readonly separator: {
                                readonly type: "string";
                            };
                            readonly separatorLine: {
                                readonly type: "boolean";
                            };
                            readonly linePosition: {
                                readonly type: "string";
                                readonly enum: readonly ["top", "bottom"];
                                readonly default: "top";
                            };
                            readonly version: {
                                readonly type: "string";
                            };
                            readonly menuStyle: {
                                readonly type: "string";
                                readonly enum: readonly ["drilldown"];
                            };
                            readonly expanded: {
                                readonly type: "string";
                                readonly const: "always";
                            };
                            readonly selectFirstItemOnExpand: {
                                readonly type: "boolean";
                            };
                            readonly flatten: {
                                readonly type: "boolean";
                            };
                            readonly linkedSidebars: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly rbac: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly type: "object";
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly products: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly name: {
                        readonly type: "string";
                    };
                    readonly icon: {
                        readonly type: "string";
                    };
                    readonly folder: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["name", "folder"];
            };
        };
        readonly footer: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly items: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly items: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly page: {
                                            readonly type: "string";
                                        };
                                        readonly directory: {
                                            readonly type: "string";
                                        };
                                        readonly disconnect: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly group: {
                                            readonly type: "string";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly href: {
                                            readonly type: "string";
                                        };
                                        readonly external: {
                                            readonly type: "boolean";
                                        };
                                        readonly labelTranslationKey: {
                                            readonly type: "string";
                                        };
                                        readonly groupTranslationKey: {
                                            readonly type: "string";
                                        };
                                        readonly icon: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                            }, {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly srcSet: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["srcSet"];
                                            }];
                                        };
                                        readonly separator: {
                                            readonly type: "string";
                                        };
                                        readonly separatorLine: {
                                            readonly type: "boolean";
                                        };
                                        readonly linePosition: {
                                            readonly type: "string";
                                            readonly enum: readonly ["top", "bottom"];
                                            readonly default: "top";
                                        };
                                        readonly version: {
                                            readonly type: "string";
                                        };
                                        readonly menuStyle: {
                                            readonly type: "string";
                                            readonly enum: readonly ["drilldown"];
                                        };
                                        readonly expanded: {
                                            readonly type: "string";
                                            readonly const: "always";
                                        };
                                        readonly selectFirstItemOnExpand: {
                                            readonly type: "boolean";
                                        };
                                        readonly flatten: {
                                            readonly type: "boolean";
                                        };
                                        readonly linkedSidebars: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly additionalProperties: true;
                                            };
                                        };
                                        readonly rbac: {
                                            readonly type: "object";
                                            readonly additionalProperties: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly page: {
                                readonly type: "string";
                            };
                            readonly directory: {
                                readonly type: "string";
                            };
                            readonly disconnect: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly group: {
                                readonly type: "string";
                            };
                            readonly label: {
                                readonly type: "string";
                            };
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly external: {
                                readonly type: "boolean";
                            };
                            readonly labelTranslationKey: {
                                readonly type: "string";
                            };
                            readonly groupTranslationKey: {
                                readonly type: "string";
                            };
                            readonly icon: {
                                readonly oneOf: readonly [{
                                    readonly type: "string";
                                }, {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly srcSet: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["srcSet"];
                                }];
                            };
                            readonly separator: {
                                readonly type: "string";
                            };
                            readonly separatorLine: {
                                readonly type: "boolean";
                            };
                            readonly linePosition: {
                                readonly type: "string";
                                readonly enum: readonly ["top", "bottom"];
                                readonly default: "top";
                            };
                            readonly version: {
                                readonly type: "string";
                            };
                            readonly menuStyle: {
                                readonly type: "string";
                                readonly enum: readonly ["drilldown"];
                            };
                            readonly expanded: {
                                readonly type: "string";
                                readonly const: "always";
                            };
                            readonly selectFirstItemOnExpand: {
                                readonly type: "boolean";
                            };
                            readonly flatten: {
                                readonly type: "boolean";
                            };
                            readonly linkedSidebars: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly rbac: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly copyrightText: {
                    readonly type: "string";
                };
                readonly logo: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                };
            };
            readonly additionalProperties: false;
        };
        readonly sidebar: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly separatorLine: {
                    readonly type: "boolean";
                };
                readonly linePosition: {
                    readonly type: "string";
                    readonly enum: readonly ["top", "bottom"];
                    readonly default: "bottom";
                };
            };
            readonly additionalProperties: false;
        };
        readonly scripts: {
            readonly type: "object";
            readonly properties: {
                readonly head: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly src: {
                                readonly type: "string";
                            };
                            readonly async: {
                                readonly type: "boolean";
                            };
                            readonly crossorigin: {
                                readonly type: "string";
                            };
                            readonly defer: {
                                readonly type: "boolean";
                            };
                            readonly fetchpriority: {
                                readonly type: "string";
                            };
                            readonly integrity: {
                                readonly type: "string";
                            };
                            readonly module: {
                                readonly type: "boolean";
                            };
                            readonly nomodule: {
                                readonly type: "boolean";
                            };
                            readonly nonce: {
                                readonly type: "string";
                            };
                            readonly referrerpolicy: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["src"];
                        readonly additionalProperties: true;
                    };
                };
                readonly body: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly src: {
                                readonly type: "string";
                            };
                            readonly async: {
                                readonly type: "boolean";
                            };
                            readonly crossorigin: {
                                readonly type: "string";
                            };
                            readonly defer: {
                                readonly type: "boolean";
                            };
                            readonly fetchpriority: {
                                readonly type: "string";
                            };
                            readonly integrity: {
                                readonly type: "string";
                            };
                            readonly module: {
                                readonly type: "boolean";
                            };
                            readonly nomodule: {
                                readonly type: "boolean";
                            };
                            readonly nonce: {
                                readonly type: "string";
                            };
                            readonly referrerpolicy: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["src"];
                        readonly additionalProperties: true;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly links: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly href: {
                        readonly type: "string";
                    };
                    readonly as: {
                        readonly type: "string";
                    };
                    readonly crossorigin: {
                        readonly type: "string";
                    };
                    readonly fetchpriority: {
                        readonly type: "string";
                    };
                    readonly hreflang: {
                        readonly type: "string";
                    };
                    readonly imagesizes: {
                        readonly type: "string";
                    };
                    readonly imagesrcset: {
                        readonly type: "string";
                    };
                    readonly integrity: {
                        readonly type: "string";
                    };
                    readonly media: {
                        readonly type: "string";
                    };
                    readonly prefetch: {
                        readonly type: "string";
                    };
                    readonly referrerpolicy: {
                        readonly type: "string";
                    };
                    readonly rel: {
                        readonly type: "string";
                    };
                    readonly sizes: {
                        readonly type: "string";
                    };
                    readonly title: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["href"];
                readonly additionalProperties: true;
            };
        };
        readonly feedback: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly type: {
                    readonly type: "string";
                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                    readonly default: "sentiment";
                };
                readonly settings: {
                    readonly type: "object";
                    readonly properties: {
                        readonly label: {
                            readonly type: "string";
                        };
                        readonly submitText: {
                            readonly type: "string";
                        };
                        readonly buttonText: {
                            readonly type: "string";
                        };
                        readonly component: {
                            readonly type: "string";
                            readonly enum: readonly ["radio", "checkbox"];
                            readonly default: "checkbox";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                        };
                        readonly leftScaleLabel: {
                            readonly type: "string";
                        };
                        readonly rightScaleLabel: {
                            readonly type: "string";
                        };
                        readonly reasons: {
                            readonly type: "object";
                            readonly properties: {
                                readonly like: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly dislike: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly satisfied: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly neutral: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly dissatisfied: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly comment: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly likeLabel: {
                                    readonly type: "string";
                                };
                                readonly dislikeLabel: {
                                    readonly type: "string";
                                };
                                readonly satisfiedLabel: {
                                    readonly type: "string";
                                };
                                readonly neutralLabel: {
                                    readonly type: "string";
                                };
                                readonly dissatisfiedLabel: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly optionalEmail: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly placeholder: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
            };
            readonly additionalProperties: false;
        };
        readonly search: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly engine: {
                    readonly type: "string";
                    readonly enum: readonly ["flexsearch", "typesense"];
                    readonly default: "flexsearch";
                };
                readonly ai: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly suggestions: {
                            readonly default: readonly [];
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly prompt: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly filters: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly facets: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["name", "field", "type"];
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly field: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["multi-select", "select", "tags"];
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly placement: {
                    readonly type: "string";
                    readonly default: "navbar";
                };
                readonly shortcuts: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly ["/"];
                };
                readonly suggestedPages: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly page: {
                                readonly type: "string";
                            };
                            readonly label: {
                                readonly type: "string";
                            };
                            readonly labelTranslationKey: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["page"];
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly colorMode: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly ignoreDetection: {
                    readonly type: "boolean";
                };
                readonly modes: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly ["light", "dark"];
                };
            };
            readonly additionalProperties: false;
        };
        readonly navigation: {
            readonly type: "object";
            readonly properties: {
                readonly nextButton: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly text: {
                            readonly type: "string";
                            readonly default: "Next page";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly previousButton: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly text: {
                            readonly type: "string";
                            readonly default: "Previous page";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
            };
            readonly additionalProperties: false;
        };
        readonly codeSnippet: {
            readonly type: "object";
            readonly properties: {
                readonly elementFormat: {
                    readonly type: "string";
                    readonly default: "icon";
                };
                readonly copy: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {
                        readonly hide: false;
                    };
                };
                readonly report: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly tooltipText: {
                            readonly type: "string";
                        };
                        readonly buttonText: {
                            readonly type: "string";
                        };
                        readonly label: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {
                        readonly hide: false;
                    };
                };
                readonly expand: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {
                        readonly hide: false;
                    };
                };
                readonly collapse: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {
                        readonly hide: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly markdown: {
            readonly type: "object";
            readonly properties: {
                readonly frontMatterKeysToResolve: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly ["image", "links"];
                };
                readonly partialsFolders: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly ["_partials"];
                };
                readonly lastUpdatedBlock: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly format: {
                            readonly type: "string";
                            readonly enum: readonly ["timeago", "iso", "long", "short"];
                            readonly default: "timeago";
                        };
                        readonly locale: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly toc: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly header: {
                            readonly type: "string";
                            readonly default: "On this page";
                        };
                        readonly depth: {
                            readonly type: "integer";
                            readonly default: 3;
                            readonly minimum: 1;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly editPage: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly baseUrl: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
            };
            readonly additionalProperties: false;
            readonly default: {};
        };
        readonly openapi: {
            readonly properties: {
                readonly theme: {
                    readonly type: "object";
                    readonly properties: {
                        readonly breakpoints: {
                            readonly type: "object";
                            readonly properties: {
                                readonly small: {
                                    readonly type: "string";
                                };
                                readonly medium: {
                                    readonly type: "string";
                                };
                                readonly large: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly codeBlock: {
                            readonly type: "object";
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly borderRadius: {
                                    readonly type: "string";
                                };
                                readonly tokens: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly colors: {
                            readonly type: "object";
                            readonly properties: {
                                readonly accent: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly border: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly error: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly http: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly basic: {
                                            readonly type: "string";
                                        };
                                        readonly delete: {
                                            readonly type: "string";
                                        };
                                        readonly get: {
                                            readonly type: "string";
                                        };
                                        readonly head: {
                                            readonly type: "string";
                                        };
                                        readonly link: {
                                            readonly type: "string";
                                        };
                                        readonly options: {
                                            readonly type: "string";
                                        };
                                        readonly patch: {
                                            readonly type: "string";
                                        };
                                        readonly post: {
                                            readonly type: "string";
                                        };
                                        readonly put: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly primary: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly responses: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly error: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly info: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly redirect: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly success: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly backgroundColor: {
                                                    readonly type: "string";
                                                };
                                                readonly borderColor: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly tabTextColor: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly secondary: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly success: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly text: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly primary: {
                                            readonly type: "string";
                                        };
                                        readonly secondary: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly tonalOffset: {
                                    readonly type: "number";
                                };
                                readonly warning: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly main: {
                                            readonly type: "string";
                                        };
                                        readonly light: {
                                            readonly type: "string";
                                        };
                                        readonly dark: {
                                            readonly type: "string";
                                        };
                                        readonly contrastText: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly components: {
                            readonly type: "object";
                            readonly properties: {
                                readonly buttons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly hoverStyle: {
                                            readonly type: "string";
                                        };
                                        readonly boxShadow: {
                                            readonly type: "string";
                                        };
                                        readonly hoverBoxShadow: {
                                            readonly type: "string";
                                        };
                                        readonly sizes: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly medium: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly large: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly xlarge: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly padding: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minWidth: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly httpBadges: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly sizes: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly medium: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontFamily: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontWeight: {
                                                            readonly type: "string";
                                                        };
                                                        readonly lineHeight: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly small: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly fontFamily: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontSize: {
                                                            readonly type: "string";
                                                        };
                                                        readonly fontWeight: {
                                                            readonly type: "string";
                                                        };
                                                        readonly lineHeight: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly layoutControls: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly top: {
                                            readonly type: "string";
                                        };
                                        readonly width: {
                                            readonly type: "string";
                                        };
                                        readonly height: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly panels: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly borderRadius: {
                                            readonly type: "string";
                                        };
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly tryItButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fullWidth: {
                                            readonly type: "boolean";
                                        };
                                    };
                                };
                                readonly tryItSendButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fullWidth: {
                                            readonly type: "boolean";
                                        };
                                    };
                                };
                            };
                        };
                        readonly layout: {
                            readonly type: "object";
                            readonly properties: {
                                readonly showDarkRightPanel: {
                                    readonly type: "boolean";
                                };
                                readonly stacked: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly maxWidth: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "string";
                                                };
                                                readonly medium: {
                                                    readonly type: "string";
                                                };
                                                readonly large: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly 'three-panel': {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly maxWidth: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "string";
                                                };
                                                readonly medium: {
                                                    readonly type: "string";
                                                };
                                                readonly large: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly middlePanelMaxWidth: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly small: {
                                                    readonly type: "string";
                                                };
                                                readonly medium: {
                                                    readonly type: "string";
                                                };
                                                readonly large: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly logo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly gutter: {
                                    readonly type: "string";
                                };
                                readonly maxHeight: {
                                    readonly type: "string";
                                };
                                readonly maxWidth: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly fab: {
                            readonly type: "object";
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly color: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly overrides: {
                            readonly type: "object";
                            readonly properties: {
                                readonly DownloadButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly custom: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly NextSectionButton: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly custom: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly rightPanel: {
                            readonly type: "object";
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly panelBackgroundColor: {
                                    readonly type: "string";
                                };
                                readonly panelControlsBackgroundColor: {
                                    readonly type: "string";
                                };
                                readonly showAtBreakpoint: {
                                    readonly type: "string";
                                };
                                readonly textColor: {
                                    readonly type: "string";
                                };
                                readonly width: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly schema: {
                            readonly type: "object";
                            readonly properties: {
                                readonly breakFieldNames: {
                                    readonly type: "boolean";
                                };
                                readonly caretColor: {
                                    readonly type: "string";
                                };
                                readonly caretSize: {
                                    readonly type: "string";
                                };
                                readonly constraints: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly border: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly defaultDetailsWidth: {
                                    readonly type: "string";
                                };
                                readonly examples: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly border: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly labelsTextSize: {
                                    readonly type: "string";
                                };
                                readonly linesColor: {
                                    readonly type: "string";
                                };
                                readonly nestedBackground: {
                                    readonly type: "string";
                                };
                                readonly nestingSpacing: {
                                    readonly type: "string";
                                };
                                readonly requireLabelColor: {
                                    readonly type: "string";
                                };
                                readonly typeNameColor: {
                                    readonly type: "string";
                                };
                                readonly typeTitleColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly shape: {
                            readonly type: "object";
                            readonly properties: {
                                readonly borderRadius: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly sidebar: {
                            readonly type: "object";
                            readonly properties: {
                                readonly activeBgColor: {
                                    readonly type: "string";
                                };
                                readonly activeTextColor: {
                                    readonly type: "string";
                                };
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                                readonly borderRadius: {
                                    readonly type: "string";
                                };
                                readonly breakPath: {
                                    readonly type: "boolean";
                                };
                                readonly caretColor: {
                                    readonly type: "string";
                                };
                                readonly caretSize: {
                                    readonly type: "string";
                                };
                                readonly groupItems: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly subItemsColor: {
                                            readonly type: "string";
                                        };
                                        readonly textTransform: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly level1items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly subItemsColor: {
                                            readonly type: "string";
                                        };
                                        readonly textTransform: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly rightLineColor: {
                                    readonly type: "string";
                                };
                                readonly separatorLabelColor: {
                                    readonly type: "string";
                                };
                                readonly showAtBreakpoint: {
                                    readonly type: "string";
                                };
                                readonly spacing: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly unit: {
                                            readonly type: "number";
                                        };
                                        readonly paddingHorizontal: {
                                            readonly type: "string";
                                        };
                                        readonly paddingVertical: {
                                            readonly type: "string";
                                        };
                                        readonly offsetTop: {
                                            readonly type: "string";
                                        };
                                        readonly offsetLeft: {
                                            readonly type: "string";
                                        };
                                        readonly offsetNesting: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly textColor: {
                                    readonly type: "string";
                                };
                                readonly width: {
                                    readonly type: "string";
                                };
                                readonly fontFamily: {
                                    readonly type: "string";
                                };
                                readonly fontSize: {
                                    readonly type: "string";
                                };
                                readonly fontWeight: {
                                    readonly type: "string";
                                };
                                readonly lineHeight: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly spacing: {
                            readonly type: "object";
                            readonly properties: {
                                readonly sectionHorizontal: {
                                    readonly type: "number";
                                };
                                readonly sectionVertical: {
                                    readonly type: "number";
                                };
                                readonly unit: {
                                    readonly type: "number";
                                };
                            };
                        };
                        readonly typography: {
                            readonly type: "object";
                            readonly properties: {
                                readonly fontWeightBold: {
                                    readonly type: "string";
                                };
                                readonly fontWeightLight: {
                                    readonly type: "string";
                                };
                                readonly fontWeightRegular: {
                                    readonly type: "string";
                                };
                                readonly heading1: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly heading2: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly heading3: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly headings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly lineHeight: {
                                    readonly type: "string";
                                };
                                readonly links: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly hover: {
                                            readonly type: "string";
                                        };
                                        readonly textDecoration: {
                                            readonly type: "string";
                                        };
                                        readonly hoverTextDecoration: {
                                            readonly type: "string";
                                        };
                                        readonly visited: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly optimizeSpeed: {
                                    readonly type: "boolean";
                                };
                                readonly rightPanelHeading: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly transform: {
                                            readonly type: "string";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly smoothing: {
                                    readonly type: "string";
                                    readonly enum: readonly ["auto", "none", "antialiased", "subpixel-antialiased", "grayscale"];
                                };
                                readonly fontFamily: {
                                    readonly type: "string";
                                };
                                readonly fontSize: {
                                    readonly type: "string";
                                };
                                readonly fontWeight: {
                                    readonly type: "string";
                                };
                                readonly code: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly backgroundColor: {
                                            readonly type: "string";
                                        };
                                        readonly color: {
                                            readonly type: "string";
                                        };
                                        readonly wordBreak: {
                                            readonly type: "string";
                                            readonly enum: readonly ["break-all", "break-word", "keep-all", "normal", "revert", "unset", "inherit", "initial"];
                                        };
                                        readonly wrap: {
                                            readonly type: "boolean";
                                        };
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly fieldName: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly fontFamily: {
                                            readonly type: "string";
                                        };
                                        readonly fontSize: {
                                            readonly type: "string";
                                        };
                                        readonly fontWeight: {
                                            readonly type: "string";
                                        };
                                        readonly lineHeight: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly links: {
                            readonly properties: {
                                readonly color: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly codeSample: {
                            readonly properties: {
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly ctrlFHijack: {
                    readonly type: "boolean";
                };
                readonly defaultSampleLanguage: {
                    readonly type: "string";
                };
                readonly disableDeepLinks: {
                    readonly type: "boolean";
                };
                readonly disableSearch: {
                    readonly type: "boolean";
                };
                readonly disableSidebar: {
                    readonly type: "boolean";
                };
                readonly downloadDefinitionUrl: {
                    readonly type: "string";
                };
                readonly expandDefaultServerVariables: {
                    readonly type: "boolean";
                };
                readonly enumSkipQuotes: {
                    readonly type: "boolean";
                };
                readonly expandDefaultRequest: {
                    readonly type: "boolean";
                };
                readonly expandDefaultResponse: {
                    readonly type: "boolean";
                };
                readonly expandResponses: {
                    readonly type: "string";
                };
                readonly expandSingleSchemaField: {
                    readonly type: "boolean";
                };
                readonly generateCodeSamples: {
                    readonly type: "object";
                    readonly properties: {
                        readonly skipOptionalParameters: {
                            readonly type: "boolean";
                        };
                        readonly languages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly lang: {
                                        readonly enum: readonly ["curl", "C#", "Go", "Java", "Java8+Apache", "JavaScript", "Node.js", "PHP", "Python", "R", "Ruby"];
                                    };
                                };
                                readonly required: readonly ["lang"];
                            };
                        };
                    };
                    readonly required: readonly ["languages"];
                };
                readonly generatedPayloadSamplesMaxDepth: {
                    readonly type: "number";
                };
                readonly hideDownloadButton: {
                    readonly type: "boolean";
                };
                readonly hideHostname: {
                    readonly type: "boolean";
                };
                readonly hideInfoSection: {
                    readonly type: "boolean";
                };
                readonly hideLogo: {
                    readonly type: "boolean";
                };
                readonly hideRequestPayloadSample: {
                    readonly type: "boolean";
                };
                readonly hideRightPanel: {
                    readonly type: "boolean";
                };
                readonly hideSchemaPattern: {
                    readonly type: "boolean";
                };
                readonly hideSingleRequestSampleTab: {
                    readonly type: "boolean";
                };
                readonly hideSecuritySection: {
                    readonly type: "boolean";
                };
                readonly hideTryItPanel: {
                    readonly type: "boolean";
                };
                readonly hideFab: {
                    readonly type: "boolean";
                };
                readonly hideOneOfDescription: {
                    readonly type: "boolean";
                };
                readonly htmlTemplate: {
                    readonly type: "string";
                };
                readonly jsonSampleExpandLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                        readonly minimum: 1;
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly labels: {
                    readonly type: "object";
                    readonly properties: {
                        readonly enum: {
                            readonly type: "string";
                        };
                        readonly enumSingleValue: {
                            readonly type: "string";
                        };
                        readonly enumArray: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "string";
                        };
                        readonly deprecated: {
                            readonly type: "string";
                        };
                        readonly example: {
                            readonly type: "string";
                        };
                        readonly examples: {
                            readonly type: "string";
                        };
                        readonly nullable: {
                            readonly type: "string";
                        };
                        readonly recursive: {
                            readonly type: "string";
                        };
                        readonly arrayOf: {
                            readonly type: "string";
                        };
                        readonly webhook: {
                            readonly type: "string";
                        };
                        readonly authorizations: {
                            readonly type: "string";
                        };
                        readonly tryItAuthBasicUsername: {
                            readonly type: "string";
                        };
                        readonly tryItAuthBasicPassword: {
                            readonly type: "string";
                        };
                    };
                };
                readonly menuToggle: {
                    readonly type: "boolean";
                };
                readonly nativeScrollbars: {
                    readonly type: "boolean";
                };
                readonly noAutoAuth: {
                    readonly type: "boolean";
                };
                readonly onDeepLinkClick: {
                    readonly type: "object";
                };
                readonly pagination: {
                    readonly enum: readonly ["none", "section", "item"];
                };
                readonly pathInMiddlePanel: {
                    readonly type: "boolean";
                };
                readonly payloadSampleIdx: {
                    readonly type: "number";
                    readonly minimum: 0;
                };
                readonly requestInterceptor: {
                    readonly type: "object";
                };
                readonly requiredPropsFirst: {
                    readonly type: "boolean";
                };
                readonly routingStrategy: {
                    readonly type: "string";
                };
                readonly samplesTabsMaxCount: {
                    readonly type: "number";
                };
                readonly schemaExpansionLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                        readonly minimum: 0;
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly minCharacterLengthToInitSearch: {
                    readonly type: "number";
                    readonly minimum: 1;
                };
                readonly maxResponseHeadersToShowInTryIt: {
                    readonly type: "number";
                    readonly minimum: 0;
                };
                readonly scrollYOffset: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly searchAutoExpand: {
                    readonly type: "boolean";
                };
                readonly searchFieldLevelBoost: {
                    readonly type: "number";
                    readonly minimum: 0;
                };
                readonly searchMaxDepth: {
                    readonly type: "number";
                    readonly minimum: 1;
                };
                readonly searchMode: {
                    readonly type: "string";
                    readonly enum: readonly ["default", "path-only"];
                };
                readonly searchOperationTitleBoost: {
                    readonly type: "number";
                };
                readonly searchTagTitleBoost: {
                    readonly type: "number";
                };
                readonly sendXUserAgentInTryIt: {
                    readonly type: "boolean";
                };
                readonly showChangeLayoutButton: {
                    readonly type: "boolean";
                };
                readonly showConsole: {
                    readonly type: "boolean";
                };
                readonly showNextButton: {
                    readonly type: "boolean";
                };
                readonly showRightPanelToggle: {
                    readonly type: "boolean";
                };
                readonly showSecuritySchemeType: {
                    readonly type: "boolean";
                };
                readonly showWebhookVerb: {
                    readonly type: "boolean";
                };
                readonly showObjectSchemaExamples: {
                    readonly type: "boolean";
                };
                readonly disableTryItRequestUrlEncoding: {
                    readonly type: "boolean";
                };
                readonly sidebarLinks: {
                    readonly type: "object";
                    readonly properties: {
                        readonly beforeInfo: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly target: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["label", "link"];
                            };
                        };
                        readonly end: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly target: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["label", "link"];
                            };
                        };
                    };
                };
                readonly sideNavStyle: {
                    readonly type: "string";
                    readonly enum: readonly ["summary-only", "path-first", "id-only", "path-only"];
                };
                readonly simpleOneOfTypeLabel: {
                    readonly type: "boolean";
                };
                readonly sortEnumValuesAlphabetically: {
                    readonly type: "boolean";
                };
                readonly sortOperationsAlphabetically: {
                    readonly type: "boolean";
                };
                readonly sortPropsAlphabetically: {
                    readonly type: "boolean";
                };
                readonly sortTagsAlphabetically: {
                    readonly type: "boolean";
                };
                readonly suppressWarnings: {
                    readonly type: "boolean";
                };
                readonly unstable_externalDescription: {
                    readonly type: "boolean";
                };
                readonly unstable_ignoreMimeParameters: {
                    readonly type: "boolean";
                };
                readonly untrustedDefinition: {
                    readonly type: "boolean";
                };
                readonly showAccessMode: {
                    readonly type: "boolean";
                };
                readonly preserveOriginalExtensionsName: {
                    readonly type: "boolean";
                };
                readonly markdownHeadingsAnchorLevel: {
                    readonly type: "number";
                };
                readonly licenseKey: {
                    readonly type: "string";
                };
                readonly hideLoading: {
                    readonly type: "boolean";
                };
                readonly disableRouter: {
                    readonly type: "boolean";
                };
                readonly hideSidebar: {
                    readonly type: "boolean";
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly like: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dislike: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly satisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly neutral: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dissatisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly optionalEmail: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly placeholder: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly hideReplay: {
                    readonly type: "boolean";
                };
                readonly oAuth2RedirectURI: {
                    readonly type: "string";
                    readonly nullable: true;
                };
                readonly corsProxyUrl: {
                    readonly type: "string";
                };
                readonly sortRequiredPropsFirst: {
                    readonly type: "boolean";
                };
                readonly sanitize: {
                    readonly type: "boolean";
                };
                readonly hideDownloadButtons: {
                    readonly type: "boolean";
                };
                readonly downloadUrls: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["url"];
                        readonly additionalProperties: false;
                    };
                };
                readonly onlyRequiredInSamples: {
                    readonly type: "boolean";
                };
                readonly generatedSamplesMaxDepth: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly showExtensions: {
                    readonly oneOf: readonly [{
                        readonly type: "boolean";
                    }, {
                        readonly type: "string";
                    }, {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }];
                };
                readonly hideSchemaTitles: {
                    readonly type: "boolean";
                };
                readonly jsonSamplesExpandLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly schemasExpansionLevel: {
                    readonly oneOf: readonly [{
                        readonly type: "number";
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly mockServer: {
                    readonly type: "object";
                    readonly properties: {
                        readonly url: {
                            readonly type: "string";
                        };
                        readonly position: {
                            readonly type: "string";
                            readonly enum: readonly ["first", "last", "replace", "off"];
                        };
                        readonly description: {
                            readonly type: "string";
                        };
                    };
                };
                readonly maxDisplayedEnumValues: {
                    readonly type: "number";
                };
                readonly schemaDefinitionsTagName: {
                    readonly type: "string";
                };
                readonly layout: {
                    readonly type: "string";
                    readonly enum: readonly ["stacked", "three-panel"];
                };
                readonly hideInfoMetadata: {
                    readonly type: "boolean";
                };
                readonly events: {
                    readonly type: "object";
                };
                readonly skipBundle: {
                    readonly type: "boolean";
                };
                readonly routingBasePath: {
                    readonly type: "string";
                };
                readonly codeSamples: {
                    readonly type: "object";
                    readonly properties: {
                        readonly languages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly lang: {
                                        readonly type: "string";
                                        readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly options: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly indent: {
                                                readonly type: "string";
                                            };
                                            readonly withImports: {
                                                readonly type: "boolean";
                                            };
                                            readonly withComments: {
                                                readonly type: "boolean";
                                            };
                                            readonly binary: {
                                                readonly type: "boolean";
                                            };
                                            readonly credentials: {
                                                readonly type: "string";
                                                readonly enum: readonly ["omit", "same-origin", "include"];
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly required: readonly ["lang"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly skipOptionalParameters: {
                            readonly type: "boolean";
                        };
                        readonly withOAuth2Call: {
                            readonly type: "boolean";
                        };
                    };
                    readonly required: readonly ["languages"];
                    readonly additionalProperties: false;
                };
                readonly ignoreNamedSchemas: {
                    readonly oneOf: readonly [{
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly hidePropertiesPrefix: {
                    readonly type: "boolean";
                };
                readonly excludeFromSearch: {
                    readonly type: "boolean";
                };
            };
            readonly type: "object";
            readonly additionalProperties: false;
        };
        readonly graphql: {
            readonly type: "object";
            readonly properties: {
                readonly hidePaginationButtons: {
                    readonly type: "boolean";
                };
                readonly menu: {
                    readonly type: "object";
                    readonly properties: {
                        readonly requireExactGroups: {
                            readonly type: "boolean";
                        };
                        readonly groups: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly queries: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly mutations: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly subscriptions: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly types: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly directives: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly excludeByName: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly required: readonly ["name"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly otherItemsGroupName: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly sidebar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                    };
                };
                readonly apiLogo: {
                    readonly type: "object";
                    readonly properties: {
                        readonly imageUrl: {
                            readonly type: "string";
                        };
                        readonly href: {
                            readonly type: "string";
                        };
                        readonly altText: {
                            readonly type: "string";
                        };
                        readonly backgroundColor: {
                            readonly type: "string";
                        };
                    };
                };
                readonly jsonSamplesDepth: {
                    readonly type: "number";
                };
                readonly samplesMaxInlineArgs: {
                    readonly type: "number";
                };
                readonly licenseKey: {
                    readonly type: "string";
                };
                readonly fieldExpandLevel: {
                    readonly type: "number";
                };
                readonly baseUrlPath: {
                    readonly type: "string";
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly like: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dislike: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly satisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly neutral: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly dissatisfied: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly optionalEmail: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly placeholder: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
            };
            readonly additionalProperties: false;
        };
        readonly analytics: {
            readonly type: "object";
            readonly properties: {
                readonly adobe: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly scriptUrl: {
                            readonly type: "string";
                        };
                        readonly pageViewEventName: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["scriptUrl"];
                };
                readonly amplitude: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly apiKey: {
                            readonly type: "string";
                        };
                        readonly head: {
                            readonly type: "boolean";
                        };
                        readonly respectDNT: {
                            readonly type: "boolean";
                        };
                        readonly exclude: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly outboundClickEventName: {
                            readonly type: "string";
                        };
                        readonly pageViewEventName: {
                            readonly type: "string";
                        };
                        readonly amplitudeConfig: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["apiKey"];
                };
                readonly fullstory: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly orgId: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["orgId"];
                };
                readonly heap: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly appId: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["appId"];
                };
                readonly rudderstack: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly writeKey: {
                            readonly type: "string";
                            readonly minLength: 10;
                        };
                        readonly trackPage: {
                            readonly type: "boolean";
                        };
                        readonly dataPlaneUrl: {
                            readonly type: "string";
                        };
                        readonly controlPlaneUrl: {
                            readonly type: "string";
                        };
                        readonly sdkUrl: {
                            readonly type: "string";
                        };
                        readonly loadOptions: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["writeKey"];
                };
                readonly segment: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly writeKey: {
                            readonly type: "string";
                            readonly minLength: 10;
                        };
                        readonly trackPage: {
                            readonly type: "boolean";
                        };
                        readonly includeTitleInPageCall: {
                            readonly type: "boolean";
                        };
                        readonly host: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["writeKey"];
                };
                readonly gtm: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly trackingId: {
                            readonly type: "string";
                        };
                        readonly gtmAuth: {
                            readonly type: "string";
                        };
                        readonly gtmPreview: {
                            readonly type: "string";
                        };
                        readonly defaultDataLayer: {};
                        readonly dataLayerName: {
                            readonly type: "string";
                        };
                        readonly enableWebVitalsTracking: {
                            readonly type: "boolean";
                        };
                        readonly selfHostedOrigin: {
                            readonly type: "string";
                        };
                        readonly pageViewEventName: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["trackingId"];
                };
                readonly ga: {
                    readonly type: "object";
                    readonly properties: {
                        readonly includeInDevelopment: {
                            readonly type: "boolean";
                        };
                        readonly trackingId: {
                            readonly type: "string";
                        };
                        readonly conversionId: {
                            readonly type: "string";
                        };
                        readonly floodlightId: {
                            readonly type: "string";
                        };
                        readonly head: {
                            readonly type: "boolean";
                        };
                        readonly respectDNT: {
                            readonly type: "boolean";
                        };
                        readonly exclude: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly optimizeId: {
                            readonly type: "string";
                        };
                        readonly anonymizeIp: {
                            readonly type: "boolean";
                        };
                        readonly cookieExpires: {
                            readonly type: "number";
                        };
                        readonly trackers: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly includeInDevelopment: {
                                        readonly type: "boolean";
                                    };
                                    readonly trackingId: {
                                        readonly type: "string";
                                    };
                                    readonly conversionId: {
                                        readonly type: "string";
                                    };
                                    readonly floodlightId: {
                                        readonly type: "string";
                                    };
                                    readonly optimizeId: {
                                        readonly type: "string";
                                    };
                                    readonly exclude: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly required: readonly ["trackingId"];
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["trackingId"];
                };
            };
        };
        readonly userMenu: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly items: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly label: {
                                readonly type: "string";
                            };
                            readonly external: {
                                readonly type: "boolean";
                            };
                            readonly link: {
                                readonly type: "string";
                            };
                            readonly separatorLine: {
                                readonly type: "boolean";
                            };
                        };
                        readonly additionalProperties: true;
                    };
                    readonly default: readonly [];
                };
                readonly hideLoginButton: {
                    readonly type: "boolean";
                };
            };
            readonly additionalProperties: false;
        };
        readonly versionPicker: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly showForUnversioned: {
                    readonly type: "boolean";
                };
            };
        };
        readonly breadcrumbs: {
            readonly type: "object";
            readonly properties: {
                readonly hide: {
                    readonly type: "boolean";
                };
                readonly prefixItems: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly label: {
                                readonly type: "string";
                            };
                            readonly labelTranslationKey: {
                                readonly type: "string";
                            };
                            readonly page: {
                                readonly type: "string";
                            };
                        };
                        readonly additionalProperties: false;
                        readonly default: {};
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly catalog: {
            readonly type: "object";
            readonly patternProperties: {
                readonly '.*': {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly required: readonly ["slug", "items"];
                    readonly properties: {
                        readonly slug: {
                            readonly type: "string";
                        };
                        readonly filters: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly additionalProperties: false;
                                readonly required: readonly ["title", "property"];
                                readonly properties: {
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["select", "checkboxes", "date-range"];
                                        readonly default: "checkboxes";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly titleTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly property: {
                                        readonly type: "string";
                                    };
                                    readonly parentFilter: {
                                        readonly type: "string";
                                    };
                                    readonly valuesMapping: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly missingCategoryName: {
                                        readonly type: "string";
                                    };
                                    readonly missingCategoryNameTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly options: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                        readonly groupByFirstFilter: {
                            readonly type: "boolean";
                        };
                        readonly filterValuesCasing: {
                            readonly type: "string";
                            readonly enum: readonly ["sentence", "original", "lowercase", "uppercase"];
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                                readonly rbac: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rbac: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                        readonly requiredPermission: {
                            readonly type: "string";
                        };
                        readonly separateVersions: {
                            readonly type: "boolean";
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly titleTranslationKey: {
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly type: "string";
                        };
                        readonly descriptionTranslationKey: {
                            readonly type: "string";
                        };
                    };
                };
            };
        };
        readonly scorecard: {
            readonly type: "object";
            readonly additionalProperties: true;
            readonly required: readonly [];
            readonly properties: {
                readonly ignoreNonCompliant: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly teamMetadataProperty: {
                    readonly type: "object";
                    readonly properties: {
                        readonly property: {
                            readonly type: "string";
                        };
                        readonly label: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "string";
                        };
                    };
                };
                readonly levels: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly required: readonly ["name"];
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly color: {
                                readonly type: "string";
                            };
                            readonly extends: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly rules: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly oneOf: readonly [{
                                        readonly type: "string";
                                    }, {
                                        readonly type: "object";
                                    }];
                                };
                            };
                        };
                        readonly additionalProperties: false;
                    };
                };
                readonly targets: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly required: readonly ["where"];
                        readonly properties: {
                            readonly minimumLevel: {
                                readonly type: "string";
                            };
                            readonly rules: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly where: {
                                readonly type: "object";
                                readonly required: readonly ["metadata"];
                                readonly properties: {
                                    readonly metadata: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                };
                readonly ignore: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
        };
        readonly plugins: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly default: {};
    readonly additionalProperties: false;
    readonly type: "object";
    readonly $id: "root-redocly-config";
};
