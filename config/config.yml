web_port: 5000

mqtt:
  host: mqtt.server.com
  topic_prefix: frigate
#  user: username # Optional -- Uncomment for use
#  password: password # Optional -- Uncomment for use

cameras:
  back:
    rtsp:
      user: viewer
      host: 10.0.10.10
      port: 554
      # values that begin with a "$" will be replaced with environment variable
      password: $RTSP_PASSWORD
      path: /cam/realmonitor?channel=1&subtype=2
    mask: back-mask.bmp
    regions:
      - size: 350
        x_offset: 0
        y_offset: 300
        min_person_area: 5000
        threshold: 0.5
      - size: 400
        x_offset: 350
        y_offset: 250
        min_person_area: 2000
        threshold: 0.5
      - size: 400
        x_offset: 750
        y_offset: 250
        min_person_area: 2000
        threshold: 0.5

## Reference to the different attributes for the "back" camera in the example above
## NOTE to size:, x_offset: and y_offset: attributes -- They are all dependent up on the video feed resolution. You will need to adjust this to suit your setup. The numbers are pixels. The different "regions" does not have to be three.
## Tip, adjust your regions for detection. If you define one "large" region it will just cause un-necessary load on TensorFlow
## min_person_area: The person area is calculated by width x height of the bounding box (region). Anything smaller than the min_person_area is ignored for that region. It is designed to filter false positives when you know a person couldnâ€™t be that small.
## threshold: The minimum decimal percentage (50% hit = 0.5) of "Person detected" from Tensorflow that will be reported as "positive" to the MQTT
